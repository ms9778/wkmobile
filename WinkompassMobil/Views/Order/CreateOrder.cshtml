@using DAL
@model ScanItemModel
@section title{
    Winkompass - Ordrer
}

@section siteHeader{
    Opret ordre @(Model != null && Model.Item != null && !string.IsNullOrEmpty(Model.Item.LineNo) ? "(" + Model.Item.LineNo + ")" : "")

}

@if (Model != null && !string.IsNullOrEmpty(Model.Error))
{
    <div id="scanResult" class="element left tinyBotSpace text-danger">
        <span>@Model.Error</span></div>
}
else if (Model != null && Model.Scanned == ScanItem.SCAN_VALID)
{
    <div id="scanResult" class="element left tinyBotSpace text-success">
        <span>@Model.Item.Count vare(r) med varenummer @Model.Item.BarCode blev registreret!</span></div>
}
else if (Model != null && Model.Scanned == ScanItem.SCAN_INVALID)
{
    <div id="scanResult" class="element left tinyBotSpace text-danger">
        <span>Scanning fejlede ved registrering!</span></div>
}
<form class="scanForm" method="post">
    @Html.Action(MVC.Shared.ScanWithTarget(Model))
</form>
@if (Model != null && Model.Item != null && !string.IsNullOrEmpty(Model.Item.LineNo))
{
    <table class="mdl-data-table mdl-js-data-table mdl-shadow--4dp width-100 margin-bottom-20 margin-top-60">
        <thead>
        <tr>
            @*<th hidden class="col-xs-2">#</th>*@
            <th class="col-xs-8">Produkt</th>
            <th class="col-xs-4">Antal</th>
        </tr>
        </thead>
        <tbody>
        @{
            var oc = new OrderConnector();

            var list = oc.selectAllOrderLines(Model.Item.LineNo).Reverse();
        }

        @foreach (var x in list)
        {
            <tr id="@x.RecordId">

                <td class="mdl-data-table__cell--non-numeric col-xs-8 wrap-text-table">
                    <small class="verysmall no-padding">Vare nr.: @x.Item</small>
                    <br/><small>@x.Description</small>
                </td>
                <td class="mdl-data-table__cell--non-numeric col-xs-4">
                    <br/>
                    <div class="col-xs-8 no-padding">
                        <input id="newAmount" type="number" data-originalordered="@x.Ordered" data-recordid="@x.RecordId" name="item.count" value="@x.Ordered" class="test mdl-textfield__input center">
                    </div>
                    <div class="col-xs-4 no-padding">
                        <i class="fa fa-trash-o mdl-color-text--red removeBtn " data-recordid="@x.RecordId" aria-hidden="true"></i>

                    </div>

                </td>
            </tr>
        }

        @{
            var order = oc.selectOrder(Model.Item.LineNo).FirstOrDefault();
        }


        <tr>
            <td>
                Total ex moms<br/>
                moms<br/>
                Total inkl. moms
            </td>

            <td class="text-right">
                <br/><strong>
                    <span id="amountBase">@order.AmountBase,-</span><br/>
                    <span id="taxAmountBase">@order.TaxAmountBase,-</span><br/>
                    <span id="totalBase">@order.TotalBase,-</span></strong><br/>
                <small>
                    @order.Currency
                </small>
            </td>
        </tr>
        </tbody>
    </table>
}

<script>
    var orderid = @Model.Item.LineNo;

    function priceUpdate() {
        $.ajax({
            dataType: "json",
            url: '/Order/GetOrder?id=' + orderid,
            data: {},
            success: function(data) {
                $('#amountBase').text(data.AmountBase + ",-");
                $('#taxAmountBase').text(data.TaxAmountBase + ",-");
                $('#totalBase').text(data.TotalBase + ",-");

            }
        });
    };
</script>

<script>
    $(".test")
        .keyup(function() {
            var originalamount = $(this).data('originalordered');
            var orderLineId = $(this).data('recordid');
            var amount = $(this).prop('value');
            if (amount === "") {
                amount = 0;
            } else {
                amount = $(this).prop('value');
            }

            $(this).data('originalordered', amount);

            $.ajax({
                type: "POST",
                url: '/Order/UpdateOrderLine?originalRecordId=' +
                    orderLineId +
                    "&originalOrdered=" +
                    originalamount +
                    "&ordered=" +
                    amount,

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function() {
                    priceUpdate();
                },
                error: function() {
                    priceUpdate();
                }
            });
        });
</script>

<script>
    $(".removeBtn")
        .click(function() {
            var r = confirm("Vil du slette denne linje?");

            if (r === true) {
                var orderLineId = $(this).data("recordid");
                $.ajax({
                    type: "POST",
                    url: '/Order/DeleteOrderLine?orderLineId=' + orderLineId,

                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function() {
                        $('#' + orderLineId).remove();
                        priceUpdate();
                    },
                    error: function() {
                        $('#' + orderLineId).remove();
                        priceUpdate();
                    }
                });
            }
        });
</script>


<script>
    $(document)
        .ready(function() {
            $('#ss').attr('disabled', true);

            $('#JournalInput' && '#itemCount')
                .keyup(function() {
                    if ($(this).val().length !== 0) {
                        $('#ss').attr('disabled', false);
                    } else {
                        $('#ss').attr('disabled', true);
                    }
                });
        });
</script>