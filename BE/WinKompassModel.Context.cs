//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class KompasDemoEntities : DbContext
    {
        public KompasDemoEntities()
            : base("name=KompasDemoEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountsBalanceAccount> AccountsBalanceAccounts { get; set; }
        public virtual DbSet<AccountsBalanceEntry> AccountsBalanceEntries { get; set; }
        public virtual DbSet<AccountsBalance> AccountsBalances { get; set; }
        public virtual DbSet<Agent> Agents { get; set; }
        public virtual DbSet<AnalysisAccount> AnalysisAccounts { get; set; }
        public virtual DbSet<AsciiAvance> AsciiAvances { get; set; }
        public virtual DbSet<AsciiCode> AsciiCodes { get; set; }
        public virtual DbSet<AsciiField> AsciiFields { get; set; }
        public virtual DbSet<AsciiFilter> AsciiFilters { get; set; }
        public virtual DbSet<AsciiImp> AsciiImps { get; set; }
        public virtual DbSet<AutoText> AutoTexts { get; set; }
        public virtual DbSet<BalanceSheetPreference> BalanceSheetPreferences { get; set; }
        public virtual DbSet<BankCurrency> BankCurrencies { get; set; }
        public virtual DbSet<BankSetup> BankSetups { get; set; }
        public virtual DbSet<BillOfMaterial> BillOfMaterials { get; set; }
        public virtual DbSet<BillOfMaterialPrint> BillOfMaterialPrints { get; set; }
        public virtual DbSet<BillOfMaterialPrintNotAvailable> BillOfMaterialPrintNotAvailables { get; set; }
        public virtual DbSet<BudgetLine> BudgetLines { get; set; }
        public virtual DbSet<Budget> Budgets { get; set; }
        public virtual DbSet<CashDiscount> CashDiscounts { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<ConsignerColliType> ConsignerColliTypes { get; set; }
        public virtual DbSet<ConsignerPackType> ConsignerPackTypes { get; set; }
        public virtual DbSet<ConsignerTransporter> ConsignerTransporters { get; set; }
        public virtual DbSet<CostCenter> CostCenters { get; set; }
        public virtual DbSet<CostCenterGroup> CostCenterGroups { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }
        public virtual DbSet<CustomerContact> CustomerContacts { get; set; }
        public virtual DbSet<CustomerGroup> CustomerGroups { get; set; }
        public virtual DbSet<CustomerInterestCalc> CustomerInterestCalcs { get; set; }
        public virtual DbSet<CustomerInterestSaldo> CustomerInterestSaldoes { get; set; }
        public virtual DbSet<CustomerLog> CustomerLogs { get; set; }
        public virtual DbSet<CustomerReminderCalc> CustomerReminderCalcs { get; set; }
        public virtual DbSet<CustomerReport> CustomerReports { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DataLink> DataLinks { get; set; }
        public virtual DbSet<Defraction> Defractions { get; set; }
        public virtual DbSet<Delivery> Deliveries { get; set; }
        public virtual DbSet<DeliveryFee> DeliveryFees { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Desktop> Desktops { get; set; }
        public virtual DbSet<Distribution> Distributions { get; set; }
        public virtual DbSet<DocumentMergeSetup> DocumentMergeSetups { get; set; }
        public virtual DbSet<DocumentMergeSetupColumn> DocumentMergeSetupColumns { get; set; }
        public virtual DbSet<DocumentsCustomer> DocumentsCustomers { get; set; }
        public virtual DbSet<DocumentsInventory> DocumentsInventories { get; set; }
        public virtual DbSet<DocumentsProject> DocumentsProjects { get; set; }
        public virtual DbSet<DocumentsSupplier> DocumentsSuppliers { get; set; }
        public virtual DbSet<Duty> Duties { get; set; }
        public virtual DbSet<EECCountryCode> EECCountryCodes { get; set; }
        public virtual DbSet<EECTransactionCode> EECTransactionCodes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeePrice> EmployeePrices { get; set; }
        public virtual DbSet<ExternalData> ExternalDatas { get; set; }
        public virtual DbSet<ExternalKeyChange> ExternalKeyChanges { get; set; }
        public virtual DbSet<ExtraInventory> ExtraInventories { get; set; }
        public virtual DbSet<ExtraItemDuty> ExtraItemDuties { get; set; }
        public virtual DbSet<ExtraItemPrice> ExtraItemPrices { get; set; }
        public virtual DbSet<FactoringGroup> FactoringGroups { get; set; }
        public virtual DbSet<File> Files { get; set; }
        public virtual DbSet<FilterData> FilterDatas { get; set; }
        public virtual DbSet<FilterInfo> FilterInfoes { get; set; }
        public virtual DbSet<GeneratePurchasesLine> GeneratePurchasesLines { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<ImagesGroup> ImagesGroups { get; set; }
        public virtual DbSet<ImpExp> ImpExps { get; set; }
        public virtual DbSet<ImpExpField> ImpExpFields { get; set; }
        public virtual DbSet<ImpExpFilter> ImpExpFilters { get; set; }
        public virtual DbSet<ImportFixedData> ImportFixedDatas { get; set; }
        public virtual DbSet<ImportSetup> ImportSetups { get; set; }
        public virtual DbSet<Interest> Interests { get; set; }
        public virtual DbSet<InternetGroup> InternetGroups { get; set; }
        public virtual DbSet<IntrastatLine> IntrastatLines { get; set; }
        public virtual DbSet<InvAdjustSalesprice> InvAdjustSalesprices { get; set; }
        public virtual DbSet<InvCountJournal> InvCountJournals { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<InventoryArchive> InventoryArchives { get; set; }
        public virtual DbSet<InventoryAttachedItem> InventoryAttachedItems { get; set; }
        public virtual DbSet<InventoryBudget> InventoryBudgets { get; set; }
        public virtual DbSet<InventoryCategory> InventoryCategories { get; set; }
        public virtual DbSet<InventoryCount> InventoryCounts { get; set; }
        public virtual DbSet<InventoryCustomerGroup> InventoryCustomerGroups { get; set; }
        public virtual DbSet<InventoryGroup> InventoryGroups { get; set; }
        public virtual DbSet<InventoryItemNo> InventoryItemNoes { get; set; }
        public virtual DbSet<InventoryLocationWorksheet> InventoryLocationWorksheets { get; set; }
        public virtual DbSet<InventoryLog> InventoryLogs { get; set; }
        public virtual DbSet<InventoryParameter> InventoryParameters { get; set; }
        public virtual DbSet<InventoryPriceImport> InventoryPriceImports { get; set; }
        public virtual DbSet<InventoryPriceImportAvance> InventoryPriceImportAvances { get; set; }
        public virtual DbSet<InventoryPriceImportDiscount> InventoryPriceImportDiscounts { get; set; }
        public virtual DbSet<InventoryPriceImportDuty> InventoryPriceImportDuties { get; set; }
        public virtual DbSet<InventoryPriceImportGroup> InventoryPriceImportGroups { get; set; }
        public virtual DbSet<InventoryPriceImportSetup> InventoryPriceImportSetups { get; set; }
        public virtual DbSet<InventoryPriceImportSetupDuty> InventoryPriceImportSetupDuties { get; set; }
        public virtual DbSet<InventorySupplierGroup> InventorySupplierGroups { get; set; }
        public virtual DbSet<InventoryText> InventoryTexts { get; set; }
        public virtual DbSet<InvoiceText> InvoiceTexts { get; set; }
        public virtual DbSet<InvoiceText_Locale> InvoiceText_Locale { get; set; }
        public virtual DbSet<InvWorksheetSerialNo> InvWorksheetSerialNoes { get; set; }
        public virtual DbSet<ItemDuty> ItemDuties { get; set; }
        public virtual DbSet<ItemInternetGroup> ItemInternetGroups { get; set; }
        public virtual DbSet<ItemPrice> ItemPrices { get; set; }
        public virtual DbSet<ItemPriceAvanceGroup> ItemPriceAvanceGroups { get; set; }
        public virtual DbSet<ItemSerialNo> ItemSerialNoes { get; set; }
        public virtual DbSet<ItemSerialNoSale> ItemSerialNoSales { get; set; }
        public virtual DbSet<ItemSerialNoTmp> ItemSerialNoTmps { get; set; }
        public virtual DbSet<Journal> Journals { get; set; }
        public virtual DbSet<JournalDefaultValue> JournalDefaultValues { get; set; }
        public virtual DbSet<JournalPost> JournalPosts { get; set; }
        public virtual DbSet<Line> Lines { get; set; }
        public virtual DbSet<LinesEntry> LinesEntries { get; set; }
        public virtual DbSet<LinesEntryArchive> LinesEntryArchives { get; set; }
        public virtual DbSet<LinesEntryBillOfMaterial> LinesEntryBillOfMaterials { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<MeargedDiscount> MeargedDiscounts { get; set; }
        public virtual DbSet<MeargedDiscountItem> MeargedDiscountItems { get; set; }
        public virtual DbSet<MultiDataAccountMap> MultiDataAccountMaps { get; set; }
        public virtual DbSet<OldTransEntry> OldTransEntries { get; set; }
        public virtual DbSet<OnHand> OnHands { get; set; }
        public virtual DbSet<Option> Options { get; set; }
        public virtual DbSet<OrdDiscount> OrdDiscounts { get; set; }
        public virtual DbSet<OrderCategory> OrderCategories { get; set; }
        public virtual DbSet<OrderCommunication> OrderCommunications { get; set; }
        public virtual DbSet<OrderCommunicationStatu> OrderCommunicationStatus { get; set; }
        public virtual DbSet<OrderDelivery> OrderDeliveries { get; set; }
        public virtual DbSet<OrderLog> OrderLogs { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Orders2> Orders2 { get; set; }
        public virtual DbSet<OrdersArchive> OrdersArchives { get; set; }
        public virtual DbSet<OrderStatu> OrderStatus { get; set; }
        public virtual DbSet<OrdPriceInterval> OrdPriceIntervals { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PeriodBalance> PeriodBalances { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<PostNr> PostNrs { get; set; }
        public virtual DbSet<PriceList> PriceLists { get; set; }
        public virtual DbSet<ProcedureLock> ProcedureLocks { get; set; }
        public virtual DbSet<ProcedureRunInformation> ProcedureRunInformations { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ProjectBudget> ProjectBudgets { get; set; }
        public virtual DbSet<ProjectCalculation> ProjectCalculations { get; set; }
        public virtual DbSet<ProjectCalculationLine> ProjectCalculationLines { get; set; }
        public virtual DbSet<ProjectCostCenterAvance> ProjectCostCenterAvances { get; set; }
        public virtual DbSet<ProjectGroup> ProjectGroups { get; set; }
        public virtual DbSet<ProjectInvoice> ProjectInvoices { get; set; }
        public virtual DbSet<ProjectJournalLine> ProjectJournalLines { get; set; }
        public virtual DbSet<ProjectLine> ProjectLines { get; set; }
        public virtual DbSet<ProjectLog> ProjectLogs { get; set; }
        public virtual DbSet<ProjectStatus1> ProjectStatus1 { get; set; }
        public virtual DbSet<ProjectStatus2> ProjectStatus2 { get; set; }
        public virtual DbSet<ProjectSubProject> ProjectSubProjects { get; set; }
        public virtual DbSet<Provision> Provisions { get; set; }
        public virtual DbSet<ProvisionGroup> ProvisionGroups { get; set; }
        public virtual DbSet<PurchaseCommunication> PurchaseCommunications { get; set; }
        public virtual DbSet<PurchaseCommunicationStatu> PurchaseCommunicationStatus { get; set; }
        public virtual DbSet<PurchaseImport> PurchaseImports { get; set; }
        public virtual DbSet<PurchaseLog> PurchaseLogs { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<PurchasesArchive> PurchasesArchives { get; set; }
        public virtual DbSet<PurchaseStatu> PurchaseStatus { get; set; }
        public virtual DbSet<PurDiscount> PurDiscounts { get; set; }
        public virtual DbSet<Purpose> Purposes { get; set; }
        public virtual DbSet<Rate> Rates { get; set; }
        public virtual DbSet<Reminder> Reminders { get; set; }
        public virtual DbSet<RemindersSetup> RemindersSetups { get; set; }
        public virtual DbSet<ReportCodes1> ReportCodes1 { get; set; }
        public virtual DbSet<ReportCodes2> ReportCodes2 { get; set; }
        public virtual DbSet<ReportCodes3> ReportCodes3 { get; set; }
        public virtual DbSet<ReportCodes4> ReportCodes4 { get; set; }
        public virtual DbSet<ReportCriteria> ReportCriterias { get; set; }
        public virtual DbSet<ReportManager> ReportManagers { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportUserOption> ReportUserOptions { get; set; }
        public virtual DbSet<Right> Rights { get; set; }
        public virtual DbSet<Sigma> Sigmas { get; set; }
        public virtual DbSet<SimTransaction> SimTransactions { get; set; }
        public virtual DbSet<SMSMessage> SMSMessages { get; set; }
        public virtual DbSet<Source> Sources { get; set; }
        public virtual DbSet<Standard> Standards { get; set; }
        public virtual DbSet<StandardText> StandardTexts { get; set; }
        public virtual DbSet<SupplierBankData> SupplierBankDatas { get; set; }
        public virtual DbSet<SupplierCategory> SupplierCategories { get; set; }
        public virtual DbSet<SupplierContact> SupplierContacts { get; set; }
        public virtual DbSet<SupplierGroup> SupplierGroups { get; set; }
        public virtual DbSet<SupplierLog> SupplierLogs { get; set; }
        public virtual DbSet<SupplierReport> SupplierReports { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<TblSystem> TblSystems { get; set; }
        public virtual DbSet<Tax> Taxes { get; set; }
        public virtual DbSet<TaxDue> TaxDues { get; set; }
        public virtual DbSet<TaxPeriod> TaxPeriods { get; set; }
        public virtual DbSet<TempBalance> TempBalances { get; set; }
        public virtual DbSet<TextHolder> TextHolders { get; set; }
        public virtual DbSet<TextHolderMainKey> TextHolderMainKeys { get; set; }
        public virtual DbSet<TimeHeaderLine> TimeHeaderLines { get; set; }
        public virtual DbSet<TimeItem> TimeItems { get; set; }
        public virtual DbSet<TimeLine> TimeLines { get; set; }
        public virtual DbSet<TimeManager> TimeManagers { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionsBankData> TransactionsBankDatas { get; set; }
        public virtual DbSet<TransEntry> TransEntries { get; set; }
        public virtual DbSet<TransInterestItem> TransInterestItems { get; set; }
        public virtual DbSet<TransOpenItem> TransOpenItems { get; set; }
        public virtual DbSet<tss_Linier> tss_Linier { get; set; }
        public virtual DbSet<tss_Sager> tss_Sager { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<UserFormGridSetup> UserFormGridSetups { get; set; }
        public virtual DbSet<UserFormPosition> UserFormPositions { get; set; }
        public virtual DbSet<UserFormTabIndex> UserFormTabIndexes { get; set; }
        public virtual DbSet<UserLastViewRecord> UserLastViewRecords { get; set; }
        public virtual DbSet<UserOption> UserOptions { get; set; }
        public virtual DbSet<UserSetting> UserSettings { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<WaterMeter> WaterMeters { get; set; }
        public virtual DbSet<WaterMeterEntry> WaterMeterEntries { get; set; }
        public virtual DbSet<WaterMeterItem> WaterMeterItems { get; set; }
        public virtual DbSet<WaterMeterLeavingInfo> WaterMeterLeavingInfoes { get; set; }
        public virtual DbSet<WaterMeterLog> WaterMeterLogs { get; set; }
        public virtual DbSet<WaterMeterWorkSheet> WaterMeterWorkSheets { get; set; }
        public virtual DbSet<WaterMeterWorkSheetLog> WaterMeterWorkSheetLogs { get; set; }
        public virtual DbSet<WinEDIColliType> WinEDIColliTypes { get; set; }
        public virtual DbSet<WinEDIPackType> WinEDIPackTypes { get; set; }
        public virtual DbSet<WinEDITransporter> WinEDITransporters { get; set; }
        public virtual DbSet<DeliveryPackFormat> DeliveryPackFormats { get; set; }
        public virtual DbSet<Factoring> Factorings { get; set; }
        public virtual DbSet<vAccountingYearInfo> vAccountingYearInfoes { get; set; }
        public virtual DbSet<vActiveInvoiceText> vActiveInvoiceTexts { get; set; }
        public virtual DbSet<vAutoPrimoPeriodBalance> vAutoPrimoPeriodBalances { get; set; }
        public virtual DbSet<vAutoPrimoPeriodBalancesDimension> vAutoPrimoPeriodBalancesDimensions { get; set; }
        public virtual DbSet<vBusinessType> vBusinessTypes { get; set; }
        public virtual DbSet<vClosedOrder> vClosedOrders { get; set; }
        public virtual DbSet<vClosedPurchas> vClosedPurchases { get; set; }
        public virtual DbSet<vCustomerEmail> vCustomerEmails { get; set; }
        public virtual DbSet<vCustomerOptional1Values> vCustomerOptional1Values { get; set; }
        public virtual DbSet<vCustomerOptional2Values> vCustomerOptional2Values { get; set; }
        public virtual DbSet<vCustomerOptional3Values> vCustomerOptional3Values { get; set; }
        public virtual DbSet<vCustomerOptional4Values> vCustomerOptional4Values { get; set; }
        public virtual DbSet<vCustomerOptional5Values> vCustomerOptional5Values { get; set; }
        public virtual DbSet<vCustomerOptional6Values> vCustomerOptional6Values { get; set; }
        public virtual DbSet<vCustomerOptional7Values> vCustomerOptional7Values { get; set; }
        public virtual DbSet<vCustomerOptional8Values> vCustomerOptional8Values { get; set; }
        public virtual DbSet<vDepartmentPeriodBalance> vDepartmentPeriodBalances { get; set; }
        public virtual DbSet<vDetail_OrderDates> vDetail_OrderDates { get; set; }
        public virtual DbSet<vInventory> vInventories { get; set; }
        public virtual DbSet<vInventoryOptional1Values> vInventoryOptional1Values { get; set; }
        public virtual DbSet<vInventoryOptional2Values> vInventoryOptional2Values { get; set; }
        public virtual DbSet<vInventoryOptional3Values> vInventoryOptional3Values { get; set; }
        public virtual DbSet<vInventoryOptional4Values> vInventoryOptional4Values { get; set; }
        public virtual DbSet<vInventoryOptional5Values> vInventoryOptional5Values { get; set; }
        public virtual DbSet<vInventoryOptional6Values> vInventoryOptional6Values { get; set; }
        public virtual DbSet<vInventoryOptional7Values> vInventoryOptional7Values { get; set; }
        public virtual DbSet<vInventoryOptional8Values> vInventoryOptional8Values { get; set; }
        public virtual DbSet<vInventoryParameter1> vInventoryParameter1 { get; set; }
        public virtual DbSet<vInventoryParameter2> vInventoryParameter2 { get; set; }
        public virtual DbSet<vInvoiceText> vInvoiceTexts { get; set; }
        public virtual DbSet<vLanguage> vLanguages { get; set; }
        public virtual DbSet<vOpenOrder> vOpenOrders { get; set; }
        public virtual DbSet<vOpenOrdersIncludingQuotation> vOpenOrdersIncludingQuotations { get; set; }
        public virtual DbSet<vOpenPurchas> vOpenPurchases { get; set; }
        public virtual DbSet<vOpenSupplierTransaction> vOpenSupplierTransactions { get; set; }
        public virtual DbSet<vOrdDiscount> vOrdDiscounts { get; set; }
        public virtual DbSet<vOrderBaseDoc> vOrderBaseDocs { get; set; }
        public virtual DbSet<vOrderLinesSortField> vOrderLinesSortFields { get; set; }
        public virtual DbSet<vOrderOptional1Values> vOrderOptional1Values { get; set; }
        public virtual DbSet<vOrderOptional2Values> vOrderOptional2Values { get; set; }
        public virtual DbSet<vOrderOptional3Values> vOrderOptional3Values { get; set; }
        public virtual DbSet<vOrderOptional4Values> vOrderOptional4Values { get; set; }
        public virtual DbSet<vOrderOptional5Values> vOrderOptional5Values { get; set; }
        public virtual DbSet<vOrderOptional6Values> vOrderOptional6Values { get; set; }
        public virtual DbSet<vOrderOptional7Values> vOrderOptional7Values { get; set; }
        public virtual DbSet<vOrderOptional8Values> vOrderOptional8Values { get; set; }
        public virtual DbSet<vParameter1Name> vParameter1Name { get; set; }
        public virtual DbSet<vParameter2Name> vParameter2Name { get; set; }
        public virtual DbSet<vPayable> vPayables { get; set; }
        public virtual DbSet<vPriceImport> vPriceImports { get; set; }
        public virtual DbSet<vPrimoTransaction> vPrimoTransactions { get; set; }
        public virtual DbSet<vProjectPeriodBalance> vProjectPeriodBalances { get; set; }
        public virtual DbSet<vPurchaseOptional1Values> vPurchaseOptional1Values { get; set; }
        public virtual DbSet<vPurchaseOptional2Values> vPurchaseOptional2Values { get; set; }
        public virtual DbSet<vPurchaseOptional3Values> vPurchaseOptional3Values { get; set; }
        public virtual DbSet<vPurchaseOptional4Values> vPurchaseOptional4Values { get; set; }
        public virtual DbSet<vPurchaseOptional5Values> vPurchaseOptional5Values { get; set; }
        public virtual DbSet<vPurchaseOptional6Values> vPurchaseOptional6Values { get; set; }
        public virtual DbSet<vPurchaseOptional7Values> vPurchaseOptional7Values { get; set; }
        public virtual DbSet<vPurchaseOptional8Values> vPurchaseOptional8Values { get; set; }
        public virtual DbSet<vPurDiscount> vPurDiscounts { get; set; }
        public virtual DbSet<vReceivable> vReceivables { get; set; }
        public virtual DbSet<vReminderLevel> vReminderLevels { get; set; }
        public virtual DbSet<vSalesStatistik> vSalesStatistiks { get; set; }
        public virtual DbSet<vStandardText> vStandardTexts { get; set; }
        public virtual DbSet<vSupplierEmail> vSupplierEmails { get; set; }
        public virtual DbSet<vSupplierOptional1Values> vSupplierOptional1Values { get; set; }
        public virtual DbSet<vSupplierOptional2Values> vSupplierOptional2Values { get; set; }
        public virtual DbSet<vSupplierOptional3Values> vSupplierOptional3Values { get; set; }
        public virtual DbSet<vSupplierOptional4Values> vSupplierOptional4Values { get; set; }
        public virtual DbSet<vSupplierOptional5Values> vSupplierOptional5Values { get; set; }
        public virtual DbSet<vSupplierOptional6Values> vSupplierOptional6Values { get; set; }
        public virtual DbSet<vSupplierOptional7Values> vSupplierOptional7Values { get; set; }
        public virtual DbSet<vSupplierOptional8Values> vSupplierOptional8Values { get; set; }

        [DbFunction("KompasDemoEntities", "fn_AnalysisAccountsList")]
        public virtual IQueryable<fn_AnalysisAccountsList_Result> fn_AnalysisAccountsList()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_AnalysisAccountsList_Result>(
                    "[KompasDemoEntities].[fn_AnalysisAccountsList]()");
        }

        [DbFunction("KompasDemoEntities", "fn_GetPayables")]
        public virtual IQueryable<fn_GetPayables_Result> fn_GetPayables()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_GetPayables_Result>(
                    "[KompasDemoEntities].[fn_GetPayables]()");
        }

        [DbFunction("KompasDemoEntities", "fn_GetReceivables")]
        public virtual IQueryable<fn_GetReceivables_Result> fn_GetReceivables()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_GetReceivables_Result>(
                    "[KompasDemoEntities].[fn_GetReceivables]()");
        }

        [DbFunction("KompasDemoEntities", "fn_Kompas_VATAccounts")]
        public virtual IQueryable<fn_Kompas_VATAccounts_Result> fn_Kompas_VATAccounts(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo,
            Nullable<bool> param_IncludePrimo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_IncludePrimoParameter = param_IncludePrimo.HasValue
                ? new ObjectParameter("Param_IncludePrimo", param_IncludePrimo)
                : new ObjectParameter("Param_IncludePrimo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_Kompas_VATAccounts_Result>(
                    "[KompasDemoEntities].[fn_Kompas_VATAccounts](@Param_DateFrom, @Param_DateTo, @Param_IncludePrimo)",
                    param_DateFromParameter, param_DateToParameter, param_IncludePrimoParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_Kompas_VATReturn")]
        public virtual IQueryable<fn_Kompas_VATReturn_Result> fn_Kompas_VATReturn(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo,
            Nullable<bool> param_IncludePrimo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_IncludePrimoParameter = param_IncludePrimo.HasValue
                ? new ObjectParameter("Param_IncludePrimo", param_IncludePrimo)
                : new ObjectParameter("Param_IncludePrimo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_Kompas_VATReturn_Result>(
                    "[KompasDemoEntities].[fn_Kompas_VATReturn](@Param_DateFrom, @Param_DateTo, @Param_IncludePrimo)",
                    param_DateFromParameter, param_DateToParameter, param_IncludePrimoParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesDimPerYear")]
        public virtual IQueryable<fn_OffInt_BalanceValuesDimPerYear_Result> fn_OffInt_BalanceValuesDimPerYear(
            string param_Account, string param_Dimension, string param_FromPeriod, string param_ToPeriod)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_DimensionParameter = param_Dimension != null
                ? new ObjectParameter("Param_Dimension", param_Dimension)
                : new ObjectParameter("Param_Dimension", typeof(string));

            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_BalanceValuesDimPerYear_Result>(
                    "[KompasDemoEntities].[fn_OffInt_BalanceValuesDimPerYear](@Param_Account, @Param_Dimension, @Param_FromPeriod, @Param_ToPeriod)",
                    param_AccountParameter, param_DimensionParameter, param_FromPeriodParameter, param_ToPeriodParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnPeriodBalance")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnPeriodBalance_Result> fn_OffInt_BalanceValuesOnPeriodBalance(
            string param_FromPeriod, string param_ToPeriod, string param_YTDPeriod, string param_FromPeriodLY,
            string param_ToPeriodLY, string param_YTDPeriodLY, string param_YearBeginID, string param_LYYearBeginID)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_YearBeginIDParameter = param_YearBeginID != null
                ? new ObjectParameter("Param_YearBeginID", param_YearBeginID)
                : new ObjectParameter("Param_YearBeginID", typeof(string));

            var param_LYYearBeginIDParameter = param_LYYearBeginID != null
                ? new ObjectParameter("Param_LYYearBeginID", param_LYYearBeginID)
                : new ObjectParameter("Param_LYYearBeginID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_BalanceValuesOnPeriodBalance_Result>(
                    "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnPeriodBalance](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_YearBeginID, @Param_LYYearBeginID)",
                    param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                    param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                    param_YearBeginIDParameter, param_LYYearBeginIDParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnTransactions1Dim")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnTransactions1Dim_Result>
            fn_OffInt_BalanceValuesOnTransactions1Dim(string param_FromPeriod, string param_ToPeriod,
                string param_YTDPeriod, string param_FromPeriodLY, string param_ToPeriodLY, string param_YTDPeriodLY,
                string param_CurrentPeriod, string param_YearBeginID, string param_LYYearBeginID, string param_Dim1,
                string param_Dim1Value)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_CurrentPeriodParameter = param_CurrentPeriod != null
                ? new ObjectParameter("Param_CurrentPeriod", param_CurrentPeriod)
                : new ObjectParameter("Param_CurrentPeriod", typeof(string));

            var param_YearBeginIDParameter = param_YearBeginID != null
                ? new ObjectParameter("Param_YearBeginID", param_YearBeginID)
                : new ObjectParameter("Param_YearBeginID", typeof(string));

            var param_LYYearBeginIDParameter = param_LYYearBeginID != null
                ? new ObjectParameter("Param_LYYearBeginID", param_LYYearBeginID)
                : new ObjectParameter("Param_LYYearBeginID", typeof(string));

            var param_Dim1Parameter = param_Dim1 != null
                ? new ObjectParameter("Param_Dim1", param_Dim1)
                : new ObjectParameter("Param_Dim1", typeof(string));

            var param_Dim1ValueParameter = param_Dim1Value != null
                ? new ObjectParameter("Param_Dim1Value", param_Dim1Value)
                : new ObjectParameter("Param_Dim1Value", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .CreateQuery<fn_OffInt_BalanceValuesOnTransactions1Dim_Result>(
                        "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnTransactions1Dim](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_CurrentPeriod, @Param_YearBeginID, @Param_LYYearBeginID, @Param_Dim1, @Param_Dim1Value)",
                        param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                        param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                        param_CurrentPeriodParameter, param_YearBeginIDParameter, param_LYYearBeginIDParameter,
                        param_Dim1Parameter, param_Dim1ValueParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnTransactions2Dim")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnTransactions2Dim_Result>
            fn_OffInt_BalanceValuesOnTransactions2Dim(string param_FromPeriod, string param_ToPeriod,
                string param_YTDPeriod, string param_FromPeriodLY, string param_ToPeriodLY, string param_YTDPeriodLY,
                string param_CurrentPeriod, string param_YearBeginID, string param_LYYearBeginID, string param_Dim1,
                string param_Dim1Value, string param_Dim2, string param_Dim2Value)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_CurrentPeriodParameter = param_CurrentPeriod != null
                ? new ObjectParameter("Param_CurrentPeriod", param_CurrentPeriod)
                : new ObjectParameter("Param_CurrentPeriod", typeof(string));

            var param_YearBeginIDParameter = param_YearBeginID != null
                ? new ObjectParameter("Param_YearBeginID", param_YearBeginID)
                : new ObjectParameter("Param_YearBeginID", typeof(string));

            var param_LYYearBeginIDParameter = param_LYYearBeginID != null
                ? new ObjectParameter("Param_LYYearBeginID", param_LYYearBeginID)
                : new ObjectParameter("Param_LYYearBeginID", typeof(string));

            var param_Dim1Parameter = param_Dim1 != null
                ? new ObjectParameter("Param_Dim1", param_Dim1)
                : new ObjectParameter("Param_Dim1", typeof(string));

            var param_Dim1ValueParameter = param_Dim1Value != null
                ? new ObjectParameter("Param_Dim1Value", param_Dim1Value)
                : new ObjectParameter("Param_Dim1Value", typeof(string));

            var param_Dim2Parameter = param_Dim2 != null
                ? new ObjectParameter("Param_Dim2", param_Dim2)
                : new ObjectParameter("Param_Dim2", typeof(string));

            var param_Dim2ValueParameter = param_Dim2Value != null
                ? new ObjectParameter("Param_Dim2Value", param_Dim2Value)
                : new ObjectParameter("Param_Dim2Value", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .CreateQuery<fn_OffInt_BalanceValuesOnTransactions2Dim_Result>(
                        "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnTransactions2Dim](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_CurrentPeriod, @Param_YearBeginID, @Param_LYYearBeginID, @Param_Dim1, @Param_Dim1Value, @Param_Dim2, @Param_Dim2Value)",
                        param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                        param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                        param_CurrentPeriodParameter, param_YearBeginIDParameter, param_LYYearBeginIDParameter,
                        param_Dim1Parameter, param_Dim1ValueParameter, param_Dim2Parameter, param_Dim2ValueParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnTransactions3Dim")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnTransactions3Dim_Result>
            fn_OffInt_BalanceValuesOnTransactions3Dim(string param_FromPeriod, string param_ToPeriod,
                string param_YTDPeriod, string param_FromPeriodLY, string param_ToPeriodLY, string param_YTDPeriodLY,
                string param_CurrentPeriod, string param_YearBeginID, string param_LYYearBeginID, string param_Dim1,
                string param_Dim1Value, string param_Dim2, string param_Dim2Value, string param_Dim3,
                string param_Dim3Value)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_CurrentPeriodParameter = param_CurrentPeriod != null
                ? new ObjectParameter("Param_CurrentPeriod", param_CurrentPeriod)
                : new ObjectParameter("Param_CurrentPeriod", typeof(string));

            var param_YearBeginIDParameter = param_YearBeginID != null
                ? new ObjectParameter("Param_YearBeginID", param_YearBeginID)
                : new ObjectParameter("Param_YearBeginID", typeof(string));

            var param_LYYearBeginIDParameter = param_LYYearBeginID != null
                ? new ObjectParameter("Param_LYYearBeginID", param_LYYearBeginID)
                : new ObjectParameter("Param_LYYearBeginID", typeof(string));

            var param_Dim1Parameter = param_Dim1 != null
                ? new ObjectParameter("Param_Dim1", param_Dim1)
                : new ObjectParameter("Param_Dim1", typeof(string));

            var param_Dim1ValueParameter = param_Dim1Value != null
                ? new ObjectParameter("Param_Dim1Value", param_Dim1Value)
                : new ObjectParameter("Param_Dim1Value", typeof(string));

            var param_Dim2Parameter = param_Dim2 != null
                ? new ObjectParameter("Param_Dim2", param_Dim2)
                : new ObjectParameter("Param_Dim2", typeof(string));

            var param_Dim2ValueParameter = param_Dim2Value != null
                ? new ObjectParameter("Param_Dim2Value", param_Dim2Value)
                : new ObjectParameter("Param_Dim2Value", typeof(string));

            var param_Dim3Parameter = param_Dim3 != null
                ? new ObjectParameter("Param_Dim3", param_Dim3)
                : new ObjectParameter("Param_Dim3", typeof(string));

            var param_Dim3ValueParameter = param_Dim3Value != null
                ? new ObjectParameter("Param_Dim3Value", param_Dim3Value)
                : new ObjectParameter("Param_Dim3Value", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .CreateQuery<fn_OffInt_BalanceValuesOnTransactions3Dim_Result>(
                        "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnTransactions3Dim](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_CurrentPeriod, @Param_YearBeginID, @Param_LYYearBeginID, @Param_Dim1, @Param_Dim1Value, @Param_Dim2, @Param_Dim2Value, @Param_Dim3, @Param_Dim3Value)",
                        param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                        param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                        param_CurrentPeriodParameter, param_YearBeginIDParameter, param_LYYearBeginIDParameter,
                        param_Dim1Parameter, param_Dim1ValueParameter, param_Dim2Parameter, param_Dim2ValueParameter,
                        param_Dim3Parameter, param_Dim3ValueParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnTransactions4Dim")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnTransactions4Dim_Result>
            fn_OffInt_BalanceValuesOnTransactions4Dim(string param_FromPeriod, string param_ToPeriod,
                string param_YTDPeriod, string param_FromPeriodLY, string param_ToPeriodLY, string param_YTDPeriodLY,
                string param_CurrentPeriod, string param_YearBeginID, string param_LYYearBeginID, string param_Dim1,
                string param_Dim1Value, string param_Dim2, string param_Dim2Value, string param_Dim3,
                string param_Dim3Value, string param_Dim4, string param_Dim4Value)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_CurrentPeriodParameter = param_CurrentPeriod != null
                ? new ObjectParameter("Param_CurrentPeriod", param_CurrentPeriod)
                : new ObjectParameter("Param_CurrentPeriod", typeof(string));

            var param_YearBeginIDParameter = param_YearBeginID != null
                ? new ObjectParameter("Param_YearBeginID", param_YearBeginID)
                : new ObjectParameter("Param_YearBeginID", typeof(string));

            var param_LYYearBeginIDParameter = param_LYYearBeginID != null
                ? new ObjectParameter("Param_LYYearBeginID", param_LYYearBeginID)
                : new ObjectParameter("Param_LYYearBeginID", typeof(string));

            var param_Dim1Parameter = param_Dim1 != null
                ? new ObjectParameter("Param_Dim1", param_Dim1)
                : new ObjectParameter("Param_Dim1", typeof(string));

            var param_Dim1ValueParameter = param_Dim1Value != null
                ? new ObjectParameter("Param_Dim1Value", param_Dim1Value)
                : new ObjectParameter("Param_Dim1Value", typeof(string));

            var param_Dim2Parameter = param_Dim2 != null
                ? new ObjectParameter("Param_Dim2", param_Dim2)
                : new ObjectParameter("Param_Dim2", typeof(string));

            var param_Dim2ValueParameter = param_Dim2Value != null
                ? new ObjectParameter("Param_Dim2Value", param_Dim2Value)
                : new ObjectParameter("Param_Dim2Value", typeof(string));

            var param_Dim3Parameter = param_Dim3 != null
                ? new ObjectParameter("Param_Dim3", param_Dim3)
                : new ObjectParameter("Param_Dim3", typeof(string));

            var param_Dim3ValueParameter = param_Dim3Value != null
                ? new ObjectParameter("Param_Dim3Value", param_Dim3Value)
                : new ObjectParameter("Param_Dim3Value", typeof(string));

            var param_Dim4Parameter = param_Dim4 != null
                ? new ObjectParameter("Param_Dim4", param_Dim4)
                : new ObjectParameter("Param_Dim4", typeof(string));

            var param_Dim4ValueParameter = param_Dim4Value != null
                ? new ObjectParameter("Param_Dim4Value", param_Dim4Value)
                : new ObjectParameter("Param_Dim4Value", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .CreateQuery<fn_OffInt_BalanceValuesOnTransactions4Dim_Result>(
                        "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnTransactions4Dim](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_CurrentPeriod, @Param_YearBeginID, @Param_LYYearBeginID, @Param_Dim1, @Param_Dim1Value, @Param_Dim2, @Param_Dim2Value, @Param_Dim3, @Param_Dim3Value, @Param_Dim4, @Param_Dim4Value)",
                        param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                        param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                        param_CurrentPeriodParameter, param_YearBeginIDParameter, param_LYYearBeginIDParameter,
                        param_Dim1Parameter, param_Dim1ValueParameter, param_Dim2Parameter, param_Dim2ValueParameter,
                        param_Dim3Parameter, param_Dim3ValueParameter, param_Dim4Parameter, param_Dim4ValueParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_BalanceValuesOnTransactionsNoDim")]
        public virtual IQueryable<fn_OffInt_BalanceValuesOnTransactionsNoDim_Result>
            fn_OffInt_BalanceValuesOnTransactionsNoDim(string param_FromPeriod, string param_ToPeriod,
                string param_YTDPeriod, string param_FromPeriodLY, string param_ToPeriodLY, string param_YTDPeriodLY,
                string param_CurrentPeriod)
        {
            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_YTDPeriodParameter = param_YTDPeriod != null
                ? new ObjectParameter("Param_YTDPeriod", param_YTDPeriod)
                : new ObjectParameter("Param_YTDPeriod", typeof(string));

            var param_FromPeriodLYParameter = param_FromPeriodLY != null
                ? new ObjectParameter("Param_FromPeriodLY", param_FromPeriodLY)
                : new ObjectParameter("Param_FromPeriodLY", typeof(string));

            var param_ToPeriodLYParameter = param_ToPeriodLY != null
                ? new ObjectParameter("Param_ToPeriodLY", param_ToPeriodLY)
                : new ObjectParameter("Param_ToPeriodLY", typeof(string));

            var param_YTDPeriodLYParameter = param_YTDPeriodLY != null
                ? new ObjectParameter("Param_YTDPeriodLY", param_YTDPeriodLY)
                : new ObjectParameter("Param_YTDPeriodLY", typeof(string));

            var param_CurrentPeriodParameter = param_CurrentPeriod != null
                ? new ObjectParameter("Param_CurrentPeriod", param_CurrentPeriod)
                : new ObjectParameter("Param_CurrentPeriod", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .CreateQuery<fn_OffInt_BalanceValuesOnTransactionsNoDim_Result>(
                        "[KompasDemoEntities].[fn_OffInt_BalanceValuesOnTransactionsNoDim](@Param_FromPeriod, @Param_ToPeriod, @Param_YTDPeriod, @Param_FromPeriodLY, @Param_ToPeriodLY, @Param_YTDPeriodLY, @Param_CurrentPeriod)",
                        param_FromPeriodParameter, param_ToPeriodParameter, param_YTDPeriodParameter,
                        param_FromPeriodLYParameter, param_ToPeriodLYParameter, param_YTDPeriodLYParameter,
                        param_CurrentPeriodParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_VATAccounts")]
        public virtual IQueryable<fn_OffInt_VATAccounts_Result> fn_OffInt_VATAccounts(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo, string param_TaxCodeList)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TaxCodeListParameter = param_TaxCodeList != null
                ? new ObjectParameter("Param_TaxCodeList", param_TaxCodeList)
                : new ObjectParameter("Param_TaxCodeList", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_VATAccounts_Result>(
                    "[KompasDemoEntities].[fn_OffInt_VATAccounts](@Param_DateFrom, @Param_DateTo, @Param_TaxCodeList)",
                    param_DateFromParameter, param_DateToParameter, param_TaxCodeListParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_VATCalulateInvoiceJournals")]
        public virtual IQueryable<fn_OffInt_VATCalulateInvoiceJournals_Result> fn_OffInt_VATCalulateInvoiceJournals(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_VATCalulateInvoiceJournals_Result>(
                    "[KompasDemoEntities].[fn_OffInt_VATCalulateInvoiceJournals](@Param_DateFrom, @Param_DateTo)",
                    param_DateFromParameter, param_DateToParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_VATCalulateManuallyPosted")]
        public virtual IQueryable<fn_OffInt_VATCalulateManuallyPosted_Result> fn_OffInt_VATCalulateManuallyPosted(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_VATCalulateManuallyPosted_Result>(
                    "[KompasDemoEntities].[fn_OffInt_VATCalulateManuallyPosted](@Param_DateFrom, @Param_DateTo)",
                    param_DateFromParameter, param_DateToParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_OffInt_VATReturn")]
        public virtual IQueryable<fn_OffInt_VATReturn_Result> fn_OffInt_VATReturn(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_OffInt_VATReturn_Result>(
                    "[KompasDemoEntities].[fn_OffInt_VATReturn](@Param_DateFrom, @Param_DateTo)",
                    param_DateFromParameter, param_DateToParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_StandardAnalysisLiquidityFlow")]
        public virtual IQueryable<fn_StandardAnalysisLiquidityFlow_Result> fn_StandardAnalysisLiquidityFlow(
            string param_FromPeriodID, string param_ToPeriodID)
        {
            var param_FromPeriodIDParameter = param_FromPeriodID != null
                ? new ObjectParameter("Param_FromPeriodID", param_FromPeriodID)
                : new ObjectParameter("Param_FromPeriodID", typeof(string));

            var param_ToPeriodIDParameter = param_ToPeriodID != null
                ? new ObjectParameter("Param_ToPeriodID", param_ToPeriodID)
                : new ObjectParameter("Param_ToPeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_StandardAnalysisLiquidityFlow_Result>(
                    "[KompasDemoEntities].[fn_StandardAnalysisLiquidityFlow](@Param_FromPeriodID, @Param_ToPeriodID)",
                    param_FromPeriodIDParameter, param_ToPeriodIDParameter);
        }

        [DbFunction("KompasDemoEntities", "fn_StdAnalysisPeriodBalance")]
        public virtual IQueryable<fn_StdAnalysisPeriodBalance_Result> fn_StdAnalysisPeriodBalance(
            string param_fromPeriodID, string param_ToPeriodID)
        {
            var param_fromPeriodIDParameter = param_fromPeriodID != null
                ? new ObjectParameter("Param_fromPeriodID", param_fromPeriodID)
                : new ObjectParameter("Param_fromPeriodID", typeof(string));

            var param_ToPeriodIDParameter = param_ToPeriodID != null
                ? new ObjectParameter("Param_ToPeriodID", param_ToPeriodID)
                : new ObjectParameter("Param_ToPeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fn_StdAnalysisPeriodBalance_Result>(
                    "[KompasDemoEntities].[fn_StdAnalysisPeriodBalance](@Param_fromPeriodID, @Param_ToPeriodID)",
                    param_fromPeriodIDParameter, param_ToPeriodIDParameter);
        }

        [DbFunction("KompasDemoEntities", "fnCustomerTransactionsByPeriod")]
        public virtual IQueryable<fnCustomerTransactionsByPeriod_Result> fnCustomerTransactionsByPeriod(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnCustomerTransactionsByPeriod_Result>(
                    "[KompasDemoEntities].[fnCustomerTransactionsByPeriod](@Param_Customer, @Param_FromDate, @Param_ToDate)",
                    param_CustomerParameter, param_FromDateParameter, param_ToDateParameter);
        }

        [DbFunction("KompasDemoEntities", "fnGetOrderDiscount")]
        public virtual IQueryable<fnGetOrderDiscount_Result> fnGetOrderDiscount(string param_CusSup,
            string param_CusSupCat, string param_Item, string param_InventoryCat, string param_Unit,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_Date, string param_Parameter1,
            string param_Parameter2, string param_Project, string param_CostCenter)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_CusSupCatParameter = param_CusSupCat != null
                ? new ObjectParameter("Param_CusSupCat", param_CusSupCat)
                : new ObjectParameter("Param_CusSupCat", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_InventoryCatParameter = param_InventoryCat != null
                ? new ObjectParameter("Param_InventoryCat", param_InventoryCat)
                : new ObjectParameter("Param_InventoryCat", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnGetOrderDiscount_Result>(
                    "[KompasDemoEntities].[fnGetOrderDiscount](@Param_CusSup, @Param_CusSupCat, @Param_Item, @Param_InventoryCat, @Param_Unit, @Param_Quantity, @Param_Date, @Param_Parameter1, @Param_Parameter2, @Param_Project, @Param_CostCenter)",
                    param_CusSupParameter, param_CusSupCatParameter, param_ItemParameter, param_InventoryCatParameter,
                    param_UnitParameter, param_QuantityParameter, param_DateParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter, param_ProjectParameter, param_CostCenterParameter);
        }

        [DbFunction("KompasDemoEntities", "fnGetPrice")]
        public virtual IQueryable<fnGetPrice_Result> fnGetPrice(string param_PriceList,
            Nullable<int> param_PriceListType, string param_Item, string param_Unit, string param_Currency,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_LineDate, string param_Parameter1,
            string param_Parameter2, Nullable<double> param_CostPrice)
        {
            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_PriceListTypeParameter = param_PriceListType.HasValue
                ? new ObjectParameter("Param_PriceListType", param_PriceListType)
                : new ObjectParameter("Param_PriceListType", typeof(int));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_LineDateParameter = param_LineDate.HasValue
                ? new ObjectParameter("Param_LineDate", param_LineDate)
                : new ObjectParameter("Param_LineDate", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnGetPrice_Result>(
                    "[KompasDemoEntities].[fnGetPrice](@Param_PriceList, @Param_PriceListType, @Param_Item, @Param_Unit, @Param_Currency, @Param_Quantity, @Param_LineDate, @Param_Parameter1, @Param_Parameter2, @Param_CostPrice)",
                    param_PriceListParameter, param_PriceListTypeParameter, param_ItemParameter, param_UnitParameter,
                    param_CurrencyParameter, param_QuantityParameter, param_LineDateParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter, param_CostPriceParameter);
        }

        [DbFunction("KompasDemoEntities", "fnGetPurchaseDiscount")]
        public virtual IQueryable<fnGetPurchaseDiscount_Result> fnGetPurchaseDiscount(string param_CusSup,
            string param_CusSupCat, string param_Item, string param_InventoryCat, string param_Unit,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_Date, string param_Parameter1,
            string param_Parameter2)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_CusSupCatParameter = param_CusSupCat != null
                ? new ObjectParameter("Param_CusSupCat", param_CusSupCat)
                : new ObjectParameter("Param_CusSupCat", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_InventoryCatParameter = param_InventoryCat != null
                ? new ObjectParameter("Param_InventoryCat", param_InventoryCat)
                : new ObjectParameter("Param_InventoryCat", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnGetPurchaseDiscount_Result>(
                    "[KompasDemoEntities].[fnGetPurchaseDiscount](@Param_CusSup, @Param_CusSupCat, @Param_Item, @Param_InventoryCat, @Param_Unit, @Param_Quantity, @Param_Date, @Param_Parameter1, @Param_Parameter2)",
                    param_CusSupParameter, param_CusSupCatParameter, param_ItemParameter, param_InventoryCatParameter,
                    param_UnitParameter, param_QuantityParameter, param_DateParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter);
        }

        [DbFunction("KompasDemoEntities", "fnOptionalValues")]
        public virtual IQueryable<fnOptionalValues_Result> fnOptionalValues(string table, Nullable<int> optional)
        {
            var tableParameter = table != null
                ? new ObjectParameter("Table", table)
                : new ObjectParameter("Table", typeof(string));

            var optionalParameter = optional.HasValue
                ? new ObjectParameter("Optional", optional)
                : new ObjectParameter("Optional", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnOptionalValues_Result>(
                    "[KompasDemoEntities].[fnOptionalValues](@Table, @Optional)", tableParameter, optionalParameter);
        }

        [DbFunction("KompasDemoEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string param_Str, string param_Delim)
        {
            var param_StrParameter = param_Str != null
                ? new ObjectParameter("Param_Str", param_Str)
                : new ObjectParameter("Param_Str", typeof(string));

            var param_DelimParameter = param_Delim != null
                ? new ObjectParameter("Param_Delim", param_Delim)
                : new ObjectParameter("Param_Delim", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnSplitString_Result>(
                    "[KompasDemoEntities].[fnSplitString](@Param_Str, @Param_Delim)", param_StrParameter,
                    param_DelimParameter);
        }

        [DbFunction("KompasDemoEntities", "fnSplitStringWithID")]
        public virtual IQueryable<fnSplitStringWithID_Result> fnSplitStringWithID(string param_Str, string param_Delim)
        {
            var param_StrParameter = param_Str != null
                ? new ObjectParameter("Param_Str", param_Str)
                : new ObjectParameter("Param_Str", typeof(string));

            var param_DelimParameter = param_Delim != null
                ? new ObjectParameter("Param_Delim", param_Delim)
                : new ObjectParameter("Param_Delim", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnSplitStringWithID_Result>(
                    "[KompasDemoEntities].[fnSplitStringWithID](@Param_Str, @Param_Delim)", param_StrParameter,
                    param_DelimParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsCustomerFunc1ByPeriods")]
        public virtual IQueryable<fnStatisticsCustomerFunc1ByPeriods_Result> fnStatisticsCustomerFunc1ByPeriods(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<bool> param_UseShipTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_UseShipToParameter = param_UseShipTo.HasValue
                ? new ObjectParameter("Param_UseShipTo", param_UseShipTo)
                : new ObjectParameter("Param_UseShipTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsCustomerFunc1ByPeriods_Result>(
                    "[KompasDemoEntities].[fnStatisticsCustomerFunc1ByPeriods](@Param_Customer, @Param_FromDate, @Param_ToDate, @Param_TotalInv, @Param_UseShipTo)",
                    param_CustomerParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter,
                    param_UseShipToParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsCustomerFuncByGroups")]
        public virtual IQueryable<fnStatisticsCustomerFuncByGroups_Result> fnStatisticsCustomerFuncByGroups(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_Func, Nullable<bool> param_UseInvoiceTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseInvoiceToParameter = param_UseInvoiceTo.HasValue
                ? new ObjectParameter("Param_UseInvoiceTo", param_UseInvoiceTo)
                : new ObjectParameter("Param_UseInvoiceTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsCustomerFuncByGroups_Result>(
                    "[KompasDemoEntities].[fnStatisticsCustomerFuncByGroups](@Param_Customer, @Param_FromDate, @Param_ToDate, @Param_Func, @Param_UseInvoiceTo)",
                    param_CustomerParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter,
                    param_UseInvoiceToParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsCustomerFuncByItems")]
        public virtual IQueryable<fnStatisticsCustomerFuncByItems_Result> fnStatisticsCustomerFuncByItems(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_Func, Nullable<bool> param_UseInvoiceTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseInvoiceToParameter = param_UseInvoiceTo.HasValue
                ? new ObjectParameter("Param_UseInvoiceTo", param_UseInvoiceTo)
                : new ObjectParameter("Param_UseInvoiceTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsCustomerFuncByItems_Result>(
                    "[KompasDemoEntities].[fnStatisticsCustomerFuncByItems](@Param_Customer, @Param_FromDate, @Param_ToDate, @Param_Func, @Param_UseInvoiceTo)",
                    param_CustomerParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter,
                    param_UseInvoiceToParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsCustomerFuncOthersByPeriods")]
        public virtual IQueryable<fnStatisticsCustomerFuncOthersByPeriods_Result>
            fnStatisticsCustomerFuncOthersByPeriods(string param_Customer, Nullable<System.DateTime> param_FromDate,
                Nullable<System.DateTime> param_ToDate, Nullable<byte> param_TotalInv, Nullable<byte> param_Func,
                Nullable<bool> param_UseInvoiceTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseInvoiceToParameter = param_UseInvoiceTo.HasValue
                ? new ObjectParameter("Param_UseInvoiceTo", param_UseInvoiceTo)
                : new ObjectParameter("Param_UseInvoiceTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsCustomerFuncOthersByPeriods_Result>
                    ("[KompasDemoEntities].[fnStatisticsCustomerFuncOthersByPeriods](@Param_Customer, @Param_FromDate, @Param_ToDate, @Param_TotalInv, @Param_Func, @Param_UseInvoiceTo)",
                        param_CustomerParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter,
                        param_FuncParameter, param_UseInvoiceToParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsInventoryBuyFuncByPeriod")]
        public virtual IQueryable<fnStatisticsInventoryBuyFuncByPeriod_Result> fnStatisticsInventoryBuyFuncByPeriod(
            string param_Item, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<byte> param_Func)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsInventoryBuyFuncByPeriod_Result>(
                    "[KompasDemoEntities].[fnStatisticsInventoryBuyFuncByPeriod](@Param_Item, @Param_FromDate, @Param_ToDate, @Param_TotalInv, @Param_Func)",
                    param_ItemParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter,
                    param_FuncParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsInventorySaleFuncByPeriod")]
        public virtual IQueryable<fnStatisticsInventorySaleFuncByPeriod_Result> fnStatisticsInventorySaleFuncByPeriod(
            string param_Item, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<byte> param_Func)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsInventorySaleFuncByPeriod_Result>(
                    "[KompasDemoEntities].[fnStatisticsInventorySaleFuncByPeriod](@Param_Item, @Param_FromDate, @Param_ToDate, @Param_TotalInv, @Param_Func)",
                    param_ItemParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter,
                    param_FuncParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsSupplierFunc1ByPeriods")]
        public virtual IQueryable<fnStatisticsSupplierFunc1ByPeriods_Result> fnStatisticsSupplierFunc1ByPeriods(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsSupplierFunc1ByPeriods_Result>(
                    "[KompasDemoEntities].[fnStatisticsSupplierFunc1ByPeriods](@Param_Supplier, @Param_FromDate, @Param_ToDate, @Param_TotalInv)",
                    param_SupplierParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsSupplierFuncByGroups")]
        public virtual IQueryable<fnStatisticsSupplierFuncByGroups_Result> fnStatisticsSupplierFuncByGroups(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_Func)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsSupplierFuncByGroups_Result>(
                    "[KompasDemoEntities].[fnStatisticsSupplierFuncByGroups](@Param_Supplier, @Param_FromDate, @Param_ToDate, @Param_Func)",
                    param_SupplierParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsSupplierFuncByItems")]
        public virtual IQueryable<fnStatisticsSupplierFuncByItems_Result> fnStatisticsSupplierFuncByItems(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_Func)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsSupplierFuncByItems_Result>(
                    "[KompasDemoEntities].[fnStatisticsSupplierFuncByItems](@Param_Supplier, @Param_FromDate, @Param_ToDate, @Param_Func)",
                    param_SupplierParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStatisticsSupplierFuncOthersByPeriods")]
        public virtual IQueryable<fnStatisticsSupplierFuncOthersByPeriods_Result>
            fnStatisticsSupplierFuncOthersByPeriods(string param_Supplier, Nullable<System.DateTime> param_FromDate,
                Nullable<System.DateTime> param_ToDate, Nullable<byte> param_TotalInv)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStatisticsSupplierFuncOthersByPeriods_Result>
                    ("[KompasDemoEntities].[fnStatisticsSupplierFuncOthersByPeriods](@Param_Supplier, @Param_FromDate, @Param_ToDate, @Param_TotalInv)",
                        param_SupplierParameter, param_FromDateParameter, param_ToDateParameter, param_TotalInvParameter);
        }

        [DbFunction("KompasDemoEntities", "fnStringToTable")]
        public virtual IQueryable<fnStringToTable_Result> fnStringToTable(string tableString)
        {
            var tableStringParameter = tableString != null
                ? new ObjectParameter("TableString", tableString)
                : new ObjectParameter("TableString", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnStringToTable_Result>(
                    "[KompasDemoEntities].[fnStringToTable](@TableString)", tableStringParameter);
        }

        [DbFunction("KompasDemoEntities", "fnSupplierTransactionsByPeriod")]
        public virtual IQueryable<fnSupplierTransactionsByPeriod_Result> fnSupplierTransactionsByPeriod(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnSupplierTransactionsByPeriod_Result>(
                    "[KompasDemoEntities].[fnSupplierTransactionsByPeriod](@Param_Supplier, @Param_FromDate, @Param_ToDate)",
                    param_SupplierParameter, param_FromDateParameter, param_ToDateParameter);
        }

        [DbFunction("KompasDemoEntities", "fnTransSummary")]
        public virtual IQueryable<fnTransSummary_Result> fnTransSummary(Nullable<bool> param_IsCustomer,
            Nullable<bool> param_UseDueDate, Nullable<bool> param_UseOpenItem, Nullable<bool> param_ByCurrency,
            string param_FromCurrency, string param_ToCurrency)
        {
            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_ByCurrencyParameter = param_ByCurrency.HasValue
                ? new ObjectParameter("Param_ByCurrency", param_ByCurrency)
                : new ObjectParameter("Param_ByCurrency", typeof(bool));

            var param_FromCurrencyParameter = param_FromCurrency != null
                ? new ObjectParameter("Param_FromCurrency", param_FromCurrency)
                : new ObjectParameter("Param_FromCurrency", typeof(string));

            var param_ToCurrencyParameter = param_ToCurrency != null
                ? new ObjectParameter("Param_ToCurrency", param_ToCurrency)
                : new ObjectParameter("Param_ToCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnTransSummary_Result>(
                    "[KompasDemoEntities].[fnTransSummary](@Param_IsCustomer, @Param_UseDueDate, @Param_UseOpenItem, @Param_ByCurrency, @Param_FromCurrency, @Param_ToCurrency)",
                    param_IsCustomerParameter, param_UseDueDateParameter, param_UseOpenItemParameter,
                    param_ByCurrencyParameter, param_FromCurrencyParameter, param_ToCurrencyParameter);
        }

        [DbFunction("KompasDemoEntities", "fnTransSummarySingleID")]
        public virtual IQueryable<fnTransSummarySingleID_Result> fnTransSummarySingleID(Nullable<bool> param_IsCustomer,
            string param_ID, Nullable<bool> param_UseDueDate, Nullable<bool> param_UseOpenItem,
            Nullable<bool> param_ByCurrency)
        {
            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_ByCurrencyParameter = param_ByCurrency.HasValue
                ? new ObjectParameter("Param_ByCurrency", param_ByCurrency)
                : new ObjectParameter("Param_ByCurrency", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<fnTransSummarySingleID_Result>(
                    "[KompasDemoEntities].[fnTransSummarySingleID](@Param_IsCustomer, @Param_ID, @Param_UseDueDate, @Param_UseOpenItem, @Param_ByCurrency)",
                    param_IsCustomerParameter, param_IDParameter, param_UseDueDateParameter, param_UseOpenItemParameter,
                    param_ByCurrencyParameter);
        }

        [DbFunction("KompasDemoEntities", "Kompas_AccountingYearInfo")]
        public virtual IQueryable<Kompas_AccountingYearInfo_Result> Kompas_AccountingYearInfo()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<Kompas_AccountingYearInfo_Result>(
                    "[KompasDemoEntities].[Kompas_AccountingYearInfo]()");
        }

        [DbFunction("KompasDemoEntities", "Kompas_AccountingYearQuarters")]
        public virtual IQueryable<Kompas_AccountingYearQuarters_Result> Kompas_AccountingYearQuarters()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<Kompas_AccountingYearQuarters_Result>(
                    "[KompasDemoEntities].[Kompas_AccountingYearQuarters]()");
        }

        [DbFunction("KompasDemoEntities", "tss_GetOrderDiscount")]
        public virtual IQueryable<tss_GetOrderDiscount_Result> tss_GetOrderDiscount(string param_CusSup,
            string param_CusSupCat, string param_Item, string param_InventoryCat, string param_Unit,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_Date, string param_Parameter1,
            string param_Parameter2)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_CusSupCatParameter = param_CusSupCat != null
                ? new ObjectParameter("Param_CusSupCat", param_CusSupCat)
                : new ObjectParameter("Param_CusSupCat", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_InventoryCatParameter = param_InventoryCat != null
                ? new ObjectParameter("Param_InventoryCat", param_InventoryCat)
                : new ObjectParameter("Param_InventoryCat", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<tss_GetOrderDiscount_Result>(
                    "[KompasDemoEntities].[tss_GetOrderDiscount](@Param_CusSup, @Param_CusSupCat, @Param_Item, @Param_InventoryCat, @Param_Unit, @Param_Quantity, @Param_Date, @Param_Parameter1, @Param_Parameter2)",
                    param_CusSupParameter, param_CusSupCatParameter, param_ItemParameter, param_InventoryCatParameter,
                    param_UnitParameter, param_QuantityParameter, param_DateParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter);
        }

        [DbFunction("KompasDemoEntities", "tss_GetPrice")]
        public virtual IQueryable<tss_GetPrice_Result> tss_GetPrice(string param_PriceList, string param_Item,
            string param_Unit, string param_Currency, Nullable<double> param_Quantity,
            Nullable<System.DateTime> param_LineDate, string param_Parameter1, string param_Parameter2)
        {
            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_LineDateParameter = param_LineDate.HasValue
                ? new ObjectParameter("Param_LineDate", param_LineDate)
                : new ObjectParameter("Param_LineDate", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.CreateQuery<tss_GetPrice_Result>(
                    "[KompasDemoEntities].[tss_GetPrice](@Param_PriceList, @Param_Item, @Param_Unit, @Param_Currency, @Param_Quantity, @Param_LineDate, @Param_Parameter1, @Param_Parameter2)",
                    param_PriceListParameter, param_ItemParameter, param_UnitParameter, param_CurrencyParameter,
                    param_QuantityParameter, param_LineDateParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter);
        }

        public virtual int DocumentMergeSetupColumns_AddUpdate(Nullable<int> parentID, string column_Name, string code,
            string filter)
        {
            var parentIDParameter = parentID.HasValue
                ? new ObjectParameter("ParentID", parentID)
                : new ObjectParameter("ParentID", typeof(int));

            var column_NameParameter = column_Name != null
                ? new ObjectParameter("Column_Name", column_Name)
                : new ObjectParameter("Column_Name", typeof(string));

            var codeParameter = code != null
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(string));

            var filterParameter = filter != null
                ? new ObjectParameter("Filter", filter)
                : new ObjectParameter("Filter", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("DocumentMergeSetupColumns_AddUpdate",
                parentIDParameter, column_NameParameter, codeParameter, filterParameter);
        }

        public virtual ObjectResult<EDI_ArchiveOrders_Select_All_Result> EDI_ArchiveOrders_Select_All(
            string orderCommunication, string orderCommunicationStatus)
        {
            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var orderCommunicationStatusParameter = orderCommunicationStatus != null
                ? new ObjectParameter("OrderCommunicationStatus", orderCommunicationStatus)
                : new ObjectParameter("OrderCommunicationStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_ArchiveOrders_Select_All_Result>(
                    "EDI_ArchiveOrders_Select_All", orderCommunicationParameter, orderCommunicationStatusParameter);
        }

        public virtual ObjectResult<EDI_Customers_Select_All_Result> EDI_Customers_Select_All(string orderCommunication)
        {
            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_Customers_Select_All_Result>(
                    "EDI_Customers_Select_All", orderCommunicationParameter);
        }

        public virtual ObjectResult<EDI_Inventory_Select_All_ItemAndEAN_Result> EDI_Inventory_Select_All_ItemAndEAN()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_Inventory_Select_All_ItemAndEAN_Result>
                    ("EDI_Inventory_Select_All_ItemAndEAN");
        }

        public virtual ObjectResult<EDI_OpenPurchases_Select_All_Result> EDI_OpenPurchases_Select_All(
            string purchaseCommunication, string purchaseCommunicationStatus)
        {
            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purchaseCommunicationStatusParameter = purchaseCommunicationStatus != null
                ? new ObjectParameter("PurchaseCommunicationStatus", purchaseCommunicationStatus)
                : new ObjectParameter("PurchaseCommunicationStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_OpenPurchases_Select_All_Result>(
                    "EDI_OpenPurchases_Select_All", purchaseCommunicationParameter, purchaseCommunicationStatusParameter);
        }

        public virtual ObjectResult<EDI_OrderLines_Select_All_Result> EDI_OrderLines_Select_All(
            string orderCommunication, string orderCommunicationStatus)
        {
            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var orderCommunicationStatusParameter = orderCommunicationStatus != null
                ? new ObjectParameter("OrderCommunicationStatus", orderCommunicationStatus)
                : new ObjectParameter("OrderCommunicationStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_OrderLines_Select_All_Result>(
                    "EDI_OrderLines_Select_All", orderCommunicationParameter, orderCommunicationStatusParameter);
        }

        public virtual ObjectResult<EDI_PurchaseLines_Select_All_Result> EDI_PurchaseLines_Select_All(
            string purchaseCommunication, string purchaseCommunicationStatus)
        {
            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purchaseCommunicationStatusParameter = purchaseCommunicationStatus != null
                ? new ObjectParameter("PurchaseCommunicationStatus", purchaseCommunicationStatus)
                : new ObjectParameter("PurchaseCommunicationStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_PurchaseLines_Select_All_Result>(
                    "EDI_PurchaseLines_Select_All", purchaseCommunicationParameter, purchaseCommunicationStatusParameter);
        }

        public virtual ObjectResult<EDI_Suppliers_Select_All_Result> EDI_Suppliers_Select_All(
            string purchaseCommunication)
        {
            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<EDI_Suppliers_Select_All_Result>(
                    "EDI_Suppliers_Select_All", purchaseCommunicationParameter);
        }

        public virtual int Internal_Inventory_SetItemDecimals(string item, Nullable<double> test_Quantity,
            Nullable<short> itemDecimals)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var test_QuantityParameter = test_Quantity.HasValue
                ? new ObjectParameter("Test_Quantity", test_Quantity)
                : new ObjectParameter("Test_Quantity", typeof(double));

            var itemDecimalsParameter = itemDecimals.HasValue
                ? new ObjectParameter("ItemDecimals", itemDecimals)
                : new ObjectParameter("ItemDecimals", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Internal_Inventory_SetItemDecimals",
                itemParameter, test_QuantityParameter, itemDecimalsParameter);
        }

        public virtual ObjectResult<Kompas_100Percent_Result> Kompas_100Percent(Nullable<System.DateTime> fromDate,
            Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue
                ? new ObjectParameter("FromDate", fromDate)
                : new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue
                ? new ObjectParameter("ToDate", toDate)
                : new ObjectParameter("ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_100Percent_Result>(
                    "Kompas_100Percent", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> Kompas_AccountBalanceInCurrency(string param_Account,
            Nullable<System.DateTime> param_Opening)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_OpeningParameter = param_Opening.HasValue
                ? new ObjectParameter("Param_Opening", param_Opening)
                : new ObjectParameter("Param_Opening", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<decimal>>(
                    "Kompas_AccountBalanceInCurrency", param_AccountParameter, param_OpeningParameter);
        }

        public virtual int Kompas_AccountsBalance_Copy(Nullable<System.Guid> gUIDFrom, Nullable<System.Guid> gUIDTo,
            string newName)
        {
            var gUIDFromParameter = gUIDFrom.HasValue
                ? new ObjectParameter("GUIDFrom", gUIDFrom)
                : new ObjectParameter("GUIDFrom", typeof(System.Guid));

            var gUIDToParameter = gUIDTo.HasValue
                ? new ObjectParameter("GUIDTo", gUIDTo)
                : new ObjectParameter("GUIDTo", typeof(System.Guid));

            var newNameParameter = newName != null
                ? new ObjectParameter("NewName", newName)
                : new ObjectParameter("NewName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalance_Copy",
                gUIDFromParameter, gUIDToParameter, newNameParameter);
        }

        public virtual int Kompas_AccountsBalance_Delete(Nullable<System.Guid> gUID, string name)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalance_Delete",
                gUIDParameter, nameParameter);
        }

        public virtual int Kompas_AccountsBalance_GetAccountsArray(string fromAccount, string toAccount,
            Nullable<bool> balance, Nullable<bool> status, Nullable<bool> sum, Nullable<System.Guid> parent_GUID)
        {
            var fromAccountParameter = fromAccount != null
                ? new ObjectParameter("FromAccount", fromAccount)
                : new ObjectParameter("FromAccount", typeof(string));

            var toAccountParameter = toAccount != null
                ? new ObjectParameter("ToAccount", toAccount)
                : new ObjectParameter("ToAccount", typeof(string));

            var balanceParameter = balance.HasValue
                ? new ObjectParameter("Balance", balance)
                : new ObjectParameter("Balance", typeof(bool));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(bool));

            var sumParameter = sum.HasValue
                ? new ObjectParameter("Sum", sum)
                : new ObjectParameter("Sum", typeof(bool));

            var parent_GUIDParameter = parent_GUID.HasValue
                ? new ObjectParameter("Parent_GUID", parent_GUID)
                : new ObjectParameter("Parent_GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalance_GetAccountsArray",
                    fromAccountParameter, toAccountParameter, balanceParameter, statusParameter, sumParameter,
                    parent_GUIDParameter);
        }

        public virtual int Kompas_AccountsBalances(string name, Nullable<System.DateTime> year1PeriodStart,
            Nullable<System.DateTime> year1PeriodEnding, Nullable<System.DateTime> year2PeriodStart,
            Nullable<System.DateTime> year2PeriodEnding, Nullable<bool> in1000, Nullable<bool> inBalance)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var year1PeriodStartParameter = year1PeriodStart.HasValue
                ? new ObjectParameter("Year1PeriodStart", year1PeriodStart)
                : new ObjectParameter("Year1PeriodStart", typeof(System.DateTime));

            var year1PeriodEndingParameter = year1PeriodEnding.HasValue
                ? new ObjectParameter("Year1PeriodEnding", year1PeriodEnding)
                : new ObjectParameter("Year1PeriodEnding", typeof(System.DateTime));

            var year2PeriodStartParameter = year2PeriodStart.HasValue
                ? new ObjectParameter("Year2PeriodStart", year2PeriodStart)
                : new ObjectParameter("Year2PeriodStart", typeof(System.DateTime));

            var year2PeriodEndingParameter = year2PeriodEnding.HasValue
                ? new ObjectParameter("Year2PeriodEnding", year2PeriodEnding)
                : new ObjectParameter("Year2PeriodEnding", typeof(System.DateTime));

            var in1000Parameter = in1000.HasValue
                ? new ObjectParameter("In1000", in1000)
                : new ObjectParameter("In1000", typeof(bool));

            var inBalanceParameter = inBalance.HasValue
                ? new ObjectParameter("InBalance", inBalance)
                : new ObjectParameter("InBalance", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalances", nameParameter,
                year1PeriodStartParameter, year1PeriodEndingParameter, year2PeriodStartParameter,
                year2PeriodEndingParameter, in1000Parameter, inBalanceParameter);
        }

        public virtual int Kompas_AccountsBalances_GetAll(string name)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalances_GetAll",
                nameParameter);
        }

        public virtual int Kompas_AccountsBalances_Transactions(string name, Nullable<System.DateTime> year1PeriodStart,
            Nullable<System.DateTime> year1PeriodEnding, Nullable<System.DateTime> year2PeriodStart,
            Nullable<System.DateTime> year2PeriodEnding, string department, string costCenter, string purpose,
            string project, Nullable<bool> in1000, Nullable<bool> inBalance)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var year1PeriodStartParameter = year1PeriodStart.HasValue
                ? new ObjectParameter("Year1PeriodStart", year1PeriodStart)
                : new ObjectParameter("Year1PeriodStart", typeof(System.DateTime));

            var year1PeriodEndingParameter = year1PeriodEnding.HasValue
                ? new ObjectParameter("Year1PeriodEnding", year1PeriodEnding)
                : new ObjectParameter("Year1PeriodEnding", typeof(System.DateTime));

            var year2PeriodStartParameter = year2PeriodStart.HasValue
                ? new ObjectParameter("Year2PeriodStart", year2PeriodStart)
                : new ObjectParameter("Year2PeriodStart", typeof(System.DateTime));

            var year2PeriodEndingParameter = year2PeriodEnding.HasValue
                ? new ObjectParameter("Year2PeriodEnding", year2PeriodEnding)
                : new ObjectParameter("Year2PeriodEnding", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var in1000Parameter = in1000.HasValue
                ? new ObjectParameter("In1000", in1000)
                : new ObjectParameter("In1000", typeof(bool));

            var inBalanceParameter = inBalance.HasValue
                ? new ObjectParameter("InBalance", inBalance)
                : new ObjectParameter("InBalance", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AccountsBalances_Transactions",
                nameParameter, year1PeriodStartParameter, year1PeriodEndingParameter, year2PeriodStartParameter,
                year2PeriodEndingParameter, departmentParameter, costCenterParameter, purposeParameter, projectParameter,
                in1000Parameter, inBalanceParameter);
        }

        public virtual int Kompas_AddCopyFromOldCustomerToNewCustomer(string newCustomer, string oldCustomer)
        {
            var newCustomerParameter = newCustomer != null
                ? new ObjectParameter("NewCustomer", newCustomer)
                : new ObjectParameter("NewCustomer", typeof(string));

            var oldCustomerParameter = oldCustomer != null
                ? new ObjectParameter("OldCustomer", oldCustomer)
                : new ObjectParameter("OldCustomer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_AddCopyFromOldCustomerToNewCustomer", newCustomerParameter, oldCustomerParameter);
        }

        public virtual int Kompas_AddTmpBOMItems(string master, Nullable<byte> level)
        {
            var masterParameter = master != null
                ? new ObjectParameter("Master", master)
                : new ObjectParameter("Master", typeof(string));

            var levelParameter = level.HasValue
                ? new ObjectParameter("Level", level)
                : new ObjectParameter("Level", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AddTmpBOMItems", masterParameter,
                levelParameter);
        }

        public virtual int Kompas_AdjustInventory_CheckBookingData(string param_DataLinkID,
            Nullable<int> param_dltAdjustInventory, Nullable<short> param_InventoryStatus)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            var param_InventoryStatusParameter = param_InventoryStatus.HasValue
                ? new ObjectParameter("Param_InventoryStatus", param_InventoryStatus)
                : new ObjectParameter("Param_InventoryStatus", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AdjustInventory_CheckBookingData",
                    param_DataLinkIDParameter, param_dltAdjustInventoryParameter, param_InventoryStatusParameter);
        }

        public virtual int Kompas_AdjustInventory_CreateLinkInfo(string param_ItemFrom, string param_ItemTo,
            string param_GroupFrom, string param_GroupTo, Nullable<short> param_Status, string param_DataLinkID,
            Nullable<int> param_dltAdjustInventory)
        {
            var param_ItemFromParameter = param_ItemFrom != null
                ? new ObjectParameter("Param_ItemFrom", param_ItemFrom)
                : new ObjectParameter("Param_ItemFrom", typeof(string));

            var param_ItemToParameter = param_ItemTo != null
                ? new ObjectParameter("Param_ItemTo", param_ItemTo)
                : new ObjectParameter("Param_ItemTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(short));

            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_AdjustInventory_CreateLinkInfo", param_ItemFromParameter, param_ItemToParameter,
                param_GroupFromParameter, param_GroupToParameter, param_StatusParameter, param_DataLinkIDParameter,
                param_dltAdjustInventoryParameter);
        }

        public virtual int Kompas_AdjustInventory_DeleteNulLines(string param_DataLinkID,
            Nullable<int> param_dltAdjustInventory, Nullable<double> param_CostPriceWarning,
            Nullable<bool> param_ShowCostPriceWarning, Nullable<double> param_ValueWarning,
            Nullable<bool> param_ShowValueWarning)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            var param_CostPriceWarningParameter = param_CostPriceWarning.HasValue
                ? new ObjectParameter("Param_CostPriceWarning", param_CostPriceWarning)
                : new ObjectParameter("Param_CostPriceWarning", typeof(double));

            var param_ShowCostPriceWarningParameter = param_ShowCostPriceWarning.HasValue
                ? new ObjectParameter("Param_ShowCostPriceWarning", param_ShowCostPriceWarning)
                : new ObjectParameter("Param_ShowCostPriceWarning", typeof(bool));

            var param_ValueWarningParameter = param_ValueWarning.HasValue
                ? new ObjectParameter("Param_ValueWarning", param_ValueWarning)
                : new ObjectParameter("Param_ValueWarning", typeof(double));

            var param_ShowValueWarningParameter = param_ShowValueWarning.HasValue
                ? new ObjectParameter("Param_ShowValueWarning", param_ShowValueWarning)
                : new ObjectParameter("Param_ShowValueWarning", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_AdjustInventory_DeleteNulLines", param_DataLinkIDParameter, param_dltAdjustInventoryParameter,
                param_CostPriceWarningParameter, param_ShowCostPriceWarningParameter, param_ValueWarningParameter,
                param_ShowValueWarningParameter);
        }

        public virtual int Kompas_AdjustInventory_Post(string param_DataLinkID, Nullable<int> param_dltAdjustInventory,
            Nullable<short> param_Language, Nullable<short> param_FillOption, Nullable<double> param_Percent,
            Nullable<System.DateTime> param_PostDate, Nullable<bool> param_AjourAccounts,
            Nullable<bool> param_UpdateSalesPrice, Nullable<short> param_InventoryStatus, string param_UserName,
            Nullable<System.DateTime> param_CurrentDate, Nullable<System.DateTime> param_DateTo,
            Nullable<bool> param_GroupByLocation, Nullable<bool> param_GroupByDepartment)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            var param_FillOptionParameter = param_FillOption.HasValue
                ? new ObjectParameter("Param_FillOption", param_FillOption)
                : new ObjectParameter("Param_FillOption", typeof(short));

            var param_PercentParameter = param_Percent.HasValue
                ? new ObjectParameter("Param_Percent", param_Percent)
                : new ObjectParameter("Param_Percent", typeof(double));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_AjourAccountsParameter = param_AjourAccounts.HasValue
                ? new ObjectParameter("Param_AjourAccounts", param_AjourAccounts)
                : new ObjectParameter("Param_AjourAccounts", typeof(bool));

            var param_UpdateSalesPriceParameter = param_UpdateSalesPrice.HasValue
                ? new ObjectParameter("Param_UpdateSalesPrice", param_UpdateSalesPrice)
                : new ObjectParameter("Param_UpdateSalesPrice", typeof(bool));

            var param_InventoryStatusParameter = param_InventoryStatus.HasValue
                ? new ObjectParameter("Param_InventoryStatus", param_InventoryStatus)
                : new ObjectParameter("Param_InventoryStatus", typeof(short));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_GroupByLocationParameter = param_GroupByLocation.HasValue
                ? new ObjectParameter("Param_GroupByLocation", param_GroupByLocation)
                : new ObjectParameter("Param_GroupByLocation", typeof(bool));

            var param_GroupByDepartmentParameter = param_GroupByDepartment.HasValue
                ? new ObjectParameter("Param_GroupByDepartment", param_GroupByDepartment)
                : new ObjectParameter("Param_GroupByDepartment", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AdjustInventory_Post",
                param_DataLinkIDParameter, param_dltAdjustInventoryParameter, param_LanguageParameter,
                param_FillOptionParameter, param_PercentParameter, param_PostDateParameter, param_AjourAccountsParameter,
                param_UpdateSalesPriceParameter, param_InventoryStatusParameter, param_UserNameParameter,
                param_CurrentDateParameter, param_DateToParameter, param_GroupByLocationParameter,
                param_GroupByDepartmentParameter);
        }

        public virtual int Kompas_AdjustInventorySalesDefrac(Nullable<decimal> sats)
        {
            var satsParameter = sats.HasValue
                ? new ObjectParameter("Sats", sats)
                : new ObjectParameter("Sats", typeof(decimal));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AdjustInventorySalesDefrac",
                satsParameter);
        }

        public virtual int Kompas_AllocateBOMItems(string item, Nullable<double> quantity)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_AllocateBOMItems", itemParameter,
                quantityParameter);
        }

        public virtual ObjectResult<string> Kompas_AuthorizeGetSupplierNameAndAddress(string param_Supplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_AuthorizeGetSupplierNameAndAddress", param_SupplierParameter);
        }

        public virtual int Kompas_BackOrder_CreateLinkInfo(string param_FromItem, string param_ToItem,
            string param_FromOrderNo, string param_ToOrderNo, string param_FromCustomer, string param_ToCustomer,
            string param_FromOrderStatus, string param_ToOrderStatus, string param_FromGrouping, string param_ToGrouping,
            string param_FromSupplier, string param_ToSupplier, string param_DataLinkID,
            Nullable<int> param_dltOrdersBackOrderItems, Nullable<int> param_dltOrdersBackOrderOrderLines)
        {
            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_FromCustomerParameter = param_FromCustomer != null
                ? new ObjectParameter("Param_FromCustomer", param_FromCustomer)
                : new ObjectParameter("Param_FromCustomer", typeof(string));

            var param_ToCustomerParameter = param_ToCustomer != null
                ? new ObjectParameter("Param_ToCustomer", param_ToCustomer)
                : new ObjectParameter("Param_ToCustomer", typeof(string));

            var param_FromOrderStatusParameter = param_FromOrderStatus != null
                ? new ObjectParameter("Param_FromOrderStatus", param_FromOrderStatus)
                : new ObjectParameter("Param_FromOrderStatus", typeof(string));

            var param_ToOrderStatusParameter = param_ToOrderStatus != null
                ? new ObjectParameter("Param_ToOrderStatus", param_ToOrderStatus)
                : new ObjectParameter("Param_ToOrderStatus", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromSupplierParameter = param_FromSupplier != null
                ? new ObjectParameter("Param_FromSupplier", param_FromSupplier)
                : new ObjectParameter("Param_FromSupplier", typeof(string));

            var param_ToSupplierParameter = param_ToSupplier != null
                ? new ObjectParameter("Param_ToSupplier", param_ToSupplier)
                : new ObjectParameter("Param_ToSupplier", typeof(string));

            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltOrdersBackOrderItemsParameter = param_dltOrdersBackOrderItems.HasValue
                ? new ObjectParameter("Param_dltOrdersBackOrderItems", param_dltOrdersBackOrderItems)
                : new ObjectParameter("Param_dltOrdersBackOrderItems", typeof(int));

            var param_dltOrdersBackOrderOrderLinesParameter = param_dltOrdersBackOrderOrderLines.HasValue
                ? new ObjectParameter("Param_dltOrdersBackOrderOrderLines", param_dltOrdersBackOrderOrderLines)
                : new ObjectParameter("Param_dltOrdersBackOrderOrderLines", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BackOrder_CreateLinkInfo",
                param_FromItemParameter, param_ToItemParameter, param_FromOrderNoParameter, param_ToOrderNoParameter,
                param_FromCustomerParameter, param_ToCustomerParameter, param_FromOrderStatusParameter,
                param_ToOrderStatusParameter, param_FromGroupingParameter, param_ToGroupingParameter,
                param_FromSupplierParameter, param_ToSupplierParameter, param_DataLinkIDParameter,
                param_dltOrdersBackOrderItemsParameter, param_dltOrdersBackOrderOrderLinesParameter);
        }

        public virtual int Kompas_BackOrder_UpdateOrderLines(string param_DataLinkID,
            Nullable<int> param_dltOrdersBackOrderOrderLines, string param_NewOrderStatus)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltOrdersBackOrderOrderLinesParameter = param_dltOrdersBackOrderOrderLines.HasValue
                ? new ObjectParameter("Param_dltOrdersBackOrderOrderLines", param_dltOrdersBackOrderOrderLines)
                : new ObjectParameter("Param_dltOrdersBackOrderOrderLines", typeof(int));

            var param_NewOrderStatusParameter = param_NewOrderStatus != null
                ? new ObjectParameter("Param_NewOrderStatus", param_NewOrderStatus)
                : new ObjectParameter("Param_NewOrderStatus", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BackOrder_UpdateOrderLines",
                param_DataLinkIDParameter, param_dltOrdersBackOrderOrderLinesParameter, param_NewOrderStatusParameter);
        }

        public virtual int Kompas_BalanceAgeingAllCustomers(string param_Groupfrom, string param_GroupTo,
            string param_CurrencyFrom, string param_CurrencyTo, Nullable<System.DateTime> param_ByDate,
            Nullable<bool> param_UseDueDate, Nullable<bool> param_NoZeroBalance, Nullable<bool> param_BalanceByCurrency,
            Nullable<bool> param_SortInNameOrder)
        {
            var param_GroupfromParameter = param_Groupfrom != null
                ? new ObjectParameter("Param_Groupfrom", param_Groupfrom)
                : new ObjectParameter("Param_Groupfrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_CurrencyFromParameter = param_CurrencyFrom != null
                ? new ObjectParameter("Param_CurrencyFrom", param_CurrencyFrom)
                : new ObjectParameter("Param_CurrencyFrom", typeof(string));

            var param_CurrencyToParameter = param_CurrencyTo != null
                ? new ObjectParameter("Param_CurrencyTo", param_CurrencyTo)
                : new ObjectParameter("Param_CurrencyTo", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_NoZeroBalanceParameter = param_NoZeroBalance.HasValue
                ? new ObjectParameter("Param_NoZeroBalance", param_NoZeroBalance)
                : new ObjectParameter("Param_NoZeroBalance", typeof(bool));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_SortInNameOrderParameter = param_SortInNameOrder.HasValue
                ? new ObjectParameter("Param_SortInNameOrder", param_SortInNameOrder)
                : new ObjectParameter("Param_SortInNameOrder", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BalanceAgeingAllCustomers",
                param_GroupfromParameter, param_GroupToParameter, param_CurrencyFromParameter, param_CurrencyToParameter,
                param_ByDateParameter, param_UseDueDateParameter, param_NoZeroBalanceParameter,
                param_BalanceByCurrencyParameter, param_SortInNameOrderParameter);
        }

        public virtual int Kompas_BalanceAgeingAlleRecords(Nullable<short> param_TP, Nullable<bool> param_UseID,
            string param_ID, string param_GroupFrom, string param_GroupTo, string param_CurrencyFrom,
            string param_CurrencyTo, Nullable<System.DateTime> param_ByDate, Nullable<bool> param_BalanceByCurrency,
            Nullable<bool> param_NoZeroBalance, Nullable<bool> param_SortInNameOrder, Nullable<byte> param_AgeingBy)
        {
            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(short));

            var param_UseIDParameter = param_UseID.HasValue
                ? new ObjectParameter("Param_UseID", param_UseID)
                : new ObjectParameter("Param_UseID", typeof(bool));

            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_CurrencyFromParameter = param_CurrencyFrom != null
                ? new ObjectParameter("Param_CurrencyFrom", param_CurrencyFrom)
                : new ObjectParameter("Param_CurrencyFrom", typeof(string));

            var param_CurrencyToParameter = param_CurrencyTo != null
                ? new ObjectParameter("Param_CurrencyTo", param_CurrencyTo)
                : new ObjectParameter("Param_CurrencyTo", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_NoZeroBalanceParameter = param_NoZeroBalance.HasValue
                ? new ObjectParameter("Param_NoZeroBalance", param_NoZeroBalance)
                : new ObjectParameter("Param_NoZeroBalance", typeof(bool));

            var param_SortInNameOrderParameter = param_SortInNameOrder.HasValue
                ? new ObjectParameter("Param_SortInNameOrder", param_SortInNameOrder)
                : new ObjectParameter("Param_SortInNameOrder", typeof(bool));

            var param_AgeingByParameter = param_AgeingBy.HasValue
                ? new ObjectParameter("Param_AgeingBy", param_AgeingBy)
                : new ObjectParameter("Param_AgeingBy", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BalanceAgeingAlleRecords",
                param_TPParameter, param_UseIDParameter, param_IDParameter, param_GroupFromParameter,
                param_GroupToParameter, param_CurrencyFromParameter, param_CurrencyToParameter, param_ByDateParameter,
                param_BalanceByCurrencyParameter, param_NoZeroBalanceParameter, param_SortInNameOrderParameter,
                param_AgeingByParameter);
        }

        public virtual int Kompas_BalanceAgeingAllSuppliers(string param_Groupfrom, string param_GroupTo,
            string param_CurrencyFrom, string param_CurrencyTo, Nullable<System.DateTime> param_ByDate,
            Nullable<bool> param_UseDueDate, Nullable<bool> param_NoZeroBalance, Nullable<bool> param_BalanceByCurrency,
            Nullable<bool> param_SortInNameOrder)
        {
            var param_GroupfromParameter = param_Groupfrom != null
                ? new ObjectParameter("Param_Groupfrom", param_Groupfrom)
                : new ObjectParameter("Param_Groupfrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_CurrencyFromParameter = param_CurrencyFrom != null
                ? new ObjectParameter("Param_CurrencyFrom", param_CurrencyFrom)
                : new ObjectParameter("Param_CurrencyFrom", typeof(string));

            var param_CurrencyToParameter = param_CurrencyTo != null
                ? new ObjectParameter("Param_CurrencyTo", param_CurrencyTo)
                : new ObjectParameter("Param_CurrencyTo", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_NoZeroBalanceParameter = param_NoZeroBalance.HasValue
                ? new ObjectParameter("Param_NoZeroBalance", param_NoZeroBalance)
                : new ObjectParameter("Param_NoZeroBalance", typeof(bool));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_SortInNameOrderParameter = param_SortInNameOrder.HasValue
                ? new ObjectParameter("Param_SortInNameOrder", param_SortInNameOrder)
                : new ObjectParameter("Param_SortInNameOrder", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BalanceAgeingAllSuppliers",
                param_GroupfromParameter, param_GroupToParameter, param_CurrencyFromParameter, param_CurrencyToParameter,
                param_ByDateParameter, param_UseDueDateParameter, param_NoZeroBalanceParameter,
                param_BalanceByCurrencyParameter, param_SortInNameOrderParameter);
        }

        public virtual ObjectResult<Kompas_BalanceAgeingSingleCustomersSuppliers_Result>
            Kompas_BalanceAgeingSingleCustomersSuppliers(string param_ID, Nullable<System.DateTime> param_ByDate,
                Nullable<bool> param_UseDueDate, Nullable<bool> param_BalanceByCurrency, Nullable<bool> param_Customers)
        {
            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_CustomersParameter = param_Customers.HasValue
                ? new ObjectParameter("Param_Customers", param_Customers)
                : new ObjectParameter("Param_Customers", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_BalanceAgeingSingleCustomersSuppliers_Result>(
                        "Kompas_BalanceAgeingSingleCustomersSuppliers", param_IDParameter, param_ByDateParameter,
                        param_UseDueDateParameter, param_BalanceByCurrencyParameter, param_CustomersParameter);
        }

        public virtual ObjectResult<Kompas_BalanceSheetGetAccountInfo_Result> Kompas_BalanceSheetGetAccountInfo()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_BalanceSheetGetAccountInfo_Result>(
                    "Kompas_BalanceSheetGetAccountInfo");
        }

        public virtual int Kompas_BigExecute()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BigExecute");
        }

        public virtual ObjectResult<Kompas_BillOfMaterial_GetTotalProces_Result> Kompas_BillOfMaterial_GetTotalProces(
            string param_MasterID)
        {
            var param_MasterIDParameter = param_MasterID != null
                ? new ObjectParameter("Param_MasterID", param_MasterID)
                : new ObjectParameter("Param_MasterID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_BillOfMaterial_GetTotalProces_Result>(
                        "Kompas_BillOfMaterial_GetTotalProces", param_MasterIDParameter);
        }

        public virtual int Kompas_BillOfMaterial_Update_Prices(string param_MasterID, Nullable<bool> updateSalesPrices,
            Nullable<bool> updateCostPrices)
        {
            var param_MasterIDParameter = param_MasterID != null
                ? new ObjectParameter("Param_MasterID", param_MasterID)
                : new ObjectParameter("Param_MasterID", typeof(string));

            var updateSalesPricesParameter = updateSalesPrices.HasValue
                ? new ObjectParameter("UpdateSalesPrices", updateSalesPrices)
                : new ObjectParameter("UpdateSalesPrices", typeof(bool));

            var updateCostPricesParameter = updateCostPrices.HasValue
                ? new ObjectParameter("UpdateCostPrices", updateCostPrices)
                : new ObjectParameter("UpdateCostPrices", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BillOfMaterial_Update_Prices",
                param_MasterIDParameter, updateSalesPricesParameter, updateCostPricesParameter);
        }

        public virtual int Kompas_BillOfMaterialInsertLine(string param_Master, Nullable<int> param_LineNo)
        {
            var param_MasterParameter = param_Master != null
                ? new ObjectParameter("Param_Master", param_Master)
                : new ObjectParameter("Param_Master", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BillOfMaterialInsertLine",
                param_MasterParameter, param_LineNoParameter);
        }

        public virtual int Kompas_BOM_POST_Check(string param_OrderNo, Nullable<int> param_LineID,
            Nullable<int> ordLineNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineIDParameter = param_LineID.HasValue
                ? new ObjectParameter("Param_LineID", param_LineID)
                : new ObjectParameter("Param_LineID", typeof(int));

            var ordLineNoParameter = ordLineNo.HasValue
                ? new ObjectParameter("OrdLineNo", ordLineNo)
                : new ObjectParameter("OrdLineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BOM_POST_Check",
                param_OrderNoParameter, param_LineIDParameter, ordLineNoParameter);
        }

        public virtual int Kompas_BOMProduction_Post(string param_UnikID1, Nullable<int> param_UnikID2,
            Nullable<double> param_BOM_Quantity, Nullable<System.DateTime> param_PostingDate, string param_Description,
            string param_UserName)
        {
            var param_UnikID1Parameter = param_UnikID1 != null
                ? new ObjectParameter("Param_UnikID1", param_UnikID1)
                : new ObjectParameter("Param_UnikID1", typeof(string));

            var param_UnikID2Parameter = param_UnikID2.HasValue
                ? new ObjectParameter("Param_UnikID2", param_UnikID2)
                : new ObjectParameter("Param_UnikID2", typeof(int));

            var param_BOM_QuantityParameter = param_BOM_Quantity.HasValue
                ? new ObjectParameter("Param_BOM_Quantity", param_BOM_Quantity)
                : new ObjectParameter("Param_BOM_Quantity", typeof(double));

            var param_PostingDateParameter = param_PostingDate.HasValue
                ? new ObjectParameter("Param_PostingDate", param_PostingDate)
                : new ObjectParameter("Param_PostingDate", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_BOMProduction_Post",
                param_UnikID1Parameter, param_UnikID2Parameter, param_BOM_QuantityParameter, param_PostingDateParameter,
                param_DescriptionParameter, param_UserNameParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_CalcAvancePrices(Nullable<byte> param_ReturnType,
            Nullable<double> param_CostPrice, Nullable<double> param_Avance, Nullable<double> param_Price)
        {
            var param_ReturnTypeParameter = param_ReturnType.HasValue
                ? new ObjectParameter("Param_ReturnType", param_ReturnType)
                : new ObjectParameter("Param_ReturnType", typeof(byte));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_AvanceParameter = param_Avance.HasValue
                ? new ObjectParameter("Param_Avance", param_Avance)
                : new ObjectParameter("Param_Avance", typeof(double));

            var param_PriceParameter = param_Price.HasValue
                ? new ObjectParameter("Param_Price", param_Price)
                : new ObjectParameter("Param_Price", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_CalcAvancePrices", param_ReturnTypeParameter, param_CostPriceParameter,
                    param_AvanceParameter, param_PriceParameter);
        }

        public virtual ObjectResult<Nullable<System.DateTime>> Kompas_CalcNewSubNextDate(
            Nullable<System.DateTime> param_Date, string param_Intervals)
        {
            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_IntervalsParameter = param_Intervals != null
                ? new ObjectParameter("Param_Intervals", param_Intervals)
                : new ObjectParameter("Param_Intervals", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>(
                    "Kompas_CalcNewSubNextDate", param_DateParameter, param_IntervalsParameter);
        }

        public virtual int Kompas_CAPS_ImportDetailLines(string journal, string line, Nullable<bool> isTotalLine,
            Nullable<short> text_language, string current_userid, ObjectParameter return_Customer,
            ObjectParameter return_Amount, ObjectParameter return_Currency, ObjectParameter voucher)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var lineParameter = line != null
                ? new ObjectParameter("Line", line)
                : new ObjectParameter("Line", typeof(string));

            var isTotalLineParameter = isTotalLine.HasValue
                ? new ObjectParameter("IsTotalLine", isTotalLine)
                : new ObjectParameter("IsTotalLine", typeof(bool));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_CAPS_ImportDetailLines",
                journalParameter, lineParameter, isTotalLineParameter, text_languageParameter, current_useridParameter,
                return_Customer, return_Amount, return_Currency, voucher);
        }

        public virtual int Kompas_ChangeSerialNo(string item, string supplier, string serialNoFrom, string serialNoTo,
            string remarks)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var serialNoFromParameter = serialNoFrom != null
                ? new ObjectParameter("SerialNoFrom", serialNoFrom)
                : new ObjectParameter("SerialNoFrom", typeof(string));

            var serialNoToParameter = serialNoTo != null
                ? new ObjectParameter("SerialNoTo", serialNoTo)
                : new ObjectParameter("SerialNoTo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ChangeSerialNo", itemParameter,
                supplierParameter, serialNoFromParameter, serialNoToParameter, remarksParameter);
        }

        public virtual int Kompas_ChangeValuesInOptions(string table_Name, string column_Name, string from_Value,
            string to_Value)
        {
            var table_NameParameter = table_Name != null
                ? new ObjectParameter("Table_Name", table_Name)
                : new ObjectParameter("Table_Name", typeof(string));

            var column_NameParameter = column_Name != null
                ? new ObjectParameter("Column_Name", column_Name)
                : new ObjectParameter("Column_Name", typeof(string));

            var from_ValueParameter = from_Value != null
                ? new ObjectParameter("From_Value", from_Value)
                : new ObjectParameter("From_Value", typeof(string));

            var to_ValueParameter = to_Value != null
                ? new ObjectParameter("To_Value", to_Value)
                : new ObjectParameter("To_Value", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ChangeValuesInOptions",
                table_NameParameter, column_NameParameter, from_ValueParameter, to_ValueParameter);
        }

        public virtual int Kompas_CheckAndCreateTrail()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_CheckAndCreateTrail");
        }

        public virtual ObjectResult<Nullable<int>> Kompas_CheckDBSize(string userName)
        {
            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>("Kompas_CheckDBSize",
                userNameParameter);
        }

        public virtual int Kompas_CheckForExistingJournal(string journal, Nullable<int> module)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var moduleParameter = module.HasValue
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_CheckForExistingJournal",
                journalParameter, moduleParameter);
        }

        public virtual ObjectResult<Kompas_CheckTotalDBData_Result> Kompas_CheckTotalDBData()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_CheckTotalDBData_Result>(
                    "Kompas_CheckTotalDBData");
        }

        public virtual int Kompas_CostCenterGroup_MoveSelected(string keyField, Nullable<bool> moveUp)
        {
            var keyFieldParameter = keyField != null
                ? new ObjectParameter("KeyField", keyField)
                : new ObjectParameter("KeyField", typeof(string));

            var moveUpParameter = moveUp.HasValue
                ? new ObjectParameter("MoveUp", moveUp)
                : new ObjectParameter("MoveUp", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_CostCenterGroup_MoveSelected",
                keyFieldParameter, moveUpParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_Create_EAN_Parameter(string item)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_Create_EAN_Parameter", itemParameter);
        }

        public virtual int Kompas_CreateUpdate_PublicProcedure()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_CreateUpdate_PublicProcedure");
        }

        public virtual int Kompas_CreateUpdate_PublicProcedure_User(string sPName, string s1, string s2, string s3,
            string s4, string s5, string s6, string s7, string s8, string s9, string s10, string s11, string s12,
            string s13, string s14, string s15, string s16, string s17, string s18, string s19, string s20)
        {
            var sPNameParameter = sPName != null
                ? new ObjectParameter("SPName", sPName)
                : new ObjectParameter("SPName", typeof(string));

            var s1Parameter = s1 != null
                ? new ObjectParameter("S1", s1)
                : new ObjectParameter("S1", typeof(string));

            var s2Parameter = s2 != null
                ? new ObjectParameter("S2", s2)
                : new ObjectParameter("S2", typeof(string));

            var s3Parameter = s3 != null
                ? new ObjectParameter("S3", s3)
                : new ObjectParameter("S3", typeof(string));

            var s4Parameter = s4 != null
                ? new ObjectParameter("S4", s4)
                : new ObjectParameter("S4", typeof(string));

            var s5Parameter = s5 != null
                ? new ObjectParameter("S5", s5)
                : new ObjectParameter("S5", typeof(string));

            var s6Parameter = s6 != null
                ? new ObjectParameter("S6", s6)
                : new ObjectParameter("S6", typeof(string));

            var s7Parameter = s7 != null
                ? new ObjectParameter("S7", s7)
                : new ObjectParameter("S7", typeof(string));

            var s8Parameter = s8 != null
                ? new ObjectParameter("S8", s8)
                : new ObjectParameter("S8", typeof(string));

            var s9Parameter = s9 != null
                ? new ObjectParameter("S9", s9)
                : new ObjectParameter("S9", typeof(string));

            var s10Parameter = s10 != null
                ? new ObjectParameter("S10", s10)
                : new ObjectParameter("S10", typeof(string));

            var s11Parameter = s11 != null
                ? new ObjectParameter("S11", s11)
                : new ObjectParameter("S11", typeof(string));

            var s12Parameter = s12 != null
                ? new ObjectParameter("S12", s12)
                : new ObjectParameter("S12", typeof(string));

            var s13Parameter = s13 != null
                ? new ObjectParameter("S13", s13)
                : new ObjectParameter("S13", typeof(string));

            var s14Parameter = s14 != null
                ? new ObjectParameter("S14", s14)
                : new ObjectParameter("S14", typeof(string));

            var s15Parameter = s15 != null
                ? new ObjectParameter("S15", s15)
                : new ObjectParameter("S15", typeof(string));

            var s16Parameter = s16 != null
                ? new ObjectParameter("S16", s16)
                : new ObjectParameter("S16", typeof(string));

            var s17Parameter = s17 != null
                ? new ObjectParameter("S17", s17)
                : new ObjectParameter("S17", typeof(string));

            var s18Parameter = s18 != null
                ? new ObjectParameter("S18", s18)
                : new ObjectParameter("S18", typeof(string));

            var s19Parameter = s19 != null
                ? new ObjectParameter("S19", s19)
                : new ObjectParameter("S19", typeof(string));

            var s20Parameter = s20 != null
                ? new ObjectParameter("S20", s20)
                : new ObjectParameter("S20", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_CreateUpdate_PublicProcedure_User", sPNameParameter, s1Parameter, s2Parameter, s3Parameter,
                    s4Parameter, s5Parameter, s6Parameter, s7Parameter, s8Parameter, s9Parameter, s10Parameter,
                    s11Parameter, s12Parameter, s13Parameter, s14Parameter, s15Parameter, s16Parameter, s17Parameter,
                    s18Parameter, s19Parameter, s20Parameter);
        }

        public virtual int Kompas_CustomerInterest_CreateEntries(string param_CustomerFrom, string param_CustomerTo,
            string param_GroupFrom, string param_GroupTo, string param_InterestFrom, string param_InterestTo,
            Nullable<double> param_MinInterest, Nullable<System.DateTime> param_MadeUpDate,
            Nullable<System.DateTime> param_StartFromDate, Nullable<bool> param_NoInterestOnPrimoBalance,
            Nullable<byte> param_InterestMethod, Nullable<bool> param_IgnoreMinValues)
        {
            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_InterestFromParameter = param_InterestFrom != null
                ? new ObjectParameter("Param_InterestFrom", param_InterestFrom)
                : new ObjectParameter("Param_InterestFrom", typeof(string));

            var param_InterestToParameter = param_InterestTo != null
                ? new ObjectParameter("Param_InterestTo", param_InterestTo)
                : new ObjectParameter("Param_InterestTo", typeof(string));

            var param_MinInterestParameter = param_MinInterest.HasValue
                ? new ObjectParameter("Param_MinInterest", param_MinInterest)
                : new ObjectParameter("Param_MinInterest", typeof(double));

            var param_MadeUpDateParameter = param_MadeUpDate.HasValue
                ? new ObjectParameter("Param_MadeUpDate", param_MadeUpDate)
                : new ObjectParameter("Param_MadeUpDate", typeof(System.DateTime));

            var param_StartFromDateParameter = param_StartFromDate.HasValue
                ? new ObjectParameter("Param_StartFromDate", param_StartFromDate)
                : new ObjectParameter("Param_StartFromDate", typeof(System.DateTime));

            var param_NoInterestOnPrimoBalanceParameter = param_NoInterestOnPrimoBalance.HasValue
                ? new ObjectParameter("Param_NoInterestOnPrimoBalance", param_NoInterestOnPrimoBalance)
                : new ObjectParameter("Param_NoInterestOnPrimoBalance", typeof(bool));

            var param_InterestMethodParameter = param_InterestMethod.HasValue
                ? new ObjectParameter("Param_InterestMethod", param_InterestMethod)
                : new ObjectParameter("Param_InterestMethod", typeof(byte));

            var param_IgnoreMinValuesParameter = param_IgnoreMinValues.HasValue
                ? new ObjectParameter("Param_IgnoreMinValues", param_IgnoreMinValues)
                : new ObjectParameter("Param_IgnoreMinValues", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_CustomerInterest_CreateEntries", param_CustomerFromParameter, param_CustomerToParameter,
                param_GroupFromParameter, param_GroupToParameter, param_InterestFromParameter, param_InterestToParameter,
                param_MinInterestParameter, param_MadeUpDateParameter, param_StartFromDateParameter,
                param_NoInterestOnPrimoBalanceParameter, param_InterestMethodParameter, param_IgnoreMinValuesParameter);
        }

        public virtual ObjectResult<Kompas_CustomerInterest_GetEntries_Result> Kompas_CustomerInterest_GetEntries(
            Nullable<bool> param_SortByName, Nullable<System.DateTime> param_MadeUpDate)
        {
            var param_SortByNameParameter = param_SortByName.HasValue
                ? new ObjectParameter("Param_SortByName", param_SortByName)
                : new ObjectParameter("Param_SortByName", typeof(bool));

            var param_MadeUpDateParameter = param_MadeUpDate.HasValue
                ? new ObjectParameter("Param_MadeUpDate", param_MadeUpDate)
                : new ObjectParameter("Param_MadeUpDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_CustomerInterest_GetEntries_Result>(
                    "Kompas_CustomerInterest_GetEntries", param_SortByNameParameter, param_MadeUpDateParameter);
        }

        public virtual ObjectResult<string> Kompas_CustomerPaymentService_DanFil(string host)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_CustomerPaymentService_DanFil", hostParameter);
        }

        public virtual ObjectResult<Kompas_CustomerPaymentService_Get_Result> Kompas_CustomerPaymentService_Get(
            Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue
                ? new ObjectParameter("FromDate", fromDate)
                : new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue
                ? new ObjectParameter("ToDate", toDate)
                : new ObjectParameter("ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_CustomerPaymentService_Get_Result>(
                    "Kompas_CustomerPaymentService_Get", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<string> Kompas_CustomerPaymentService_Import(Nullable<int> lineno, string data)
        {
            var linenoParameter = lineno.HasValue
                ? new ObjectParameter("lineno", lineno)
                : new ObjectParameter("lineno", typeof(int));

            var dataParameter = data != null
                ? new ObjectParameter("data", data)
                : new ObjectParameter("data", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_CustomerPaymentService_Import", linenoParameter, dataParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_CustomerPaymentService_Test(Nullable<System.DateTime> dueDate)
        {
            var dueDateParameter = dueDate.HasValue
                ? new ObjectParameter("DueDate", dueDate)
                : new ObjectParameter("DueDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_CustomerPaymentService_Test", dueDateParameter);
        }

        public virtual int Kompas_Customers_AddNew(string param_Customer, string param_UserID, string param_Name,
            string param_Address1, string param_Address2, string param_Address3, string param_City,
            string param_PostalCode, string param_Country, string param_Contact, string param_Phone, string param_Fax,
            string param_Mobile, string param_InvoiceTo, string param_PriceList, string param_Category,
            string param_SalesRep, string param_Delivery, string param_Payment, string param_Giro, string param_Tax,
            string param_TaxNo, Nullable<double> param_CreditLimit, string param_Grouping, string param_Currency,
            string param_Language, string param_Interest, string param_Agent, string param_Reports,
            string param_Department, string param_CostCenter, string param_Purpose, string param_Project,
            Nullable<short> param_Allocate, Nullable<short> param_Blocked, string param_Remarks,
            Nullable<short> param_Link, string param_Email, string param_InterNet, Nullable<short> param_EECCountry,
            Nullable<byte> param_EECTransCode, Nullable<double> param_EndDiscPct, string param_Bank, string param_ShipTo,
            string param_Ship1, string param_Ship2, string param_Ship3, string param_ShipPostalCode,
            string param_ShipCityName, string param_Ship5, string param_Ship6, string param_Ship7,
            string param_OptionalText1, string param_OptionalText2, string param_OptionalText3,
            string param_OptionalText4, string param_OptionalText5, string param_OptionalText6,
            string param_OptionalText7, string param_OptionalText8, Nullable<double> param_OptionalNumber1,
            Nullable<double> param_OptionalNumber2, Nullable<double> param_OptionalNumber3,
            Nullable<double> param_OptionalNumber4, Nullable<double> param_OptionalNumber5,
            Nullable<double> param_OptionalNumber6, Nullable<double> param_OptionalNumber7,
            Nullable<double> param_OptionalNumber8, Nullable<short> param_Optional1, Nullable<short> param_Optional2,
            Nullable<short> param_Optional3, Nullable<short> param_Optional4, Nullable<short> param_Optional5,
            Nullable<short> param_Optional6, Nullable<short> param_Optional7, Nullable<short> param_Optional8,
            string param_CashDiscount, Nullable<System.DateTime> param_OptionalDate1,
            Nullable<System.DateTime> param_OptionalDate2, Nullable<System.DateTime> param_OptionalDate3,
            Nullable<System.DateTime> param_OptionalDate4, Nullable<System.DateTime> param_OptionalDate5,
            Nullable<System.DateTime> param_OptionalDate6, Nullable<System.DateTime> param_OptionalDate7,
            Nullable<System.DateTime> param_OptionalDate8)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            var param_Address1Parameter = param_Address1 != null
                ? new ObjectParameter("Param_Address1", param_Address1)
                : new ObjectParameter("Param_Address1", typeof(string));

            var param_Address2Parameter = param_Address2 != null
                ? new ObjectParameter("Param_Address2", param_Address2)
                : new ObjectParameter("Param_Address2", typeof(string));

            var param_Address3Parameter = param_Address3 != null
                ? new ObjectParameter("Param_Address3", param_Address3)
                : new ObjectParameter("Param_Address3", typeof(string));

            var param_CityParameter = param_City != null
                ? new ObjectParameter("Param_City", param_City)
                : new ObjectParameter("Param_City", typeof(string));

            var param_PostalCodeParameter = param_PostalCode != null
                ? new ObjectParameter("Param_PostalCode", param_PostalCode)
                : new ObjectParameter("Param_PostalCode", typeof(string));

            var param_CountryParameter = param_Country != null
                ? new ObjectParameter("Param_Country", param_Country)
                : new ObjectParameter("Param_Country", typeof(string));

            var param_ContactParameter = param_Contact != null
                ? new ObjectParameter("Param_Contact", param_Contact)
                : new ObjectParameter("Param_Contact", typeof(string));

            var param_PhoneParameter = param_Phone != null
                ? new ObjectParameter("Param_Phone", param_Phone)
                : new ObjectParameter("Param_Phone", typeof(string));

            var param_FaxParameter = param_Fax != null
                ? new ObjectParameter("Param_Fax", param_Fax)
                : new ObjectParameter("Param_Fax", typeof(string));

            var param_MobileParameter = param_Mobile != null
                ? new ObjectParameter("Param_Mobile", param_Mobile)
                : new ObjectParameter("Param_Mobile", typeof(string));

            var param_InvoiceToParameter = param_InvoiceTo != null
                ? new ObjectParameter("Param_InvoiceTo", param_InvoiceTo)
                : new ObjectParameter("Param_InvoiceTo", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_CategoryParameter = param_Category != null
                ? new ObjectParameter("Param_Category", param_Category)
                : new ObjectParameter("Param_Category", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            var param_DeliveryParameter = param_Delivery != null
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(string));

            var param_PaymentParameter = param_Payment != null
                ? new ObjectParameter("Param_Payment", param_Payment)
                : new ObjectParameter("Param_Payment", typeof(string));

            var param_GiroParameter = param_Giro != null
                ? new ObjectParameter("Param_Giro", param_Giro)
                : new ObjectParameter("Param_Giro", typeof(string));

            var param_TaxParameter = param_Tax != null
                ? new ObjectParameter("Param_Tax", param_Tax)
                : new ObjectParameter("Param_Tax", typeof(string));

            var param_TaxNoParameter = param_TaxNo != null
                ? new ObjectParameter("Param_TaxNo", param_TaxNo)
                : new ObjectParameter("Param_TaxNo", typeof(string));

            var param_CreditLimitParameter = param_CreditLimit.HasValue
                ? new ObjectParameter("Param_CreditLimit", param_CreditLimit)
                : new ObjectParameter("Param_CreditLimit", typeof(double));

            var param_GroupingParameter = param_Grouping != null
                ? new ObjectParameter("Param_Grouping", param_Grouping)
                : new ObjectParameter("Param_Grouping", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_LanguageParameter = param_Language != null
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(string));

            var param_InterestParameter = param_Interest != null
                ? new ObjectParameter("Param_Interest", param_Interest)
                : new ObjectParameter("Param_Interest", typeof(string));

            var param_AgentParameter = param_Agent != null
                ? new ObjectParameter("Param_Agent", param_Agent)
                : new ObjectParameter("Param_Agent", typeof(string));

            var param_ReportsParameter = param_Reports != null
                ? new ObjectParameter("Param_Reports", param_Reports)
                : new ObjectParameter("Param_Reports", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_AllocateParameter = param_Allocate.HasValue
                ? new ObjectParameter("Param_Allocate", param_Allocate)
                : new ObjectParameter("Param_Allocate", typeof(short));

            var param_BlockedParameter = param_Blocked.HasValue
                ? new ObjectParameter("Param_Blocked", param_Blocked)
                : new ObjectParameter("Param_Blocked", typeof(short));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_LinkParameter = param_Link.HasValue
                ? new ObjectParameter("Param_Link", param_Link)
                : new ObjectParameter("Param_Link", typeof(short));

            var param_EmailParameter = param_Email != null
                ? new ObjectParameter("Param_Email", param_Email)
                : new ObjectParameter("Param_Email", typeof(string));

            var param_InterNetParameter = param_InterNet != null
                ? new ObjectParameter("Param_InterNet", param_InterNet)
                : new ObjectParameter("Param_InterNet", typeof(string));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            var param_EECTransCodeParameter = param_EECTransCode.HasValue
                ? new ObjectParameter("Param_EECTransCode", param_EECTransCode)
                : new ObjectParameter("Param_EECTransCode", typeof(byte));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_BankParameter = param_Bank != null
                ? new ObjectParameter("Param_Bank", param_Bank)
                : new ObjectParameter("Param_Bank", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_ShipPostalCodeParameter = param_ShipPostalCode != null
                ? new ObjectParameter("Param_ShipPostalCode", param_ShipPostalCode)
                : new ObjectParameter("Param_ShipPostalCode", typeof(string));

            var param_ShipCityNameParameter = param_ShipCityName != null
                ? new ObjectParameter("Param_ShipCityName", param_ShipCityName)
                : new ObjectParameter("Param_ShipCityName", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_Ship6Parameter = param_Ship6 != null
                ? new ObjectParameter("Param_Ship6", param_Ship6)
                : new ObjectParameter("Param_Ship6", typeof(string));

            var param_Ship7Parameter = param_Ship7 != null
                ? new ObjectParameter("Param_Ship7", param_Ship7)
                : new ObjectParameter("Param_Ship7", typeof(string));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            var param_CashDiscountParameter = param_CashDiscount != null
                ? new ObjectParameter("Param_CashDiscount", param_CashDiscount)
                : new ObjectParameter("Param_CashDiscount", typeof(string));

            var param_OptionalDate1Parameter = param_OptionalDate1.HasValue
                ? new ObjectParameter("Param_OptionalDate1", param_OptionalDate1)
                : new ObjectParameter("Param_OptionalDate1", typeof(System.DateTime));

            var param_OptionalDate2Parameter = param_OptionalDate2.HasValue
                ? new ObjectParameter("Param_OptionalDate2", param_OptionalDate2)
                : new ObjectParameter("Param_OptionalDate2", typeof(System.DateTime));

            var param_OptionalDate3Parameter = param_OptionalDate3.HasValue
                ? new ObjectParameter("Param_OptionalDate3", param_OptionalDate3)
                : new ObjectParameter("Param_OptionalDate3", typeof(System.DateTime));

            var param_OptionalDate4Parameter = param_OptionalDate4.HasValue
                ? new ObjectParameter("Param_OptionalDate4", param_OptionalDate4)
                : new ObjectParameter("Param_OptionalDate4", typeof(System.DateTime));

            var param_OptionalDate5Parameter = param_OptionalDate5.HasValue
                ? new ObjectParameter("Param_OptionalDate5", param_OptionalDate5)
                : new ObjectParameter("Param_OptionalDate5", typeof(System.DateTime));

            var param_OptionalDate6Parameter = param_OptionalDate6.HasValue
                ? new ObjectParameter("Param_OptionalDate6", param_OptionalDate6)
                : new ObjectParameter("Param_OptionalDate6", typeof(System.DateTime));

            var param_OptionalDate7Parameter = param_OptionalDate7.HasValue
                ? new ObjectParameter("Param_OptionalDate7", param_OptionalDate7)
                : new ObjectParameter("Param_OptionalDate7", typeof(System.DateTime));

            var param_OptionalDate8Parameter = param_OptionalDate8.HasValue
                ? new ObjectParameter("Param_OptionalDate8", param_OptionalDate8)
                : new ObjectParameter("Param_OptionalDate8", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Customers_AddNew",
                param_CustomerParameter, param_UserIDParameter, param_NameParameter, param_Address1Parameter,
                param_Address2Parameter, param_Address3Parameter, param_CityParameter, param_PostalCodeParameter,
                param_CountryParameter, param_ContactParameter, param_PhoneParameter, param_FaxParameter,
                param_MobileParameter, param_InvoiceToParameter, param_PriceListParameter, param_CategoryParameter,
                param_SalesRepParameter, param_DeliveryParameter, param_PaymentParameter, param_GiroParameter,
                param_TaxParameter, param_TaxNoParameter, param_CreditLimitParameter, param_GroupingParameter,
                param_CurrencyParameter, param_LanguageParameter, param_InterestParameter, param_AgentParameter,
                param_ReportsParameter, param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter,
                param_ProjectParameter, param_AllocateParameter, param_BlockedParameter, param_RemarksParameter,
                param_LinkParameter, param_EmailParameter, param_InterNetParameter, param_EECCountryParameter,
                param_EECTransCodeParameter, param_EndDiscPctParameter, param_BankParameter, param_ShipToParameter,
                param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter, param_ShipPostalCodeParameter,
                param_ShipCityNameParameter, param_Ship5Parameter, param_Ship6Parameter, param_Ship7Parameter,
                param_OptionalText1Parameter, param_OptionalText2Parameter, param_OptionalText3Parameter,
                param_OptionalText4Parameter, param_OptionalText5Parameter, param_OptionalText6Parameter,
                param_OptionalText7Parameter, param_OptionalText8Parameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalNumber3Parameter, param_OptionalNumber4Parameter,
                param_OptionalNumber5Parameter, param_OptionalNumber6Parameter, param_OptionalNumber7Parameter,
                param_OptionalNumber8Parameter, param_Optional1Parameter, param_Optional2Parameter,
                param_Optional3Parameter, param_Optional4Parameter, param_Optional5Parameter, param_Optional6Parameter,
                param_Optional7Parameter, param_Optional8Parameter, param_CashDiscountParameter,
                param_OptionalDate1Parameter, param_OptionalDate2Parameter, param_OptionalDate3Parameter,
                param_OptionalDate4Parameter, param_OptionalDate5Parameter, param_OptionalDate6Parameter,
                param_OptionalDate7Parameter, param_OptionalDate8Parameter);
        }

        public virtual ObjectResult<Kompas_Customers_MayDelete_Result> Kompas_Customers_MayDelete(string param_Customer)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Customers_MayDelete_Result>(
                    "Kompas_Customers_MayDelete", param_CustomerParameter);
        }

        public virtual int Kompas_Customers_Update(string param_Customer, string param_UserID, string param_Name,
            string param_Address1, string param_Address2, string param_Address3, string param_City,
            string param_PostalCode, string param_Country, string param_Contact, string param_Phone, string param_Fax,
            string param_Mobile, string param_InvoiceTo, string param_PriceList, string param_Category,
            string param_SalesRep, string param_Delivery, string param_Payment, string param_Giro, string param_Tax,
            string param_TaxNo, Nullable<double> param_CreditLimit, string param_Grouping, string param_Currency,
            string param_Language, string param_Interest, string param_Agent, string param_Reports,
            string param_Department, string param_CostCenter, string param_Purpose, string param_Project,
            Nullable<short> param_Allocate, Nullable<short> param_Blocked, string param_Remarks,
            Nullable<short> param_Link, string param_Email, string param_InterNet, Nullable<short> param_EECCountry,
            Nullable<byte> param_EECTransCode, Nullable<double> param_EndDiscPct, string param_Bank, string param_ShipTo,
            string param_Ship1, string param_Ship2, string param_Ship3, string param_ShipPostalCode,
            string param_ShipCityName, string param_Ship5, string param_Ship6, string param_Ship7,
            string param_OptionalText1, string param_OptionalText2, string param_OptionalText3,
            string param_OptionalText4, string param_OptionalText5, string param_OptionalText6,
            string param_OptionalText7, string param_OptionalText8, Nullable<double> param_OptionalNumber1,
            Nullable<double> param_OptionalNumber2, Nullable<double> param_OptionalNumber3,
            Nullable<double> param_OptionalNumber4, Nullable<double> param_OptionalNumber5,
            Nullable<double> param_OptionalNumber6, Nullable<double> param_OptionalNumber7,
            Nullable<double> param_OptionalNumber8, Nullable<short> param_Optional1, Nullable<short> param_Optional2,
            Nullable<short> param_Optional3, Nullable<short> param_Optional4, Nullable<short> param_Optional5,
            Nullable<short> param_Optional6, Nullable<short> param_Optional7, Nullable<short> param_Optional8,
            string param_CashDiscount, Nullable<System.DateTime> param_OptionalDate1,
            Nullable<System.DateTime> param_OptionalDate2, Nullable<System.DateTime> param_OptionalDate3,
            Nullable<System.DateTime> param_OptionalDate4, Nullable<System.DateTime> param_OptionalDate5,
            Nullable<System.DateTime> param_OptionalDate6, Nullable<System.DateTime> param_OptionalDate7,
            Nullable<System.DateTime> param_OptionalDate8)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            var param_Address1Parameter = param_Address1 != null
                ? new ObjectParameter("Param_Address1", param_Address1)
                : new ObjectParameter("Param_Address1", typeof(string));

            var param_Address2Parameter = param_Address2 != null
                ? new ObjectParameter("Param_Address2", param_Address2)
                : new ObjectParameter("Param_Address2", typeof(string));

            var param_Address3Parameter = param_Address3 != null
                ? new ObjectParameter("Param_Address3", param_Address3)
                : new ObjectParameter("Param_Address3", typeof(string));

            var param_CityParameter = param_City != null
                ? new ObjectParameter("Param_City", param_City)
                : new ObjectParameter("Param_City", typeof(string));

            var param_PostalCodeParameter = param_PostalCode != null
                ? new ObjectParameter("Param_PostalCode", param_PostalCode)
                : new ObjectParameter("Param_PostalCode", typeof(string));

            var param_CountryParameter = param_Country != null
                ? new ObjectParameter("Param_Country", param_Country)
                : new ObjectParameter("Param_Country", typeof(string));

            var param_ContactParameter = param_Contact != null
                ? new ObjectParameter("Param_Contact", param_Contact)
                : new ObjectParameter("Param_Contact", typeof(string));

            var param_PhoneParameter = param_Phone != null
                ? new ObjectParameter("Param_Phone", param_Phone)
                : new ObjectParameter("Param_Phone", typeof(string));

            var param_FaxParameter = param_Fax != null
                ? new ObjectParameter("Param_Fax", param_Fax)
                : new ObjectParameter("Param_Fax", typeof(string));

            var param_MobileParameter = param_Mobile != null
                ? new ObjectParameter("Param_Mobile", param_Mobile)
                : new ObjectParameter("Param_Mobile", typeof(string));

            var param_InvoiceToParameter = param_InvoiceTo != null
                ? new ObjectParameter("Param_InvoiceTo", param_InvoiceTo)
                : new ObjectParameter("Param_InvoiceTo", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_CategoryParameter = param_Category != null
                ? new ObjectParameter("Param_Category", param_Category)
                : new ObjectParameter("Param_Category", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            var param_DeliveryParameter = param_Delivery != null
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(string));

            var param_PaymentParameter = param_Payment != null
                ? new ObjectParameter("Param_Payment", param_Payment)
                : new ObjectParameter("Param_Payment", typeof(string));

            var param_GiroParameter = param_Giro != null
                ? new ObjectParameter("Param_Giro", param_Giro)
                : new ObjectParameter("Param_Giro", typeof(string));

            var param_TaxParameter = param_Tax != null
                ? new ObjectParameter("Param_Tax", param_Tax)
                : new ObjectParameter("Param_Tax", typeof(string));

            var param_TaxNoParameter = param_TaxNo != null
                ? new ObjectParameter("Param_TaxNo", param_TaxNo)
                : new ObjectParameter("Param_TaxNo", typeof(string));

            var param_CreditLimitParameter = param_CreditLimit.HasValue
                ? new ObjectParameter("Param_CreditLimit", param_CreditLimit)
                : new ObjectParameter("Param_CreditLimit", typeof(double));

            var param_GroupingParameter = param_Grouping != null
                ? new ObjectParameter("Param_Grouping", param_Grouping)
                : new ObjectParameter("Param_Grouping", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_LanguageParameter = param_Language != null
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(string));

            var param_InterestParameter = param_Interest != null
                ? new ObjectParameter("Param_Interest", param_Interest)
                : new ObjectParameter("Param_Interest", typeof(string));

            var param_AgentParameter = param_Agent != null
                ? new ObjectParameter("Param_Agent", param_Agent)
                : new ObjectParameter("Param_Agent", typeof(string));

            var param_ReportsParameter = param_Reports != null
                ? new ObjectParameter("Param_Reports", param_Reports)
                : new ObjectParameter("Param_Reports", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_AllocateParameter = param_Allocate.HasValue
                ? new ObjectParameter("Param_Allocate", param_Allocate)
                : new ObjectParameter("Param_Allocate", typeof(short));

            var param_BlockedParameter = param_Blocked.HasValue
                ? new ObjectParameter("Param_Blocked", param_Blocked)
                : new ObjectParameter("Param_Blocked", typeof(short));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_LinkParameter = param_Link.HasValue
                ? new ObjectParameter("Param_Link", param_Link)
                : new ObjectParameter("Param_Link", typeof(short));

            var param_EmailParameter = param_Email != null
                ? new ObjectParameter("Param_Email", param_Email)
                : new ObjectParameter("Param_Email", typeof(string));

            var param_InterNetParameter = param_InterNet != null
                ? new ObjectParameter("Param_InterNet", param_InterNet)
                : new ObjectParameter("Param_InterNet", typeof(string));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            var param_EECTransCodeParameter = param_EECTransCode.HasValue
                ? new ObjectParameter("Param_EECTransCode", param_EECTransCode)
                : new ObjectParameter("Param_EECTransCode", typeof(byte));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_BankParameter = param_Bank != null
                ? new ObjectParameter("Param_Bank", param_Bank)
                : new ObjectParameter("Param_Bank", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_ShipPostalCodeParameter = param_ShipPostalCode != null
                ? new ObjectParameter("Param_ShipPostalCode", param_ShipPostalCode)
                : new ObjectParameter("Param_ShipPostalCode", typeof(string));

            var param_ShipCityNameParameter = param_ShipCityName != null
                ? new ObjectParameter("Param_ShipCityName", param_ShipCityName)
                : new ObjectParameter("Param_ShipCityName", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_Ship6Parameter = param_Ship6 != null
                ? new ObjectParameter("Param_Ship6", param_Ship6)
                : new ObjectParameter("Param_Ship6", typeof(string));

            var param_Ship7Parameter = param_Ship7 != null
                ? new ObjectParameter("Param_Ship7", param_Ship7)
                : new ObjectParameter("Param_Ship7", typeof(string));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            var param_CashDiscountParameter = param_CashDiscount != null
                ? new ObjectParameter("Param_CashDiscount", param_CashDiscount)
                : new ObjectParameter("Param_CashDiscount", typeof(string));

            var param_OptionalDate1Parameter = param_OptionalDate1.HasValue
                ? new ObjectParameter("Param_OptionalDate1", param_OptionalDate1)
                : new ObjectParameter("Param_OptionalDate1", typeof(System.DateTime));

            var param_OptionalDate2Parameter = param_OptionalDate2.HasValue
                ? new ObjectParameter("Param_OptionalDate2", param_OptionalDate2)
                : new ObjectParameter("Param_OptionalDate2", typeof(System.DateTime));

            var param_OptionalDate3Parameter = param_OptionalDate3.HasValue
                ? new ObjectParameter("Param_OptionalDate3", param_OptionalDate3)
                : new ObjectParameter("Param_OptionalDate3", typeof(System.DateTime));

            var param_OptionalDate4Parameter = param_OptionalDate4.HasValue
                ? new ObjectParameter("Param_OptionalDate4", param_OptionalDate4)
                : new ObjectParameter("Param_OptionalDate4", typeof(System.DateTime));

            var param_OptionalDate5Parameter = param_OptionalDate5.HasValue
                ? new ObjectParameter("Param_OptionalDate5", param_OptionalDate5)
                : new ObjectParameter("Param_OptionalDate5", typeof(System.DateTime));

            var param_OptionalDate6Parameter = param_OptionalDate6.HasValue
                ? new ObjectParameter("Param_OptionalDate6", param_OptionalDate6)
                : new ObjectParameter("Param_OptionalDate6", typeof(System.DateTime));

            var param_OptionalDate7Parameter = param_OptionalDate7.HasValue
                ? new ObjectParameter("Param_OptionalDate7", param_OptionalDate7)
                : new ObjectParameter("Param_OptionalDate7", typeof(System.DateTime));

            var param_OptionalDate8Parameter = param_OptionalDate8.HasValue
                ? new ObjectParameter("Param_OptionalDate8", param_OptionalDate8)
                : new ObjectParameter("Param_OptionalDate8", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Customers_Update",
                param_CustomerParameter, param_UserIDParameter, param_NameParameter, param_Address1Parameter,
                param_Address2Parameter, param_Address3Parameter, param_CityParameter, param_PostalCodeParameter,
                param_CountryParameter, param_ContactParameter, param_PhoneParameter, param_FaxParameter,
                param_MobileParameter, param_InvoiceToParameter, param_PriceListParameter, param_CategoryParameter,
                param_SalesRepParameter, param_DeliveryParameter, param_PaymentParameter, param_GiroParameter,
                param_TaxParameter, param_TaxNoParameter, param_CreditLimitParameter, param_GroupingParameter,
                param_CurrencyParameter, param_LanguageParameter, param_InterestParameter, param_AgentParameter,
                param_ReportsParameter, param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter,
                param_ProjectParameter, param_AllocateParameter, param_BlockedParameter, param_RemarksParameter,
                param_LinkParameter, param_EmailParameter, param_InterNetParameter, param_EECCountryParameter,
                param_EECTransCodeParameter, param_EndDiscPctParameter, param_BankParameter, param_ShipToParameter,
                param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter, param_ShipPostalCodeParameter,
                param_ShipCityNameParameter, param_Ship5Parameter, param_Ship6Parameter, param_Ship7Parameter,
                param_OptionalText1Parameter, param_OptionalText2Parameter, param_OptionalText3Parameter,
                param_OptionalText4Parameter, param_OptionalText5Parameter, param_OptionalText6Parameter,
                param_OptionalText7Parameter, param_OptionalText8Parameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalNumber3Parameter, param_OptionalNumber4Parameter,
                param_OptionalNumber5Parameter, param_OptionalNumber6Parameter, param_OptionalNumber7Parameter,
                param_OptionalNumber8Parameter, param_Optional1Parameter, param_Optional2Parameter,
                param_Optional3Parameter, param_Optional4Parameter, param_Optional5Parameter, param_Optional6Parameter,
                param_Optional7Parameter, param_Optional8Parameter, param_CashDiscountParameter,
                param_OptionalDate1Parameter, param_OptionalDate2Parameter, param_OptionalDate3Parameter,
                param_OptionalDate4Parameter, param_OptionalDate5Parameter, param_OptionalDate6Parameter,
                param_OptionalDate7Parameter, param_OptionalDate8Parameter);
        }

        public virtual int Kompas_DataLink_AddNew(string host, Nullable<int> tP, Nullable<int> linkRecordID,
            Nullable<bool> selected, string linkText, Nullable<double> number, Nullable<System.DateTime> date,
            Nullable<System.Guid> linkGuid)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var linkRecordIDParameter = linkRecordID.HasValue
                ? new ObjectParameter("LinkRecordID", linkRecordID)
                : new ObjectParameter("LinkRecordID", typeof(int));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var linkTextParameter = linkText != null
                ? new ObjectParameter("LinkText", linkText)
                : new ObjectParameter("LinkText", typeof(string));

            var numberParameter = number.HasValue
                ? new ObjectParameter("Number", number)
                : new ObjectParameter("Number", typeof(double));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var linkGuidParameter = linkGuid.HasValue
                ? new ObjectParameter("LinkGuid", linkGuid)
                : new ObjectParameter("LinkGuid", typeof(System.Guid));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DataLink_AddNew", hostParameter,
                tPParameter, linkRecordIDParameter, selectedParameter, linkTextParameter, numberParameter, dateParameter,
                linkGuidParameter);
        }

        public virtual int Kompas_DataLink_Clear(string param_Host, Nullable<int> param_TP)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DataLink_Clear",
                param_HostParameter, param_TPParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_DataLink_HaveSelected(string param_Host,
            Nullable<int> param_TP)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_DataLink_HaveSelected", param_HostParameter, param_TPParameter);
        }

        public virtual int Kompas_DataLink_SelectDeselectAll(string param_DataLinkID, Nullable<int> param_TP,
            Nullable<bool> param_SelectAll)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_SelectAllParameter = param_SelectAll.HasValue
                ? new ObjectParameter("Param_SelectAll", param_SelectAll)
                : new ObjectParameter("Param_SelectAll", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DataLink_SelectDeselectAll",
                param_DataLinkIDParameter, param_TPParameter, param_SelectAllParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_DataLink_Toggle(string param_Host, Nullable<int> param_TP,
            Nullable<int> param_RecordID, Nullable<bool> param_Toggle)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_ToggleParameter = param_Toggle.HasValue
                ? new ObjectParameter("Param_Toggle", param_Toggle)
                : new ObjectParameter("Param_Toggle", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                "Kompas_DataLink_Toggle", param_HostParameter, param_TPParameter, param_RecordIDParameter,
                param_ToggleParameter);
        }

        public virtual int Kompas_DeleteConstraint(string table_name, string column_name)
        {
            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var column_nameParameter = column_name != null
                ? new ObjectParameter("column_name", column_name)
                : new ObjectParameter("column_name", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DeleteConstraint",
                table_nameParameter, column_nameParameter);
        }

        public virtual int Kompas_DeleteFinancialPeriods(Nullable<System.DateTime> param_FromDate,
            Nullable<System.DateTime> param_ToDate, Nullable<short> text_language, Nullable<bool> forceDeleteNoCheck)
        {
            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var forceDeleteNoCheckParameter = forceDeleteNoCheck.HasValue
                ? new ObjectParameter("ForceDeleteNoCheck", forceDeleteNoCheck)
                : new ObjectParameter("ForceDeleteNoCheck", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DeleteFinancialPeriods",
                param_FromDateParameter, param_ToDateParameter, text_languageParameter, forceDeleteNoCheckParameter);
        }

        public virtual int Kompas_DeleteJournalOpenEntrySettlements(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_DeleteJournalOpenEntrySettlements", param_RecordIDParameter);
        }

        public virtual ObjectResult<Kompas_Delivery_GetPackInfo_Result> Kompas_Delivery_GetPackInfo(
            string param_Delivery)
        {
            var param_DeliveryParameter = param_Delivery != null
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Delivery_GetPackInfo_Result>(
                    "Kompas_Delivery_GetPackInfo", param_DeliveryParameter);
        }

        public virtual ObjectResult<string> Kompas_DeliveryNewCopy(string param_FromDelivery, string param_ToDelivery)
        {
            var param_FromDeliveryParameter = param_FromDelivery != null
                ? new ObjectParameter("Param_FromDelivery", param_FromDelivery)
                : new ObjectParameter("Param_FromDelivery", typeof(string));

            var param_ToDeliveryParameter = param_ToDelivery != null
                ? new ObjectParameter("Param_ToDelivery", param_ToDelivery)
                : new ObjectParameter("Param_ToDelivery", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_DeliveryNewCopy",
                param_FromDeliveryParameter, param_ToDeliveryParameter);
        }

        public virtual ObjectResult<Kompas_DimensionCounts_Result> Kompas_DimensionCounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_DimensionCounts_Result>(
                    "Kompas_DimensionCounts");
        }

        public virtual int Kompas_DocumentMergeSetup_AddNew(string toDescription, string fromTable, string copyFrom)
        {
            var toDescriptionParameter = toDescription != null
                ? new ObjectParameter("ToDescription", toDescription)
                : new ObjectParameter("ToDescription", typeof(string));

            var fromTableParameter = fromTable != null
                ? new ObjectParameter("FromTable", fromTable)
                : new ObjectParameter("FromTable", typeof(string));

            var copyFromParameter = copyFrom != null
                ? new ObjectParameter("CopyFrom", copyFrom)
                : new ObjectParameter("CopyFrom", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DocumentMergeSetup_AddNew",
                toDescriptionParameter, fromTableParameter, copyFromParameter);
        }

        public virtual int Kompas_DocumentsCustomers_AddFile(Nullable<System.Guid> fileGUID, string customer,
            string title, string orderNo)
        {
            var fileGUIDParameter = fileGUID.HasValue
                ? new ObjectParameter("FileGUID", fileGUID)
                : new ObjectParameter("FileGUID", typeof(System.Guid));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DocumentsCustomers_AddFile",
                fileGUIDParameter, customerParameter, titleParameter, orderNoParameter);
        }

        public virtual int Kompas_DocumentsSuppliers_AddFile(Nullable<System.Guid> fileGUID, string supplier,
            string title)
        {
            var fileGUIDParameter = fileGUID.HasValue
                ? new ObjectParameter("FileGUID", fileGUID)
                : new ObjectParameter("FileGUID", typeof(System.Guid));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_DocumentsSuppliers_AddFile",
                fileGUIDParameter, supplierParameter, titleParameter);
        }

        public virtual int Kompas_EditBudgetCopyFromBudget(string param_SourceBudget, string param_DestBudget,
            Nullable<double> param_PctAdjust)
        {
            var param_SourceBudgetParameter = param_SourceBudget != null
                ? new ObjectParameter("Param_SourceBudget", param_SourceBudget)
                : new ObjectParameter("Param_SourceBudget", typeof(string));

            var param_DestBudgetParameter = param_DestBudget != null
                ? new ObjectParameter("Param_DestBudget", param_DestBudget)
                : new ObjectParameter("Param_DestBudget", typeof(string));

            var param_PctAdjustParameter = param_PctAdjust.HasValue
                ? new ObjectParameter("Param_PctAdjust", param_PctAdjust)
                : new ObjectParameter("Param_PctAdjust", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditBudgetCopyFromBudget",
                param_SourceBudgetParameter, param_DestBudgetParameter, param_PctAdjustParameter);
        }

        public virtual int Kompas_EditBudgetDeleteBudgetLine(string param_Budget, string param_Account,
            string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditBudgetDeleteBudgetLine",
                param_BudgetParameter, param_AccountParameter, param_DepartmentParameter, param_CostCenterParameter,
                param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_EditBudgetGetBudgetLines(string param_Budget, string param_Department,
            string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditBudgetGetBudgetLines",
                param_BudgetParameter, param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter,
                param_PurposeParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_EditBudgetGetBudgetLinesCount(string param_Budget,
            string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_EditBudgetGetBudgetLinesCount", param_BudgetParameter, param_DepartmentParameter,
                    param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<string> Kompas_EditBudgetGetBudgetPeriodIDs(string param_Budget)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_EditBudgetGetBudgetPeriodIDs", param_BudgetParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_EditBudgetGetBudgetPeriods(string param_Budget)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_EditBudgetGetBudgetPeriods", param_BudgetParameter);
        }

        public virtual int Kompas_EditBudgetGetLastYearsActuals(string param_Budget, string param_LYFromPeriodID,
            string param_LYToPeriodID, Nullable<double> param_PctAdjust, Nullable<bool> param_IncludeStatus)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_LYFromPeriodIDParameter = param_LYFromPeriodID != null
                ? new ObjectParameter("Param_LYFromPeriodID", param_LYFromPeriodID)
                : new ObjectParameter("Param_LYFromPeriodID", typeof(string));

            var param_LYToPeriodIDParameter = param_LYToPeriodID != null
                ? new ObjectParameter("Param_LYToPeriodID", param_LYToPeriodID)
                : new ObjectParameter("Param_LYToPeriodID", typeof(string));

            var param_PctAdjustParameter = param_PctAdjust.HasValue
                ? new ObjectParameter("Param_PctAdjust", param_PctAdjust)
                : new ObjectParameter("Param_PctAdjust", typeof(double));

            var param_IncludeStatusParameter = param_IncludeStatus.HasValue
                ? new ObjectParameter("Param_IncludeStatus", param_IncludeStatus)
                : new ObjectParameter("Param_IncludeStatus", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditBudgetGetLastYearsActuals",
                param_BudgetParameter, param_LYFromPeriodIDParameter, param_LYToPeriodIDParameter,
                param_PctAdjustParameter, param_IncludeStatusParameter);
        }

        public virtual ObjectResult<string> Kompas_EditBudgetGetPeriodNames(string param_Budget)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_EditBudgetGetPeriodNames",
                    param_BudgetParameter);
        }

        public virtual int Kompas_EditBudgetGetProfitLossAccounts(string param_Budget,
            Nullable<bool> param_IncludeProfitLose, Nullable<bool> param_IncludeStatus, Nullable<bool> param_IncludeSum)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_IncludeProfitLoseParameter = param_IncludeProfitLose.HasValue
                ? new ObjectParameter("Param_IncludeProfitLose", param_IncludeProfitLose)
                : new ObjectParameter("Param_IncludeProfitLose", typeof(bool));

            var param_IncludeStatusParameter = param_IncludeStatus.HasValue
                ? new ObjectParameter("Param_IncludeStatus", param_IncludeStatus)
                : new ObjectParameter("Param_IncludeStatus", typeof(bool));

            var param_IncludeSumParameter = param_IncludeSum.HasValue
                ? new ObjectParameter("Param_IncludeSum", param_IncludeSum)
                : new ObjectParameter("Param_IncludeSum", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_EditBudgetGetProfitLossAccounts", param_BudgetParameter, param_IncludeProfitLoseParameter,
                param_IncludeStatusParameter, param_IncludeSumParameter);
        }

        public virtual int Kompas_EditBudgetSaveBudgetLine(string param_Budget, string param_Account,
            string param_PeriodID, Nullable<double> param_Amount, string param_Department, string param_CostCenter,
            string param_Project, string param_Purpose)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditBudgetSaveBudgetLine",
                param_BudgetParameter, param_AccountParameter, param_PeriodIDParameter, param_AmountParameter,
                param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_EditTransaction_Update(Nullable<int> param_RecordID,
            Nullable<System.DateTime> param_Due, string param_Description, string param_Department,
            string param_CostCenter, string param_PurPose, string param_Project, string param_Remarks,
            string param_UserName, Nullable<short> param_LastReminderNo, Nullable<System.DateTime> param_LastReminder,
            string param_InvoiceNo, string param_KortArt, string param_BetalingsID, Nullable<byte> param_Code,
            string param_Optional1, string param_Optional2, Nullable<short> param_InterestCarrier)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_DueParameter = param_Due.HasValue
                ? new ObjectParameter("Param_Due", param_Due)
                : new ObjectParameter("Param_Due", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_LastReminderNoParameter = param_LastReminderNo.HasValue
                ? new ObjectParameter("Param_LastReminderNo", param_LastReminderNo)
                : new ObjectParameter("Param_LastReminderNo", typeof(short));

            var param_LastReminderParameter = param_LastReminder.HasValue
                ? new ObjectParameter("Param_LastReminder", param_LastReminder)
                : new ObjectParameter("Param_LastReminder", typeof(System.DateTime));

            var param_InvoiceNoParameter = param_InvoiceNo != null
                ? new ObjectParameter("Param_InvoiceNo", param_InvoiceNo)
                : new ObjectParameter("Param_InvoiceNo", typeof(string));

            var param_KortArtParameter = param_KortArt != null
                ? new ObjectParameter("Param_KortArt", param_KortArt)
                : new ObjectParameter("Param_KortArt", typeof(string));

            var param_BetalingsIDParameter = param_BetalingsID != null
                ? new ObjectParameter("Param_BetalingsID", param_BetalingsID)
                : new ObjectParameter("Param_BetalingsID", typeof(string));

            var param_CodeParameter = param_Code.HasValue
                ? new ObjectParameter("Param_Code", param_Code)
                : new ObjectParameter("Param_Code", typeof(byte));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_InterestCarrierParameter = param_InterestCarrier.HasValue
                ? new ObjectParameter("Param_InterestCarrier", param_InterestCarrier)
                : new ObjectParameter("Param_InterestCarrier", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EditTransaction_Update",
                param_RecordIDParameter, param_DueParameter, param_DescriptionParameter, param_DepartmentParameter,
                param_CostCenterParameter, param_PurPoseParameter, param_ProjectParameter, param_RemarksParameter,
                param_UserNameParameter, param_LastReminderNoParameter, param_LastReminderParameter,
                param_InvoiceNoParameter, param_KortArtParameter, param_BetalingsIDParameter, param_CodeParameter,
                param_Optional1Parameter, param_Optional2Parameter, param_InterestCarrierParameter);
        }

        public virtual int Kompas_EfterC5Konvertering()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EfterC5Konvertering");
        }

        public virtual ObjectResult<string> Kompas_eLPc_GetNewOrders(string orderNo, string salesRep, string remarks,
            string lPNumber, string newStatus, string userName)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var lPNumberParameter = lPNumber != null
                ? new ObjectParameter("LPNumber", lPNumber)
                : new ObjectParameter("LPNumber", typeof(string));

            var newStatusParameter = newStatus != null
                ? new ObjectParameter("NewStatus", newStatus)
                : new ObjectParameter("NewStatus", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_eLPc_GetNewOrders",
                orderNoParameter, salesRepParameter, remarksParameter, lPNumberParameter, newStatusParameter,
                userNameParameter);
        }

        public virtual int Kompas_EmployeeDeleteEmployee(string param_Employee)
        {
            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EmployeeDeleteEmployee",
                param_EmployeeParameter);
        }

        public virtual int Kompas_EmployeePrice_CopyPrices(string param_EmployeeFrom, string param_EmployeeTo)
        {
            var param_EmployeeFromParameter = param_EmployeeFrom != null
                ? new ObjectParameter("Param_EmployeeFrom", param_EmployeeFrom)
                : new ObjectParameter("Param_EmployeeFrom", typeof(string));

            var param_EmployeeToParameter = param_EmployeeTo != null
                ? new ObjectParameter("Param_EmployeeTo", param_EmployeeTo)
                : new ObjectParameter("Param_EmployeeTo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EmployeePrice_CopyPrices",
                param_EmployeeFromParameter, param_EmployeeToParameter);
        }

        public virtual int Kompas_EmployeePrice_GetAllCostCenter(string employee, string default_Item,
            Nullable<double> default_CostPrice, Nullable<double> default_SalesPrice)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var default_ItemParameter = default_Item != null
                ? new ObjectParameter("Default_Item", default_Item)
                : new ObjectParameter("Default_Item", typeof(string));

            var default_CostPriceParameter = default_CostPrice.HasValue
                ? new ObjectParameter("Default_CostPrice", default_CostPrice)
                : new ObjectParameter("Default_CostPrice", typeof(double));

            var default_SalesPriceParameter = default_SalesPrice.HasValue
                ? new ObjectParameter("Default_SalesPrice", default_SalesPrice)
                : new ObjectParameter("Default_SalesPrice", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_EmployeePrice_GetAllCostCenter", employeeParameter, default_ItemParameter,
                default_CostPriceParameter, default_SalesPriceParameter);
        }

        public virtual int Kompas_EmployeePrice_Update(string employee, string description, Nullable<double> costPrice,
            Nullable<double> salesPrice, string item, string costCenter)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EmployeePrice_Update",
                employeeParameter, descriptionParameter, costPriceParameter, salesPriceParameter, itemParameter,
                costCenterParameter);
        }

        public virtual ObjectResult<Kompas_EndorsePayments_GetTransactions_Result>
            Kompas_EndorsePayments_GetTransactions(string param_SupplierFrom, string param_SupplierTo,
                Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo,
                Nullable<System.DateTime> param_DueFrom, Nullable<System.DateTime> param_DueTo,
                string param_InvoiceNoFrom, string param_InvoiceNoTo, string param_VoucherFrom, string param_VoucherTo,
                Nullable<byte> param_Endorsed)
        {
            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_DueFromParameter = param_DueFrom.HasValue
                ? new ObjectParameter("Param_DueFrom", param_DueFrom)
                : new ObjectParameter("Param_DueFrom", typeof(System.DateTime));

            var param_DueToParameter = param_DueTo.HasValue
                ? new ObjectParameter("Param_DueTo", param_DueTo)
                : new ObjectParameter("Param_DueTo", typeof(System.DateTime));

            var param_InvoiceNoFromParameter = param_InvoiceNoFrom != null
                ? new ObjectParameter("Param_InvoiceNoFrom", param_InvoiceNoFrom)
                : new ObjectParameter("Param_InvoiceNoFrom", typeof(string));

            var param_InvoiceNoToParameter = param_InvoiceNoTo != null
                ? new ObjectParameter("Param_InvoiceNoTo", param_InvoiceNoTo)
                : new ObjectParameter("Param_InvoiceNoTo", typeof(string));

            var param_VoucherFromParameter = param_VoucherFrom != null
                ? new ObjectParameter("Param_VoucherFrom", param_VoucherFrom)
                : new ObjectParameter("Param_VoucherFrom", typeof(string));

            var param_VoucherToParameter = param_VoucherTo != null
                ? new ObjectParameter("Param_VoucherTo", param_VoucherTo)
                : new ObjectParameter("Param_VoucherTo", typeof(string));

            var param_EndorsedParameter = param_Endorsed.HasValue
                ? new ObjectParameter("Param_Endorsed", param_Endorsed)
                : new ObjectParameter("Param_Endorsed", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_EndorsePayments_GetTransactions_Result>(
                        "Kompas_EndorsePayments_GetTransactions", param_SupplierFromParameter, param_SupplierToParameter,
                        param_DateFromParameter, param_DateToParameter, param_DueFromParameter, param_DueToParameter,
                        param_InvoiceNoFromParameter, param_InvoiceNoToParameter, param_VoucherFromParameter,
                        param_VoucherToParameter, param_EndorsedParameter);
        }

        public virtual int Kompas_EnsureOrderCommunicationsStatusesExist()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_EnsureOrderCommunicationsStatusesExist");
        }

        public virtual int Kompas_EnsurePurchaseImportsExist()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_EnsurePurchaseImportsExist");
        }

        public virtual int Kompas_Export_DIGITALCAP_CreateExportData(string param_DataLinkID,
            Nullable<int> param_dltEDIMATIC, string param_EDILocationNr, string param_ComStateAfter)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltEDIMATICParameter = param_dltEDIMATIC.HasValue
                ? new ObjectParameter("Param_dltEDIMATIC", param_dltEDIMATIC)
                : new ObjectParameter("Param_dltEDIMATIC", typeof(int));

            var param_EDILocationNrParameter = param_EDILocationNr != null
                ? new ObjectParameter("Param_EDILocationNr", param_EDILocationNr)
                : new ObjectParameter("Param_EDILocationNr", typeof(string));

            var param_ComStateAfterParameter = param_ComStateAfter != null
                ? new ObjectParameter("Param_ComStateAfter", param_ComStateAfter)
                : new ObjectParameter("Param_ComStateAfter", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Export_DIGITALCAP_CreateExportData", param_DataLinkIDParameter, param_dltEDIMATICParameter,
                    param_EDILocationNrParameter, param_ComStateAfterParameter);
        }

        public virtual int Kompas_Export_EDIMATIC_CreateData(string param_DataLinkID, Nullable<int> param_dltEDIMATIC,
            string param_FromOrderNo, string param_ToOrderNo, Nullable<System.DateTime> param_FromDate,
            Nullable<System.DateTime> param_ToDate, string param_FromVoucher, string param_ToVoucher,
            string param_FromCustomer, string param_ToCustomer, Nullable<bool> param_IsArchive,
            string param_Communication, string param_ComStateAfter)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltEDIMATICParameter = param_dltEDIMATIC.HasValue
                ? new ObjectParameter("Param_dltEDIMATIC", param_dltEDIMATIC)
                : new ObjectParameter("Param_dltEDIMATIC", typeof(int));

            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FromVoucherParameter = param_FromVoucher != null
                ? new ObjectParameter("Param_FromVoucher", param_FromVoucher)
                : new ObjectParameter("Param_FromVoucher", typeof(string));

            var param_ToVoucherParameter = param_ToVoucher != null
                ? new ObjectParameter("Param_ToVoucher", param_ToVoucher)
                : new ObjectParameter("Param_ToVoucher", typeof(string));

            var param_FromCustomerParameter = param_FromCustomer != null
                ? new ObjectParameter("Param_FromCustomer", param_FromCustomer)
                : new ObjectParameter("Param_FromCustomer", typeof(string));

            var param_ToCustomerParameter = param_ToCustomer != null
                ? new ObjectParameter("Param_ToCustomer", param_ToCustomer)
                : new ObjectParameter("Param_ToCustomer", typeof(string));

            var param_IsArchiveParameter = param_IsArchive.HasValue
                ? new ObjectParameter("Param_IsArchive", param_IsArchive)
                : new ObjectParameter("Param_IsArchive", typeof(bool));

            var param_CommunicationParameter = param_Communication != null
                ? new ObjectParameter("Param_Communication", param_Communication)
                : new ObjectParameter("Param_Communication", typeof(string));

            var param_ComStateAfterParameter = param_ComStateAfter != null
                ? new ObjectParameter("Param_ComStateAfter", param_ComStateAfter)
                : new ObjectParameter("Param_ComStateAfter", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Export_EDIMATIC_CreateData",
                param_DataLinkIDParameter, param_dltEDIMATICParameter, param_FromOrderNoParameter,
                param_ToOrderNoParameter, param_FromDateParameter, param_ToDateParameter, param_FromVoucherParameter,
                param_ToVoucherParameter, param_FromCustomerParameter, param_ToCustomerParameter,
                param_IsArchiveParameter, param_CommunicationParameter, param_ComStateAfterParameter);
        }

        public virtual int Kompas_Export_EDIMATIC_CreateExportData(string param_DataLinkID,
            Nullable<int> param_dltEDIMATIC, string param_EDILocationNr, string param_ComStateAfter)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltEDIMATICParameter = param_dltEDIMATIC.HasValue
                ? new ObjectParameter("Param_dltEDIMATIC", param_dltEDIMATIC)
                : new ObjectParameter("Param_dltEDIMATIC", typeof(int));

            var param_EDILocationNrParameter = param_EDILocationNr != null
                ? new ObjectParameter("Param_EDILocationNr", param_EDILocationNr)
                : new ObjectParameter("Param_EDILocationNr", typeof(string));

            var param_ComStateAfterParameter = param_ComStateAfter != null
                ? new ObjectParameter("Param_ComStateAfter", param_ComStateAfter)
                : new ObjectParameter("Param_ComStateAfter", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Export_EDIMATIC_CreateExportData",
                    param_DataLinkIDParameter, param_dltEDIMATICParameter, param_EDILocationNrParameter,
                    param_ComStateAfterParameter);
        }

        public virtual ObjectResult<Kompas_Export_EDIMATIC_GetOrders_Result> Kompas_Export_EDIMATIC_GetOrders(
            string param_DataLinkID, Nullable<int> param_dltEDIMATIC, Nullable<int> param_SortedBy)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltEDIMATICParameter = param_dltEDIMATIC.HasValue
                ? new ObjectParameter("Param_dltEDIMATIC", param_dltEDIMATIC)
                : new ObjectParameter("Param_dltEDIMATIC", typeof(int));

            var param_SortedByParameter = param_SortedBy.HasValue
                ? new ObjectParameter("Param_SortedBy", param_SortedBy)
                : new ObjectParameter("Param_SortedBy", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Export_EDIMATIC_GetOrders_Result>(
                    "Kompas_Export_EDIMATIC_GetOrders", param_DataLinkIDParameter, param_dltEDIMATICParameter,
                    param_SortedByParameter);
        }

        public virtual int Kompas_Factoring_CheckData(string param_DataLinkID, Nullable<int> param_TP,
            Nullable<short> param_PostWorksheet)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_PostWorksheetParameter = param_PostWorksheet.HasValue
                ? new ObjectParameter("Param_PostWorksheet", param_PostWorksheet)
                : new ObjectParameter("Param_PostWorksheet", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Factoring_CheckData",
                param_DataLinkIDParameter, param_TPParameter, param_PostWorksheetParameter);
        }

        public virtual int Kompas_Factoring_CreateData(string param_Host, Nullable<int> param_TP,
            Nullable<int> param_FactoringNo, string param_Currency)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_FactoringNoParameter = param_FactoringNo.HasValue
                ? new ObjectParameter("Param_FactoringNo", param_FactoringNo)
                : new ObjectParameter("Param_FactoringNo", typeof(int));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Factoring_CreateData",
                param_HostParameter, param_TPParameter, param_FactoringNoParameter, param_CurrencyParameter);
        }

        public virtual int Kompas_Factoring_GetCustomerInfo(string param_DataLinkID, Nullable<int> param_TP)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Factoring_GetCustomerInfo",
                param_DataLinkIDParameter, param_TPParameter);
        }

        public virtual ObjectResult<Kompas_Factoring_GetData_Result> Kompas_Factoring_GetData(string param_Host,
            Nullable<int> param_TP)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Factoring_GetData_Result>(
                    "Kompas_Factoring_GetData", param_HostParameter, param_TPParameter);
        }

        public virtual ObjectResult<Kompas_Factoring_ImportPayments_Result> Kompas_Factoring_ImportPayments(
            string journal, string line, Nullable<short> text_language, string current_userid, ObjectParameter saveValue)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var lineParameter = line != null
                ? new ObjectParameter("Line", line)
                : new ObjectParameter("Line", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Factoring_ImportPayments_Result>(
                    "Kompas_Factoring_ImportPayments", journalParameter, lineParameter, text_languageParameter,
                    current_useridParameter, saveValue);
        }

        public virtual ObjectResult<Kompas_Factoring_Info_Result> Kompas_Factoring_Info()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Factoring_Info_Result>(
                    "Kompas_Factoring_Info");
        }

        public virtual int Kompas_Factoring_UpdateAndMake(string param_DataLinkID, Nullable<int> param_TP,
            string param_Journal, string param_Currency)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Factoring_UpdateAndMake",
                param_DataLinkIDParameter, param_TPParameter, param_JournalParameter, param_CurrencyParameter);
        }

        public virtual int Kompas_Files_AddNew(ObjectParameter gUID, string createdBy, string report, string uRL,
            string fileType, byte[] fileData, Nullable<double> trail)
        {
            var createdByParameter = createdBy != null
                ? new ObjectParameter("CreatedBy", createdBy)
                : new ObjectParameter("CreatedBy", typeof(string));

            var reportParameter = report != null
                ? new ObjectParameter("Report", report)
                : new ObjectParameter("Report", typeof(string));

            var uRLParameter = uRL != null
                ? new ObjectParameter("URL", uRL)
                : new ObjectParameter("URL", typeof(string));

            var fileTypeParameter = fileType != null
                ? new ObjectParameter("FileType", fileType)
                : new ObjectParameter("FileType", typeof(string));

            var fileDataParameter = fileData != null
                ? new ObjectParameter("FileData", fileData)
                : new ObjectParameter("FileData", typeof(byte[]));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Files_AddNew", gUID,
                createdByParameter, reportParameter, uRLParameter, fileTypeParameter, fileDataParameter, trailParameter);
        }

        public virtual int Kompas_FilterData_AddUpdate(string param_ID, string param_Description, string param_Info,
            string param_Criterie, string param_Fields, Nullable<short> param_KeepLast, Nullable<short> param_ShowInMenu,
            string param_SortField, Nullable<bool> param_SortDirection)
        {
            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_InfoParameter = param_Info != null
                ? new ObjectParameter("Param_Info", param_Info)
                : new ObjectParameter("Param_Info", typeof(string));

            var param_CriterieParameter = param_Criterie != null
                ? new ObjectParameter("Param_Criterie", param_Criterie)
                : new ObjectParameter("Param_Criterie", typeof(string));

            var param_FieldsParameter = param_Fields != null
                ? new ObjectParameter("Param_Fields", param_Fields)
                : new ObjectParameter("Param_Fields", typeof(string));

            var param_KeepLastParameter = param_KeepLast.HasValue
                ? new ObjectParameter("Param_KeepLast", param_KeepLast)
                : new ObjectParameter("Param_KeepLast", typeof(short));

            var param_ShowInMenuParameter = param_ShowInMenu.HasValue
                ? new ObjectParameter("Param_ShowInMenu", param_ShowInMenu)
                : new ObjectParameter("Param_ShowInMenu", typeof(short));

            var param_SortFieldParameter = param_SortField != null
                ? new ObjectParameter("Param_SortField", param_SortField)
                : new ObjectParameter("Param_SortField", typeof(string));

            var param_SortDirectionParameter = param_SortDirection.HasValue
                ? new ObjectParameter("Param_SortDirection", param_SortDirection)
                : new ObjectParameter("Param_SortDirection", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_FilterData_AddUpdate",
                param_IDParameter, param_DescriptionParameter, param_InfoParameter, param_CriterieParameter,
                param_FieldsParameter, param_KeepLastParameter, param_ShowInMenuParameter, param_SortFieldParameter,
                param_SortDirectionParameter);
        }

        public virtual ObjectResult<string> Kompas_FindInventoryItemEANAlternative(string searchItem)
        {
            var searchItemParameter = searchItem != null
                ? new ObjectParameter("SearchItem", searchItem)
                : new ObjectParameter("SearchItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_FindInventoryItemEANAlternative", searchItemParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_eLPcMobil_GJ_Result> Kompas_FixedImport_eLPcMobil_GJ(
            Nullable<bool> info, string data, ObjectParameter importid, Nullable<short> text_language,
            string current_userid, ObjectParameter errorMsg, string linesEntry_Journal)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_FixedImport_eLPcMobil_GJ_Result>(
                    "Kompas_FixedImport_eLPcMobil_GJ", infoParameter, dataParameter, importid, text_languageParameter,
                    current_useridParameter, errorMsg, linesEntry_JournalParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_FrontlineImport_Result> Kompas_FixedImport_FrontlineImport(
            Nullable<bool> info, string data, ObjectParameter importid, Nullable<short> text_language,
            string current_userid, ObjectParameter errorMsg, string transEntry_Journal, ObjectParameter local_Count,
            ObjectParameter local_Account, ObjectParameter local_Date, ObjectParameter local_Voucher,
            ObjectParameter local_Description, ObjectParameter local_DK, ObjectParameter local_Amount,
            ObjectParameter local_SetOff, ObjectParameter local_Tax)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var transEntry_JournalParameter = transEntry_Journal != null
                ? new ObjectParameter("TransEntry_Journal", transEntry_Journal)
                : new ObjectParameter("TransEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_FixedImport_FrontlineImport_Result>(
                    "Kompas_FixedImport_FrontlineImport", infoParameter, dataParameter, importid, text_languageParameter,
                    current_useridParameter, errorMsg, transEntry_JournalParameter, local_Count, local_Account,
                    local_Date, local_Voucher, local_Description, local_DK, local_Amount, local_SetOff, local_Tax);
        }

        public virtual ObjectResult<Kompas_FixedImport_Guldbranche_Result> Kompas_FixedImport_Guldbranche(
            Nullable<bool> info, string data, ObjectParameter importid, Nullable<short> text_language,
            string current_userid, ObjectParameter errorMsg, string linesEntry_Journal, string linesEntry_PurchaseNo)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            var linesEntry_PurchaseNoParameter = linesEntry_PurchaseNo != null
                ? new ObjectParameter("LinesEntry_PurchaseNo", linesEntry_PurchaseNo)
                : new ObjectParameter("LinesEntry_PurchaseNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_FixedImport_Guldbranche_Result>(
                    "Kompas_FixedImport_Guldbranche", infoParameter, dataParameter, importid, text_languageParameter,
                    current_useridParameter, errorMsg, linesEntry_JournalParameter, linesEntry_PurchaseNoParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Result>
            Kompas_FixedImport_Import_eLPc_Arbejdsseddel(Nullable<bool> info, string data, ObjectParameter importid,
                Nullable<short> text_language, string current_userid, ObjectParameter errorMsg,
                string linesEntry_Journal)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Result>(
                        "Kompas_FixedImport_Import_eLPc_Arbejdsseddel", infoParameter, dataParameter, importid,
                        text_languageParameter, current_useridParameter, errorMsg, linesEntry_JournalParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Opret_Result>
            Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Opret(Nullable<bool> info, string data,
                ObjectParameter importid, Nullable<short> text_language, string current_userid, ObjectParameter errorMsg,
                string linesEntry_Journal, ObjectParameter save_Customer, ObjectParameter save_OrderNo)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Opret_Result>(
                        "Kompas_FixedImport_Import_eLPc_Arbejdsseddel_Opret", infoParameter, dataParameter, importid,
                        text_languageParameter, current_useridParameter, errorMsg, linesEntry_JournalParameter,
                        save_Customer, save_OrderNo);
        }

        public virtual ObjectResult<Kompas_FixedImport_ImportOrderLinesFromLP_Result>
            Kompas_FixedImport_ImportOrderLinesFromLP(Nullable<bool> info, string data, ObjectParameter importid,
                Nullable<short> text_language, string current_userid, ObjectParameter errorMsg,
                string linesEntry_Journal)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_FixedImport_ImportOrderLinesFromLP_Result>(
                        "Kompas_FixedImport_ImportOrderLinesFromLP", infoParameter, dataParameter, importid,
                        text_languageParameter, current_useridParameter, errorMsg, linesEntry_JournalParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_ImportOrderLinesFromLPEAN_Result>
            Kompas_FixedImport_ImportOrderLinesFromLPEAN(Nullable<bool> info, string data, ObjectParameter importid,
                Nullable<short> text_language, string current_userid, ObjectParameter errorMsg,
                string linesEntry_Journal)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_FixedImport_ImportOrderLinesFromLPEAN_Result>(
                        "Kompas_FixedImport_ImportOrderLinesFromLPEAN", infoParameter, dataParameter, importid,
                        text_languageParameter, current_useridParameter, errorMsg, linesEntry_JournalParameter);
        }

        public virtual ObjectResult<Kompas_FixedImport_Retail_Result> Kompas_FixedImport_Retail(Nullable<bool> info,
            string data, ObjectParameter importid, Nullable<short> text_language, string current_userid,
            ObjectParameter errorMsg, string transEntry_Journal, ObjectParameter isWaVo)
        {
            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var transEntry_JournalParameter = transEntry_Journal != null
                ? new ObjectParameter("TransEntry_Journal", transEntry_Journal)
                : new ObjectParameter("TransEntry_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_FixedImport_Retail_Result>(
                    "Kompas_FixedImport_Retail", infoParameter, dataParameter, importid, text_languageParameter,
                    current_useridParameter, errorMsg, transEntry_JournalParameter, isWaVo);
        }

        public virtual ObjectResult<Kompas_FormRetainPosition_Result> Kompas_FormRetainPosition(string formName,
            string username)
        {
            var formNameParameter = formName != null
                ? new ObjectParameter("FormName", formName)
                : new ObjectParameter("FormName", typeof(string));

            var usernameParameter = username != null
                ? new ObjectParameter("Username", username)
                : new ObjectParameter("Username", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_FormRetainPosition_Result>(
                    "Kompas_FormRetainPosition", formNameParameter, usernameParameter);
        }

        public virtual int Kompas_frmAdjustInventorySalesSetupItemUpdateCostPriceAndAvance()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_frmAdjustInventorySalesSetupItemUpdateCostPriceAndAvance");
        }

        public virtual int Kompas_frmAdjustInventorySalesSetupPricelistAvance()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_frmAdjustInventorySalesSetupPricelistAvance");
        }

        public virtual int Kompas_frmChangeFuncClickDeleteOneAccountFromBudgetLines(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_frmChangeFuncClickDeleteOneAccountFromBudgetLines", param_AccountParameter);
        }

        public virtual int Kompas_frmInventoryFKFormAddCopyAttachedItemsToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_frmInventoryFKFormAddCopyAttachedItemsToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual int Kompas_frmInventoryFKFormAddCopyHistory(string param_NewItem, string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_frmInventoryFKFormAddCopyHistory",
                    param_NewItemParameter, param_OldItemParameter);
        }

        public virtual int Kompas_frmInventoryFKFormAddCopyImagesToNewItem(string param_NewItem, string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_frmInventoryFKFormAddCopyImagesToNewItem", param_NewItemParameter, param_OldItemParameter);
        }

        public virtual int Kompas_GeneratePurchaseLines_CreateLines(Nullable<byte> param_Options,
            string param_FromPeriode, string param_ToPeriode, string param_FromItem, string param_ToItem,
            string param_FromGrouping, string param_ToGrouping, string param_FromCategory, string param_ToCategory,
            string param_FromSupplier, string param_ToSupplier)
        {
            var param_OptionsParameter = param_Options.HasValue
                ? new ObjectParameter("Param_Options", param_Options)
                : new ObjectParameter("Param_Options", typeof(byte));

            var param_FromPeriodeParameter = param_FromPeriode != null
                ? new ObjectParameter("Param_FromPeriode", param_FromPeriode)
                : new ObjectParameter("Param_FromPeriode", typeof(string));

            var param_ToPeriodeParameter = param_ToPeriode != null
                ? new ObjectParameter("Param_ToPeriode", param_ToPeriode)
                : new ObjectParameter("Param_ToPeriode", typeof(string));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromCategoryParameter = param_FromCategory != null
                ? new ObjectParameter("Param_FromCategory", param_FromCategory)
                : new ObjectParameter("Param_FromCategory", typeof(string));

            var param_ToCategoryParameter = param_ToCategory != null
                ? new ObjectParameter("Param_ToCategory", param_ToCategory)
                : new ObjectParameter("Param_ToCategory", typeof(string));

            var param_FromSupplierParameter = param_FromSupplier != null
                ? new ObjectParameter("Param_FromSupplier", param_FromSupplier)
                : new ObjectParameter("Param_FromSupplier", typeof(string));

            var param_ToSupplierParameter = param_ToSupplier != null
                ? new ObjectParameter("Param_ToSupplier", param_ToSupplier)
                : new ObjectParameter("Param_ToSupplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_GeneratePurchaseLines_CreateLines", param_OptionsParameter, param_FromPeriodeParameter,
                    param_ToPeriodeParameter, param_FromItemParameter, param_ToItemParameter,
                    param_FromGroupingParameter, param_ToGroupingParameter, param_FromCategoryParameter,
                    param_ToCategoryParameter, param_FromSupplierParameter, param_ToSupplierParameter);
        }

        public virtual int Kompas_GeneratePurchaseLines_CreatePurchases(string param_UserName, string param_NewStatus)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_NewStatusParameter = param_NewStatus != null
                ? new ObjectParameter("Param_NewStatus", param_NewStatus)
                : new ObjectParameter("Param_NewStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_GeneratePurchaseLines_CreatePurchases", param_UserNameParameter, param_NewStatusParameter);
        }

        public virtual ObjectResult<Kompas_GetAutoParameter_Result> Kompas_GetAutoParameter(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetAutoParameter_Result>(
                    "Kompas_GetAutoParameter", param_ItemParameter);
        }

        public virtual ObjectResult<Kompas_GetBalanceSheetPreferences_Result> Kompas_GetBalanceSheetPreferences(
            string param_UserName)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetBalanceSheetPreferences_Result>(
                    "Kompas_GetBalanceSheetPreferences", param_UserNameParameter);
        }

        public virtual ObjectResult<Kompas_GetBudgetComboInfo_Result> Kompas_GetBudgetComboInfo(string param_DestBudget)
        {
            var param_DestBudgetParameter = param_DestBudget != null
                ? new ObjectParameter("Param_DestBudget", param_DestBudget)
                : new ObjectParameter("Param_DestBudget", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetBudgetComboInfo_Result>(
                    "Kompas_GetBudgetComboInfo", param_DestBudgetParameter);
        }

        public virtual int Kompas_GetDimensions(Nullable<byte> param_DimensionIndex)
        {
            var param_DimensionIndexParameter = param_DimensionIndex.HasValue
                ? new ObjectParameter("Param_DimensionIndex", param_DimensionIndex)
                : new ObjectParameter("Param_DimensionIndex", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_GetDimensions",
                param_DimensionIndexParameter);
        }

        public virtual int Kompas_GetFixedImportFormats(string module)
        {
            var moduleParameter = module != null
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_GetFixedImportFormats",
                moduleParameter);
        }

        public virtual ObjectResult<Kompas_GetItemPriceListAvance_Result> Kompas_GetItemPriceListAvance(
            string priceList, string item)
        {
            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetItemPriceListAvance_Result>(
                    "Kompas_GetItemPriceListAvance", priceListParameter, itemParameter);
        }

        public virtual int Kompas_GetRefCountByKeyChangeInfo(string masterTable, string masterColumn, string keyValue)
        {
            var masterTableParameter = masterTable != null
                ? new ObjectParameter("MasterTable", masterTable)
                : new ObjectParameter("MasterTable", typeof(string));

            var masterColumnParameter = masterColumn != null
                ? new ObjectParameter("MasterColumn", masterColumn)
                : new ObjectParameter("MasterColumn", typeof(string));

            var keyValueParameter = keyValue != null
                ? new ObjectParameter("KeyValue", keyValue)
                : new ObjectParameter("KeyValue", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_GetRefCountByKeyChangeInfo",
                masterTableParameter, masterColumnParameter, keyValueParameter);
        }

        public virtual int Kompas_GetSQLFolderFolderList(string folder)
        {
            var folderParameter = folder != null
                ? new ObjectParameter("Folder", folder)
                : new ObjectParameter("Folder", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_GetSQLFolderFolderList",
                folderParameter);
        }

        public virtual int Kompas_GetSQLServerDrives()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_GetSQLServerDrives");
        }

        public virtual ObjectResult<Kompas_GetUserSettings_Result> Kompas_GetUserSettings(string param_UserName)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetUserSettings_Result>(
                    "Kompas_GetUserSettings", param_UserNameParameter);
        }

        public virtual ObjectResult<Kompas_GetViewSelectFields_Result> Kompas_GetViewSelectFields(
            string param_Table_Name)
        {
            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetViewSelectFields_Result>(
                    "Kompas_GetViewSelectFields", param_Table_NameParameter);
        }

        public virtual ObjectResult<Kompas_GetVoucher_Result> Kompas_GetVoucher(string param_Source,
            Nullable<bool> param_TTS)
        {
            var param_SourceParameter = param_Source != null
                ? new ObjectParameter("Param_Source", param_Source)
                : new ObjectParameter("Param_Source", typeof(string));

            var param_TTSParameter = param_TTS.HasValue
                ? new ObjectParameter("Param_TTS", param_TTS)
                : new ObjectParameter("Param_TTS", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_GetVoucher_Result>(
                    "Kompas_GetVoucher", param_SourceParameter, param_TTSParameter);
        }

        public virtual ObjectResult<string> Kompas_GroupingNewCopy(Nullable<bool> param_IsCustomer,
            string param_FromGroup, string param_ToGroup, string param_UserName)
        {
            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_FromGroupParameter = param_FromGroup != null
                ? new ObjectParameter("Param_FromGroup", param_FromGroup)
                : new ObjectParameter("Param_FromGroup", typeof(string));

            var param_ToGroupParameter = param_ToGroup != null
                ? new ObjectParameter("Param_ToGroup", param_ToGroup)
                : new ObjectParameter("Param_ToGroup", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_GroupingNewCopy",
                param_IsCustomerParameter, param_FromGroupParameter, param_ToGroupParameter, param_UserNameParameter);
        }

        public virtual int Kompas_HeavyUnsettleRecord(Nullable<bool> param_IsCustomer, Nullable<int> param_TransRef)
        {
            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_HeavyUnsettleRecord",
                param_IsCustomerParameter, param_TransRefParameter);
        }

        public virtual int Kompas_Import_BudgetLines(string budgetLines_Budget, string budgetLines_Account,
            string budgetLines_Department, string budgetLines_CostCenter, string budgetLines_Purpose,
            string budgetLines_Project, Nullable<double> budgetLines_Amount_1, Nullable<double> budgetLines_Amount_2,
            Nullable<double> budgetLines_Amount_3, Nullable<double> budgetLines_Amount_4,
            Nullable<double> budgetLines_Amount_5, Nullable<double> budgetLines_Amount_6,
            Nullable<double> budgetLines_Amount_7, Nullable<double> budgetLines_Amount_8,
            Nullable<double> budgetLines_Amount_9, Nullable<double> budgetLines_Amount_10,
            Nullable<double> budgetLines_Amount_11, Nullable<double> budgetLines_Amount_12,
            Nullable<double> budgetLines_Amount_13, Nullable<double> budgetLines_Amount_14,
            Nullable<double> budgetLines_Amount_15, Nullable<double> budgetLines_Amount_16,
            Nullable<double> budgetLines_Amount_17, Nullable<double> budgetLines_Amount_18,
            Nullable<double> budgetLines_Amount_19, Nullable<double> budgetLines_Amount_20,
            Nullable<double> budgetLines_Amount_21, Nullable<double> budgetLines_Amount_22, string defaultDepartment,
            string defaultCostCenter, string defaultProject, string defaultPurpose, string userName,
            Nullable<bool> externalImport)
        {
            var budgetLines_BudgetParameter = budgetLines_Budget != null
                ? new ObjectParameter("BudgetLines_Budget", budgetLines_Budget)
                : new ObjectParameter("BudgetLines_Budget", typeof(string));

            var budgetLines_AccountParameter = budgetLines_Account != null
                ? new ObjectParameter("BudgetLines_Account", budgetLines_Account)
                : new ObjectParameter("BudgetLines_Account", typeof(string));

            var budgetLines_DepartmentParameter = budgetLines_Department != null
                ? new ObjectParameter("BudgetLines_Department", budgetLines_Department)
                : new ObjectParameter("BudgetLines_Department", typeof(string));

            var budgetLines_CostCenterParameter = budgetLines_CostCenter != null
                ? new ObjectParameter("BudgetLines_CostCenter", budgetLines_CostCenter)
                : new ObjectParameter("BudgetLines_CostCenter", typeof(string));

            var budgetLines_PurposeParameter = budgetLines_Purpose != null
                ? new ObjectParameter("BudgetLines_Purpose", budgetLines_Purpose)
                : new ObjectParameter("BudgetLines_Purpose", typeof(string));

            var budgetLines_ProjectParameter = budgetLines_Project != null
                ? new ObjectParameter("BudgetLines_Project", budgetLines_Project)
                : new ObjectParameter("BudgetLines_Project", typeof(string));

            var budgetLines_Amount_1Parameter = budgetLines_Amount_1.HasValue
                ? new ObjectParameter("BudgetLines_Amount_1", budgetLines_Amount_1)
                : new ObjectParameter("BudgetLines_Amount_1", typeof(double));

            var budgetLines_Amount_2Parameter = budgetLines_Amount_2.HasValue
                ? new ObjectParameter("BudgetLines_Amount_2", budgetLines_Amount_2)
                : new ObjectParameter("BudgetLines_Amount_2", typeof(double));

            var budgetLines_Amount_3Parameter = budgetLines_Amount_3.HasValue
                ? new ObjectParameter("BudgetLines_Amount_3", budgetLines_Amount_3)
                : new ObjectParameter("BudgetLines_Amount_3", typeof(double));

            var budgetLines_Amount_4Parameter = budgetLines_Amount_4.HasValue
                ? new ObjectParameter("BudgetLines_Amount_4", budgetLines_Amount_4)
                : new ObjectParameter("BudgetLines_Amount_4", typeof(double));

            var budgetLines_Amount_5Parameter = budgetLines_Amount_5.HasValue
                ? new ObjectParameter("BudgetLines_Amount_5", budgetLines_Amount_5)
                : new ObjectParameter("BudgetLines_Amount_5", typeof(double));

            var budgetLines_Amount_6Parameter = budgetLines_Amount_6.HasValue
                ? new ObjectParameter("BudgetLines_Amount_6", budgetLines_Amount_6)
                : new ObjectParameter("BudgetLines_Amount_6", typeof(double));

            var budgetLines_Amount_7Parameter = budgetLines_Amount_7.HasValue
                ? new ObjectParameter("BudgetLines_Amount_7", budgetLines_Amount_7)
                : new ObjectParameter("BudgetLines_Amount_7", typeof(double));

            var budgetLines_Amount_8Parameter = budgetLines_Amount_8.HasValue
                ? new ObjectParameter("BudgetLines_Amount_8", budgetLines_Amount_8)
                : new ObjectParameter("BudgetLines_Amount_8", typeof(double));

            var budgetLines_Amount_9Parameter = budgetLines_Amount_9.HasValue
                ? new ObjectParameter("BudgetLines_Amount_9", budgetLines_Amount_9)
                : new ObjectParameter("BudgetLines_Amount_9", typeof(double));

            var budgetLines_Amount_10Parameter = budgetLines_Amount_10.HasValue
                ? new ObjectParameter("BudgetLines_Amount_10", budgetLines_Amount_10)
                : new ObjectParameter("BudgetLines_Amount_10", typeof(double));

            var budgetLines_Amount_11Parameter = budgetLines_Amount_11.HasValue
                ? new ObjectParameter("BudgetLines_Amount_11", budgetLines_Amount_11)
                : new ObjectParameter("BudgetLines_Amount_11", typeof(double));

            var budgetLines_Amount_12Parameter = budgetLines_Amount_12.HasValue
                ? new ObjectParameter("BudgetLines_Amount_12", budgetLines_Amount_12)
                : new ObjectParameter("BudgetLines_Amount_12", typeof(double));

            var budgetLines_Amount_13Parameter = budgetLines_Amount_13.HasValue
                ? new ObjectParameter("BudgetLines_Amount_13", budgetLines_Amount_13)
                : new ObjectParameter("BudgetLines_Amount_13", typeof(double));

            var budgetLines_Amount_14Parameter = budgetLines_Amount_14.HasValue
                ? new ObjectParameter("BudgetLines_Amount_14", budgetLines_Amount_14)
                : new ObjectParameter("BudgetLines_Amount_14", typeof(double));

            var budgetLines_Amount_15Parameter = budgetLines_Amount_15.HasValue
                ? new ObjectParameter("BudgetLines_Amount_15", budgetLines_Amount_15)
                : new ObjectParameter("BudgetLines_Amount_15", typeof(double));

            var budgetLines_Amount_16Parameter = budgetLines_Amount_16.HasValue
                ? new ObjectParameter("BudgetLines_Amount_16", budgetLines_Amount_16)
                : new ObjectParameter("BudgetLines_Amount_16", typeof(double));

            var budgetLines_Amount_17Parameter = budgetLines_Amount_17.HasValue
                ? new ObjectParameter("BudgetLines_Amount_17", budgetLines_Amount_17)
                : new ObjectParameter("BudgetLines_Amount_17", typeof(double));

            var budgetLines_Amount_18Parameter = budgetLines_Amount_18.HasValue
                ? new ObjectParameter("BudgetLines_Amount_18", budgetLines_Amount_18)
                : new ObjectParameter("BudgetLines_Amount_18", typeof(double));

            var budgetLines_Amount_19Parameter = budgetLines_Amount_19.HasValue
                ? new ObjectParameter("BudgetLines_Amount_19", budgetLines_Amount_19)
                : new ObjectParameter("BudgetLines_Amount_19", typeof(double));

            var budgetLines_Amount_20Parameter = budgetLines_Amount_20.HasValue
                ? new ObjectParameter("BudgetLines_Amount_20", budgetLines_Amount_20)
                : new ObjectParameter("BudgetLines_Amount_20", typeof(double));

            var budgetLines_Amount_21Parameter = budgetLines_Amount_21.HasValue
                ? new ObjectParameter("BudgetLines_Amount_21", budgetLines_Amount_21)
                : new ObjectParameter("BudgetLines_Amount_21", typeof(double));

            var budgetLines_Amount_22Parameter = budgetLines_Amount_22.HasValue
                ? new ObjectParameter("BudgetLines_Amount_22", budgetLines_Amount_22)
                : new ObjectParameter("BudgetLines_Amount_22", typeof(double));

            var defaultDepartmentParameter = defaultDepartment != null
                ? new ObjectParameter("DefaultDepartment", defaultDepartment)
                : new ObjectParameter("DefaultDepartment", typeof(string));

            var defaultCostCenterParameter = defaultCostCenter != null
                ? new ObjectParameter("DefaultCostCenter", defaultCostCenter)
                : new ObjectParameter("DefaultCostCenter", typeof(string));

            var defaultProjectParameter = defaultProject != null
                ? new ObjectParameter("DefaultProject", defaultProject)
                : new ObjectParameter("DefaultProject", typeof(string));

            var defaultPurposeParameter = defaultPurpose != null
                ? new ObjectParameter("DefaultPurpose", defaultPurpose)
                : new ObjectParameter("DefaultPurpose", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Import_BudgetLines",
                budgetLines_BudgetParameter, budgetLines_AccountParameter, budgetLines_DepartmentParameter,
                budgetLines_CostCenterParameter, budgetLines_PurposeParameter, budgetLines_ProjectParameter,
                budgetLines_Amount_1Parameter, budgetLines_Amount_2Parameter, budgetLines_Amount_3Parameter,
                budgetLines_Amount_4Parameter, budgetLines_Amount_5Parameter, budgetLines_Amount_6Parameter,
                budgetLines_Amount_7Parameter, budgetLines_Amount_8Parameter, budgetLines_Amount_9Parameter,
                budgetLines_Amount_10Parameter, budgetLines_Amount_11Parameter, budgetLines_Amount_12Parameter,
                budgetLines_Amount_13Parameter, budgetLines_Amount_14Parameter, budgetLines_Amount_15Parameter,
                budgetLines_Amount_16Parameter, budgetLines_Amount_17Parameter, budgetLines_Amount_18Parameter,
                budgetLines_Amount_19Parameter, budgetLines_Amount_20Parameter, budgetLines_Amount_21Parameter,
                budgetLines_Amount_22Parameter, defaultDepartmentParameter, defaultCostCenterParameter,
                defaultProjectParameter, defaultPurposeParameter, userNameParameter, externalImportParameter);
        }

        public virtual int Kompas_Import_Change(string change_From, string change_To, Nullable<bool> change_AllowCombine,
            string internal_TableName, string internal_ColumnName, string userName, Nullable<bool> externalImport)
        {
            var change_FromParameter = change_From != null
                ? new ObjectParameter("Change_From", change_From)
                : new ObjectParameter("Change_From", typeof(string));

            var change_ToParameter = change_To != null
                ? new ObjectParameter("Change_To", change_To)
                : new ObjectParameter("Change_To", typeof(string));

            var change_AllowCombineParameter = change_AllowCombine.HasValue
                ? new ObjectParameter("Change_AllowCombine", change_AllowCombine)
                : new ObjectParameter("Change_AllowCombine", typeof(bool));

            var internal_TableNameParameter = internal_TableName != null
                ? new ObjectParameter("Internal_TableName", internal_TableName)
                : new ObjectParameter("Internal_TableName", typeof(string));

            var internal_ColumnNameParameter = internal_ColumnName != null
                ? new ObjectParameter("Internal_ColumnName", internal_ColumnName)
                : new ObjectParameter("Internal_ColumnName", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Import_Change",
                change_FromParameter, change_ToParameter, change_AllowCombineParameter, internal_TableNameParameter,
                internal_ColumnNameParameter, userNameParameter, externalImportParameter);
        }

        public virtual ObjectResult<Kompas_Import_DIGITALCAP_Files_Result> Kompas_Import_DIGITALCAP_Files(string data,
            string status, string orderCommunication, ObjectParameter firstOrderNo, ObjectParameter lastOrderNo)
        {
            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Import_DIGITALCAP_Files_Result>(
                    "Kompas_Import_DIGITALCAP_Files", dataParameter, statusParameter, orderCommunicationParameter,
                    firstOrderNo, lastOrderNo);
        }

        public virtual ObjectResult<Kompas_Import_EDIMATIC_Files_Result> Kompas_Import_EDIMATIC_Files(string data,
            string status, string orderCommunication, ObjectParameter firstOrderNo, ObjectParameter lastOrderNo)
        {
            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Import_EDIMATIC_Files_Result>(
                    "Kompas_Import_EDIMATIC_Files", dataParameter, statusParameter, orderCommunicationParameter,
                    firstOrderNo, lastOrderNo);
        }

        public virtual ObjectResult<Kompas_Import_EDIMATIC_Orders_Result> Kompas_Import_EDIMATIC_Orders(
            string firstOrderNo, string lastOrderNo, string status)
        {
            var firstOrderNoParameter = firstOrderNo != null
                ? new ObjectParameter("FirstOrderNo", firstOrderNo)
                : new ObjectParameter("FirstOrderNo", typeof(string));

            var lastOrderNoParameter = lastOrderNo != null
                ? new ObjectParameter("LastOrderNo", lastOrderNo)
                : new ObjectParameter("LastOrderNo", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Import_EDIMATIC_Orders_Result>(
                    "Kompas_Import_EDIMATIC_Orders", firstOrderNoParameter, lastOrderNoParameter, statusParameter);
        }

        public virtual ObjectResult<string> Kompas_Import_InventoryCount(Nullable<bool> text_AsUpdate,
            string inventoryCount_Journal, string inventoryCount_Item, string inventoryCount_Location,
            Nullable<double> inventoryCount_Counted, Nullable<double> inventoryCount_CostPrice,
            string inventoryCount_Department, string inventoryCount_CostCenter, string inventoryCount_Purpose,
            string inventoryCount_Project, string inventoryCount_Description, string inventoryCount_Parameter1,
            string inventoryCount_Parameter2, string inventoryCount_Placement, string inventoryCount_ItemParams,
            string userName, Nullable<bool> externalImport)
        {
            var text_AsUpdateParameter = text_AsUpdate.HasValue
                ? new ObjectParameter("Text_AsUpdate", text_AsUpdate)
                : new ObjectParameter("Text_AsUpdate", typeof(bool));

            var inventoryCount_JournalParameter = inventoryCount_Journal != null
                ? new ObjectParameter("InventoryCount_Journal", inventoryCount_Journal)
                : new ObjectParameter("InventoryCount_Journal", typeof(string));

            var inventoryCount_ItemParameter = inventoryCount_Item != null
                ? new ObjectParameter("InventoryCount_Item", inventoryCount_Item)
                : new ObjectParameter("InventoryCount_Item", typeof(string));

            var inventoryCount_LocationParameter = inventoryCount_Location != null
                ? new ObjectParameter("InventoryCount_Location", inventoryCount_Location)
                : new ObjectParameter("InventoryCount_Location", typeof(string));

            var inventoryCount_CountedParameter = inventoryCount_Counted.HasValue
                ? new ObjectParameter("InventoryCount_Counted", inventoryCount_Counted)
                : new ObjectParameter("InventoryCount_Counted", typeof(double));

            var inventoryCount_CostPriceParameter = inventoryCount_CostPrice.HasValue
                ? new ObjectParameter("InventoryCount_CostPrice", inventoryCount_CostPrice)
                : new ObjectParameter("InventoryCount_CostPrice", typeof(double));

            var inventoryCount_DepartmentParameter = inventoryCount_Department != null
                ? new ObjectParameter("InventoryCount_Department", inventoryCount_Department)
                : new ObjectParameter("InventoryCount_Department", typeof(string));

            var inventoryCount_CostCenterParameter = inventoryCount_CostCenter != null
                ? new ObjectParameter("InventoryCount_CostCenter", inventoryCount_CostCenter)
                : new ObjectParameter("InventoryCount_CostCenter", typeof(string));

            var inventoryCount_PurposeParameter = inventoryCount_Purpose != null
                ? new ObjectParameter("InventoryCount_Purpose", inventoryCount_Purpose)
                : new ObjectParameter("InventoryCount_Purpose", typeof(string));

            var inventoryCount_ProjectParameter = inventoryCount_Project != null
                ? new ObjectParameter("InventoryCount_Project", inventoryCount_Project)
                : new ObjectParameter("InventoryCount_Project", typeof(string));

            var inventoryCount_DescriptionParameter = inventoryCount_Description != null
                ? new ObjectParameter("InventoryCount_Description", inventoryCount_Description)
                : new ObjectParameter("InventoryCount_Description", typeof(string));

            var inventoryCount_Parameter1Parameter = inventoryCount_Parameter1 != null
                ? new ObjectParameter("InventoryCount_Parameter1", inventoryCount_Parameter1)
                : new ObjectParameter("InventoryCount_Parameter1", typeof(string));

            var inventoryCount_Parameter2Parameter = inventoryCount_Parameter2 != null
                ? new ObjectParameter("InventoryCount_Parameter2", inventoryCount_Parameter2)
                : new ObjectParameter("InventoryCount_Parameter2", typeof(string));

            var inventoryCount_PlacementParameter = inventoryCount_Placement != null
                ? new ObjectParameter("InventoryCount_Placement", inventoryCount_Placement)
                : new ObjectParameter("InventoryCount_Placement", typeof(string));

            var inventoryCount_ItemParamsParameter = inventoryCount_ItemParams != null
                ? new ObjectParameter("InventoryCount_ItemParams", inventoryCount_ItemParams)
                : new ObjectParameter("InventoryCount_ItemParams", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_Import_InventoryCount",
                text_AsUpdateParameter, inventoryCount_JournalParameter, inventoryCount_ItemParameter,
                inventoryCount_LocationParameter, inventoryCount_CountedParameter, inventoryCount_CostPriceParameter,
                inventoryCount_DepartmentParameter, inventoryCount_CostCenterParameter, inventoryCount_PurposeParameter,
                inventoryCount_ProjectParameter, inventoryCount_DescriptionParameter, inventoryCount_Parameter1Parameter,
                inventoryCount_Parameter2Parameter, inventoryCount_PlacementParameter,
                inventoryCount_ItemParamsParameter, userNameParameter, externalImportParameter);
        }

        public virtual ObjectResult<string> Kompas_Import_InventoryLocationWorksheet_WorkSheet(
            string inventoryLocationWorksheet_Journal, string inventoryLocationWorksheet_Item,
            string inventoryLocationWorksheet_LocationFrom, string inventoryLocationWorksheet_LocationTo,
            Nullable<double> inventoryLocationWorksheet_Quantity, string inventoryLocationWorksheet_Department,
            string inventoryLocationWorksheet_CostCenter, string inventoryLocationWorksheet_PurPose,
            string inventoryLocationWorksheet_Project, string inventoryLocationWorksheet_Description,
            string inventoryLocationWorksheet_Parameter1, string inventoryLocationWorksheet_Parameter2,
            Nullable<System.DateTime> inventoryLocationWorksheet_Date, string userName, Nullable<bool> externalImport)
        {
            var inventoryLocationWorksheet_JournalParameter = inventoryLocationWorksheet_Journal != null
                ? new ObjectParameter("InventoryLocationWorksheet_Journal", inventoryLocationWorksheet_Journal)
                : new ObjectParameter("InventoryLocationWorksheet_Journal", typeof(string));

            var inventoryLocationWorksheet_ItemParameter = inventoryLocationWorksheet_Item != null
                ? new ObjectParameter("InventoryLocationWorksheet_Item", inventoryLocationWorksheet_Item)
                : new ObjectParameter("InventoryLocationWorksheet_Item", typeof(string));

            var inventoryLocationWorksheet_LocationFromParameter = inventoryLocationWorksheet_LocationFrom != null
                ? new ObjectParameter("InventoryLocationWorksheet_LocationFrom", inventoryLocationWorksheet_LocationFrom)
                : new ObjectParameter("InventoryLocationWorksheet_LocationFrom", typeof(string));

            var inventoryLocationWorksheet_LocationToParameter = inventoryLocationWorksheet_LocationTo != null
                ? new ObjectParameter("InventoryLocationWorksheet_LocationTo", inventoryLocationWorksheet_LocationTo)
                : new ObjectParameter("InventoryLocationWorksheet_LocationTo", typeof(string));

            var inventoryLocationWorksheet_QuantityParameter = inventoryLocationWorksheet_Quantity.HasValue
                ? new ObjectParameter("InventoryLocationWorksheet_Quantity", inventoryLocationWorksheet_Quantity)
                : new ObjectParameter("InventoryLocationWorksheet_Quantity", typeof(double));

            var inventoryLocationWorksheet_DepartmentParameter = inventoryLocationWorksheet_Department != null
                ? new ObjectParameter("InventoryLocationWorksheet_Department", inventoryLocationWorksheet_Department)
                : new ObjectParameter("InventoryLocationWorksheet_Department", typeof(string));

            var inventoryLocationWorksheet_CostCenterParameter = inventoryLocationWorksheet_CostCenter != null
                ? new ObjectParameter("InventoryLocationWorksheet_CostCenter", inventoryLocationWorksheet_CostCenter)
                : new ObjectParameter("InventoryLocationWorksheet_CostCenter", typeof(string));

            var inventoryLocationWorksheet_PurPoseParameter = inventoryLocationWorksheet_PurPose != null
                ? new ObjectParameter("InventoryLocationWorksheet_PurPose", inventoryLocationWorksheet_PurPose)
                : new ObjectParameter("InventoryLocationWorksheet_PurPose", typeof(string));

            var inventoryLocationWorksheet_ProjectParameter = inventoryLocationWorksheet_Project != null
                ? new ObjectParameter("InventoryLocationWorksheet_Project", inventoryLocationWorksheet_Project)
                : new ObjectParameter("InventoryLocationWorksheet_Project", typeof(string));

            var inventoryLocationWorksheet_DescriptionParameter = inventoryLocationWorksheet_Description != null
                ? new ObjectParameter("InventoryLocationWorksheet_Description", inventoryLocationWorksheet_Description)
                : new ObjectParameter("InventoryLocationWorksheet_Description", typeof(string));

            var inventoryLocationWorksheet_Parameter1Parameter = inventoryLocationWorksheet_Parameter1 != null
                ? new ObjectParameter("InventoryLocationWorksheet_Parameter1", inventoryLocationWorksheet_Parameter1)
                : new ObjectParameter("InventoryLocationWorksheet_Parameter1", typeof(string));

            var inventoryLocationWorksheet_Parameter2Parameter = inventoryLocationWorksheet_Parameter2 != null
                ? new ObjectParameter("InventoryLocationWorksheet_Parameter2", inventoryLocationWorksheet_Parameter2)
                : new ObjectParameter("InventoryLocationWorksheet_Parameter2", typeof(string));

            var inventoryLocationWorksheet_DateParameter = inventoryLocationWorksheet_Date.HasValue
                ? new ObjectParameter("InventoryLocationWorksheet_Date", inventoryLocationWorksheet_Date)
                : new ObjectParameter("InventoryLocationWorksheet_Date", typeof(System.DateTime));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_Import_InventoryLocationWorksheet_WorkSheet", inventoryLocationWorksheet_JournalParameter,
                    inventoryLocationWorksheet_ItemParameter, inventoryLocationWorksheet_LocationFromParameter,
                    inventoryLocationWorksheet_LocationToParameter, inventoryLocationWorksheet_QuantityParameter,
                    inventoryLocationWorksheet_DepartmentParameter, inventoryLocationWorksheet_CostCenterParameter,
                    inventoryLocationWorksheet_PurPoseParameter, inventoryLocationWorksheet_ProjectParameter,
                    inventoryLocationWorksheet_DescriptionParameter, inventoryLocationWorksheet_Parameter1Parameter,
                    inventoryLocationWorksheet_Parameter2Parameter, inventoryLocationWorksheet_DateParameter,
                    userNameParameter, externalImportParameter);
        }

        public virtual int Kompas_Import_LinesEntry_Orders(string linesEntry_OrderNo,
            Nullable<System.DateTime> linesEntry_Delivery, string linesEntry_Item, string linesEntry_Location,
            Nullable<double> linesEntry_Ordered, Nullable<double> linesEntry_Deliver, string linesEntry_Description,
            Nullable<double> linesEntry_Price, Nullable<double> linesEntry_Discount, string linesEntry_BatchNo,
            string linesEntry_Department, string linesEntry_CostCenter, string linesEntry_PurPose,
            string linesEntry_Project, Nullable<double> linesEntry_CostPrice, string linesEntry_RemarksBefore,
            string linesEntry_RemarksAfter, string linesEntry_RefPurchaseNo, string linesEntry_RefOrderNo,
            string linesEntry_Account, string linesEntry_Employee, Nullable<bool> linesEntry_InternalLine,
            string linesEntry_Parameter1, string linesEntry_Parameter2, string linesEntry_Optional1,
            string linesEntry_Optional2, Nullable<int> linesEntry_JobNo, Nullable<double> linesEntry_OptionalNumber1,
            Nullable<double> linesEntry_OptionalNumber2, Nullable<System.DateTime> linesEntry_OptionalDate1,
            Nullable<System.DateTime> linesEntry_OptionalDate2, string userName, Nullable<bool> externalImport)
        {
            var linesEntry_OrderNoParameter = linesEntry_OrderNo != null
                ? new ObjectParameter("LinesEntry_OrderNo", linesEntry_OrderNo)
                : new ObjectParameter("LinesEntry_OrderNo", typeof(string));

            var linesEntry_DeliveryParameter = linesEntry_Delivery.HasValue
                ? new ObjectParameter("LinesEntry_Delivery", linesEntry_Delivery)
                : new ObjectParameter("LinesEntry_Delivery", typeof(System.DateTime));

            var linesEntry_ItemParameter = linesEntry_Item != null
                ? new ObjectParameter("LinesEntry_Item", linesEntry_Item)
                : new ObjectParameter("LinesEntry_Item", typeof(string));

            var linesEntry_LocationParameter = linesEntry_Location != null
                ? new ObjectParameter("LinesEntry_Location", linesEntry_Location)
                : new ObjectParameter("LinesEntry_Location", typeof(string));

            var linesEntry_OrderedParameter = linesEntry_Ordered.HasValue
                ? new ObjectParameter("LinesEntry_Ordered", linesEntry_Ordered)
                : new ObjectParameter("LinesEntry_Ordered", typeof(double));

            var linesEntry_DeliverParameter = linesEntry_Deliver.HasValue
                ? new ObjectParameter("LinesEntry_Deliver", linesEntry_Deliver)
                : new ObjectParameter("LinesEntry_Deliver", typeof(double));

            var linesEntry_DescriptionParameter = linesEntry_Description != null
                ? new ObjectParameter("LinesEntry_Description", linesEntry_Description)
                : new ObjectParameter("LinesEntry_Description", typeof(string));

            var linesEntry_PriceParameter = linesEntry_Price.HasValue
                ? new ObjectParameter("LinesEntry_Price", linesEntry_Price)
                : new ObjectParameter("LinesEntry_Price", typeof(double));

            var linesEntry_DiscountParameter = linesEntry_Discount.HasValue
                ? new ObjectParameter("LinesEntry_Discount", linesEntry_Discount)
                : new ObjectParameter("LinesEntry_Discount", typeof(double));

            var linesEntry_BatchNoParameter = linesEntry_BatchNo != null
                ? new ObjectParameter("LinesEntry_BatchNo", linesEntry_BatchNo)
                : new ObjectParameter("LinesEntry_BatchNo", typeof(string));

            var linesEntry_DepartmentParameter = linesEntry_Department != null
                ? new ObjectParameter("LinesEntry_Department", linesEntry_Department)
                : new ObjectParameter("LinesEntry_Department", typeof(string));

            var linesEntry_CostCenterParameter = linesEntry_CostCenter != null
                ? new ObjectParameter("LinesEntry_CostCenter", linesEntry_CostCenter)
                : new ObjectParameter("LinesEntry_CostCenter", typeof(string));

            var linesEntry_PurPoseParameter = linesEntry_PurPose != null
                ? new ObjectParameter("LinesEntry_PurPose", linesEntry_PurPose)
                : new ObjectParameter("LinesEntry_PurPose", typeof(string));

            var linesEntry_ProjectParameter = linesEntry_Project != null
                ? new ObjectParameter("LinesEntry_Project", linesEntry_Project)
                : new ObjectParameter("LinesEntry_Project", typeof(string));

            var linesEntry_CostPriceParameter = linesEntry_CostPrice.HasValue
                ? new ObjectParameter("LinesEntry_CostPrice", linesEntry_CostPrice)
                : new ObjectParameter("LinesEntry_CostPrice", typeof(double));

            var linesEntry_RemarksBeforeParameter = linesEntry_RemarksBefore != null
                ? new ObjectParameter("LinesEntry_RemarksBefore", linesEntry_RemarksBefore)
                : new ObjectParameter("LinesEntry_RemarksBefore", typeof(string));

            var linesEntry_RemarksAfterParameter = linesEntry_RemarksAfter != null
                ? new ObjectParameter("LinesEntry_RemarksAfter", linesEntry_RemarksAfter)
                : new ObjectParameter("LinesEntry_RemarksAfter", typeof(string));

            var linesEntry_RefPurchaseNoParameter = linesEntry_RefPurchaseNo != null
                ? new ObjectParameter("LinesEntry_RefPurchaseNo", linesEntry_RefPurchaseNo)
                : new ObjectParameter("LinesEntry_RefPurchaseNo", typeof(string));

            var linesEntry_RefOrderNoParameter = linesEntry_RefOrderNo != null
                ? new ObjectParameter("LinesEntry_RefOrderNo", linesEntry_RefOrderNo)
                : new ObjectParameter("LinesEntry_RefOrderNo", typeof(string));

            var linesEntry_AccountParameter = linesEntry_Account != null
                ? new ObjectParameter("LinesEntry_Account", linesEntry_Account)
                : new ObjectParameter("LinesEntry_Account", typeof(string));

            var linesEntry_EmployeeParameter = linesEntry_Employee != null
                ? new ObjectParameter("LinesEntry_Employee", linesEntry_Employee)
                : new ObjectParameter("LinesEntry_Employee", typeof(string));

            var linesEntry_InternalLineParameter = linesEntry_InternalLine.HasValue
                ? new ObjectParameter("LinesEntry_InternalLine", linesEntry_InternalLine)
                : new ObjectParameter("LinesEntry_InternalLine", typeof(bool));

            var linesEntry_Parameter1Parameter = linesEntry_Parameter1 != null
                ? new ObjectParameter("LinesEntry_Parameter1", linesEntry_Parameter1)
                : new ObjectParameter("LinesEntry_Parameter1", typeof(string));

            var linesEntry_Parameter2Parameter = linesEntry_Parameter2 != null
                ? new ObjectParameter("LinesEntry_Parameter2", linesEntry_Parameter2)
                : new ObjectParameter("LinesEntry_Parameter2", typeof(string));

            var linesEntry_Optional1Parameter = linesEntry_Optional1 != null
                ? new ObjectParameter("LinesEntry_Optional1", linesEntry_Optional1)
                : new ObjectParameter("LinesEntry_Optional1", typeof(string));

            var linesEntry_Optional2Parameter = linesEntry_Optional2 != null
                ? new ObjectParameter("LinesEntry_Optional2", linesEntry_Optional2)
                : new ObjectParameter("LinesEntry_Optional2", typeof(string));

            var linesEntry_JobNoParameter = linesEntry_JobNo.HasValue
                ? new ObjectParameter("LinesEntry_JobNo", linesEntry_JobNo)
                : new ObjectParameter("LinesEntry_JobNo", typeof(int));

            var linesEntry_OptionalNumber1Parameter = linesEntry_OptionalNumber1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber1", linesEntry_OptionalNumber1)
                : new ObjectParameter("LinesEntry_OptionalNumber1", typeof(double));

            var linesEntry_OptionalNumber2Parameter = linesEntry_OptionalNumber2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber2", linesEntry_OptionalNumber2)
                : new ObjectParameter("LinesEntry_OptionalNumber2", typeof(double));

            var linesEntry_OptionalDate1Parameter = linesEntry_OptionalDate1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate1", linesEntry_OptionalDate1)
                : new ObjectParameter("LinesEntry_OptionalDate1", typeof(System.DateTime));

            var linesEntry_OptionalDate2Parameter = linesEntry_OptionalDate2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate2", linesEntry_OptionalDate2)
                : new ObjectParameter("LinesEntry_OptionalDate2", typeof(System.DateTime));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Import_LinesEntry_Orders",
                linesEntry_OrderNoParameter, linesEntry_DeliveryParameter, linesEntry_ItemParameter,
                linesEntry_LocationParameter, linesEntry_OrderedParameter, linesEntry_DeliverParameter,
                linesEntry_DescriptionParameter, linesEntry_PriceParameter, linesEntry_DiscountParameter,
                linesEntry_BatchNoParameter, linesEntry_DepartmentParameter, linesEntry_CostCenterParameter,
                linesEntry_PurPoseParameter, linesEntry_ProjectParameter, linesEntry_CostPriceParameter,
                linesEntry_RemarksBeforeParameter, linesEntry_RemarksAfterParameter, linesEntry_RefPurchaseNoParameter,
                linesEntry_RefOrderNoParameter, linesEntry_AccountParameter, linesEntry_EmployeeParameter,
                linesEntry_InternalLineParameter, linesEntry_Parameter1Parameter, linesEntry_Parameter2Parameter,
                linesEntry_Optional1Parameter, linesEntry_Optional2Parameter, linesEntry_JobNoParameter,
                linesEntry_OptionalNumber1Parameter, linesEntry_OptionalNumber2Parameter,
                linesEntry_OptionalDate1Parameter, linesEntry_OptionalDate2Parameter, userNameParameter,
                externalImportParameter);
        }

        public virtual int Kompas_Import_LinesEntry_OrdersWorkSheet(string linesEntry_Journal, string linesEntry_OrderNo,
            Nullable<System.DateTime> linesEntry_Delivery, string linesEntry_Item, string linesEntry_Location,
            Nullable<double> linesEntry_Ordered, Nullable<double> linesEntry_Deliver, string linesEntry_Description,
            Nullable<double> linesEntry_Price, Nullable<double> linesEntry_Discount, string linesEntry_BatchNo,
            string linesEntry_Department, string linesEntry_CostCenter, string linesEntry_PurPose,
            string linesEntry_Project, Nullable<double> linesEntry_CostPrice, string linesEntry_RemarksBefore,
            string linesEntry_RemarksAfter, string linesEntry_RefPurchaseNo, string linesEntry_RefOrderNo,
            string linesEntry_Account, string linesEntry_Employee, Nullable<bool> linesEntry_InternalLine,
            string linesEntry_Parameter1, string linesEntry_Parameter2, string linesEntry_Optional1,
            string linesEntry_Optional2, Nullable<int> linesEntry_JobNo, Nullable<double> linesEntry_OptionalNumber1,
            Nullable<double> linesEntry_OptionalNumber2, Nullable<System.DateTime> linesEntry_OptionalDate1,
            Nullable<System.DateTime> linesEntry_OptionalDate2, string userName, Nullable<bool> externalImport)
        {
            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            var linesEntry_OrderNoParameter = linesEntry_OrderNo != null
                ? new ObjectParameter("LinesEntry_OrderNo", linesEntry_OrderNo)
                : new ObjectParameter("LinesEntry_OrderNo", typeof(string));

            var linesEntry_DeliveryParameter = linesEntry_Delivery.HasValue
                ? new ObjectParameter("LinesEntry_Delivery", linesEntry_Delivery)
                : new ObjectParameter("LinesEntry_Delivery", typeof(System.DateTime));

            var linesEntry_ItemParameter = linesEntry_Item != null
                ? new ObjectParameter("LinesEntry_Item", linesEntry_Item)
                : new ObjectParameter("LinesEntry_Item", typeof(string));

            var linesEntry_LocationParameter = linesEntry_Location != null
                ? new ObjectParameter("LinesEntry_Location", linesEntry_Location)
                : new ObjectParameter("LinesEntry_Location", typeof(string));

            var linesEntry_OrderedParameter = linesEntry_Ordered.HasValue
                ? new ObjectParameter("LinesEntry_Ordered", linesEntry_Ordered)
                : new ObjectParameter("LinesEntry_Ordered", typeof(double));

            var linesEntry_DeliverParameter = linesEntry_Deliver.HasValue
                ? new ObjectParameter("LinesEntry_Deliver", linesEntry_Deliver)
                : new ObjectParameter("LinesEntry_Deliver", typeof(double));

            var linesEntry_DescriptionParameter = linesEntry_Description != null
                ? new ObjectParameter("LinesEntry_Description", linesEntry_Description)
                : new ObjectParameter("LinesEntry_Description", typeof(string));

            var linesEntry_PriceParameter = linesEntry_Price.HasValue
                ? new ObjectParameter("LinesEntry_Price", linesEntry_Price)
                : new ObjectParameter("LinesEntry_Price", typeof(double));

            var linesEntry_DiscountParameter = linesEntry_Discount.HasValue
                ? new ObjectParameter("LinesEntry_Discount", linesEntry_Discount)
                : new ObjectParameter("LinesEntry_Discount", typeof(double));

            var linesEntry_BatchNoParameter = linesEntry_BatchNo != null
                ? new ObjectParameter("LinesEntry_BatchNo", linesEntry_BatchNo)
                : new ObjectParameter("LinesEntry_BatchNo", typeof(string));

            var linesEntry_DepartmentParameter = linesEntry_Department != null
                ? new ObjectParameter("LinesEntry_Department", linesEntry_Department)
                : new ObjectParameter("LinesEntry_Department", typeof(string));

            var linesEntry_CostCenterParameter = linesEntry_CostCenter != null
                ? new ObjectParameter("LinesEntry_CostCenter", linesEntry_CostCenter)
                : new ObjectParameter("LinesEntry_CostCenter", typeof(string));

            var linesEntry_PurPoseParameter = linesEntry_PurPose != null
                ? new ObjectParameter("LinesEntry_PurPose", linesEntry_PurPose)
                : new ObjectParameter("LinesEntry_PurPose", typeof(string));

            var linesEntry_ProjectParameter = linesEntry_Project != null
                ? new ObjectParameter("LinesEntry_Project", linesEntry_Project)
                : new ObjectParameter("LinesEntry_Project", typeof(string));

            var linesEntry_CostPriceParameter = linesEntry_CostPrice.HasValue
                ? new ObjectParameter("LinesEntry_CostPrice", linesEntry_CostPrice)
                : new ObjectParameter("LinesEntry_CostPrice", typeof(double));

            var linesEntry_RemarksBeforeParameter = linesEntry_RemarksBefore != null
                ? new ObjectParameter("LinesEntry_RemarksBefore", linesEntry_RemarksBefore)
                : new ObjectParameter("LinesEntry_RemarksBefore", typeof(string));

            var linesEntry_RemarksAfterParameter = linesEntry_RemarksAfter != null
                ? new ObjectParameter("LinesEntry_RemarksAfter", linesEntry_RemarksAfter)
                : new ObjectParameter("LinesEntry_RemarksAfter", typeof(string));

            var linesEntry_RefPurchaseNoParameter = linesEntry_RefPurchaseNo != null
                ? new ObjectParameter("LinesEntry_RefPurchaseNo", linesEntry_RefPurchaseNo)
                : new ObjectParameter("LinesEntry_RefPurchaseNo", typeof(string));

            var linesEntry_RefOrderNoParameter = linesEntry_RefOrderNo != null
                ? new ObjectParameter("LinesEntry_RefOrderNo", linesEntry_RefOrderNo)
                : new ObjectParameter("LinesEntry_RefOrderNo", typeof(string));

            var linesEntry_AccountParameter = linesEntry_Account != null
                ? new ObjectParameter("LinesEntry_Account", linesEntry_Account)
                : new ObjectParameter("LinesEntry_Account", typeof(string));

            var linesEntry_EmployeeParameter = linesEntry_Employee != null
                ? new ObjectParameter("LinesEntry_Employee", linesEntry_Employee)
                : new ObjectParameter("LinesEntry_Employee", typeof(string));

            var linesEntry_InternalLineParameter = linesEntry_InternalLine.HasValue
                ? new ObjectParameter("LinesEntry_InternalLine", linesEntry_InternalLine)
                : new ObjectParameter("LinesEntry_InternalLine", typeof(bool));

            var linesEntry_Parameter1Parameter = linesEntry_Parameter1 != null
                ? new ObjectParameter("LinesEntry_Parameter1", linesEntry_Parameter1)
                : new ObjectParameter("LinesEntry_Parameter1", typeof(string));

            var linesEntry_Parameter2Parameter = linesEntry_Parameter2 != null
                ? new ObjectParameter("LinesEntry_Parameter2", linesEntry_Parameter2)
                : new ObjectParameter("LinesEntry_Parameter2", typeof(string));

            var linesEntry_Optional1Parameter = linesEntry_Optional1 != null
                ? new ObjectParameter("LinesEntry_Optional1", linesEntry_Optional1)
                : new ObjectParameter("LinesEntry_Optional1", typeof(string));

            var linesEntry_Optional2Parameter = linesEntry_Optional2 != null
                ? new ObjectParameter("LinesEntry_Optional2", linesEntry_Optional2)
                : new ObjectParameter("LinesEntry_Optional2", typeof(string));

            var linesEntry_JobNoParameter = linesEntry_JobNo.HasValue
                ? new ObjectParameter("LinesEntry_JobNo", linesEntry_JobNo)
                : new ObjectParameter("LinesEntry_JobNo", typeof(int));

            var linesEntry_OptionalNumber1Parameter = linesEntry_OptionalNumber1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber1", linesEntry_OptionalNumber1)
                : new ObjectParameter("LinesEntry_OptionalNumber1", typeof(double));

            var linesEntry_OptionalNumber2Parameter = linesEntry_OptionalNumber2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber2", linesEntry_OptionalNumber2)
                : new ObjectParameter("LinesEntry_OptionalNumber2", typeof(double));

            var linesEntry_OptionalDate1Parameter = linesEntry_OptionalDate1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate1", linesEntry_OptionalDate1)
                : new ObjectParameter("LinesEntry_OptionalDate1", typeof(System.DateTime));

            var linesEntry_OptionalDate2Parameter = linesEntry_OptionalDate2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate2", linesEntry_OptionalDate2)
                : new ObjectParameter("LinesEntry_OptionalDate2", typeof(System.DateTime));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Import_LinesEntry_OrdersWorkSheet", linesEntry_JournalParameter, linesEntry_OrderNoParameter,
                    linesEntry_DeliveryParameter, linesEntry_ItemParameter, linesEntry_LocationParameter,
                    linesEntry_OrderedParameter, linesEntry_DeliverParameter, linesEntry_DescriptionParameter,
                    linesEntry_PriceParameter, linesEntry_DiscountParameter, linesEntry_BatchNoParameter,
                    linesEntry_DepartmentParameter, linesEntry_CostCenterParameter, linesEntry_PurPoseParameter,
                    linesEntry_ProjectParameter, linesEntry_CostPriceParameter, linesEntry_RemarksBeforeParameter,
                    linesEntry_RemarksAfterParameter, linesEntry_RefPurchaseNoParameter, linesEntry_RefOrderNoParameter,
                    linesEntry_AccountParameter, linesEntry_EmployeeParameter, linesEntry_InternalLineParameter,
                    linesEntry_Parameter1Parameter, linesEntry_Parameter2Parameter, linesEntry_Optional1Parameter,
                    linesEntry_Optional2Parameter, linesEntry_JobNoParameter, linesEntry_OptionalNumber1Parameter,
                    linesEntry_OptionalNumber2Parameter, linesEntry_OptionalDate1Parameter,
                    linesEntry_OptionalDate2Parameter, userNameParameter, externalImportParameter);
        }

        public virtual ObjectResult<string> Kompas_Import_LinesEntry_ProjectWorkSheet(string linesEntry_Journal,
            Nullable<System.DateTime> linesEntry_Delivery, string linesEntry_Item, string linesEntry_Location,
            Nullable<double> linesEntry_Ordered, string linesEntry_Description, string linesEntry_BatchNo,
            string linesEntry_Voucher, string linesEntry_Department, string linesEntry_CostCenter,
            string linesEntry_PurPose, string linesEntry_Project, Nullable<double> linesEntry_CostPrice,
            string linesEntry_Account, string linesEntry_Employee, string linesEntry_Parameter1,
            string linesEntry_Parameter2, string userName, Nullable<bool> externalImport)
        {
            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            var linesEntry_DeliveryParameter = linesEntry_Delivery.HasValue
                ? new ObjectParameter("LinesEntry_Delivery", linesEntry_Delivery)
                : new ObjectParameter("LinesEntry_Delivery", typeof(System.DateTime));

            var linesEntry_ItemParameter = linesEntry_Item != null
                ? new ObjectParameter("LinesEntry_Item", linesEntry_Item)
                : new ObjectParameter("LinesEntry_Item", typeof(string));

            var linesEntry_LocationParameter = linesEntry_Location != null
                ? new ObjectParameter("LinesEntry_Location", linesEntry_Location)
                : new ObjectParameter("LinesEntry_Location", typeof(string));

            var linesEntry_OrderedParameter = linesEntry_Ordered.HasValue
                ? new ObjectParameter("LinesEntry_Ordered", linesEntry_Ordered)
                : new ObjectParameter("LinesEntry_Ordered", typeof(double));

            var linesEntry_DescriptionParameter = linesEntry_Description != null
                ? new ObjectParameter("LinesEntry_Description", linesEntry_Description)
                : new ObjectParameter("LinesEntry_Description", typeof(string));

            var linesEntry_BatchNoParameter = linesEntry_BatchNo != null
                ? new ObjectParameter("LinesEntry_BatchNo", linesEntry_BatchNo)
                : new ObjectParameter("LinesEntry_BatchNo", typeof(string));

            var linesEntry_VoucherParameter = linesEntry_Voucher != null
                ? new ObjectParameter("LinesEntry_Voucher", linesEntry_Voucher)
                : new ObjectParameter("LinesEntry_Voucher", typeof(string));

            var linesEntry_DepartmentParameter = linesEntry_Department != null
                ? new ObjectParameter("LinesEntry_Department", linesEntry_Department)
                : new ObjectParameter("LinesEntry_Department", typeof(string));

            var linesEntry_CostCenterParameter = linesEntry_CostCenter != null
                ? new ObjectParameter("LinesEntry_CostCenter", linesEntry_CostCenter)
                : new ObjectParameter("LinesEntry_CostCenter", typeof(string));

            var linesEntry_PurPoseParameter = linesEntry_PurPose != null
                ? new ObjectParameter("LinesEntry_PurPose", linesEntry_PurPose)
                : new ObjectParameter("LinesEntry_PurPose", typeof(string));

            var linesEntry_ProjectParameter = linesEntry_Project != null
                ? new ObjectParameter("LinesEntry_Project", linesEntry_Project)
                : new ObjectParameter("LinesEntry_Project", typeof(string));

            var linesEntry_CostPriceParameter = linesEntry_CostPrice.HasValue
                ? new ObjectParameter("LinesEntry_CostPrice", linesEntry_CostPrice)
                : new ObjectParameter("LinesEntry_CostPrice", typeof(double));

            var linesEntry_AccountParameter = linesEntry_Account != null
                ? new ObjectParameter("LinesEntry_Account", linesEntry_Account)
                : new ObjectParameter("LinesEntry_Account", typeof(string));

            var linesEntry_EmployeeParameter = linesEntry_Employee != null
                ? new ObjectParameter("LinesEntry_Employee", linesEntry_Employee)
                : new ObjectParameter("LinesEntry_Employee", typeof(string));

            var linesEntry_Parameter1Parameter = linesEntry_Parameter1 != null
                ? new ObjectParameter("LinesEntry_Parameter1", linesEntry_Parameter1)
                : new ObjectParameter("LinesEntry_Parameter1", typeof(string));

            var linesEntry_Parameter2Parameter = linesEntry_Parameter2 != null
                ? new ObjectParameter("LinesEntry_Parameter2", linesEntry_Parameter2)
                : new ObjectParameter("LinesEntry_Parameter2", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_Import_LinesEntry_ProjectWorkSheet", linesEntry_JournalParameter,
                    linesEntry_DeliveryParameter, linesEntry_ItemParameter, linesEntry_LocationParameter,
                    linesEntry_OrderedParameter, linesEntry_DescriptionParameter, linesEntry_BatchNoParameter,
                    linesEntry_VoucherParameter, linesEntry_DepartmentParameter, linesEntry_CostCenterParameter,
                    linesEntry_PurPoseParameter, linesEntry_ProjectParameter, linesEntry_CostPriceParameter,
                    linesEntry_AccountParameter, linesEntry_EmployeeParameter, linesEntry_Parameter1Parameter,
                    linesEntry_Parameter2Parameter, userNameParameter, externalImportParameter);
        }

        public virtual int Kompas_Import_LinesEntry_Purchases(string linesEntry_PurchaseNo,
            Nullable<System.DateTime> linesEntry_Delivery, string linesEntry_Item, string linesEntry_Location,
            Nullable<double> linesEntry_Ordered, Nullable<double> linesEntry_Deliver, string linesEntry_Description,
            Nullable<double> linesEntry_Price, Nullable<double> linesEntry_Discount, string linesEntry_BatchNo,
            string linesEntry_Department, string linesEntry_CostCenter, string linesEntry_PurPose,
            string linesEntry_Project, Nullable<double> linesEntry_CostPrice, string linesEntry_RemarksBefore,
            string linesEntry_RemarksAfter, string linesEntry_RefPurchaseNo, string linesEntry_RefOrderNo,
            string linesEntry_Account, string linesEntry_Employee, string linesEntry_Parameter1,
            string linesEntry_Parameter2, string linesEntry_Optional1, string linesEntry_Optional2,
            Nullable<int> linesEntry_JobNo, Nullable<double> linesEntry_OptionalNumber1,
            Nullable<double> linesEntry_OptionalNumber2, Nullable<System.DateTime> linesEntry_OptionalDate1,
            Nullable<System.DateTime> linesEntry_OptionalDate2, string userName, Nullable<bool> externalImport)
        {
            var linesEntry_PurchaseNoParameter = linesEntry_PurchaseNo != null
                ? new ObjectParameter("LinesEntry_PurchaseNo", linesEntry_PurchaseNo)
                : new ObjectParameter("LinesEntry_PurchaseNo", typeof(string));

            var linesEntry_DeliveryParameter = linesEntry_Delivery.HasValue
                ? new ObjectParameter("LinesEntry_Delivery", linesEntry_Delivery)
                : new ObjectParameter("LinesEntry_Delivery", typeof(System.DateTime));

            var linesEntry_ItemParameter = linesEntry_Item != null
                ? new ObjectParameter("LinesEntry_Item", linesEntry_Item)
                : new ObjectParameter("LinesEntry_Item", typeof(string));

            var linesEntry_LocationParameter = linesEntry_Location != null
                ? new ObjectParameter("LinesEntry_Location", linesEntry_Location)
                : new ObjectParameter("LinesEntry_Location", typeof(string));

            var linesEntry_OrderedParameter = linesEntry_Ordered.HasValue
                ? new ObjectParameter("LinesEntry_Ordered", linesEntry_Ordered)
                : new ObjectParameter("LinesEntry_Ordered", typeof(double));

            var linesEntry_DeliverParameter = linesEntry_Deliver.HasValue
                ? new ObjectParameter("LinesEntry_Deliver", linesEntry_Deliver)
                : new ObjectParameter("LinesEntry_Deliver", typeof(double));

            var linesEntry_DescriptionParameter = linesEntry_Description != null
                ? new ObjectParameter("LinesEntry_Description", linesEntry_Description)
                : new ObjectParameter("LinesEntry_Description", typeof(string));

            var linesEntry_PriceParameter = linesEntry_Price.HasValue
                ? new ObjectParameter("LinesEntry_Price", linesEntry_Price)
                : new ObjectParameter("LinesEntry_Price", typeof(double));

            var linesEntry_DiscountParameter = linesEntry_Discount.HasValue
                ? new ObjectParameter("LinesEntry_Discount", linesEntry_Discount)
                : new ObjectParameter("LinesEntry_Discount", typeof(double));

            var linesEntry_BatchNoParameter = linesEntry_BatchNo != null
                ? new ObjectParameter("LinesEntry_BatchNo", linesEntry_BatchNo)
                : new ObjectParameter("LinesEntry_BatchNo", typeof(string));

            var linesEntry_DepartmentParameter = linesEntry_Department != null
                ? new ObjectParameter("LinesEntry_Department", linesEntry_Department)
                : new ObjectParameter("LinesEntry_Department", typeof(string));

            var linesEntry_CostCenterParameter = linesEntry_CostCenter != null
                ? new ObjectParameter("LinesEntry_CostCenter", linesEntry_CostCenter)
                : new ObjectParameter("LinesEntry_CostCenter", typeof(string));

            var linesEntry_PurPoseParameter = linesEntry_PurPose != null
                ? new ObjectParameter("LinesEntry_PurPose", linesEntry_PurPose)
                : new ObjectParameter("LinesEntry_PurPose", typeof(string));

            var linesEntry_ProjectParameter = linesEntry_Project != null
                ? new ObjectParameter("LinesEntry_Project", linesEntry_Project)
                : new ObjectParameter("LinesEntry_Project", typeof(string));

            var linesEntry_CostPriceParameter = linesEntry_CostPrice.HasValue
                ? new ObjectParameter("LinesEntry_CostPrice", linesEntry_CostPrice)
                : new ObjectParameter("LinesEntry_CostPrice", typeof(double));

            var linesEntry_RemarksBeforeParameter = linesEntry_RemarksBefore != null
                ? new ObjectParameter("LinesEntry_RemarksBefore", linesEntry_RemarksBefore)
                : new ObjectParameter("LinesEntry_RemarksBefore", typeof(string));

            var linesEntry_RemarksAfterParameter = linesEntry_RemarksAfter != null
                ? new ObjectParameter("LinesEntry_RemarksAfter", linesEntry_RemarksAfter)
                : new ObjectParameter("LinesEntry_RemarksAfter", typeof(string));

            var linesEntry_RefPurchaseNoParameter = linesEntry_RefPurchaseNo != null
                ? new ObjectParameter("LinesEntry_RefPurchaseNo", linesEntry_RefPurchaseNo)
                : new ObjectParameter("LinesEntry_RefPurchaseNo", typeof(string));

            var linesEntry_RefOrderNoParameter = linesEntry_RefOrderNo != null
                ? new ObjectParameter("LinesEntry_RefOrderNo", linesEntry_RefOrderNo)
                : new ObjectParameter("LinesEntry_RefOrderNo", typeof(string));

            var linesEntry_AccountParameter = linesEntry_Account != null
                ? new ObjectParameter("LinesEntry_Account", linesEntry_Account)
                : new ObjectParameter("LinesEntry_Account", typeof(string));

            var linesEntry_EmployeeParameter = linesEntry_Employee != null
                ? new ObjectParameter("LinesEntry_Employee", linesEntry_Employee)
                : new ObjectParameter("LinesEntry_Employee", typeof(string));

            var linesEntry_Parameter1Parameter = linesEntry_Parameter1 != null
                ? new ObjectParameter("LinesEntry_Parameter1", linesEntry_Parameter1)
                : new ObjectParameter("LinesEntry_Parameter1", typeof(string));

            var linesEntry_Parameter2Parameter = linesEntry_Parameter2 != null
                ? new ObjectParameter("LinesEntry_Parameter2", linesEntry_Parameter2)
                : new ObjectParameter("LinesEntry_Parameter2", typeof(string));

            var linesEntry_Optional1Parameter = linesEntry_Optional1 != null
                ? new ObjectParameter("LinesEntry_Optional1", linesEntry_Optional1)
                : new ObjectParameter("LinesEntry_Optional1", typeof(string));

            var linesEntry_Optional2Parameter = linesEntry_Optional2 != null
                ? new ObjectParameter("LinesEntry_Optional2", linesEntry_Optional2)
                : new ObjectParameter("LinesEntry_Optional2", typeof(string));

            var linesEntry_JobNoParameter = linesEntry_JobNo.HasValue
                ? new ObjectParameter("LinesEntry_JobNo", linesEntry_JobNo)
                : new ObjectParameter("LinesEntry_JobNo", typeof(int));

            var linesEntry_OptionalNumber1Parameter = linesEntry_OptionalNumber1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber1", linesEntry_OptionalNumber1)
                : new ObjectParameter("LinesEntry_OptionalNumber1", typeof(double));

            var linesEntry_OptionalNumber2Parameter = linesEntry_OptionalNumber2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalNumber2", linesEntry_OptionalNumber2)
                : new ObjectParameter("LinesEntry_OptionalNumber2", typeof(double));

            var linesEntry_OptionalDate1Parameter = linesEntry_OptionalDate1.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate1", linesEntry_OptionalDate1)
                : new ObjectParameter("LinesEntry_OptionalDate1", typeof(System.DateTime));

            var linesEntry_OptionalDate2Parameter = linesEntry_OptionalDate2.HasValue
                ? new ObjectParameter("LinesEntry_OptionalDate2", linesEntry_OptionalDate2)
                : new ObjectParameter("LinesEntry_OptionalDate2", typeof(System.DateTime));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Import_LinesEntry_Purchases",
                linesEntry_PurchaseNoParameter, linesEntry_DeliveryParameter, linesEntry_ItemParameter,
                linesEntry_LocationParameter, linesEntry_OrderedParameter, linesEntry_DeliverParameter,
                linesEntry_DescriptionParameter, linesEntry_PriceParameter, linesEntry_DiscountParameter,
                linesEntry_BatchNoParameter, linesEntry_DepartmentParameter, linesEntry_CostCenterParameter,
                linesEntry_PurPoseParameter, linesEntry_ProjectParameter, linesEntry_CostPriceParameter,
                linesEntry_RemarksBeforeParameter, linesEntry_RemarksAfterParameter, linesEntry_RefPurchaseNoParameter,
                linesEntry_RefOrderNoParameter, linesEntry_AccountParameter, linesEntry_EmployeeParameter,
                linesEntry_Parameter1Parameter, linesEntry_Parameter2Parameter, linesEntry_Optional1Parameter,
                linesEntry_Optional2Parameter, linesEntry_JobNoParameter, linesEntry_OptionalNumber1Parameter,
                linesEntry_OptionalNumber2Parameter, linesEntry_OptionalDate1Parameter,
                linesEntry_OptionalDate2Parameter, userNameParameter, externalImportParameter);
        }

        public virtual ObjectResult<string> Kompas_Import_LinesEntry_WorkSheet(string linesEntry_Journal,
            Nullable<System.DateTime> linesEntry_Delivery, string linesEntry_Item, string linesEntry_Location,
            Nullable<double> linesEntry_Ordered, string linesEntry_Description, string linesEntry_BatchNo,
            string linesEntry_Voucher, string linesEntry_Department, string linesEntry_CostCenter,
            string linesEntry_PurPose, string linesEntry_Project, Nullable<double> linesEntry_CostPrice,
            string linesEntry_Account, string linesEntry_Employee, string linesEntry_Parameter1,
            string linesEntry_Parameter2, string userName, Nullable<bool> externalImport)
        {
            var linesEntry_JournalParameter = linesEntry_Journal != null
                ? new ObjectParameter("LinesEntry_Journal", linesEntry_Journal)
                : new ObjectParameter("LinesEntry_Journal", typeof(string));

            var linesEntry_DeliveryParameter = linesEntry_Delivery.HasValue
                ? new ObjectParameter("LinesEntry_Delivery", linesEntry_Delivery)
                : new ObjectParameter("LinesEntry_Delivery", typeof(System.DateTime));

            var linesEntry_ItemParameter = linesEntry_Item != null
                ? new ObjectParameter("LinesEntry_Item", linesEntry_Item)
                : new ObjectParameter("LinesEntry_Item", typeof(string));

            var linesEntry_LocationParameter = linesEntry_Location != null
                ? new ObjectParameter("LinesEntry_Location", linesEntry_Location)
                : new ObjectParameter("LinesEntry_Location", typeof(string));

            var linesEntry_OrderedParameter = linesEntry_Ordered.HasValue
                ? new ObjectParameter("LinesEntry_Ordered", linesEntry_Ordered)
                : new ObjectParameter("LinesEntry_Ordered", typeof(double));

            var linesEntry_DescriptionParameter = linesEntry_Description != null
                ? new ObjectParameter("LinesEntry_Description", linesEntry_Description)
                : new ObjectParameter("LinesEntry_Description", typeof(string));

            var linesEntry_BatchNoParameter = linesEntry_BatchNo != null
                ? new ObjectParameter("LinesEntry_BatchNo", linesEntry_BatchNo)
                : new ObjectParameter("LinesEntry_BatchNo", typeof(string));

            var linesEntry_VoucherParameter = linesEntry_Voucher != null
                ? new ObjectParameter("LinesEntry_Voucher", linesEntry_Voucher)
                : new ObjectParameter("LinesEntry_Voucher", typeof(string));

            var linesEntry_DepartmentParameter = linesEntry_Department != null
                ? new ObjectParameter("LinesEntry_Department", linesEntry_Department)
                : new ObjectParameter("LinesEntry_Department", typeof(string));

            var linesEntry_CostCenterParameter = linesEntry_CostCenter != null
                ? new ObjectParameter("LinesEntry_CostCenter", linesEntry_CostCenter)
                : new ObjectParameter("LinesEntry_CostCenter", typeof(string));

            var linesEntry_PurPoseParameter = linesEntry_PurPose != null
                ? new ObjectParameter("LinesEntry_PurPose", linesEntry_PurPose)
                : new ObjectParameter("LinesEntry_PurPose", typeof(string));

            var linesEntry_ProjectParameter = linesEntry_Project != null
                ? new ObjectParameter("LinesEntry_Project", linesEntry_Project)
                : new ObjectParameter("LinesEntry_Project", typeof(string));

            var linesEntry_CostPriceParameter = linesEntry_CostPrice.HasValue
                ? new ObjectParameter("LinesEntry_CostPrice", linesEntry_CostPrice)
                : new ObjectParameter("LinesEntry_CostPrice", typeof(double));

            var linesEntry_AccountParameter = linesEntry_Account != null
                ? new ObjectParameter("LinesEntry_Account", linesEntry_Account)
                : new ObjectParameter("LinesEntry_Account", typeof(string));

            var linesEntry_EmployeeParameter = linesEntry_Employee != null
                ? new ObjectParameter("LinesEntry_Employee", linesEntry_Employee)
                : new ObjectParameter("LinesEntry_Employee", typeof(string));

            var linesEntry_Parameter1Parameter = linesEntry_Parameter1 != null
                ? new ObjectParameter("LinesEntry_Parameter1", linesEntry_Parameter1)
                : new ObjectParameter("LinesEntry_Parameter1", typeof(string));

            var linesEntry_Parameter2Parameter = linesEntry_Parameter2 != null
                ? new ObjectParameter("LinesEntry_Parameter2", linesEntry_Parameter2)
                : new ObjectParameter("LinesEntry_Parameter2", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_Import_LinesEntry_WorkSheet", linesEntry_JournalParameter, linesEntry_DeliveryParameter,
                    linesEntry_ItemParameter, linesEntry_LocationParameter, linesEntry_OrderedParameter,
                    linesEntry_DescriptionParameter, linesEntry_BatchNoParameter, linesEntry_VoucherParameter,
                    linesEntry_DepartmentParameter, linesEntry_CostCenterParameter, linesEntry_PurPoseParameter,
                    linesEntry_ProjectParameter, linesEntry_CostPriceParameter, linesEntry_AccountParameter,
                    linesEntry_EmployeeParameter, linesEntry_Parameter1Parameter, linesEntry_Parameter2Parameter,
                    userNameParameter, externalImportParameter);
        }

        public virtual int Kompas_Import_SetDefaultValues(string journal, string table_name, Nullable<int> recordID)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Import_SetDefaultValues",
                journalParameter, table_nameParameter, recordIDParameter);
        }

        public virtual ObjectResult<string> Kompas_Import_TransEntry(string transEntry_Journal,
            string transEntry_AccountType, string transEntry_Account, string transEntry_Customer,
            string transEntry_Supplier, Nullable<System.DateTime> transEntry_Date, string transEntry_Voucher,
            string transEntry_VoucherAlwaysZero, string transEntry_VoucherOnce, string transEntry_Description,
            Nullable<double> transEntry_Amount, string transEntry_Currency, Nullable<double> transEntry_Rate,
            Nullable<double> transEntry_Quantity, Nullable<System.DateTime> transEntry_Due, string transEntry_Tax,
            string transEntry_Department, string transEntry_CostCenter, string transEntry_PurPose,
            string transEntry_Project, string transEntry_Employee, string transEntry_SetOff, string transEntry_Remarks,
            string transEntry_InvoiceNo, string transEntry_BetalingsID, string transEntry_KortArt,
            Nullable<byte> transEntry_Code, Nullable<double> transEntry_SetOffADedit,
            Nullable<double> transEntry_SetOffAKredit, Nullable<double> transEntry_SetOffBDedit,
            Nullable<double> transEntry_SetOffBKredit, Nullable<double> transEntry_SetOffCDedit,
            Nullable<double> transEntry_SetOffCKredit, Nullable<double> transEntry_SetOffDDedit,
            Nullable<double> transEntry_SetOffDKredit, Nullable<double> transEntry_SetOffEDedit,
            Nullable<double> transEntry_SetOffEKredit, Nullable<double> transEntry_DebitAmount,
            Nullable<double> transEntry_KreditAmount, string transEntry_Optional1, string transEntry_Optional2,
            string transEntry_DocumentPath, string userName, Nullable<bool> externalImport, ObjectParameter saveVoucher)
        {
            var transEntry_JournalParameter = transEntry_Journal != null
                ? new ObjectParameter("TransEntry_Journal", transEntry_Journal)
                : new ObjectParameter("TransEntry_Journal", typeof(string));

            var transEntry_AccountTypeParameter = transEntry_AccountType != null
                ? new ObjectParameter("TransEntry_AccountType", transEntry_AccountType)
                : new ObjectParameter("TransEntry_AccountType", typeof(string));

            var transEntry_AccountParameter = transEntry_Account != null
                ? new ObjectParameter("TransEntry_Account", transEntry_Account)
                : new ObjectParameter("TransEntry_Account", typeof(string));

            var transEntry_CustomerParameter = transEntry_Customer != null
                ? new ObjectParameter("TransEntry_Customer", transEntry_Customer)
                : new ObjectParameter("TransEntry_Customer", typeof(string));

            var transEntry_SupplierParameter = transEntry_Supplier != null
                ? new ObjectParameter("TransEntry_Supplier", transEntry_Supplier)
                : new ObjectParameter("TransEntry_Supplier", typeof(string));

            var transEntry_DateParameter = transEntry_Date.HasValue
                ? new ObjectParameter("TransEntry_Date", transEntry_Date)
                : new ObjectParameter("TransEntry_Date", typeof(System.DateTime));

            var transEntry_VoucherParameter = transEntry_Voucher != null
                ? new ObjectParameter("TransEntry_Voucher", transEntry_Voucher)
                : new ObjectParameter("TransEntry_Voucher", typeof(string));

            var transEntry_VoucherAlwaysZeroParameter = transEntry_VoucherAlwaysZero != null
                ? new ObjectParameter("TransEntry_VoucherAlwaysZero", transEntry_VoucherAlwaysZero)
                : new ObjectParameter("TransEntry_VoucherAlwaysZero", typeof(string));

            var transEntry_VoucherOnceParameter = transEntry_VoucherOnce != null
                ? new ObjectParameter("TransEntry_VoucherOnce", transEntry_VoucherOnce)
                : new ObjectParameter("TransEntry_VoucherOnce", typeof(string));

            var transEntry_DescriptionParameter = transEntry_Description != null
                ? new ObjectParameter("TransEntry_Description", transEntry_Description)
                : new ObjectParameter("TransEntry_Description", typeof(string));

            var transEntry_AmountParameter = transEntry_Amount.HasValue
                ? new ObjectParameter("TransEntry_Amount", transEntry_Amount)
                : new ObjectParameter("TransEntry_Amount", typeof(double));

            var transEntry_CurrencyParameter = transEntry_Currency != null
                ? new ObjectParameter("TransEntry_Currency", transEntry_Currency)
                : new ObjectParameter("TransEntry_Currency", typeof(string));

            var transEntry_RateParameter = transEntry_Rate.HasValue
                ? new ObjectParameter("TransEntry_Rate", transEntry_Rate)
                : new ObjectParameter("TransEntry_Rate", typeof(double));

            var transEntry_QuantityParameter = transEntry_Quantity.HasValue
                ? new ObjectParameter("TransEntry_Quantity", transEntry_Quantity)
                : new ObjectParameter("TransEntry_Quantity", typeof(double));

            var transEntry_DueParameter = transEntry_Due.HasValue
                ? new ObjectParameter("TransEntry_Due", transEntry_Due)
                : new ObjectParameter("TransEntry_Due", typeof(System.DateTime));

            var transEntry_TaxParameter = transEntry_Tax != null
                ? new ObjectParameter("TransEntry_Tax", transEntry_Tax)
                : new ObjectParameter("TransEntry_Tax", typeof(string));

            var transEntry_DepartmentParameter = transEntry_Department != null
                ? new ObjectParameter("TransEntry_Department", transEntry_Department)
                : new ObjectParameter("TransEntry_Department", typeof(string));

            var transEntry_CostCenterParameter = transEntry_CostCenter != null
                ? new ObjectParameter("TransEntry_CostCenter", transEntry_CostCenter)
                : new ObjectParameter("TransEntry_CostCenter", typeof(string));

            var transEntry_PurPoseParameter = transEntry_PurPose != null
                ? new ObjectParameter("TransEntry_PurPose", transEntry_PurPose)
                : new ObjectParameter("TransEntry_PurPose", typeof(string));

            var transEntry_ProjectParameter = transEntry_Project != null
                ? new ObjectParameter("TransEntry_Project", transEntry_Project)
                : new ObjectParameter("TransEntry_Project", typeof(string));

            var transEntry_EmployeeParameter = transEntry_Employee != null
                ? new ObjectParameter("TransEntry_Employee", transEntry_Employee)
                : new ObjectParameter("TransEntry_Employee", typeof(string));

            var transEntry_SetOffParameter = transEntry_SetOff != null
                ? new ObjectParameter("TransEntry_SetOff", transEntry_SetOff)
                : new ObjectParameter("TransEntry_SetOff", typeof(string));

            var transEntry_RemarksParameter = transEntry_Remarks != null
                ? new ObjectParameter("TransEntry_Remarks", transEntry_Remarks)
                : new ObjectParameter("TransEntry_Remarks", typeof(string));

            var transEntry_InvoiceNoParameter = transEntry_InvoiceNo != null
                ? new ObjectParameter("TransEntry_InvoiceNo", transEntry_InvoiceNo)
                : new ObjectParameter("TransEntry_InvoiceNo", typeof(string));

            var transEntry_BetalingsIDParameter = transEntry_BetalingsID != null
                ? new ObjectParameter("TransEntry_BetalingsID", transEntry_BetalingsID)
                : new ObjectParameter("TransEntry_BetalingsID", typeof(string));

            var transEntry_KortArtParameter = transEntry_KortArt != null
                ? new ObjectParameter("TransEntry_KortArt", transEntry_KortArt)
                : new ObjectParameter("TransEntry_KortArt", typeof(string));

            var transEntry_CodeParameter = transEntry_Code.HasValue
                ? new ObjectParameter("TransEntry_Code", transEntry_Code)
                : new ObjectParameter("TransEntry_Code", typeof(byte));

            var transEntry_SetOffADeditParameter = transEntry_SetOffADedit.HasValue
                ? new ObjectParameter("TransEntry_SetOffADedit", transEntry_SetOffADedit)
                : new ObjectParameter("TransEntry_SetOffADedit", typeof(double));

            var transEntry_SetOffAKreditParameter = transEntry_SetOffAKredit.HasValue
                ? new ObjectParameter("TransEntry_SetOffAKredit", transEntry_SetOffAKredit)
                : new ObjectParameter("TransEntry_SetOffAKredit", typeof(double));

            var transEntry_SetOffBDeditParameter = transEntry_SetOffBDedit.HasValue
                ? new ObjectParameter("TransEntry_SetOffBDedit", transEntry_SetOffBDedit)
                : new ObjectParameter("TransEntry_SetOffBDedit", typeof(double));

            var transEntry_SetOffBKreditParameter = transEntry_SetOffBKredit.HasValue
                ? new ObjectParameter("TransEntry_SetOffBKredit", transEntry_SetOffBKredit)
                : new ObjectParameter("TransEntry_SetOffBKredit", typeof(double));

            var transEntry_SetOffCDeditParameter = transEntry_SetOffCDedit.HasValue
                ? new ObjectParameter("TransEntry_SetOffCDedit", transEntry_SetOffCDedit)
                : new ObjectParameter("TransEntry_SetOffCDedit", typeof(double));

            var transEntry_SetOffCKreditParameter = transEntry_SetOffCKredit.HasValue
                ? new ObjectParameter("TransEntry_SetOffCKredit", transEntry_SetOffCKredit)
                : new ObjectParameter("TransEntry_SetOffCKredit", typeof(double));

            var transEntry_SetOffDDeditParameter = transEntry_SetOffDDedit.HasValue
                ? new ObjectParameter("TransEntry_SetOffDDedit", transEntry_SetOffDDedit)
                : new ObjectParameter("TransEntry_SetOffDDedit", typeof(double));

            var transEntry_SetOffDKreditParameter = transEntry_SetOffDKredit.HasValue
                ? new ObjectParameter("TransEntry_SetOffDKredit", transEntry_SetOffDKredit)
                : new ObjectParameter("TransEntry_SetOffDKredit", typeof(double));

            var transEntry_SetOffEDeditParameter = transEntry_SetOffEDedit.HasValue
                ? new ObjectParameter("TransEntry_SetOffEDedit", transEntry_SetOffEDedit)
                : new ObjectParameter("TransEntry_SetOffEDedit", typeof(double));

            var transEntry_SetOffEKreditParameter = transEntry_SetOffEKredit.HasValue
                ? new ObjectParameter("TransEntry_SetOffEKredit", transEntry_SetOffEKredit)
                : new ObjectParameter("TransEntry_SetOffEKredit", typeof(double));

            var transEntry_DebitAmountParameter = transEntry_DebitAmount.HasValue
                ? new ObjectParameter("TransEntry_DebitAmount", transEntry_DebitAmount)
                : new ObjectParameter("TransEntry_DebitAmount", typeof(double));

            var transEntry_KreditAmountParameter = transEntry_KreditAmount.HasValue
                ? new ObjectParameter("TransEntry_KreditAmount", transEntry_KreditAmount)
                : new ObjectParameter("TransEntry_KreditAmount", typeof(double));

            var transEntry_Optional1Parameter = transEntry_Optional1 != null
                ? new ObjectParameter("TransEntry_Optional1", transEntry_Optional1)
                : new ObjectParameter("TransEntry_Optional1", typeof(string));

            var transEntry_Optional2Parameter = transEntry_Optional2 != null
                ? new ObjectParameter("TransEntry_Optional2", transEntry_Optional2)
                : new ObjectParameter("TransEntry_Optional2", typeof(string));

            var transEntry_DocumentPathParameter = transEntry_DocumentPath != null
                ? new ObjectParameter("TransEntry_DocumentPath", transEntry_DocumentPath)
                : new ObjectParameter("TransEntry_DocumentPath", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var externalImportParameter = externalImport.HasValue
                ? new ObjectParameter("ExternalImport", externalImport)
                : new ObjectParameter("ExternalImport", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_Import_TransEntry",
                transEntry_JournalParameter, transEntry_AccountTypeParameter, transEntry_AccountParameter,
                transEntry_CustomerParameter, transEntry_SupplierParameter, transEntry_DateParameter,
                transEntry_VoucherParameter, transEntry_VoucherAlwaysZeroParameter, transEntry_VoucherOnceParameter,
                transEntry_DescriptionParameter, transEntry_AmountParameter, transEntry_CurrencyParameter,
                transEntry_RateParameter, transEntry_QuantityParameter, transEntry_DueParameter, transEntry_TaxParameter,
                transEntry_DepartmentParameter, transEntry_CostCenterParameter, transEntry_PurPoseParameter,
                transEntry_ProjectParameter, transEntry_EmployeeParameter, transEntry_SetOffParameter,
                transEntry_RemarksParameter, transEntry_InvoiceNoParameter, transEntry_BetalingsIDParameter,
                transEntry_KortArtParameter, transEntry_CodeParameter, transEntry_SetOffADeditParameter,
                transEntry_SetOffAKreditParameter, transEntry_SetOffBDeditParameter, transEntry_SetOffBKreditParameter,
                transEntry_SetOffCDeditParameter, transEntry_SetOffCKreditParameter, transEntry_SetOffDDeditParameter,
                transEntry_SetOffDKreditParameter, transEntry_SetOffEDeditParameter, transEntry_SetOffEKreditParameter,
                transEntry_DebitAmountParameter, transEntry_KreditAmountParameter, transEntry_Optional1Parameter,
                transEntry_Optional2Parameter, transEntry_DocumentPathParameter, userNameParameter,
                externalImportParameter, saveVoucher);
        }

        public virtual ObjectResult<Kompas_Interest_CheckBookData_Result> Kompas_Interest_CheckBookData()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Interest_CheckBookData_Result>(
                    "Kompas_Interest_CheckBookData");
        }

        public virtual int Kompas_InterestCalcBookInterest(Nullable<System.DateTime> param_MadeUpOn,
            string param_UserName)
        {
            var param_MadeUpOnParameter = param_MadeUpOn.HasValue
                ? new ObjectParameter("Param_MadeUpOn", param_MadeUpOn)
                : new ObjectParameter("Param_MadeUpOn", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InterestCalcBookInterest",
                param_MadeUpOnParameter, param_UserNameParameter);
        }

        public virtual int Kompas_InterestCalcCalculateInterestAmountByCustomer(
            Nullable<System.DateTime> param_Starting, Nullable<System.DateTime> param_Ending,
            Nullable<short> param_CalcMethod, string param_Host, Nullable<double> param_MinInterest)
        {
            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_CalcMethodParameter = param_CalcMethod.HasValue
                ? new ObjectParameter("Param_CalcMethod", param_CalcMethod)
                : new ObjectParameter("Param_CalcMethod", typeof(short));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_MinInterestParameter = param_MinInterest.HasValue
                ? new ObjectParameter("Param_MinInterest", param_MinInterest)
                : new ObjectParameter("Param_MinInterest", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InterestCalcCalculateInterestAmountByCustomer", param_StartingParameter,
                    param_EndingParameter, param_CalcMethodParameter, param_HostParameter, param_MinInterestParameter);
        }

        public virtual ObjectResult<Kompas_Intrastat_Lines_Result> Kompas_Intrastat_Lines(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo, Nullable<bool> param_Type,
            Nullable<int> param_Show)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(bool));

            var param_ShowParameter = param_Show.HasValue
                ? new ObjectParameter("Param_Show", param_Show)
                : new ObjectParameter("Param_Show", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Intrastat_Lines_Result>(
                    "Kompas_Intrastat_Lines", param_DateFromParameter, param_DateToParameter, param_TypeParameter,
                    param_ShowParameter);
        }

        public virtual int Kompas_IntrastatLines_CreateFirstTime(string userName)
        {
            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_IntrastatLines_CreateFirstTime", userNameParameter);
        }

        public virtual int Kompas_IntrastatLines_CreateFromLines(Nullable<double> trail, string userName)
        {
            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_IntrastatLines_CreateFromLines", trailParameter, userNameParameter);
        }

        public virtual ObjectResult<Kompas_IntrastatLines_Lines_Result> Kompas_IntrastatLines_Lines(
            Nullable<System.DateTime> param_DateFrom, Nullable<System.DateTime> param_DateTo, Nullable<bool> param_Type)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_IntrastatLines_Lines_Result>(
                    "Kompas_IntrastatLines_Lines", param_DateFromParameter, param_DateToParameter, param_TypeParameter);
        }

        public virtual ObjectResult<string> Kompas_IntrastatList_GetList(string fromVoucher, string toVoucher,
            Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromVoucherParameter = fromVoucher != null
                ? new ObjectParameter("FromVoucher", fromVoucher)
                : new ObjectParameter("FromVoucher", typeof(string));

            var toVoucherParameter = toVoucher != null
                ? new ObjectParameter("ToVoucher", toVoucher)
                : new ObjectParameter("ToVoucher", typeof(string));

            var fromDateParameter = fromDate.HasValue
                ? new ObjectParameter("FromDate", fromDate)
                : new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue
                ? new ObjectParameter("ToDate", toDate)
                : new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_IntrastatList_GetList",
                fromVoucherParameter, toVoucherParameter, fromDateParameter, toDateParameter);
        }

        public virtual int Kompas_InvCountSortLinesByField(string param_Journal, string param_SortField)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_SortFieldParameter = param_SortField != null
                ? new ObjectParameter("Param_SortField", param_SortField)
                : new ObjectParameter("Param_SortField", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InvCountSortLinesByField",
                param_JournalParameter, param_SortFieldParameter);
        }

        public virtual int Kompas_Inventory_AddNew(string param_Item, string param_UserID, string param_Description,
            string param_SupplierNo, string param_CustomerNo, string param_InternalNo, string param_Extra,
            string param_Unit, Nullable<double> param_Weight, Nullable<double> param_Volume,
            Nullable<double> param_Decimals, Nullable<double> param_SalesPrice, Nullable<double> param_CostPrice,
            string param_Category, string param_Alternative, string param_TaxBuying, string param_TaxSelling,
            string param_CustomsNo, string param_Grouping, string param_Location, string param_Picture,
            Nullable<short> param_Status, Nullable<short> param_Tracking, Nullable<short> param_Blocked,
            string param_Department, string param_CostCenter, string param_Purpose, string param_Project,
            string param_Remarks, string param_Placement, Nullable<double> param_Avance,
            Nullable<short> param_AvanceType, Nullable<short> param_AllowDiscount,
            Nullable<short> param_AllowFinalDiscount, Nullable<short> param_ADeliveryPacket,
            Nullable<short> param_PriceInclDuty, Nullable<double> param_MultiplaFaktor,
            Nullable<short> param_SerialTypeSale, Nullable<short> param_SerialTypeBuy, string param_URL,
            string param_InternetGroup, string param_Picture2, string param_ItemEAN, string param_ItemAlternative,
            string param_OptionalText1, string param_OptionalText2, string param_OptionalText3,
            string param_OptionalText4, string param_OptionalText5, string param_OptionalText6,
            string param_OptionalText7, string param_OptionalText8, Nullable<double> param_OptionalNumber1,
            Nullable<double> param_OptionalNumber2, Nullable<double> param_OptionalNumber3,
            Nullable<double> param_OptionalNumber4, Nullable<double> param_OptionalNumber5,
            Nullable<double> param_OptionalNumber6, Nullable<double> param_OptionalNumber7,
            Nullable<double> param_OptionalNumber8, Nullable<short> param_Optional1, Nullable<short> param_Optional2,
            Nullable<short> param_Optional3, Nullable<short> param_Optional4, Nullable<short> param_Optional5,
            Nullable<short> param_Optional6, Nullable<short> param_Optional7, Nullable<short> param_Optional8)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_SupplierNoParameter = param_SupplierNo != null
                ? new ObjectParameter("Param_SupplierNo", param_SupplierNo)
                : new ObjectParameter("Param_SupplierNo", typeof(string));

            var param_CustomerNoParameter = param_CustomerNo != null
                ? new ObjectParameter("Param_CustomerNo", param_CustomerNo)
                : new ObjectParameter("Param_CustomerNo", typeof(string));

            var param_InternalNoParameter = param_InternalNo != null
                ? new ObjectParameter("Param_InternalNo", param_InternalNo)
                : new ObjectParameter("Param_InternalNo", typeof(string));

            var param_ExtraParameter = param_Extra != null
                ? new ObjectParameter("Param_Extra", param_Extra)
                : new ObjectParameter("Param_Extra", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_WeightParameter = param_Weight.HasValue
                ? new ObjectParameter("Param_Weight", param_Weight)
                : new ObjectParameter("Param_Weight", typeof(double));

            var param_VolumeParameter = param_Volume.HasValue
                ? new ObjectParameter("Param_Volume", param_Volume)
                : new ObjectParameter("Param_Volume", typeof(double));

            var param_DecimalsParameter = param_Decimals.HasValue
                ? new ObjectParameter("Param_Decimals", param_Decimals)
                : new ObjectParameter("Param_Decimals", typeof(double));

            var param_SalesPriceParameter = param_SalesPrice.HasValue
                ? new ObjectParameter("Param_SalesPrice", param_SalesPrice)
                : new ObjectParameter("Param_SalesPrice", typeof(double));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_CategoryParameter = param_Category != null
                ? new ObjectParameter("Param_Category", param_Category)
                : new ObjectParameter("Param_Category", typeof(string));

            var param_AlternativeParameter = param_Alternative != null
                ? new ObjectParameter("Param_Alternative", param_Alternative)
                : new ObjectParameter("Param_Alternative", typeof(string));

            var param_TaxBuyingParameter = param_TaxBuying != null
                ? new ObjectParameter("Param_TaxBuying", param_TaxBuying)
                : new ObjectParameter("Param_TaxBuying", typeof(string));

            var param_TaxSellingParameter = param_TaxSelling != null
                ? new ObjectParameter("Param_TaxSelling", param_TaxSelling)
                : new ObjectParameter("Param_TaxSelling", typeof(string));

            var param_CustomsNoParameter = param_CustomsNo != null
                ? new ObjectParameter("Param_CustomsNo", param_CustomsNo)
                : new ObjectParameter("Param_CustomsNo", typeof(string));

            var param_GroupingParameter = param_Grouping != null
                ? new ObjectParameter("Param_Grouping", param_Grouping)
                : new ObjectParameter("Param_Grouping", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_PictureParameter = param_Picture != null
                ? new ObjectParameter("Param_Picture", param_Picture)
                : new ObjectParameter("Param_Picture", typeof(string));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(short));

            var param_TrackingParameter = param_Tracking.HasValue
                ? new ObjectParameter("Param_Tracking", param_Tracking)
                : new ObjectParameter("Param_Tracking", typeof(short));

            var param_BlockedParameter = param_Blocked.HasValue
                ? new ObjectParameter("Param_Blocked", param_Blocked)
                : new ObjectParameter("Param_Blocked", typeof(short));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_PlacementParameter = param_Placement != null
                ? new ObjectParameter("Param_Placement", param_Placement)
                : new ObjectParameter("Param_Placement", typeof(string));

            var param_AvanceParameter = param_Avance.HasValue
                ? new ObjectParameter("Param_Avance", param_Avance)
                : new ObjectParameter("Param_Avance", typeof(double));

            var param_AvanceTypeParameter = param_AvanceType.HasValue
                ? new ObjectParameter("Param_AvanceType", param_AvanceType)
                : new ObjectParameter("Param_AvanceType", typeof(short));

            var param_AllowDiscountParameter = param_AllowDiscount.HasValue
                ? new ObjectParameter("Param_AllowDiscount", param_AllowDiscount)
                : new ObjectParameter("Param_AllowDiscount", typeof(short));

            var param_AllowFinalDiscountParameter = param_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Param_AllowFinalDiscount", param_AllowFinalDiscount)
                : new ObjectParameter("Param_AllowFinalDiscount", typeof(short));

            var param_ADeliveryPacketParameter = param_ADeliveryPacket.HasValue
                ? new ObjectParameter("Param_ADeliveryPacket", param_ADeliveryPacket)
                : new ObjectParameter("Param_ADeliveryPacket", typeof(short));

            var param_PriceInclDutyParameter = param_PriceInclDuty.HasValue
                ? new ObjectParameter("Param_PriceInclDuty", param_PriceInclDuty)
                : new ObjectParameter("Param_PriceInclDuty", typeof(short));

            var param_MultiplaFaktorParameter = param_MultiplaFaktor.HasValue
                ? new ObjectParameter("Param_MultiplaFaktor", param_MultiplaFaktor)
                : new ObjectParameter("Param_MultiplaFaktor", typeof(double));

            var param_SerialTypeSaleParameter = param_SerialTypeSale.HasValue
                ? new ObjectParameter("Param_SerialTypeSale", param_SerialTypeSale)
                : new ObjectParameter("Param_SerialTypeSale", typeof(short));

            var param_SerialTypeBuyParameter = param_SerialTypeBuy.HasValue
                ? new ObjectParameter("Param_SerialTypeBuy", param_SerialTypeBuy)
                : new ObjectParameter("Param_SerialTypeBuy", typeof(short));

            var param_URLParameter = param_URL != null
                ? new ObjectParameter("Param_URL", param_URL)
                : new ObjectParameter("Param_URL", typeof(string));

            var param_InternetGroupParameter = param_InternetGroup != null
                ? new ObjectParameter("Param_InternetGroup", param_InternetGroup)
                : new ObjectParameter("Param_InternetGroup", typeof(string));

            var param_Picture2Parameter = param_Picture2 != null
                ? new ObjectParameter("Param_Picture2", param_Picture2)
                : new ObjectParameter("Param_Picture2", typeof(string));

            var param_ItemEANParameter = param_ItemEAN != null
                ? new ObjectParameter("Param_ItemEAN", param_ItemEAN)
                : new ObjectParameter("Param_ItemEAN", typeof(string));

            var param_ItemAlternativeParameter = param_ItemAlternative != null
                ? new ObjectParameter("Param_ItemAlternative", param_ItemAlternative)
                : new ObjectParameter("Param_ItemAlternative", typeof(string));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Inventory_AddNew",
                param_ItemParameter, param_UserIDParameter, param_DescriptionParameter, param_SupplierNoParameter,
                param_CustomerNoParameter, param_InternalNoParameter, param_ExtraParameter, param_UnitParameter,
                param_WeightParameter, param_VolumeParameter, param_DecimalsParameter, param_SalesPriceParameter,
                param_CostPriceParameter, param_CategoryParameter, param_AlternativeParameter, param_TaxBuyingParameter,
                param_TaxSellingParameter, param_CustomsNoParameter, param_GroupingParameter, param_LocationParameter,
                param_PictureParameter, param_StatusParameter, param_TrackingParameter, param_BlockedParameter,
                param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter, param_ProjectParameter,
                param_RemarksParameter, param_PlacementParameter, param_AvanceParameter, param_AvanceTypeParameter,
                param_AllowDiscountParameter, param_AllowFinalDiscountParameter, param_ADeliveryPacketParameter,
                param_PriceInclDutyParameter, param_MultiplaFaktorParameter, param_SerialTypeSaleParameter,
                param_SerialTypeBuyParameter, param_URLParameter, param_InternetGroupParameter, param_Picture2Parameter,
                param_ItemEANParameter, param_ItemAlternativeParameter, param_OptionalText1Parameter,
                param_OptionalText2Parameter, param_OptionalText3Parameter, param_OptionalText4Parameter,
                param_OptionalText5Parameter, param_OptionalText6Parameter, param_OptionalText7Parameter,
                param_OptionalText8Parameter, param_OptionalNumber1Parameter, param_OptionalNumber2Parameter,
                param_OptionalNumber3Parameter, param_OptionalNumber4Parameter, param_OptionalNumber5Parameter,
                param_OptionalNumber6Parameter, param_OptionalNumber7Parameter, param_OptionalNumber8Parameter,
                param_Optional1Parameter, param_Optional2Parameter, param_Optional3Parameter, param_Optional4Parameter,
                param_Optional5Parameter, param_Optional6Parameter, param_Optional7Parameter, param_Optional8Parameter);
        }

        public virtual int Kompas_Inventory_GetAllPricelists(string param_Item, Nullable<short> param_Type,
            string param_UserID)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Inventory_GetAllPricelists",
                param_ItemParameter, param_TypeParameter, param_UserIDParameter);
        }

        public virtual int Kompas_Inventory_Location_Move(string param_Item, string param_LocationFrom,
            string param_LocationTo, Nullable<double> param_Quantity, string param_Description, string param_Parameter1,
            string param_Parameter2, string param_Department, string param_CostCenter, string param_Purpose,
            string param_Project, string param_UserName, string param_Optional1, string param_Optional2,
            Nullable<int> param_JobNo, string param_Source, Nullable<System.DateTime> param_Date)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationFromParameter = param_LocationFrom != null
                ? new ObjectParameter("Param_LocationFrom", param_LocationFrom)
                : new ObjectParameter("Param_LocationFrom", typeof(string));

            var param_LocationToParameter = param_LocationTo != null
                ? new ObjectParameter("Param_LocationTo", param_LocationTo)
                : new ObjectParameter("Param_LocationTo", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_JobNoParameter = param_JobNo.HasValue
                ? new ObjectParameter("Param_JobNo", param_JobNo)
                : new ObjectParameter("Param_JobNo", typeof(int));

            var param_SourceParameter = param_Source != null
                ? new ObjectParameter("Param_Source", param_Source)
                : new ObjectParameter("Param_Source", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Inventory_Location_Move",
                param_ItemParameter, param_LocationFromParameter, param_LocationToParameter, param_QuantityParameter,
                param_DescriptionParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter, param_ProjectParameter,
                param_UserNameParameter, param_Optional1Parameter, param_Optional2Parameter, param_JobNoParameter,
                param_SourceParameter, param_DateParameter);
        }

        public virtual ObjectResult<Kompas_Inventory_MayDelete_Result> Kompas_Inventory_MayDelete(string param_Item,
            Nullable<int> param_Language)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Inventory_MayDelete_Result>(
                    "Kompas_Inventory_MayDelete", param_ItemParameter, param_LanguageParameter);
        }

        public virtual int Kompas_Inventory_PostChangedCostPriceInAccounts(string param_Item,
            Nullable<double> param_OldCostPrice, Nullable<System.DateTime> param_PostDate, string param_UserName,
            string param_Description, Nullable<short> param_text_language)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_OldCostPriceParameter = param_OldCostPrice.HasValue
                ? new ObjectParameter("Param_OldCostPrice", param_OldCostPrice)
                : new ObjectParameter("Param_OldCostPrice", typeof(double));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_text_languageParameter = param_text_language.HasValue
                ? new ObjectParameter("Param_text_language", param_text_language)
                : new ObjectParameter("Param_text_language", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Inventory_PostChangedCostPriceInAccounts", param_ItemParameter, param_OldCostPriceParameter,
                    param_PostDateParameter, param_UserNameParameter, param_DescriptionParameter,
                    param_text_languageParameter);
        }

        public virtual int Kompas_Inventory_UpdateItemPrice(string item, string param_UserID)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Inventory_UpdateItemPrice",
                itemParameter, param_UserIDParameter);
        }

        public virtual ObjectResult<Kompas_Inventory_UpdatePricesWithPriceImport_Result>
            Kompas_Inventory_UpdatePricesWithPriceImport(string param_UserID, Nullable<bool> param_UpdateAccounts,
                string param_StandardItem, Nullable<bool> param_AllowCreate, Nullable<bool> param_AllowUpdate,
                Nullable<bool> param_AllowDelete, string param_NewPricePriceList, string param_ImportPricePriceList,
                Nullable<byte> param_ImportPricePriceListOption, Nullable<byte> param_UpdateSalesPrice,
                Nullable<bool> param_UpdateDuty, string param_ImportFormat, Nullable<byte> param_PLAvance,
                Nullable<bool> param_UseExtraInventory, Nullable<bool> param_Update_Description,
                Nullable<bool> param_Update_Unit, Nullable<bool> param_Update_SalesPrice,
                Nullable<bool> param_Update_CostPrice, Nullable<bool> param_Update_Grouping,
                Nullable<bool> param_Update_ItemAlternative, Nullable<bool> param_Update_Placement,
                Nullable<bool> param_Update_ItemEAN, Nullable<bool> param_Update_SalesUnit,
                Nullable<bool> param_Update_QuantityPrColi, Nullable<bool> param_Update_Weight)
        {
            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_UpdateAccountsParameter = param_UpdateAccounts.HasValue
                ? new ObjectParameter("Param_UpdateAccounts", param_UpdateAccounts)
                : new ObjectParameter("Param_UpdateAccounts", typeof(bool));

            var param_StandardItemParameter = param_StandardItem != null
                ? new ObjectParameter("Param_StandardItem", param_StandardItem)
                : new ObjectParameter("Param_StandardItem", typeof(string));

            var param_AllowCreateParameter = param_AllowCreate.HasValue
                ? new ObjectParameter("Param_AllowCreate", param_AllowCreate)
                : new ObjectParameter("Param_AllowCreate", typeof(bool));

            var param_AllowUpdateParameter = param_AllowUpdate.HasValue
                ? new ObjectParameter("Param_AllowUpdate", param_AllowUpdate)
                : new ObjectParameter("Param_AllowUpdate", typeof(bool));

            var param_AllowDeleteParameter = param_AllowDelete.HasValue
                ? new ObjectParameter("Param_AllowDelete", param_AllowDelete)
                : new ObjectParameter("Param_AllowDelete", typeof(bool));

            var param_NewPricePriceListParameter = param_NewPricePriceList != null
                ? new ObjectParameter("Param_NewPricePriceList", param_NewPricePriceList)
                : new ObjectParameter("Param_NewPricePriceList", typeof(string));

            var param_ImportPricePriceListParameter = param_ImportPricePriceList != null
                ? new ObjectParameter("Param_ImportPricePriceList", param_ImportPricePriceList)
                : new ObjectParameter("Param_ImportPricePriceList", typeof(string));

            var param_ImportPricePriceListOptionParameter = param_ImportPricePriceListOption.HasValue
                ? new ObjectParameter("Param_ImportPricePriceListOption", param_ImportPricePriceListOption)
                : new ObjectParameter("Param_ImportPricePriceListOption", typeof(byte));

            var param_UpdateSalesPriceParameter = param_UpdateSalesPrice.HasValue
                ? new ObjectParameter("Param_UpdateSalesPrice", param_UpdateSalesPrice)
                : new ObjectParameter("Param_UpdateSalesPrice", typeof(byte));

            var param_UpdateDutyParameter = param_UpdateDuty.HasValue
                ? new ObjectParameter("Param_UpdateDuty", param_UpdateDuty)
                : new ObjectParameter("Param_UpdateDuty", typeof(bool));

            var param_ImportFormatParameter = param_ImportFormat != null
                ? new ObjectParameter("Param_ImportFormat", param_ImportFormat)
                : new ObjectParameter("Param_ImportFormat", typeof(string));

            var param_PLAvanceParameter = param_PLAvance.HasValue
                ? new ObjectParameter("Param_PLAvance", param_PLAvance)
                : new ObjectParameter("Param_PLAvance", typeof(byte));

            var param_UseExtraInventoryParameter = param_UseExtraInventory.HasValue
                ? new ObjectParameter("Param_UseExtraInventory", param_UseExtraInventory)
                : new ObjectParameter("Param_UseExtraInventory", typeof(bool));

            var param_Update_DescriptionParameter = param_Update_Description.HasValue
                ? new ObjectParameter("Param_Update_Description", param_Update_Description)
                : new ObjectParameter("Param_Update_Description", typeof(bool));

            var param_Update_UnitParameter = param_Update_Unit.HasValue
                ? new ObjectParameter("Param_Update_Unit", param_Update_Unit)
                : new ObjectParameter("Param_Update_Unit", typeof(bool));

            var param_Update_SalesPriceParameter = param_Update_SalesPrice.HasValue
                ? new ObjectParameter("Param_Update_SalesPrice", param_Update_SalesPrice)
                : new ObjectParameter("Param_Update_SalesPrice", typeof(bool));

            var param_Update_CostPriceParameter = param_Update_CostPrice.HasValue
                ? new ObjectParameter("Param_Update_CostPrice", param_Update_CostPrice)
                : new ObjectParameter("Param_Update_CostPrice", typeof(bool));

            var param_Update_GroupingParameter = param_Update_Grouping.HasValue
                ? new ObjectParameter("Param_Update_Grouping", param_Update_Grouping)
                : new ObjectParameter("Param_Update_Grouping", typeof(bool));

            var param_Update_ItemAlternativeParameter = param_Update_ItemAlternative.HasValue
                ? new ObjectParameter("Param_Update_ItemAlternative", param_Update_ItemAlternative)
                : new ObjectParameter("Param_Update_ItemAlternative", typeof(bool));

            var param_Update_PlacementParameter = param_Update_Placement.HasValue
                ? new ObjectParameter("Param_Update_Placement", param_Update_Placement)
                : new ObjectParameter("Param_Update_Placement", typeof(bool));

            var param_Update_ItemEANParameter = param_Update_ItemEAN.HasValue
                ? new ObjectParameter("Param_Update_ItemEAN", param_Update_ItemEAN)
                : new ObjectParameter("Param_Update_ItemEAN", typeof(bool));

            var param_Update_SalesUnitParameter = param_Update_SalesUnit.HasValue
                ? new ObjectParameter("Param_Update_SalesUnit", param_Update_SalesUnit)
                : new ObjectParameter("Param_Update_SalesUnit", typeof(bool));

            var param_Update_QuantityPrColiParameter = param_Update_QuantityPrColi.HasValue
                ? new ObjectParameter("Param_Update_QuantityPrColi", param_Update_QuantityPrColi)
                : new ObjectParameter("Param_Update_QuantityPrColi", typeof(bool));

            var param_Update_WeightParameter = param_Update_Weight.HasValue
                ? new ObjectParameter("Param_Update_Weight", param_Update_Weight)
                : new ObjectParameter("Param_Update_Weight", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_Inventory_UpdatePricesWithPriceImport_Result>(
                        "Kompas_Inventory_UpdatePricesWithPriceImport", param_UserIDParameter,
                        param_UpdateAccountsParameter, param_StandardItemParameter, param_AllowCreateParameter,
                        param_AllowUpdateParameter, param_AllowDeleteParameter, param_NewPricePriceListParameter,
                        param_ImportPricePriceListParameter, param_ImportPricePriceListOptionParameter,
                        param_UpdateSalesPriceParameter, param_UpdateDutyParameter, param_ImportFormatParameter,
                        param_PLAvanceParameter, param_UseExtraInventoryParameter, param_Update_DescriptionParameter,
                        param_Update_UnitParameter, param_Update_SalesPriceParameter, param_Update_CostPriceParameter,
                        param_Update_GroupingParameter, param_Update_ItemAlternativeParameter,
                        param_Update_PlacementParameter, param_Update_ItemEANParameter, param_Update_SalesUnitParameter,
                        param_Update_QuantityPrColiParameter, param_Update_WeightParameter);
        }

        public virtual int Kompas_InventoryAttechedItemsInsertLine(string param_Master, Nullable<int> param_LineNo)
        {
            var param_MasterParameter = param_Master != null
                ? new ObjectParameter("Param_Master", param_Master)
                : new ObjectParameter("Param_Master", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryAttechedItemsInsertLine",
                    param_MasterParameter, param_LineNoParameter);
        }

        public virtual int Kompas_InventoryBudget_CopyBudget(Nullable<int> param_FromBudgetYear,
            Nullable<int> param_ToBudgetYear, string param_FromItem, string param_ToItem, string param_FromGrouping,
            string param_ToGrouping, string param_FromCategory, string param_ToCategory, Nullable<double> param_Sats)
        {
            var param_FromBudgetYearParameter = param_FromBudgetYear.HasValue
                ? new ObjectParameter("Param_FromBudgetYear", param_FromBudgetYear)
                : new ObjectParameter("Param_FromBudgetYear", typeof(int));

            var param_ToBudgetYearParameter = param_ToBudgetYear.HasValue
                ? new ObjectParameter("Param_ToBudgetYear", param_ToBudgetYear)
                : new ObjectParameter("Param_ToBudgetYear", typeof(int));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromCategoryParameter = param_FromCategory != null
                ? new ObjectParameter("Param_FromCategory", param_FromCategory)
                : new ObjectParameter("Param_FromCategory", typeof(string));

            var param_ToCategoryParameter = param_ToCategory != null
                ? new ObjectParameter("Param_ToCategory", param_ToCategory)
                : new ObjectParameter("Param_ToCategory", typeof(string));

            var param_SatsParameter = param_Sats.HasValue
                ? new ObjectParameter("Param_Sats", param_Sats)
                : new ObjectParameter("Param_Sats", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryBudget_CopyBudget",
                param_FromBudgetYearParameter, param_ToBudgetYearParameter, param_FromItemParameter,
                param_ToItemParameter, param_FromGroupingParameter, param_ToGroupingParameter,
                param_FromCategoryParameter, param_ToCategoryParameter, param_SatsParameter);
        }

        public virtual int Kompas_InventoryBudget_DeleteBudget(Nullable<int> param_BudgetYear, string param_FromItem,
            string param_ToItem, string param_FromGrouping, string param_ToGrouping, string param_FromCategory,
            string param_ToCategory)
        {
            var param_BudgetYearParameter = param_BudgetYear.HasValue
                ? new ObjectParameter("Param_BudgetYear", param_BudgetYear)
                : new ObjectParameter("Param_BudgetYear", typeof(int));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromCategoryParameter = param_FromCategory != null
                ? new ObjectParameter("Param_FromCategory", param_FromCategory)
                : new ObjectParameter("Param_FromCategory", typeof(string));

            var param_ToCategoryParameter = param_ToCategory != null
                ? new ObjectParameter("Param_ToCategory", param_ToCategory)
                : new ObjectParameter("Param_ToCategory", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryBudget_DeleteBudget",
                param_BudgetYearParameter, param_FromItemParameter, param_ToItemParameter, param_FromGroupingParameter,
                param_ToGroupingParameter, param_FromCategoryParameter, param_ToCategoryParameter);
        }

        public virtual ObjectResult<Kompas_InventoryBudget_GetBudget_Result> Kompas_InventoryBudget_GetBudget(
            Nullable<int> param_BudgetYear, string param_FromItem, string param_ToItem, string param_FromGrouping,
            string param_ToGrouping, string param_FromCategory, string param_ToCategory,
            Nullable<bool> param_UseLocation, Nullable<bool> param_UseParameter1, Nullable<bool> param_UseParameter2,
            Nullable<bool> param_NoLinesReturn)
        {
            var param_BudgetYearParameter = param_BudgetYear.HasValue
                ? new ObjectParameter("Param_BudgetYear", param_BudgetYear)
                : new ObjectParameter("Param_BudgetYear", typeof(int));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromCategoryParameter = param_FromCategory != null
                ? new ObjectParameter("Param_FromCategory", param_FromCategory)
                : new ObjectParameter("Param_FromCategory", typeof(string));

            var param_ToCategoryParameter = param_ToCategory != null
                ? new ObjectParameter("Param_ToCategory", param_ToCategory)
                : new ObjectParameter("Param_ToCategory", typeof(string));

            var param_UseLocationParameter = param_UseLocation.HasValue
                ? new ObjectParameter("Param_UseLocation", param_UseLocation)
                : new ObjectParameter("Param_UseLocation", typeof(bool));

            var param_UseParameter1Parameter = param_UseParameter1.HasValue
                ? new ObjectParameter("Param_UseParameter1", param_UseParameter1)
                : new ObjectParameter("Param_UseParameter1", typeof(bool));

            var param_UseParameter2Parameter = param_UseParameter2.HasValue
                ? new ObjectParameter("Param_UseParameter2", param_UseParameter2)
                : new ObjectParameter("Param_UseParameter2", typeof(bool));

            var param_NoLinesReturnParameter = param_NoLinesReturn.HasValue
                ? new ObjectParameter("Param_NoLinesReturn", param_NoLinesReturn)
                : new ObjectParameter("Param_NoLinesReturn", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_InventoryBudget_GetBudget_Result>(
                    "Kompas_InventoryBudget_GetBudget", param_BudgetYearParameter, param_FromItemParameter,
                    param_ToItemParameter, param_FromGroupingParameter, param_ToGroupingParameter,
                    param_FromCategoryParameter, param_ToCategoryParameter, param_UseLocationParameter,
                    param_UseParameter1Parameter, param_UseParameter2Parameter, param_NoLinesReturnParameter);
        }

        public virtual int Kompas_InventoryBudget_GetLastYers(Nullable<int> param_BudgetYear, string param_FromItem,
            string param_ToItem, string param_FromGrouping, string param_ToGrouping, string param_FromCategory,
            string param_ToCategory, Nullable<double> param_PTSats, Nullable<bool> param_DeleteNotUsedItems)
        {
            var param_BudgetYearParameter = param_BudgetYear.HasValue
                ? new ObjectParameter("Param_BudgetYear", param_BudgetYear)
                : new ObjectParameter("Param_BudgetYear", typeof(int));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromCategoryParameter = param_FromCategory != null
                ? new ObjectParameter("Param_FromCategory", param_FromCategory)
                : new ObjectParameter("Param_FromCategory", typeof(string));

            var param_ToCategoryParameter = param_ToCategory != null
                ? new ObjectParameter("Param_ToCategory", param_ToCategory)
                : new ObjectParameter("Param_ToCategory", typeof(string));

            var param_PTSatsParameter = param_PTSats.HasValue
                ? new ObjectParameter("Param_PTSats", param_PTSats)
                : new ObjectParameter("Param_PTSats", typeof(double));

            var param_DeleteNotUsedItemsParameter = param_DeleteNotUsedItems.HasValue
                ? new ObjectParameter("Param_DeleteNotUsedItems", param_DeleteNotUsedItems)
                : new ObjectParameter("Param_DeleteNotUsedItems", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryBudget_GetLastYers",
                param_BudgetYearParameter, param_FromItemParameter, param_ToItemParameter, param_FromGroupingParameter,
                param_ToGroupingParameter, param_FromCategoryParameter, param_ToCategoryParameter, param_PTSatsParameter,
                param_DeleteNotUsedItemsParameter);
        }

        public virtual ObjectResult<Kompas_InventoryCount_CheckBookingData_Result>
            Kompas_InventoryCount_CheckBookingData(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_InventoryCount_CheckBookingData_Result>(
                        "Kompas_InventoryCount_CheckBookingData", param_JournalParameter);
        }

        public virtual int Kompas_InventoryCount_Delete_By_Journal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryCount_Delete_By_Journal",
                    param_JournalParameter);
        }

        public virtual ObjectResult<Kompas_InventoryDisponibleOnHand_Result> Kompas_InventoryDisponibleOnHand(
            string param_Item, string param_Location, string param_Parameter1, string param_Parameter2)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_InventoryDisponibleOnHand_Result>(
                    "Kompas_InventoryDisponibleOnHand", param_ItemParameter, param_LocationParameter,
                    param_Parameter1Parameter, param_Parameter2Parameter);
        }

        public virtual int Kompas_InventoryFKFormDeleteItemFromInventory(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryFKFormDeleteItemFromInventory", param_ItemParameter);
        }

        public virtual ObjectResult<Kompas_InventoryGetDeliveryTime_Result> Kompas_InventoryGetDeliveryTime(
            string param_Item, string param_Supplier)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_InventoryGetDeliveryTime_Result>(
                    "Kompas_InventoryGetDeliveryTime", param_ItemParameter, param_SupplierParameter);
        }

        public virtual int Kompas_InventoryGetItemFormExtraInventory(string item)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryGetItemFormExtraInventory", itemParameter);
        }

        public virtual int Kompas_InventoryGroup_AddNew(string grouping, string name, string sales, string salesEEC,
            string salesNotEEC, string discount, string discount_Buy, string cost, string deviation, string adjustment,
            string adjSetOff, string purchase, string stock, Nullable<double> avance, string costPercent,
            string standardGroup, string userName)
        {
            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var salesParameter = sales != null
                ? new ObjectParameter("Sales", sales)
                : new ObjectParameter("Sales", typeof(string));

            var salesEECParameter = salesEEC != null
                ? new ObjectParameter("SalesEEC", salesEEC)
                : new ObjectParameter("SalesEEC", typeof(string));

            var salesNotEECParameter = salesNotEEC != null
                ? new ObjectParameter("SalesNotEEC", salesNotEEC)
                : new ObjectParameter("SalesNotEEC", typeof(string));

            var discountParameter = discount != null
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(string));

            var discount_BuyParameter = discount_Buy != null
                ? new ObjectParameter("Discount_Buy", discount_Buy)
                : new ObjectParameter("Discount_Buy", typeof(string));

            var costParameter = cost != null
                ? new ObjectParameter("Cost", cost)
                : new ObjectParameter("Cost", typeof(string));

            var deviationParameter = deviation != null
                ? new ObjectParameter("Deviation", deviation)
                : new ObjectParameter("Deviation", typeof(string));

            var adjustmentParameter = adjustment != null
                ? new ObjectParameter("Adjustment", adjustment)
                : new ObjectParameter("Adjustment", typeof(string));

            var adjSetOffParameter = adjSetOff != null
                ? new ObjectParameter("AdjSetOff", adjSetOff)
                : new ObjectParameter("AdjSetOff", typeof(string));

            var purchaseParameter = purchase != null
                ? new ObjectParameter("Purchase", purchase)
                : new ObjectParameter("Purchase", typeof(string));

            var stockParameter = stock != null
                ? new ObjectParameter("Stock", stock)
                : new ObjectParameter("Stock", typeof(string));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var costPercentParameter = costPercent != null
                ? new ObjectParameter("CostPercent", costPercent)
                : new ObjectParameter("CostPercent", typeof(string));

            var standardGroupParameter = standardGroup != null
                ? new ObjectParameter("StandardGroup", standardGroup)
                : new ObjectParameter("StandardGroup", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryGroup_AddNew",
                groupingParameter, nameParameter, salesParameter, salesEECParameter, salesNotEECParameter,
                discountParameter, discount_BuyParameter, costParameter, deviationParameter, adjustmentParameter,
                adjSetOffParameter, purchaseParameter, stockParameter, avanceParameter, costPercentParameter,
                standardGroupParameter, userNameParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryLocationWorksheet_Check(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryLocationWorksheet_Check", param_JournalParameter);
        }

        public virtual int Kompas_InventoryLocationWorksheet_DeleteJournal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryLocationWorksheet_DeleteJournal", param_JournalParameter);
        }

        public virtual int Kompas_InventoryLocationWorksheet_Post(string param_Journal, string param_UserName)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_InventoryLocationWorksheet_Post", param_JournalParameter, param_UserNameParameter);
        }

        public virtual int Kompas_InventoryPriceImport_AddUpdate(string item, Nullable<bool> deleteState,
            string description, string unit, Nullable<double> salesPrice, Nullable<double> costPrice,
            Nullable<double> avance, string grouping, string discountCode, Nullable<double> discount,
            string itemAlternative, string placement, string eANItemNo, Nullable<double> quantityPrColi,
            Nullable<double> weight, string importFormat, Nullable<bool> mustExists, string remarks, string internalNo)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var deleteStateParameter = deleteState.HasValue
                ? new ObjectParameter("DeleteState", deleteState)
                : new ObjectParameter("DeleteState", typeof(bool));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var discountCodeParameter = discountCode != null
                ? new ObjectParameter("DiscountCode", discountCode)
                : new ObjectParameter("DiscountCode", typeof(string));

            var discountParameter = discount.HasValue
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(double));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var placementParameter = placement != null
                ? new ObjectParameter("Placement", placement)
                : new ObjectParameter("Placement", typeof(string));

            var eANItemNoParameter = eANItemNo != null
                ? new ObjectParameter("EANItemNo", eANItemNo)
                : new ObjectParameter("EANItemNo", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var importFormatParameter = importFormat != null
                ? new ObjectParameter("ImportFormat", importFormat)
                : new ObjectParameter("ImportFormat", typeof(string));

            var mustExistsParameter = mustExists.HasValue
                ? new ObjectParameter("MustExists", mustExists)
                : new ObjectParameter("MustExists", typeof(bool));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var internalNoParameter = internalNo != null
                ? new ObjectParameter("InternalNo", internalNo)
                : new ObjectParameter("InternalNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_InventoryPriceImport_AddUpdate", itemParameter, deleteStateParameter, descriptionParameter,
                unitParameter, salesPriceParameter, costPriceParameter, avanceParameter, groupingParameter,
                discountCodeParameter, discountParameter, itemAlternativeParameter, placementParameter,
                eANItemNoParameter, quantityPrColiParameter, weightParameter, importFormatParameter, mustExistsParameter,
                remarksParameter, internalNoParameter);
        }

        public virtual ObjectResult<Kompas_InventoryPriceImport_CheckData_Result> Kompas_InventoryPriceImport_CheckData(
            Nullable<bool> param_UpdateAccounts, string param_StandardItem, string param_StandardGroup,
            string param_StandardUnit, string param_NewCostPricePriceList, string param_ImportedPricePriceList,
            Nullable<bool> param_AllowUpdate)
        {
            var param_UpdateAccountsParameter = param_UpdateAccounts.HasValue
                ? new ObjectParameter("Param_UpdateAccounts", param_UpdateAccounts)
                : new ObjectParameter("Param_UpdateAccounts", typeof(bool));

            var param_StandardItemParameter = param_StandardItem != null
                ? new ObjectParameter("Param_StandardItem", param_StandardItem)
                : new ObjectParameter("Param_StandardItem", typeof(string));

            var param_StandardGroupParameter = param_StandardGroup != null
                ? new ObjectParameter("Param_StandardGroup", param_StandardGroup)
                : new ObjectParameter("Param_StandardGroup", typeof(string));

            var param_StandardUnitParameter = param_StandardUnit != null
                ? new ObjectParameter("Param_StandardUnit", param_StandardUnit)
                : new ObjectParameter("Param_StandardUnit", typeof(string));

            var param_NewCostPricePriceListParameter = param_NewCostPricePriceList != null
                ? new ObjectParameter("Param_NewCostPricePriceList", param_NewCostPricePriceList)
                : new ObjectParameter("Param_NewCostPricePriceList", typeof(string));

            var param_ImportedPricePriceListParameter = param_ImportedPricePriceList != null
                ? new ObjectParameter("Param_ImportedPricePriceList", param_ImportedPricePriceList)
                : new ObjectParameter("Param_ImportedPricePriceList", typeof(string));

            var param_AllowUpdateParameter = param_AllowUpdate.HasValue
                ? new ObjectParameter("Param_AllowUpdate", param_AllowUpdate)
                : new ObjectParameter("Param_AllowUpdate", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_InventoryPriceImport_CheckData_Result>(
                        "Kompas_InventoryPriceImport_CheckData", param_UpdateAccountsParameter,
                        param_StandardItemParameter, param_StandardGroupParameter, param_StandardUnitParameter,
                        param_NewCostPricePriceListParameter, param_ImportedPricePriceListParameter,
                        param_AllowUpdateParameter);
        }

        public virtual ObjectResult<Kompas_InventoryPriceImport_ExistsNewGroups_Result>
            Kompas_InventoryPriceImport_ExistsNewGroups(string standardGroup)
        {
            var standardGroupParameter = standardGroup != null
                ? new ObjectParameter("StandardGroup", standardGroup)
                : new ObjectParameter("StandardGroup", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_InventoryPriceImport_ExistsNewGroups_Result>(
                        "Kompas_InventoryPriceImport_ExistsNewGroups", standardGroupParameter);
        }

        public virtual int Kompas_InventoryPriceImport_InitDutySetup()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryPriceImport_InitDutySetup");
        }

        public virtual int Kompas_InventoryPriceImport_KommaFile_AddNew(string importFormat, string standardUnit,
            string standardGroup, Nullable<byte> avanceOption, Nullable<int> charsInGroup,
            Nullable<bool> groupInPlacement, Nullable<bool> lPInAlternativeItem, Nullable<bool> removeLeadingZeros,
            string data)
        {
            var importFormatParameter = importFormat != null
                ? new ObjectParameter("ImportFormat", importFormat)
                : new ObjectParameter("ImportFormat", typeof(string));

            var standardUnitParameter = standardUnit != null
                ? new ObjectParameter("StandardUnit", standardUnit)
                : new ObjectParameter("StandardUnit", typeof(string));

            var standardGroupParameter = standardGroup != null
                ? new ObjectParameter("StandardGroup", standardGroup)
                : new ObjectParameter("StandardGroup", typeof(string));

            var avanceOptionParameter = avanceOption.HasValue
                ? new ObjectParameter("AvanceOption", avanceOption)
                : new ObjectParameter("AvanceOption", typeof(byte));

            var charsInGroupParameter = charsInGroup.HasValue
                ? new ObjectParameter("CharsInGroup", charsInGroup)
                : new ObjectParameter("CharsInGroup", typeof(int));

            var groupInPlacementParameter = groupInPlacement.HasValue
                ? new ObjectParameter("GroupInPlacement", groupInPlacement)
                : new ObjectParameter("GroupInPlacement", typeof(bool));

            var lPInAlternativeItemParameter = lPInAlternativeItem.HasValue
                ? new ObjectParameter("LPInAlternativeItem", lPInAlternativeItem)
                : new ObjectParameter("LPInAlternativeItem", typeof(bool));

            var removeLeadingZerosParameter = removeLeadingZeros.HasValue
                ? new ObjectParameter("RemoveLeadingZeros", removeLeadingZeros)
                : new ObjectParameter("RemoveLeadingZeros", typeof(bool));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryPriceImport_KommaFile_AddNew", importFormatParameter, standardUnitParameter,
                    standardGroupParameter, avanceOptionParameter, charsInGroupParameter, groupInPlacementParameter,
                    lPInAlternativeItemParameter, removeLeadingZerosParameter, dataParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryPriceImport_PreviewDelete()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryPriceImport_PreviewDelete");
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryPriceImport_PreviewNew()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryPriceImport_PreviewNew");
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryPriceImport_PreviewNew_Extra()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryPriceImport_PreviewNew_Extra");
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryPriceImport_PreviewUpdate()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryPriceImport_PreviewUpdate");
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InventoryPriceImport_PreviewUpdate_Extra()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InventoryPriceImport_PreviewUpdate_Extra");
        }

        public virtual int Kompas_InventoryPriceImport_UpdateData(string param_ImportFormat,
            Nullable<byte> param_UseInventoryAvance, Nullable<bool> param_UseDiscount, string param_StandardUnit,
            string param_StandardItem, Nullable<bool> param_UseExtraInventory)
        {
            var param_ImportFormatParameter = param_ImportFormat != null
                ? new ObjectParameter("Param_ImportFormat", param_ImportFormat)
                : new ObjectParameter("Param_ImportFormat", typeof(string));

            var param_UseInventoryAvanceParameter = param_UseInventoryAvance.HasValue
                ? new ObjectParameter("Param_UseInventoryAvance", param_UseInventoryAvance)
                : new ObjectParameter("Param_UseInventoryAvance", typeof(byte));

            var param_UseDiscountParameter = param_UseDiscount.HasValue
                ? new ObjectParameter("Param_UseDiscount", param_UseDiscount)
                : new ObjectParameter("Param_UseDiscount", typeof(bool));

            var param_StandardUnitParameter = param_StandardUnit != null
                ? new ObjectParameter("Param_StandardUnit", param_StandardUnit)
                : new ObjectParameter("Param_StandardUnit", typeof(string));

            var param_StandardItemParameter = param_StandardItem != null
                ? new ObjectParameter("Param_StandardItem", param_StandardItem)
                : new ObjectParameter("Param_StandardItem", typeof(string));

            var param_UseExtraInventoryParameter = param_UseExtraInventory.HasValue
                ? new ObjectParameter("Param_UseExtraInventory", param_UseExtraInventory)
                : new ObjectParameter("Param_UseExtraInventory", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_InventoryPriceImport_UpdateData", param_ImportFormatParameter, param_UseInventoryAvanceParameter,
                param_UseDiscountParameter, param_StandardUnitParameter, param_StandardItemParameter,
                param_UseExtraInventoryParameter);
        }

        public virtual int Kompas_InventoryPriceImportDescount_AddUpdate(string importFormat, Nullable<int> tP,
            string code, string codeDescription, Nullable<double> percent, string eANNo)
        {
            var importFormatParameter = importFormat != null
                ? new ObjectParameter("ImportFormat", importFormat)
                : new ObjectParameter("ImportFormat", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var codeParameter = code != null
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(string));

            var codeDescriptionParameter = codeDescription != null
                ? new ObjectParameter("CodeDescription", codeDescription)
                : new ObjectParameter("CodeDescription", typeof(string));

            var percentParameter = percent.HasValue
                ? new ObjectParameter("Percent", percent)
                : new ObjectParameter("Percent", typeof(double));

            var eANNoParameter = eANNo != null
                ? new ObjectParameter("EANNo", eANNo)
                : new ObjectParameter("EANNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryPriceImportDescount_AddUpdate", importFormatParameter, tPParameter, codeParameter,
                    codeDescriptionParameter, percentParameter, eANNoParameter);
        }

        public virtual int Kompas_InventoryPriceImportDiscount_AddUpdate(string importFormat, Nullable<int> tP,
            string code, string codeDescription, Nullable<double> percent, string eANNo, Nullable<bool> allowChange,
            Nullable<double> avance)
        {
            var importFormatParameter = importFormat != null
                ? new ObjectParameter("ImportFormat", importFormat)
                : new ObjectParameter("ImportFormat", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var codeParameter = code != null
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(string));

            var codeDescriptionParameter = codeDescription != null
                ? new ObjectParameter("CodeDescription", codeDescription)
                : new ObjectParameter("CodeDescription", typeof(string));

            var percentParameter = percent.HasValue
                ? new ObjectParameter("Percent", percent)
                : new ObjectParameter("Percent", typeof(double));

            var eANNoParameter = eANNo != null
                ? new ObjectParameter("EANNo", eANNo)
                : new ObjectParameter("EANNo", typeof(string));

            var allowChangeParameter = allowChange.HasValue
                ? new ObjectParameter("AllowChange", allowChange)
                : new ObjectParameter("AllowChange", typeof(bool));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryPriceImportDiscount_AddUpdate", importFormatParameter, tPParameter, codeParameter,
                    codeDescriptionParameter, percentParameter, eANNoParameter, allowChangeParameter, avanceParameter);
        }

        public virtual int Kompas_InventoryPriceImportDuty_Add(string importFormat, string item, string dutyCode,
            Nullable<byte> type, Nullable<byte> amountType, Nullable<double> amount, string description,
            Nullable<bool> autoNotat)
        {
            var importFormatParameter = importFormat != null
                ? new ObjectParameter("ImportFormat", importFormat)
                : new ObjectParameter("ImportFormat", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var dutyCodeParameter = dutyCode != null
                ? new ObjectParameter("DutyCode", dutyCode)
                : new ObjectParameter("DutyCode", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var amountTypeParameter = amountType.HasValue
                ? new ObjectParameter("AmountType", amountType)
                : new ObjectParameter("AmountType", typeof(byte));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var autoNotatParameter = autoNotat.HasValue
                ? new ObjectParameter("AutoNotat", autoNotat)
                : new ObjectParameter("AutoNotat", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_InventoryPriceImportDuty_Add",
                importFormatParameter, itemParameter, dutyCodeParameter, typeParameter, amountTypeParameter,
                amountParameter, descriptionParameter, autoNotatParameter);
        }

        public virtual int Kompas_InventoryPriceImportSetup_AddUpdate(string param_ImportFormat, string param_ControlID,
            string param_ControlStringValue, Nullable<int> param_ControlIntValue,
            Nullable<double> param_ControlFloatValue)
        {
            var param_ImportFormatParameter = param_ImportFormat != null
                ? new ObjectParameter("Param_ImportFormat", param_ImportFormat)
                : new ObjectParameter("Param_ImportFormat", typeof(string));

            var param_ControlIDParameter = param_ControlID != null
                ? new ObjectParameter("Param_ControlID", param_ControlID)
                : new ObjectParameter("Param_ControlID", typeof(string));

            var param_ControlStringValueParameter = param_ControlStringValue != null
                ? new ObjectParameter("Param_ControlStringValue", param_ControlStringValue)
                : new ObjectParameter("Param_ControlStringValue", typeof(string));

            var param_ControlIntValueParameter = param_ControlIntValue.HasValue
                ? new ObjectParameter("Param_ControlIntValue", param_ControlIntValue)
                : new ObjectParameter("Param_ControlIntValue", typeof(int));

            var param_ControlFloatValueParameter = param_ControlFloatValue.HasValue
                ? new ObjectParameter("Param_ControlFloatValue", param_ControlFloatValue)
                : new ObjectParameter("Param_ControlFloatValue", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_InventoryPriceImportSetup_AddUpdate", param_ImportFormatParameter, param_ControlIDParameter,
                    param_ControlStringValueParameter, param_ControlIntValueParameter, param_ControlFloatValueParameter);
        }

        public virtual ObjectResult<Kompas_InvoiceCalculateIntrastatValues_Result>
            Kompas_InvoiceCalculateIntrastatValues(string orderNo, Nullable<double> trail)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_InvoiceCalculateIntrastatValues_Result>(
                        "Kompas_InvoiceCalculateIntrastatValues", orderNoParameter, trailParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InvoiceTextNewCopy(Nullable<int> param_FromID,
            string param_UserName)
        {
            var param_FromIDParameter = param_FromID.HasValue
                ? new ObjectParameter("Param_FromID", param_FromID)
                : new ObjectParameter("Param_FromID", typeof(int));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InvoiceTextNewCopy", param_FromIDParameter, param_UserNameParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_InvWorkSheetGetMaxLineNo(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_InvWorkSheetGetMaxLineNo", param_JournalParameter);
        }

        public virtual int Kompas_ItemPriceAvanceGroup_AddAllGroups(string priceList, Nullable<short> priceType)
        {
            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var priceTypeParameter = priceType.HasValue
                ? new ObjectParameter("PriceType", priceType)
                : new ObjectParameter("PriceType", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_ItemPriceAvanceGroup_AddAllGroups", priceListParameter, priceTypeParameter);
        }

        public virtual ObjectResult<Kompas_ItemPriceStatistik_Result> Kompas_ItemPriceStatistik(
            Nullable<short> param_Type, string param_Item, string param_Currency, string param_Unit,
            string param_Parameter1, string param_Parameter2, string param_Customer, string param_Supplier)
        {
            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_ItemPriceStatistik_Result>(
                    "Kompas_ItemPriceStatistik", param_TypeParameter, param_ItemParameter, param_CurrencyParameter,
                    param_UnitParameter, param_Parameter1Parameter, param_Parameter2Parameter, param_CustomerParameter,
                    param_SupplierParameter);
        }

        public virtual int Kompas_ItemSerialNo_AddUpdate(string param_Item, string param_SerialNo,
            Nullable<short> param_TP, string param_Supplier, string param_PurchaseNo, Nullable<double> param_Trail,
            Nullable<int> param_PurLineRecordID, string param_Optional1, string param_Optional2, string param_Optional3,
            string param_Optional4, string param_Optional5, string param_Optional6, string param_Optional7,
            string param_Optional8, string param_Optional9, string param_Optional10, string param_Remarks)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(short));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_PurLineRecordIDParameter = param_PurLineRecordID.HasValue
                ? new ObjectParameter("Param_PurLineRecordID", param_PurLineRecordID)
                : new ObjectParameter("Param_PurLineRecordID", typeof(int));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_Optional3Parameter = param_Optional3 != null
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(string));

            var param_Optional4Parameter = param_Optional4 != null
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(string));

            var param_Optional5Parameter = param_Optional5 != null
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(string));

            var param_Optional6Parameter = param_Optional6 != null
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(string));

            var param_Optional7Parameter = param_Optional7 != null
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(string));

            var param_Optional8Parameter = param_Optional8 != null
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(string));

            var param_Optional9Parameter = param_Optional9 != null
                ? new ObjectParameter("Param_Optional9", param_Optional9)
                : new ObjectParameter("Param_Optional9", typeof(string));

            var param_Optional10Parameter = param_Optional10 != null
                ? new ObjectParameter("Param_Optional10", param_Optional10)
                : new ObjectParameter("Param_Optional10", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ItemSerialNo_AddUpdate",
                param_ItemParameter, param_SerialNoParameter, param_TPParameter, param_SupplierParameter,
                param_PurchaseNoParameter, param_TrailParameter, param_PurLineRecordIDParameter,
                param_Optional1Parameter, param_Optional2Parameter, param_Optional3Parameter, param_Optional4Parameter,
                param_Optional5Parameter, param_Optional6Parameter, param_Optional7Parameter, param_Optional8Parameter,
                param_Optional9Parameter, param_Optional10Parameter, param_RemarksParameter);
        }

        public virtual ObjectResult<string> Kompas_ItemSerialNo_Check(string param_Item, string param_SerialNo,
            string param_PurchaseNo, string param_Supplier, Nullable<int> param_PurLineRecordID,
            Nullable<bool> param_IsCreditNota)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_PurLineRecordIDParameter = param_PurLineRecordID.HasValue
                ? new ObjectParameter("Param_PurLineRecordID", param_PurLineRecordID)
                : new ObjectParameter("Param_PurLineRecordID", typeof(int));

            var param_IsCreditNotaParameter = param_IsCreditNota.HasValue
                ? new ObjectParameter("Param_IsCreditNota", param_IsCreditNota)
                : new ObjectParameter("Param_IsCreditNota", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_ItemSerialNo_Check",
                param_ItemParameter, param_SerialNoParameter, param_PurchaseNoParameter, param_SupplierParameter,
                param_PurLineRecordIDParameter, param_IsCreditNotaParameter);
        }

        public virtual int Kompas_ItemSerialNo_Delete(string param_Item, string param_SerialNo)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ItemSerialNo_Delete",
                param_ItemParameter, param_SerialNoParameter);
        }

        public virtual int Kompas_ItemSerialNoGetSerialNo(string item, Nullable<byte> type)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ItemSerialNoGetSerialNo",
                itemParameter, typeParameter);
        }

        public virtual int Kompas_ItemSerialNoSale_AddUpdate(string param_Item, string param_SerialNo,
            Nullable<short> param_InvoiceTP, string param_Customer, string param_OrderNo, Nullable<double> param_Trail,
            Nullable<int> param_OrdLineRecordID)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_InvoiceTPParameter = param_InvoiceTP.HasValue
                ? new ObjectParameter("Param_InvoiceTP", param_InvoiceTP)
                : new ObjectParameter("Param_InvoiceTP", typeof(short));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_OrdLineRecordIDParameter = param_OrdLineRecordID.HasValue
                ? new ObjectParameter("Param_OrdLineRecordID", param_OrdLineRecordID)
                : new ObjectParameter("Param_OrdLineRecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ItemSerialNoSale_AddUpdate",
                param_ItemParameter, param_SerialNoParameter, param_InvoiceTPParameter, param_CustomerParameter,
                param_OrderNoParameter, param_TrailParameter, param_OrdLineRecordIDParameter);
        }

        public virtual ObjectResult<string> Kompas_ItemSerialNoSale_Check(string param_Item, string param_SerialNo,
            Nullable<int> param_OrdLineRecordID, string param_Customer, Nullable<bool> param_IsCreditNota)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_OrdLineRecordIDParameter = param_OrdLineRecordID.HasValue
                ? new ObjectParameter("Param_OrdLineRecordID", param_OrdLineRecordID)
                : new ObjectParameter("Param_OrdLineRecordID", typeof(int));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_IsCreditNotaParameter = param_IsCreditNota.HasValue
                ? new ObjectParameter("Param_IsCreditNota", param_IsCreditNota)
                : new ObjectParameter("Param_IsCreditNota", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                "Kompas_ItemSerialNoSale_Check", param_ItemParameter, param_SerialNoParameter,
                param_OrdLineRecordIDParameter, param_CustomerParameter, param_IsCreditNotaParameter);
        }

        public virtual int Kompas_ItemSerialNoTmp_AddUpdate(string param_Item, string param_SerialNo,
            string param_Supplier, string param_PurchaseNo, Nullable<int> param_PurLineRecordID)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_PurLineRecordIDParameter = param_PurLineRecordID.HasValue
                ? new ObjectParameter("Param_PurLineRecordID", param_PurLineRecordID)
                : new ObjectParameter("Param_PurLineRecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ItemSerialNoTmp_AddUpdate",
                param_ItemParameter, param_SerialNoParameter, param_SupplierParameter, param_PurchaseNoParameter,
                param_PurLineRecordIDParameter);
        }

        public virtual int Kompas_Journal_UnLockUser(string param_Journal, string param_UserName)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Journal_UnLockUser",
                param_JournalParameter, param_UserNameParameter);
        }

        public virtual int Kompas_JournalAppendArchiveLines(Nullable<int> recordID, Nullable<bool> reversed)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var reversedParameter = reversed.HasValue
                ? new ObjectParameter("Reversed", reversed)
                : new ObjectParameter("Reversed", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_JournalAppendArchiveLines",
                recordIDParameter, reversedParameter);
        }

        public virtual int Kompas_JournalDefaultValues_AddNew(string param_Journal, string param_Column_Name,
            string param_Value)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_Column_NameParameter = param_Column_Name != null
                ? new ObjectParameter("Param_Column_Name", param_Column_Name)
                : new ObjectParameter("Param_Column_Name", typeof(string));

            var param_ValueParameter = param_Value != null
                ? new ObjectParameter("Param_Value", param_Value)
                : new ObjectParameter("Param_Value", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_JournalDefaultValues_AddNew",
                param_JournalParameter, param_Column_NameParameter, param_ValueParameter);
        }

        public virtual ObjectResult<Kompas_JournalGetAccountInformation_Result> Kompas_JournalGetAccountInformation(
            string param_Journal, string param_Account)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_JournalGetAccountInformation_Result>
                    ("Kompas_JournalGetAccountInformation", param_JournalParameter, param_AccountParameter);
        }

        public virtual ObjectResult<Kompas_JournalGetCustomerInformation_Result> Kompas_JournalGetCustomerInformation(
            string param_Journal, string param_Customer)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_JournalGetCustomerInformation_Result>(
                        "Kompas_JournalGetCustomerInformation", param_JournalParameter, param_CustomerParameter);
        }

        public virtual ObjectResult<Kompas_JournalGetSupplierInformation_Result> Kompas_JournalGetSupplierInformation(
            string param_Journal, string param_Supplier)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_JournalGetSupplierInformation_Result>(
                        "Kompas_JournalGetSupplierInformation", param_JournalParameter, param_SupplierParameter);
        }

        public virtual ObjectResult<Kompas_JournalPosts_GetJournals_Result> Kompas_JournalPosts_GetJournals(
            Nullable<short> viewModule, string journal, Nullable<System.DateTime> dateFrom,
            Nullable<System.DateTime> dateTo)
        {
            var viewModuleParameter = viewModule.HasValue
                ? new ObjectParameter("ViewModule", viewModule)
                : new ObjectParameter("ViewModule", typeof(short));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_JournalPosts_GetJournals_Result>(
                    "Kompas_JournalPosts_GetJournals", viewModuleParameter, journalParameter, dateFromParameter,
                    dateToParameter);
        }

        public virtual int Kompas_JournalUtilsInsertLine(string param_Journal, Nullable<int> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_JournalUtilsInsertLine",
                param_JournalParameter, param_LineNoParameter);
        }

        public virtual int Kompas_JournalUtilsKillAllTransEntriesByJournal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_JournalUtilsKillAllTransEntriesByJournal", param_JournalParameter);
        }

        public virtual int Kompas_Key_Change(string table_name, string column_name, string fromValue, string toValue)
        {
            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var column_nameParameter = column_name != null
                ? new ObjectParameter("column_name", column_name)
                : new ObjectParameter("column_name", typeof(string));

            var fromValueParameter = fromValue != null
                ? new ObjectParameter("FromValue", fromValue)
                : new ObjectParameter("FromValue", typeof(string));

            var toValueParameter = toValue != null
                ? new ObjectParameter("ToValue", toValue)
                : new ObjectParameter("ToValue", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Key_Change", table_nameParameter,
                column_nameParameter, fromValueParameter, toValueParameter);
        }

        public virtual int Kompas_Konvert_ImportExport()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Konvert_ImportExport");
        }

        public virtual ObjectResult<Kompas_KonvertToDBVersion111_Result> Kompas_KonvertToDBVersion111()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_KonvertToDBVersion111_Result>(
                    "Kompas_KonvertToDBVersion111");
        }

        public virtual int Kompas_KonvertToDBVersion114()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion114");
        }

        public virtual int Kompas_KonvertToDBVersion119()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion119");
        }

        public virtual int Kompas_KonvertToDBVersion120()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion120");
        }

        public virtual int Kompas_KonvertToDBVersion123()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion123");
        }

        public virtual int Kompas_KonvertToDBVersion124()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion124");
        }

        public virtual int Kompas_KonvertToDBVersion127()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion127");
        }

        public virtual int Kompas_KonvertToDBVersion128()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion128");
        }

        public virtual int Kompas_KonvertToDBVersion129()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion129");
        }

        public virtual int Kompas_KonvertToDBVersion133()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion133");
        }

        public virtual int Kompas_KonvertToDBVersion134()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion134");
        }

        public virtual int Kompas_KonvertToDBVersion144()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion144");
        }

        public virtual int Kompas_KonvertToDBVersion145()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion145");
        }

        public virtual int Kompas_KonvertToDBVersion150()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion150");
        }

        public virtual int Kompas_KonvertToDBVersion152()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion152");
        }

        public virtual int Kompas_KonvertToDBVersion155()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion155");
        }

        public virtual int Kompas_KonvertToDBVersion171()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion171");
        }

        public virtual int Kompas_KonvertToDBVersion198()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion198");
        }

        public virtual int Kompas_KonvertToDBVersion199()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion199");
        }

        public virtual int Kompas_KonvertToDBVersion216()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion216");
        }

        public virtual int Kompas_KonvertToDBVersion221()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion221");
        }

        public virtual int Kompas_KonvertToDBVersion223()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion223");
        }

        public virtual int Kompas_KonvertToDBVersion230()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion230");
        }

        public virtual int Kompas_KonvertToDBVersion241()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion241");
        }

        public virtual int Kompas_KonvertToDBVersion250()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion250");
        }

        public virtual int Kompas_KonvertToDBVersion257()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion257");
        }

        public virtual int Kompas_KonvertToDBVersion267()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion267");
        }

        public virtual int Kompas_KonvertToDBVersion38()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion38");
        }

        public virtual int Kompas_KonvertToDBVersion43()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion43");
        }

        public virtual int Kompas_KonvertToDBVersion48()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion48");
        }

        public virtual int Kompas_KonvertToDBVersion50()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion50");
        }

        public virtual int Kompas_KonvertToDBVersion52()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion52");
        }

        public virtual int Kompas_KonvertToDBVersion53()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion53");
        }

        public virtual int Kompas_KonvertToDBVersion54()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion54");
        }

        public virtual int Kompas_KonvertToDBVersion55()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion55");
        }

        public virtual int Kompas_KonvertToDBVersion56()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion56");
        }

        public virtual int Kompas_KonvertToDBVersion58()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion58");
        }

        public virtual int Kompas_KonvertToDBVersion64()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion64");
        }

        public virtual int Kompas_KonvertToDBVersion65()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion65");
        }

        public virtual int Kompas_KonvertToDBVersion69()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion69");
        }

        public virtual int Kompas_KonvertToDBVersion71()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion71");
        }

        public virtual int Kompas_KonvertToDBVersion74()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion74");
        }

        public virtual int Kompas_KonvertToDBVersion76()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion76");
        }

        public virtual int Kompas_KonvertToDBVersion77()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion77");
        }

        public virtual int Kompas_KonvertToDBVersion78()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion78");
        }

        public virtual int Kompas_KonvertToDBVersion88()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion88");
        }

        public virtual int Kompas_KonvertToDBVersion94()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion94");
        }

        public virtual int Kompas_KonvertToDBVersion96()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion96");
        }

        public virtual int Kompas_KonvertToDBVersion98()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_KonvertToDBVersion98");
        }

        public virtual ObjectResult<Kompas_LangKeyValue_Select_Result> Kompas_LangKeyValue_Select(string table_name,
            string key_value)
        {
            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var key_valueParameter = key_value != null
                ? new ObjectParameter("key_value", key_value)
                : new ObjectParameter("key_value", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_LangKeyValue_Select_Result>(
                    "Kompas_LangKeyValue_Select", table_nameParameter, key_valueParameter);
        }

        public virtual int Kompas_LangKeyValue_Update(string table_name, string key_value, string language,
            string description)
        {
            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var key_valueParameter = key_value != null
                ? new ObjectParameter("key_value", key_value)
                : new ObjectParameter("key_value", typeof(string));

            var languageParameter = language != null
                ? new ObjectParameter("language", language)
                : new ObjectParameter("language", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("description", description)
                : new ObjectParameter("description", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LangKeyValue_Update",
                table_nameParameter, key_valueParameter, languageParameter, descriptionParameter);
        }

        public virtual int Kompas_LEBOM_AddNewItem(string param_OrderNo, Nullable<int> param_LineID, string param_Item,
            Nullable<int> param_BOMRecordID, Nullable<int> param_ParentID, Nullable<int> param_ChildID,
            Nullable<int> param_Faktor, Nullable<short> param_AllocateState)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineIDParameter = param_LineID.HasValue
                ? new ObjectParameter("Param_LineID", param_LineID)
                : new ObjectParameter("Param_LineID", typeof(int));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_BOMRecordIDParameter = param_BOMRecordID.HasValue
                ? new ObjectParameter("Param_BOMRecordID", param_BOMRecordID)
                : new ObjectParameter("Param_BOMRecordID", typeof(int));

            var param_ParentIDParameter = param_ParentID.HasValue
                ? new ObjectParameter("Param_ParentID", param_ParentID)
                : new ObjectParameter("Param_ParentID", typeof(int));

            var param_ChildIDParameter = param_ChildID.HasValue
                ? new ObjectParameter("Param_ChildID", param_ChildID)
                : new ObjectParameter("Param_ChildID", typeof(int));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(int));

            var param_AllocateStateParameter = param_AllocateState.HasValue
                ? new ObjectParameter("Param_AllocateState", param_AllocateState)
                : new ObjectParameter("Param_AllocateState", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LEBOM_AddNewItem",
                param_OrderNoParameter, param_LineIDParameter, param_ItemParameter, param_BOMRecordIDParameter,
                param_ParentIDParameter, param_ChildIDParameter, param_FaktorParameter, param_AllocateStateParameter);
        }

        public virtual int Kompas_LEBOM_AllocateItems(string param_OrderNo, Nullable<int> param_LineID,
            Nullable<double> param_Faktor)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineIDParameter = param_LineID.HasValue
                ? new ObjectParameter("Param_LineID", param_LineID)
                : new ObjectParameter("Param_LineID", typeof(int));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LEBOM_AllocateItems",
                param_OrderNoParameter, param_LineIDParameter, param_FaktorParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_LEBOM_HasSerialNoItems(Nullable<int> param_BOMLIneID)
        {
            var param_BOMLIneIDParameter = param_BOMLIneID.HasValue
                ? new ObjectParameter("Param_BOMLIneID", param_BOMLIneID)
                : new ObjectParameter("Param_BOMLIneID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_LEBOM_HasSerialNoItems", param_BOMLIneIDParameter);
        }

        public virtual int Kompas_LinesEntry_AddNew(ObjectParameter output_RecordID, string param_Item,
            Nullable<short> param_OPType, string param_OPNo, string param_Journal,
            Nullable<System.DateTime> param_Delivery, string param_Location, Nullable<double> param_Ordered,
            Nullable<double> param_Deliver, string param_Unit, string param_Description, Nullable<double> param_Price,
            Nullable<double> param_Discount, Nullable<double> param_Delivered, string param_BatchNo,
            string param_Department, string param_CostCenter, string param_Project, string param_PurPose,
            string param_Employee, Nullable<double> param_CostPrice, string param_RemarksBefore,
            string param_RemarksAfter, string param_RefPurchaseNo, string param_RefOrderNo, string param_Account,
            Nullable<bool> param_InternalLine, string param_Parameter1, string param_Parameter2,
            Nullable<byte> param_SplitStatus, string param_Optional1, string param_Optional2, Nullable<int> param_JobNo,
            Nullable<double> param_OptionalNumber1, Nullable<double> param_OptionalNumber2,
            Nullable<System.DateTime> param_OptionalDate1, Nullable<System.DateTime> param_OptionalDate2)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_OPTypeParameter = param_OPType.HasValue
                ? new ObjectParameter("Param_OPType", param_OPType)
                : new ObjectParameter("Param_OPType", typeof(short));

            var param_OPNoParameter = param_OPNo != null
                ? new ObjectParameter("Param_OPNo", param_OPNo)
                : new ObjectParameter("Param_OPNo", typeof(string));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliverParameter = param_Deliver.HasValue
                ? new ObjectParameter("Param_Deliver", param_Deliver)
                : new ObjectParameter("Param_Deliver", typeof(double));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_PriceParameter = param_Price.HasValue
                ? new ObjectParameter("Param_Price", param_Price)
                : new ObjectParameter("Param_Price", typeof(double));

            var param_DiscountParameter = param_Discount.HasValue
                ? new ObjectParameter("Param_Discount", param_Discount)
                : new ObjectParameter("Param_Discount", typeof(double));

            var param_DeliveredParameter = param_Delivered.HasValue
                ? new ObjectParameter("Param_Delivered", param_Delivered)
                : new ObjectParameter("Param_Delivered", typeof(double));

            var param_BatchNoParameter = param_BatchNo != null
                ? new ObjectParameter("Param_BatchNo", param_BatchNo)
                : new ObjectParameter("Param_BatchNo", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_RemarksBeforeParameter = param_RemarksBefore != null
                ? new ObjectParameter("Param_RemarksBefore", param_RemarksBefore)
                : new ObjectParameter("Param_RemarksBefore", typeof(string));

            var param_RemarksAfterParameter = param_RemarksAfter != null
                ? new ObjectParameter("Param_RemarksAfter", param_RemarksAfter)
                : new ObjectParameter("Param_RemarksAfter", typeof(string));

            var param_RefPurchaseNoParameter = param_RefPurchaseNo != null
                ? new ObjectParameter("Param_RefPurchaseNo", param_RefPurchaseNo)
                : new ObjectParameter("Param_RefPurchaseNo", typeof(string));

            var param_RefOrderNoParameter = param_RefOrderNo != null
                ? new ObjectParameter("Param_RefOrderNo", param_RefOrderNo)
                : new ObjectParameter("Param_RefOrderNo", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_InternalLineParameter = param_InternalLine.HasValue
                ? new ObjectParameter("Param_InternalLine", param_InternalLine)
                : new ObjectParameter("Param_InternalLine", typeof(bool));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_SplitStatusParameter = param_SplitStatus.HasValue
                ? new ObjectParameter("Param_SplitStatus", param_SplitStatus)
                : new ObjectParameter("Param_SplitStatus", typeof(byte));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_JobNoParameter = param_JobNo.HasValue
                ? new ObjectParameter("Param_JobNo", param_JobNo)
                : new ObjectParameter("Param_JobNo", typeof(int));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalDate1Parameter = param_OptionalDate1.HasValue
                ? new ObjectParameter("Param_OptionalDate1", param_OptionalDate1)
                : new ObjectParameter("Param_OptionalDate1", typeof(System.DateTime));

            var param_OptionalDate2Parameter = param_OptionalDate2.HasValue
                ? new ObjectParameter("Param_OptionalDate2", param_OptionalDate2)
                : new ObjectParameter("Param_OptionalDate2", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LinesEntry_AddNew",
                output_RecordID, param_ItemParameter, param_OPTypeParameter, param_OPNoParameter, param_JournalParameter,
                param_DeliveryParameter, param_LocationParameter, param_OrderedParameter, param_DeliverParameter,
                param_UnitParameter, param_DescriptionParameter, param_PriceParameter, param_DiscountParameter,
                param_DeliveredParameter, param_BatchNoParameter, param_DepartmentParameter, param_CostCenterParameter,
                param_ProjectParameter, param_PurPoseParameter, param_EmployeeParameter, param_CostPriceParameter,
                param_RemarksBeforeParameter, param_RemarksAfterParameter, param_RefPurchaseNoParameter,
                param_RefOrderNoParameter, param_AccountParameter, param_InternalLineParameter,
                param_Parameter1Parameter, param_Parameter2Parameter, param_SplitStatusParameter,
                param_Optional1Parameter, param_Optional2Parameter, param_JobNoParameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalDate1Parameter, param_OptionalDate2Parameter);
        }

        public virtual int Kompas_LinesEntry_AddNew_ForInventoryJournal(ObjectParameter output_RecordID,
            string param_Journal, string param_Voucher, string param_Item, Nullable<double> param_Ordered,
            string param_Parameter1, string param_Parameter2, Nullable<System.DateTime> param_Delivery,
            string param_Location, string param_Description, string param_Department, string param_CostCenter,
            string param_Project, string param_PurPose, Nullable<double> param_CostPrice, string param_Account,
            string param_BatchNo, string param_CustomsNo, string param_ExternalNo, Nullable<int> param_JobNo,
            string param_Optional1, string param_Optional2, Nullable<System.DateTime> param_OptionalDate1,
            Nullable<System.DateTime> param_OptionalDate2, Nullable<double> param_OptionalNumber1,
            Nullable<double> param_OptionalNumber2, Nullable<double> param_Volume, Nullable<double> param_Weight)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_BatchNoParameter = param_BatchNo != null
                ? new ObjectParameter("Param_BatchNo", param_BatchNo)
                : new ObjectParameter("Param_BatchNo", typeof(string));

            var param_CustomsNoParameter = param_CustomsNo != null
                ? new ObjectParameter("Param_CustomsNo", param_CustomsNo)
                : new ObjectParameter("Param_CustomsNo", typeof(string));

            var param_ExternalNoParameter = param_ExternalNo != null
                ? new ObjectParameter("Param_ExternalNo", param_ExternalNo)
                : new ObjectParameter("Param_ExternalNo", typeof(string));

            var param_JobNoParameter = param_JobNo.HasValue
                ? new ObjectParameter("Param_JobNo", param_JobNo)
                : new ObjectParameter("Param_JobNo", typeof(int));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_OptionalDate1Parameter = param_OptionalDate1.HasValue
                ? new ObjectParameter("Param_OptionalDate1", param_OptionalDate1)
                : new ObjectParameter("Param_OptionalDate1", typeof(System.DateTime));

            var param_OptionalDate2Parameter = param_OptionalDate2.HasValue
                ? new ObjectParameter("Param_OptionalDate2", param_OptionalDate2)
                : new ObjectParameter("Param_OptionalDate2", typeof(System.DateTime));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_VolumeParameter = param_Volume.HasValue
                ? new ObjectParameter("Param_Volume", param_Volume)
                : new ObjectParameter("Param_Volume", typeof(double));

            var param_WeightParameter = param_Weight.HasValue
                ? new ObjectParameter("Param_Weight", param_Weight)
                : new ObjectParameter("Param_Weight", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_LinesEntry_AddNew_ForInventoryJournal", output_RecordID, param_JournalParameter,
                    param_VoucherParameter, param_ItemParameter, param_OrderedParameter, param_Parameter1Parameter,
                    param_Parameter2Parameter, param_DeliveryParameter, param_LocationParameter,
                    param_DescriptionParameter, param_DepartmentParameter, param_CostCenterParameter,
                    param_ProjectParameter, param_PurPoseParameter, param_CostPriceParameter, param_AccountParameter,
                    param_BatchNoParameter, param_CustomsNoParameter, param_ExternalNoParameter, param_JobNoParameter,
                    param_Optional1Parameter, param_Optional2Parameter, param_OptionalDate1Parameter,
                    param_OptionalDate2Parameter, param_OptionalNumber1Parameter, param_OptionalNumber2Parameter,
                    param_VolumeParameter, param_WeightParameter);
        }

        public virtual int Kompas_LinesEntry_Delete(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LinesEntry_Delete",
                param_RecordIDParameter);
        }

        public virtual int Kompas_LinesEntry_Delete_By_Journal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LinesEntry_Delete_By_Journal",
                param_JournalParameter);
        }

        public virtual int Kompas_LinesEntry_MakeBOMLines(string param_OrderNo, Nullable<int> param_BOMLineID,
            string param_Master, Nullable<int> param_RecordID, Nullable<int> param_ParentID,
            ObjectParameter param_ChildID, Nullable<double> param_Faktor, Nullable<short> param_Master_AllocateBOM,
            Nullable<double> param_ParentFaktor)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_BOMLineIDParameter = param_BOMLineID.HasValue
                ? new ObjectParameter("Param_BOMLineID", param_BOMLineID)
                : new ObjectParameter("Param_BOMLineID", typeof(int));

            var param_MasterParameter = param_Master != null
                ? new ObjectParameter("Param_Master", param_Master)
                : new ObjectParameter("Param_Master", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_ParentIDParameter = param_ParentID.HasValue
                ? new ObjectParameter("Param_ParentID", param_ParentID)
                : new ObjectParameter("Param_ParentID", typeof(int));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(double));

            var param_Master_AllocateBOMParameter = param_Master_AllocateBOM.HasValue
                ? new ObjectParameter("Param_Master_AllocateBOM", param_Master_AllocateBOM)
                : new ObjectParameter("Param_Master_AllocateBOM", typeof(short));

            var param_ParentFaktorParameter = param_ParentFaktor.HasValue
                ? new ObjectParameter("Param_ParentFaktor", param_ParentFaktor)
                : new ObjectParameter("Param_ParentFaktor", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LinesEntry_MakeBOMLines",
                param_OrderNoParameter, param_BOMLineIDParameter, param_MasterParameter, param_RecordIDParameter,
                param_ParentIDParameter, param_ChildID, param_FaktorParameter, param_Master_AllocateBOMParameter,
                param_ParentFaktorParameter);
        }

        public virtual int Kompas_LinesEntry_Update(Nullable<int> param_RecordID, Nullable<short> param_OPType,
            string param_OPNo, string param_Item, string param_Journal, Nullable<System.DateTime> param_Delivery,
            string param_Location, Nullable<double> param_Ordered, Nullable<double> param_Deliver,
            string param_Description, Nullable<double> param_Price, Nullable<double> param_Discount,
            string param_BatchNo, string param_Department, string param_CostCenter, string param_Project,
            string param_PurPose, string param_Employee, Nullable<double> param_CostPrice, string param_RemarksBefore,
            string param_RemarksAfter, string param_RefPurchaseNo, string param_RefOrderNo, string param_Account,
            Nullable<bool> param_InternalLine, string param_Parameter1, string param_Parameter2, string param_Optional1,
            string param_Optional2, Nullable<int> param_JobNo, Nullable<double> param_OptionalNumber1,
            Nullable<double> param_OptionalNumber2, Nullable<System.DateTime> param_OptionalDate1,
            Nullable<System.DateTime> param_OptionalDate2)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OPTypeParameter = param_OPType.HasValue
                ? new ObjectParameter("Param_OPType", param_OPType)
                : new ObjectParameter("Param_OPType", typeof(short));

            var param_OPNoParameter = param_OPNo != null
                ? new ObjectParameter("Param_OPNo", param_OPNo)
                : new ObjectParameter("Param_OPNo", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliverParameter = param_Deliver.HasValue
                ? new ObjectParameter("Param_Deliver", param_Deliver)
                : new ObjectParameter("Param_Deliver", typeof(double));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_PriceParameter = param_Price.HasValue
                ? new ObjectParameter("Param_Price", param_Price)
                : new ObjectParameter("Param_Price", typeof(double));

            var param_DiscountParameter = param_Discount.HasValue
                ? new ObjectParameter("Param_Discount", param_Discount)
                : new ObjectParameter("Param_Discount", typeof(double));

            var param_BatchNoParameter = param_BatchNo != null
                ? new ObjectParameter("Param_BatchNo", param_BatchNo)
                : new ObjectParameter("Param_BatchNo", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_RemarksBeforeParameter = param_RemarksBefore != null
                ? new ObjectParameter("Param_RemarksBefore", param_RemarksBefore)
                : new ObjectParameter("Param_RemarksBefore", typeof(string));

            var param_RemarksAfterParameter = param_RemarksAfter != null
                ? new ObjectParameter("Param_RemarksAfter", param_RemarksAfter)
                : new ObjectParameter("Param_RemarksAfter", typeof(string));

            var param_RefPurchaseNoParameter = param_RefPurchaseNo != null
                ? new ObjectParameter("Param_RefPurchaseNo", param_RefPurchaseNo)
                : new ObjectParameter("Param_RefPurchaseNo", typeof(string));

            var param_RefOrderNoParameter = param_RefOrderNo != null
                ? new ObjectParameter("Param_RefOrderNo", param_RefOrderNo)
                : new ObjectParameter("Param_RefOrderNo", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_InternalLineParameter = param_InternalLine.HasValue
                ? new ObjectParameter("Param_InternalLine", param_InternalLine)
                : new ObjectParameter("Param_InternalLine", typeof(bool));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_Optional1Parameter = param_Optional1 != null
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(string));

            var param_Optional2Parameter = param_Optional2 != null
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(string));

            var param_JobNoParameter = param_JobNo.HasValue
                ? new ObjectParameter("Param_JobNo", param_JobNo)
                : new ObjectParameter("Param_JobNo", typeof(int));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalDate1Parameter = param_OptionalDate1.HasValue
                ? new ObjectParameter("Param_OptionalDate1", param_OptionalDate1)
                : new ObjectParameter("Param_OptionalDate1", typeof(System.DateTime));

            var param_OptionalDate2Parameter = param_OptionalDate2.HasValue
                ? new ObjectParameter("Param_OptionalDate2", param_OptionalDate2)
                : new ObjectParameter("Param_OptionalDate2", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LinesEntry_Update",
                param_RecordIDParameter, param_OPTypeParameter, param_OPNoParameter, param_ItemParameter,
                param_JournalParameter, param_DeliveryParameter, param_LocationParameter, param_OrderedParameter,
                param_DeliverParameter, param_DescriptionParameter, param_PriceParameter, param_DiscountParameter,
                param_BatchNoParameter, param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter,
                param_PurPoseParameter, param_EmployeeParameter, param_CostPriceParameter, param_RemarksBeforeParameter,
                param_RemarksAfterParameter, param_RefPurchaseNoParameter, param_RefOrderNoParameter,
                param_AccountParameter, param_InternalLineParameter, param_Parameter1Parameter,
                param_Parameter2Parameter, param_Optional1Parameter, param_Optional2Parameter, param_JobNoParameter,
                param_OptionalNumber1Parameter, param_OptionalNumber2Parameter, param_OptionalDate1Parameter,
                param_OptionalDate2Parameter);
        }

        public virtual int Kompas_LinesEntryBillOfMaterial_AddUpdate(string param_OrderNo, Nullable<int> param_LineID,
            string param_Master, string param_Item, Nullable<double> param_Quantity, string param_Unit,
            string param_Location, string param_Reference, Nullable<double> param_Time, string param_Process,
            string param_Description, string param_Department, string param_CostCenter, string param_Purpose,
            string param_Project, Nullable<double> param_Conversion, Nullable<double> param_Price,
            Nullable<double> param_CostPrice, Nullable<int> param_RecordID, Nullable<int> param_ParentID,
            Nullable<int> param_ChildID, Nullable<int> param_LineNo, Nullable<short> param_AllocateState,
            Nullable<bool> param_DataChanged, string param_SerialNo, Nullable<double> param_Faktor,
            string param_Parameter1, string param_Parameter2, Nullable<bool> param_AsCreditNota)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineIDParameter = param_LineID.HasValue
                ? new ObjectParameter("Param_LineID", param_LineID)
                : new ObjectParameter("Param_LineID", typeof(int));

            var param_MasterParameter = param_Master != null
                ? new ObjectParameter("Param_Master", param_Master)
                : new ObjectParameter("Param_Master", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_ReferenceParameter = param_Reference != null
                ? new ObjectParameter("Param_Reference", param_Reference)
                : new ObjectParameter("Param_Reference", typeof(string));

            var param_TimeParameter = param_Time.HasValue
                ? new ObjectParameter("Param_Time", param_Time)
                : new ObjectParameter("Param_Time", typeof(double));

            var param_ProcessParameter = param_Process != null
                ? new ObjectParameter("Param_Process", param_Process)
                : new ObjectParameter("Param_Process", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_ConversionParameter = param_Conversion.HasValue
                ? new ObjectParameter("Param_Conversion", param_Conversion)
                : new ObjectParameter("Param_Conversion", typeof(double));

            var param_PriceParameter = param_Price.HasValue
                ? new ObjectParameter("Param_Price", param_Price)
                : new ObjectParameter("Param_Price", typeof(double));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_ParentIDParameter = param_ParentID.HasValue
                ? new ObjectParameter("Param_ParentID", param_ParentID)
                : new ObjectParameter("Param_ParentID", typeof(int));

            var param_ChildIDParameter = param_ChildID.HasValue
                ? new ObjectParameter("Param_ChildID", param_ChildID)
                : new ObjectParameter("Param_ChildID", typeof(int));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            var param_AllocateStateParameter = param_AllocateState.HasValue
                ? new ObjectParameter("Param_AllocateState", param_AllocateState)
                : new ObjectParameter("Param_AllocateState", typeof(short));

            var param_DataChangedParameter = param_DataChanged.HasValue
                ? new ObjectParameter("Param_DataChanged", param_DataChanged)
                : new ObjectParameter("Param_DataChanged", typeof(bool));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(double));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_AsCreditNotaParameter = param_AsCreditNota.HasValue
                ? new ObjectParameter("Param_AsCreditNota", param_AsCreditNota)
                : new ObjectParameter("Param_AsCreditNota", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_LinesEntryBillOfMaterial_AddUpdate", param_OrderNoParameter, param_LineIDParameter,
                    param_MasterParameter, param_ItemParameter, param_QuantityParameter, param_UnitParameter,
                    param_LocationParameter, param_ReferenceParameter, param_TimeParameter, param_ProcessParameter,
                    param_DescriptionParameter, param_DepartmentParameter, param_CostCenterParameter,
                    param_PurposeParameter, param_ProjectParameter, param_ConversionParameter, param_PriceParameter,
                    param_CostPriceParameter, param_RecordIDParameter, param_ParentIDParameter, param_ChildIDParameter,
                    param_LineNoParameter, param_AllocateStateParameter, param_DataChangedParameter,
                    param_SerialNoParameter, param_FaktorParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                    param_AsCreditNotaParameter);
        }

        public virtual int Kompas_LinesEntryBillOfMaterial_Delete_Deleted(string param_OrderNo,
            Nullable<int> param_LineID)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineIDParameter = param_LineID.HasValue
                ? new ObjectParameter("Param_LineID", param_LineID)
                : new ObjectParameter("Param_LineID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_LinesEntryBillOfMaterial_Delete_Deleted", param_OrderNoParameter, param_LineIDParameter);
        }

        public virtual int Kompas_LockOrder(string param_OrderNo, Nullable<double> param_Trail, string param_User,
            Nullable<bool> param_IsLocked)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            var param_IsLockedParameter = param_IsLocked.HasValue
                ? new ObjectParameter("Param_IsLocked", param_IsLocked)
                : new ObjectParameter("Param_IsLocked", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LockOrder",
                param_OrderNoParameter, param_TrailParameter, param_UserParameter, param_IsLockedParameter);
        }

        public virtual int Kompas_LockPurchase(string param_PurchaseNo, Nullable<double> param_Trail, string param_User,
            Nullable<bool> param_IsLocked)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            var param_IsLockedParameter = param_IsLocked.HasValue
                ? new ObjectParameter("Param_IsLocked", param_IsLocked)
                : new ObjectParameter("Param_IsLocked", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_LockPurchase",
                param_PurchaseNoParameter, param_TrailParameter, param_UserParameter, param_IsLockedParameter);
        }

        public virtual int Kompas_MassSettleCusSup_CreateData(string param_Host, Nullable<bool> param_IsCustomer,
            string param_IDFrom, string param_IDTo, string param_CurrencyFrom, string param_CurrencyTo,
            Nullable<bool> param_OnlyZeroBal)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_IDFromParameter = param_IDFrom != null
                ? new ObjectParameter("Param_IDFrom", param_IDFrom)
                : new ObjectParameter("Param_IDFrom", typeof(string));

            var param_IDToParameter = param_IDTo != null
                ? new ObjectParameter("Param_IDTo", param_IDTo)
                : new ObjectParameter("Param_IDTo", typeof(string));

            var param_CurrencyFromParameter = param_CurrencyFrom != null
                ? new ObjectParameter("Param_CurrencyFrom", param_CurrencyFrom)
                : new ObjectParameter("Param_CurrencyFrom", typeof(string));

            var param_CurrencyToParameter = param_CurrencyTo != null
                ? new ObjectParameter("Param_CurrencyTo", param_CurrencyTo)
                : new ObjectParameter("Param_CurrencyTo", typeof(string));

            var param_OnlyZeroBalParameter = param_OnlyZeroBal.HasValue
                ? new ObjectParameter("Param_OnlyZeroBal", param_OnlyZeroBal)
                : new ObjectParameter("Param_OnlyZeroBal", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_MassSettleCusSup_CreateData",
                param_HostParameter, param_IsCustomerParameter, param_IDFromParameter, param_IDToParameter,
                param_CurrencyFromParameter, param_CurrencyToParameter, param_OnlyZeroBalParameter);
        }

        public virtual int Kompas_MassSettleCusSup_FindLatestZeroBalanceDate(string param_Host,
            Nullable<bool> param_IsCustomer)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_MassSettleCusSup_FindLatestZeroBalanceDate", param_HostParameter, param_IsCustomerParameter);
        }

        public virtual ObjectResult<Kompas_MassSettleCusSup_GetData_Result> Kompas_MassSettleCusSup_GetData(
            string param_Host, Nullable<bool> param_IsCustomer)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_MassSettleCusSup_GetData_Result>(
                    "Kompas_MassSettleCusSup_GetData", param_HostParameter, param_IsCustomerParameter);
        }

        public virtual int Kompas_MeargedDiscount_UpdateAllLinesOnOrder(string orderNo)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_MeargedDiscount_UpdateAllLinesOnOrder", orderNoParameter);
        }

        public virtual int Kompas_Net_GetDisplayValue(string table_Name, string key_Name, string return_Key_Name,
            string key_Value)
        {
            var table_NameParameter = table_Name != null
                ? new ObjectParameter("Table_Name", table_Name)
                : new ObjectParameter("Table_Name", typeof(string));

            var key_NameParameter = key_Name != null
                ? new ObjectParameter("Key_Name", key_Name)
                : new ObjectParameter("Key_Name", typeof(string));

            var return_Key_NameParameter = return_Key_Name != null
                ? new ObjectParameter("Return_Key_Name", return_Key_Name)
                : new ObjectParameter("Return_Key_Name", typeof(string));

            var key_ValueParameter = key_Value != null
                ? new ObjectParameter("Key_Value", key_Value)
                : new ObjectParameter("Key_Value", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Net_GetDisplayValue",
                table_NameParameter, key_NameParameter, return_Key_NameParameter, key_ValueParameter);
        }

        public virtual int Kompas_Net_SearchResult(string init_SQL, string key_Column, string search_Value,
            string alternative_Column, string sort_Column)
        {
            var init_SQLParameter = init_SQL != null
                ? new ObjectParameter("Init_SQL", init_SQL)
                : new ObjectParameter("Init_SQL", typeof(string));

            var key_ColumnParameter = key_Column != null
                ? new ObjectParameter("Key_Column", key_Column)
                : new ObjectParameter("Key_Column", typeof(string));

            var search_ValueParameter = search_Value != null
                ? new ObjectParameter("Search_Value", search_Value)
                : new ObjectParameter("Search_Value", typeof(string));

            var alternative_ColumnParameter = alternative_Column != null
                ? new ObjectParameter("Alternative_Column", alternative_Column)
                : new ObjectParameter("Alternative_Column", typeof(string));

            var sort_ColumnParameter = sort_Column != null
                ? new ObjectParameter("Sort_Column", sort_Column)
                : new ObjectParameter("Sort_Column", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Net_SearchResult",
                init_SQLParameter, key_ColumnParameter, search_ValueParameter, alternative_ColumnParameter,
                sort_ColumnParameter);
        }

        public virtual int Kompas_Net_SearchValidate(string table_Name, string key_Name, string key_Value, string where)
        {
            var table_NameParameter = table_Name != null
                ? new ObjectParameter("Table_Name", table_Name)
                : new ObjectParameter("Table_Name", typeof(string));

            var key_NameParameter = key_Name != null
                ? new ObjectParameter("Key_Name", key_Name)
                : new ObjectParameter("Key_Name", typeof(string));

            var key_ValueParameter = key_Value != null
                ? new ObjectParameter("Key_Value", key_Value)
                : new ObjectParameter("Key_Value", typeof(string));

            var whereParameter = where != null
                ? new ObjectParameter("Where", where)
                : new ObjectParameter("Where", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Net_SearchValidate",
                table_NameParameter, key_NameParameter, key_ValueParameter, whereParameter);
        }

        public virtual int Kompas_OnHand_AddNew(string param_Item, string param_Location, string param_Parameter1,
            string param_Parameter2, Nullable<double> param_Minimum, Nullable<double> param_Maximum,
            Nullable<double> param_OrderSize)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_MinimumParameter = param_Minimum.HasValue
                ? new ObjectParameter("Param_Minimum", param_Minimum)
                : new ObjectParameter("Param_Minimum", typeof(double));

            var param_MaximumParameter = param_Maximum.HasValue
                ? new ObjectParameter("Param_Maximum", param_Maximum)
                : new ObjectParameter("Param_Maximum", typeof(double));

            var param_OrderSizeParameter = param_OrderSize.HasValue
                ? new ObjectParameter("Param_OrderSize", param_OrderSize)
                : new ObjectParameter("Param_OrderSize", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OnHand_AddNew",
                param_ItemParameter, param_LocationParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                param_MinimumParameter, param_MaximumParameter, param_OrderSizeParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_OnHandPhysOnParameter(string param_Item,
            string param_Location, string param_Parameter1, string param_Parameter2)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_OnHandPhysOnParameter", param_ItemParameter, param_LocationParameter,
                    param_Parameter1Parameter, param_Parameter2Parameter);
        }

        public virtual int Kompas_OnHandUpdateAllocatedOrdered(string param_Item, string param_Location,
            string param_Parameter1, string param_Parameter2, Nullable<bool> param_IsAllocated,
            Nullable<double> param_Quantity)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_IsAllocatedParameter = param_IsAllocated.HasValue
                ? new ObjectParameter("Param_IsAllocated", param_IsAllocated)
                : new ObjectParameter("Param_IsAllocated", typeof(bool));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OnHandUpdateAllocatedOrdered",
                param_ItemParameter, param_LocationParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                param_IsAllocatedParameter, param_QuantityParameter);
        }

        public virtual int Kompas_OpenDatabaseCheckStandardReports()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OpenDatabaseCheckStandardReports");
        }

        public virtual ObjectResult<Kompas_OpenItemWorksheetCustomer_Result> Kompas_OpenItemWorksheetCustomer(
            string param_Customer, string param_Currency, Nullable<int> param_EntryRef)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_EntryRefParameter = param_EntryRef.HasValue
                ? new ObjectParameter("Param_EntryRef", param_EntryRef)
                : new ObjectParameter("Param_EntryRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OpenItemWorksheetCustomer_Result>(
                    "Kompas_OpenItemWorksheetCustomer", param_CustomerParameter, param_CurrencyParameter,
                    param_EntryRefParameter);
        }

        public virtual ObjectResult<Kompas_OpenItemWorksheetGetMarkedAmount_Result>
            Kompas_OpenItemWorksheetGetMarkedAmount(string param_CusSup, Nullable<bool> param_IsCustomer,
                Nullable<int> param_EntryRef)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_EntryRefParameter = param_EntryRef.HasValue
                ? new ObjectParameter("Param_EntryRef", param_EntryRef)
                : new ObjectParameter("Param_EntryRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_OpenItemWorksheetGetMarkedAmount_Result>(
                        "Kompas_OpenItemWorksheetGetMarkedAmount", param_CusSupParameter, param_IsCustomerParameter,
                        param_EntryRefParameter);
        }

        public virtual ObjectResult<Kompas_OpenItemWorksheetSupplier_Result> Kompas_OpenItemWorksheetSupplier(
            string param_Supplier, string param_Currency, Nullable<int> param_EntryRef)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_EntryRefParameter = param_EntryRef.HasValue
                ? new ObjectParameter("Param_EntryRef", param_EntryRef)
                : new ObjectParameter("Param_EntryRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OpenItemWorksheetSupplier_Result>(
                    "Kompas_OpenItemWorksheetSupplier", param_SupplierParameter, param_CurrencyParameter,
                    param_EntryRefParameter);
        }

        public virtual ObjectResult<string> Kompas_Options_GetValue(string param_Module, string param_OptionID)
        {
            var param_ModuleParameter = param_Module != null
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(string));

            var param_OptionIDParameter = param_OptionID != null
                ? new ObjectParameter("Param_OptionID", param_OptionID)
                : new ObjectParameter("Param_OptionID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_Options_GetValue",
                param_ModuleParameter, param_OptionIDParameter);
        }

        public virtual int Kompas_OptionsUpdateOption(string module, string optionID, string value, string value1)
        {
            var moduleParameter = module != null
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(string));

            var optionIDParameter = optionID != null
                ? new ObjectParameter("OptionID", optionID)
                : new ObjectParameter("OptionID", typeof(string));

            var valueParameter = value != null
                ? new ObjectParameter("Value", value)
                : new ObjectParameter("Value", typeof(string));

            var value1Parameter = value1 != null
                ? new ObjectParameter("Value1", value1)
                : new ObjectParameter("Value1", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OptionsUpdateOption",
                moduleParameter, optionIDParameter, valueParameter, value1Parameter);
        }

        public virtual ObjectResult<Kompas_OrderBOMLine_GetItemPrice_Result> Kompas_OrderBOMLine_GetItemPrice(
            string orderNo, Nullable<System.DateTime> lineDate, string item, string unit, Nullable<double> quantity,
            string parameter1, string parameter2)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var lineDateParameter = lineDate.HasValue
                ? new ObjectParameter("LineDate", lineDate)
                : new ObjectParameter("LineDate", typeof(System.DateTime));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OrderBOMLine_GetItemPrice_Result>(
                    "Kompas_OrderBOMLine_GetItemPrice", orderNoParameter, lineDateParameter, itemParameter,
                    unitParameter, quantityParameter, parameter1Parameter, parameter2Parameter);
        }

        public virtual int Kompas_OrderDeleteSerialNoDeleteFromDeletedLines(Nullable<int> param_RecordID,
            string param_OrderNo, string param_Customer)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_OrderDeleteSerialNoDeleteFromDeletedLines", param_RecordIDParameter, param_OrderNoParameter,
                    param_CustomerParameter);
        }

        public virtual ObjectResult<string> Kompas_OrderDeliveries_GetFileData(string format, string orderNo)
        {
            var formatParameter = format != null
                ? new ObjectParameter("Format", format)
                : new ObjectParameter("Format", typeof(string));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_OrderDeliveries_GetFileData", formatParameter, orderNoParameter);
        }

        public virtual ObjectResult<Kompas_OrderDeliveries_SelectNew_Result> Kompas_OrderDeliveries_SelectNew(
            string orderNo, Nullable<double> trail, string delivery)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OrderDeliveries_SelectNew_Result>(
                    "Kompas_OrderDeliveries_SelectNew", orderNoParameter, trailParameter, deliveryParameter);
        }

        public virtual ObjectResult<string> Kompas_OrderDelivery_Check(string packFormat, string orderNo)
        {
            var packFormatParameter = packFormat != null
                ? new ObjectParameter("PackFormat", packFormat)
                : new ObjectParameter("PackFormat", typeof(string));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_OrderDelivery_Check",
                packFormatParameter, orderNoParameter);
        }

        public virtual ObjectResult<Kompas_OrderFlex_CreateTriggers_Result> Kompas_OrderFlex_CreateTriggers(
            Nullable<byte> sPInfo, string dataBaseName, Nullable<int> dESIGNNO, Nullable<int> tOTAL1DESIGNNO,
            Nullable<int> tOTAL2DESIGNNO, Nullable<int> tOTAL3DESIGNNO, Nullable<int> cUSTOMERDESIGNNO, string unit1,
            string unit2, string orderStatus)
        {
            var sPInfoParameter = sPInfo.HasValue
                ? new ObjectParameter("SPInfo", sPInfo)
                : new ObjectParameter("SPInfo", typeof(byte));

            var dataBaseNameParameter = dataBaseName != null
                ? new ObjectParameter("DataBaseName", dataBaseName)
                : new ObjectParameter("DataBaseName", typeof(string));

            var dESIGNNOParameter = dESIGNNO.HasValue
                ? new ObjectParameter("DESIGNNO", dESIGNNO)
                : new ObjectParameter("DESIGNNO", typeof(int));

            var tOTAL1DESIGNNOParameter = tOTAL1DESIGNNO.HasValue
                ? new ObjectParameter("TOTAL1DESIGNNO", tOTAL1DESIGNNO)
                : new ObjectParameter("TOTAL1DESIGNNO", typeof(int));

            var tOTAL2DESIGNNOParameter = tOTAL2DESIGNNO.HasValue
                ? new ObjectParameter("TOTAL2DESIGNNO", tOTAL2DESIGNNO)
                : new ObjectParameter("TOTAL2DESIGNNO", typeof(int));

            var tOTAL3DESIGNNOParameter = tOTAL3DESIGNNO.HasValue
                ? new ObjectParameter("TOTAL3DESIGNNO", tOTAL3DESIGNNO)
                : new ObjectParameter("TOTAL3DESIGNNO", typeof(int));

            var cUSTOMERDESIGNNOParameter = cUSTOMERDESIGNNO.HasValue
                ? new ObjectParameter("CUSTOMERDESIGNNO", cUSTOMERDESIGNNO)
                : new ObjectParameter("CUSTOMERDESIGNNO", typeof(int));

            var unit1Parameter = unit1 != null
                ? new ObjectParameter("Unit1", unit1)
                : new ObjectParameter("Unit1", typeof(string));

            var unit2Parameter = unit2 != null
                ? new ObjectParameter("Unit2", unit2)
                : new ObjectParameter("Unit2", typeof(string));

            var orderStatusParameter = orderStatus != null
                ? new ObjectParameter("OrderStatus", orderStatus)
                : new ObjectParameter("OrderStatus", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OrderFlex_CreateTriggers_Result>(
                    "Kompas_OrderFlex_CreateTriggers", sPInfoParameter, dataBaseNameParameter, dESIGNNOParameter,
                    tOTAL1DESIGNNOParameter, tOTAL2DESIGNNOParameter, tOTAL3DESIGNNOParameter, cUSTOMERDESIGNNOParameter,
                    unit1Parameter, unit2Parameter, orderStatusParameter);
        }

        public virtual int Kompas_OrderLines_CompressLines(string orderNo)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderLines_CompressLines",
                orderNoParameter);
        }

        public virtual int Kompas_OrderLinesAttachItemsOneLevel(string orderNo, string item, Nullable<int> lineNo,
            Nullable<double> quantity, string current_userid, Nullable<int> level, string journal)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(int));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var levelParameter = level.HasValue
                ? new ObjectParameter("Level", level)
                : new ObjectParameter("Level", typeof(int));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderLinesAttachItemsOneLevel",
                orderNoParameter, itemParameter, lineNoParameter, quantityParameter, current_useridParameter,
                levelParameter, journalParameter);
        }

        public virtual int Kompas_OrderLinesCopyBOMLines(string param_FromOrderNo, Nullable<int> param_FromTrail,
            string param_ToOrderNo, Nullable<bool> param_AsCreditNota, Nullable<int> param_FromLineNo)
        {
            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_FromTrailParameter = param_FromTrail.HasValue
                ? new ObjectParameter("Param_FromTrail", param_FromTrail)
                : new ObjectParameter("Param_FromTrail", typeof(int));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_AsCreditNotaParameter = param_AsCreditNota.HasValue
                ? new ObjectParameter("Param_AsCreditNota", param_AsCreditNota)
                : new ObjectParameter("Param_AsCreditNota", typeof(bool));

            var param_FromLineNoParameter = param_FromLineNo.HasValue
                ? new ObjectParameter("Param_FromLineNo", param_FromLineNo)
                : new ObjectParameter("Param_FromLineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderLinesCopyBOMLines",
                param_FromOrderNoParameter, param_FromTrailParameter, param_ToOrderNoParameter,
                param_AsCreditNotaParameter, param_FromLineNoParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_OrderLineSplitLine(Nullable<int> recordID,
            Nullable<double> quantity, string batchNo)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_OrderLineSplitLine", recordIDParameter, quantityParameter, batchNoParameter);
        }

        public virtual int Kompas_OrderLinesToProject(string orderNo, string userName)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderLinesToProject",
                orderNoParameter, userNameParameter);
        }

        public virtual int Kompas_OrderLinesUpdateDiscount(string orderNo, Nullable<double> newDiscount,
            Nullable<bool> updateGoods, Nullable<bool> updateService, Nullable<bool> updateDiscontinued,
            Nullable<bool> updateBIllOfMaterial, Nullable<bool> updateSetOfMaterial, Nullable<bool> updateObtainedItems)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var newDiscountParameter = newDiscount.HasValue
                ? new ObjectParameter("NewDiscount", newDiscount)
                : new ObjectParameter("NewDiscount", typeof(double));

            var updateGoodsParameter = updateGoods.HasValue
                ? new ObjectParameter("UpdateGoods", updateGoods)
                : new ObjectParameter("UpdateGoods", typeof(bool));

            var updateServiceParameter = updateService.HasValue
                ? new ObjectParameter("UpdateService", updateService)
                : new ObjectParameter("UpdateService", typeof(bool));

            var updateDiscontinuedParameter = updateDiscontinued.HasValue
                ? new ObjectParameter("UpdateDiscontinued", updateDiscontinued)
                : new ObjectParameter("UpdateDiscontinued", typeof(bool));

            var updateBIllOfMaterialParameter = updateBIllOfMaterial.HasValue
                ? new ObjectParameter("UpdateBIllOfMaterial", updateBIllOfMaterial)
                : new ObjectParameter("UpdateBIllOfMaterial", typeof(bool));

            var updateSetOfMaterialParameter = updateSetOfMaterial.HasValue
                ? new ObjectParameter("UpdateSetOfMaterial", updateSetOfMaterial)
                : new ObjectParameter("UpdateSetOfMaterial", typeof(bool));

            var updateObtainedItemsParameter = updateObtainedItems.HasValue
                ? new ObjectParameter("UpdateObtainedItems", updateObtainedItems)
                : new ObjectParameter("UpdateObtainedItems", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderLinesUpdateDiscount",
                orderNoParameter, newDiscountParameter, updateGoodsParameter, updateServiceParameter,
                updateDiscontinuedParameter, updateBIllOfMaterialParameter, updateSetOfMaterialParameter,
                updateObtainedItemsParameter);
        }

        public virtual int Kompas_OrderMerge_MergeOrders(string host, Nullable<int> tP, string newOrderStatus,
            Nullable<bool> insertDeltotal)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var newOrderStatusParameter = newOrderStatus != null
                ? new ObjectParameter("NewOrderStatus", newOrderStatus)
                : new ObjectParameter("NewOrderStatus", typeof(string));

            var insertDeltotalParameter = insertDeltotal.HasValue
                ? new ObjectParameter("InsertDeltotal", insertDeltotal)
                : new ObjectParameter("InsertDeltotal", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderMerge_MergeOrders",
                hostParameter, tPParameter, newOrderStatusParameter, insertDeltotalParameter);
        }

        public virtual int Kompas_OrderMerging_AddTextLine(Nullable<System.Guid> gUID, string optionID, string toOrderNo,
            Nullable<int> lineNo)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var optionIDParameter = optionID != null
                ? new ObjectParameter("OptionID", optionID)
                : new ObjectParameter("OptionID", typeof(string));

            var toOrderNoParameter = toOrderNo != null
                ? new ObjectParameter("ToOrderNo", toOrderNo)
                : new ObjectParameter("ToOrderNo", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderMerging_AddTextLine",
                gUIDParameter, optionIDParameter, toOrderNoParameter, lineNoParameter);
        }

        public virtual ObjectResult<Kompas_OrderMerging_GetData_Result> Kompas_OrderMerging_GetData(string host,
            Nullable<int> tP, Nullable<short> isInit, string fromCustomer, string toCustomer, string fromGrouping,
            string toGrouping, string fromCategory, string toCategory, Nullable<System.DateTime> fromOrderDate,
            Nullable<System.DateTime> toOrderDate, Nullable<System.DateTime> fromDeliveryDate,
            Nullable<System.DateTime> toDeliveryDate, Nullable<int> fromDeliveryWeek, Nullable<int> toDeliveryWeek,
            Nullable<int> orderType, Nullable<int> sortField, Nullable<bool> sortAsc, Nullable<bool> useOrderCustomer)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var isInitParameter = isInit.HasValue
                ? new ObjectParameter("IsInit", isInit)
                : new ObjectParameter("IsInit", typeof(short));

            var fromCustomerParameter = fromCustomer != null
                ? new ObjectParameter("FromCustomer", fromCustomer)
                : new ObjectParameter("FromCustomer", typeof(string));

            var toCustomerParameter = toCustomer != null
                ? new ObjectParameter("ToCustomer", toCustomer)
                : new ObjectParameter("ToCustomer", typeof(string));

            var fromGroupingParameter = fromGrouping != null
                ? new ObjectParameter("FromGrouping", fromGrouping)
                : new ObjectParameter("FromGrouping", typeof(string));

            var toGroupingParameter = toGrouping != null
                ? new ObjectParameter("ToGrouping", toGrouping)
                : new ObjectParameter("ToGrouping", typeof(string));

            var fromCategoryParameter = fromCategory != null
                ? new ObjectParameter("FromCategory", fromCategory)
                : new ObjectParameter("FromCategory", typeof(string));

            var toCategoryParameter = toCategory != null
                ? new ObjectParameter("ToCategory", toCategory)
                : new ObjectParameter("ToCategory", typeof(string));

            var fromOrderDateParameter = fromOrderDate.HasValue
                ? new ObjectParameter("FromOrderDate", fromOrderDate)
                : new ObjectParameter("FromOrderDate", typeof(System.DateTime));

            var toOrderDateParameter = toOrderDate.HasValue
                ? new ObjectParameter("ToOrderDate", toOrderDate)
                : new ObjectParameter("ToOrderDate", typeof(System.DateTime));

            var fromDeliveryDateParameter = fromDeliveryDate.HasValue
                ? new ObjectParameter("FromDeliveryDate", fromDeliveryDate)
                : new ObjectParameter("FromDeliveryDate", typeof(System.DateTime));

            var toDeliveryDateParameter = toDeliveryDate.HasValue
                ? new ObjectParameter("ToDeliveryDate", toDeliveryDate)
                : new ObjectParameter("ToDeliveryDate", typeof(System.DateTime));

            var fromDeliveryWeekParameter = fromDeliveryWeek.HasValue
                ? new ObjectParameter("FromDeliveryWeek", fromDeliveryWeek)
                : new ObjectParameter("FromDeliveryWeek", typeof(int));

            var toDeliveryWeekParameter = toDeliveryWeek.HasValue
                ? new ObjectParameter("ToDeliveryWeek", toDeliveryWeek)
                : new ObjectParameter("ToDeliveryWeek", typeof(int));

            var orderTypeParameter = orderType.HasValue
                ? new ObjectParameter("OrderType", orderType)
                : new ObjectParameter("OrderType", typeof(int));

            var sortFieldParameter = sortField.HasValue
                ? new ObjectParameter("SortField", sortField)
                : new ObjectParameter("SortField", typeof(int));

            var sortAscParameter = sortAsc.HasValue
                ? new ObjectParameter("SortAsc", sortAsc)
                : new ObjectParameter("SortAsc", typeof(bool));

            var useOrderCustomerParameter = useOrderCustomer.HasValue
                ? new ObjectParameter("UseOrderCustomer", useOrderCustomer)
                : new ObjectParameter("UseOrderCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OrderMerging_GetData_Result>(
                    "Kompas_OrderMerging_GetData", hostParameter, tPParameter, isInitParameter, fromCustomerParameter,
                    toCustomerParameter, fromGroupingParameter, toGroupingParameter, fromCategoryParameter,
                    toCategoryParameter, fromOrderDateParameter, toOrderDateParameter, fromDeliveryDateParameter,
                    toDeliveryDateParameter, fromDeliveryWeekParameter, toDeliveryWeekParameter, orderTypeParameter,
                    sortFieldParameter, sortAscParameter, useOrderCustomerParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_OrderMerging_HaveSelected(string param_Host,
            Nullable<int> param_TP)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_OrderMerging_HaveSelected", param_HostParameter, param_TPParameter);
        }

        public virtual int Kompas_OrderMerging_SelectDeselect(string host, Nullable<int> tP, Nullable<bool> selected,
            Nullable<int> recordID)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderMerging_SelectDeselect",
                hostParameter, tPParameter, selectedParameter, recordIDParameter);
        }

        public virtual int Kompas_OrderPackingListPostLines(string param_OrderNo, string param_UserName,
            Nullable<bool> param_Invoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_InvoiceParameter = param_Invoice.HasValue
                ? new ObjectParameter("Param_Invoice", param_Invoice)
                : new ObjectParameter("Param_Invoice", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderPackingListPostLines",
                param_OrderNoParameter, param_UserNameParameter, param_InvoiceParameter);
        }

        public virtual int Kompas_Orders_AddCopy(string param_FromOrderNo, Nullable<double> param_FromTrail,
            string param_ToOrderNo, string param_UserID, Nullable<bool> param_AsCreditNota,
            Nullable<bool> param_OnlyOrderHead, Nullable<bool> param_NoRecalc)
        {
            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_FromTrailParameter = param_FromTrail.HasValue
                ? new ObjectParameter("Param_FromTrail", param_FromTrail)
                : new ObjectParameter("Param_FromTrail", typeof(double));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_AsCreditNotaParameter = param_AsCreditNota.HasValue
                ? new ObjectParameter("Param_AsCreditNota", param_AsCreditNota)
                : new ObjectParameter("Param_AsCreditNota", typeof(bool));

            var param_OnlyOrderHeadParameter = param_OnlyOrderHead.HasValue
                ? new ObjectParameter("Param_OnlyOrderHead", param_OnlyOrderHead)
                : new ObjectParameter("Param_OnlyOrderHead", typeof(bool));

            var param_NoRecalcParameter = param_NoRecalc.HasValue
                ? new ObjectParameter("Param_NoRecalc", param_NoRecalc)
                : new ObjectParameter("Param_NoRecalc", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_AddCopy",
                param_FromOrderNoParameter, param_FromTrailParameter, param_ToOrderNoParameter, param_UserIDParameter,
                param_AsCreditNotaParameter, param_OnlyOrderHeadParameter, param_NoRecalcParameter);
        }

        public virtual int Kompas_Orders_AddNew(string param_OrderNo, string param_Customer, string param_UserID,
            string param_ShipTo, string param_Ship1, string param_Ship2, string param_Ship3, string param_ShipPostalCode,
            string param_ShipCityName, string param_Ship5, string param_Ship6, string param_Ship7,
            string param_PriceList, string param_SalesRep, string param_Department, string param_CostCenter,
            string param_Purpose, string param_Project, string param_Status, string param_Remarks,
            string param_InternalRemarks, Nullable<System.DateTime> param_InvoiceDate,
            Nullable<System.DateTime> param_DeliveryDate, string param_RecvNo, string param_OrderText,
            Nullable<System.DateTime> param_OrderDate, Nullable<short> param_DeliveryWeek, string param_OptionalText1,
            string param_OptionalText2, string param_OptionalText3, string param_OptionalText4,
            string param_OptionalText5, string param_OptionalText6, string param_OptionalText7,
            string param_OptionalText8, Nullable<double> param_OptionalNumber1, Nullable<double> param_OptionalNumber2,
            Nullable<double> param_OptionalNumber3, Nullable<double> param_OptionalNumber4,
            Nullable<double> param_OptionalNumber5, Nullable<double> param_OptionalNumber6,
            Nullable<double> param_OptionalNumber7, Nullable<double> param_OptionalNumber8,
            Nullable<short> param_Optional1, Nullable<short> param_Optional2, Nullable<short> param_Optional3,
            Nullable<short> param_Optional4, Nullable<short> param_Optional5, Nullable<short> param_Optional6,
            Nullable<short> param_Optional7, Nullable<short> param_Optional8, string param_CashDiscount,
            string param_YourRef, string param_OurRef, Nullable<byte> param_CalculationOfCargo,
            Nullable<short> param_EECCountry, Nullable<byte> param_EECTransCode, Nullable<short> param_OrderType)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_ShipPostalCodeParameter = param_ShipPostalCode != null
                ? new ObjectParameter("Param_ShipPostalCode", param_ShipPostalCode)
                : new ObjectParameter("Param_ShipPostalCode", typeof(string));

            var param_ShipCityNameParameter = param_ShipCityName != null
                ? new ObjectParameter("Param_ShipCityName", param_ShipCityName)
                : new ObjectParameter("Param_ShipCityName", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_Ship6Parameter = param_Ship6 != null
                ? new ObjectParameter("Param_Ship6", param_Ship6)
                : new ObjectParameter("Param_Ship6", typeof(string));

            var param_Ship7Parameter = param_Ship7 != null
                ? new ObjectParameter("Param_Ship7", param_Ship7)
                : new ObjectParameter("Param_Ship7", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_StatusParameter = param_Status != null
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_InternalRemarksParameter = param_InternalRemarks != null
                ? new ObjectParameter("Param_InternalRemarks", param_InternalRemarks)
                : new ObjectParameter("Param_InternalRemarks", typeof(string));

            var param_InvoiceDateParameter = param_InvoiceDate.HasValue
                ? new ObjectParameter("Param_InvoiceDate", param_InvoiceDate)
                : new ObjectParameter("Param_InvoiceDate", typeof(System.DateTime));

            var param_DeliveryDateParameter = param_DeliveryDate.HasValue
                ? new ObjectParameter("Param_DeliveryDate", param_DeliveryDate)
                : new ObjectParameter("Param_DeliveryDate", typeof(System.DateTime));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_OrderTextParameter = param_OrderText != null
                ? new ObjectParameter("Param_OrderText", param_OrderText)
                : new ObjectParameter("Param_OrderText", typeof(string));

            var param_OrderDateParameter = param_OrderDate.HasValue
                ? new ObjectParameter("Param_OrderDate", param_OrderDate)
                : new ObjectParameter("Param_OrderDate", typeof(System.DateTime));

            var param_DeliveryWeekParameter = param_DeliveryWeek.HasValue
                ? new ObjectParameter("Param_DeliveryWeek", param_DeliveryWeek)
                : new ObjectParameter("Param_DeliveryWeek", typeof(short));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            var param_CashDiscountParameter = param_CashDiscount != null
                ? new ObjectParameter("Param_CashDiscount", param_CashDiscount)
                : new ObjectParameter("Param_CashDiscount", typeof(string));

            var param_YourRefParameter = param_YourRef != null
                ? new ObjectParameter("Param_YourRef", param_YourRef)
                : new ObjectParameter("Param_YourRef", typeof(string));

            var param_OurRefParameter = param_OurRef != null
                ? new ObjectParameter("Param_OurRef", param_OurRef)
                : new ObjectParameter("Param_OurRef", typeof(string));

            var param_CalculationOfCargoParameter = param_CalculationOfCargo.HasValue
                ? new ObjectParameter("Param_CalculationOfCargo", param_CalculationOfCargo)
                : new ObjectParameter("Param_CalculationOfCargo", typeof(byte));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            var param_EECTransCodeParameter = param_EECTransCode.HasValue
                ? new ObjectParameter("Param_EECTransCode", param_EECTransCode)
                : new ObjectParameter("Param_EECTransCode", typeof(byte));

            var param_OrderTypeParameter = param_OrderType.HasValue
                ? new ObjectParameter("Param_OrderType", param_OrderType)
                : new ObjectParameter("Param_OrderType", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_AddNew",
                param_OrderNoParameter, param_CustomerParameter, param_UserIDParameter, param_ShipToParameter,
                param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter, param_ShipPostalCodeParameter,
                param_ShipCityNameParameter, param_Ship5Parameter, param_Ship6Parameter, param_Ship7Parameter,
                param_PriceListParameter, param_SalesRepParameter, param_DepartmentParameter, param_CostCenterParameter,
                param_PurposeParameter, param_ProjectParameter, param_StatusParameter, param_RemarksParameter,
                param_InternalRemarksParameter, param_InvoiceDateParameter, param_DeliveryDateParameter,
                param_RecvNoParameter, param_OrderTextParameter, param_OrderDateParameter, param_DeliveryWeekParameter,
                param_OptionalText1Parameter, param_OptionalText2Parameter, param_OptionalText3Parameter,
                param_OptionalText4Parameter, param_OptionalText5Parameter, param_OptionalText6Parameter,
                param_OptionalText7Parameter, param_OptionalText8Parameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalNumber3Parameter, param_OptionalNumber4Parameter,
                param_OptionalNumber5Parameter, param_OptionalNumber6Parameter, param_OptionalNumber7Parameter,
                param_OptionalNumber8Parameter, param_Optional1Parameter, param_Optional2Parameter,
                param_Optional3Parameter, param_Optional4Parameter, param_Optional5Parameter, param_Optional6Parameter,
                param_Optional7Parameter, param_Optional8Parameter, param_CashDiscountParameter, param_YourRefParameter,
                param_OurRefParameter, param_CalculationOfCargoParameter, param_EECCountryParameter,
                param_EECTransCodeParameter, param_OrderTypeParameter);
        }

        public virtual int Kompas_Orders_All_RecalcOrderLines(string param_Host, Nullable<bool> param_UpdatePrice,
            Nullable<bool> param_UpdateCostPrice, Nullable<bool> param_UpdateDiscount, Nullable<bool> param_UpdateWeight,
            Nullable<bool> param_UpdateVolume, Nullable<bool> param_UpdateDescription, Nullable<bool> param_UpdateTax,
            Nullable<bool> param_UpdateDuty, string param_FromItem, string param_ToItem)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_UpdatePriceParameter = param_UpdatePrice.HasValue
                ? new ObjectParameter("Param_UpdatePrice", param_UpdatePrice)
                : new ObjectParameter("Param_UpdatePrice", typeof(bool));

            var param_UpdateCostPriceParameter = param_UpdateCostPrice.HasValue
                ? new ObjectParameter("Param_UpdateCostPrice", param_UpdateCostPrice)
                : new ObjectParameter("Param_UpdateCostPrice", typeof(bool));

            var param_UpdateDiscountParameter = param_UpdateDiscount.HasValue
                ? new ObjectParameter("Param_UpdateDiscount", param_UpdateDiscount)
                : new ObjectParameter("Param_UpdateDiscount", typeof(bool));

            var param_UpdateWeightParameter = param_UpdateWeight.HasValue
                ? new ObjectParameter("Param_UpdateWeight", param_UpdateWeight)
                : new ObjectParameter("Param_UpdateWeight", typeof(bool));

            var param_UpdateVolumeParameter = param_UpdateVolume.HasValue
                ? new ObjectParameter("Param_UpdateVolume", param_UpdateVolume)
                : new ObjectParameter("Param_UpdateVolume", typeof(bool));

            var param_UpdateDescriptionParameter = param_UpdateDescription.HasValue
                ? new ObjectParameter("Param_UpdateDescription", param_UpdateDescription)
                : new ObjectParameter("Param_UpdateDescription", typeof(bool));

            var param_UpdateTaxParameter = param_UpdateTax.HasValue
                ? new ObjectParameter("Param_UpdateTax", param_UpdateTax)
                : new ObjectParameter("Param_UpdateTax", typeof(bool));

            var param_UpdateDutyParameter = param_UpdateDuty.HasValue
                ? new ObjectParameter("Param_UpdateDuty", param_UpdateDuty)
                : new ObjectParameter("Param_UpdateDuty", typeof(bool));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_All_RecalcOrderLines",
                param_HostParameter, param_UpdatePriceParameter, param_UpdateCostPriceParameter,
                param_UpdateDiscountParameter, param_UpdateWeightParameter, param_UpdateVolumeParameter,
                param_UpdateDescriptionParameter, param_UpdateTaxParameter, param_UpdateDutyParameter,
                param_FromItemParameter, param_ToItemParameter);
        }

        public virtual ObjectResult<string> Kompas_Orders_ChangeOrderType(string orderNo, Nullable<int> newOrderType)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var newOrderTypeParameter = newOrderType.HasValue
                ? new ObjectParameter("NewOrderType", newOrderType)
                : new ObjectParameter("NewOrderType", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                "Kompas_Orders_ChangeOrderType", orderNoParameter, newOrderTypeParameter);
        }

        public virtual int Kompas_Orders_ChangeTaxOnLines(string orderNo, string tax)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_ChangeTaxOnLines",
                orderNoParameter, taxParameter);
        }

        public virtual int Kompas_Orders_Check(string param_OrderNo, Nullable<bool> param_AllowExceedCreditLimit,
            string param_UserName, Nullable<bool> param_IsQuickOrder, Nullable<System.DateTime> param_Override_DueDate,
            Nullable<bool> param_SimpelCheck)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_AllowExceedCreditLimitParameter = param_AllowExceedCreditLimit.HasValue
                ? new ObjectParameter("Param_AllowExceedCreditLimit", param_AllowExceedCreditLimit)
                : new ObjectParameter("Param_AllowExceedCreditLimit", typeof(bool));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_IsQuickOrderParameter = param_IsQuickOrder.HasValue
                ? new ObjectParameter("Param_IsQuickOrder", param_IsQuickOrder)
                : new ObjectParameter("Param_IsQuickOrder", typeof(bool));

            var param_Override_DueDateParameter = param_Override_DueDate.HasValue
                ? new ObjectParameter("Param_Override_DueDate", param_Override_DueDate)
                : new ObjectParameter("Param_Override_DueDate", typeof(System.DateTime));

            var param_SimpelCheckParameter = param_SimpelCheck.HasValue
                ? new ObjectParameter("Param_SimpelCheck", param_SimpelCheck)
                : new ObjectParameter("Param_SimpelCheck", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Check",
                param_OrderNoParameter, param_AllowExceedCreditLimitParameter, param_UserNameParameter,
                param_IsQuickOrderParameter, param_Override_DueDateParameter, param_SimpelCheckParameter);
        }

        public virtual int Kompas_Orders_CopyLines(Nullable<double> fromTrail, string toOrderNo,
            Nullable<short> text_language, string current_userid)
        {
            var fromTrailParameter = fromTrail.HasValue
                ? new ObjectParameter("FromTrail", fromTrail)
                : new ObjectParameter("FromTrail", typeof(double));

            var toOrderNoParameter = toOrderNo != null
                ? new ObjectParameter("ToOrderNo", toOrderNo)
                : new ObjectParameter("ToOrderNo", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_CopyLines",
                fromTrailParameter, toOrderNoParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_Orders_CopyOrderLinesToExistingOrders(string param_Host, Nullable<int> param_TP,
            string param_OrderNo, string param_UserName, Nullable<bool> param_RecalcPrices)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_RecalcPricesParameter = param_RecalcPrices.HasValue
                ? new ObjectParameter("Param_RecalcPrices", param_RecalcPrices)
                : new ObjectParameter("Param_RecalcPrices", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Orders_CopyOrderLinesToExistingOrders", param_HostParameter, param_TPParameter,
                    param_OrderNoParameter, param_UserNameParameter, param_RecalcPricesParameter);
        }

        public virtual int Kompas_Orders_CopyOrdersToCustomers(string param_Host, Nullable<int> param_TP,
            string param_OrderNo, string param_UserName, Nullable<bool> param_RecalcPrices)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_RecalcPricesParameter = param_RecalcPrices.HasValue
                ? new ObjectParameter("Param_RecalcPrices", param_RecalcPrices)
                : new ObjectParameter("Param_RecalcPrices", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_CopyOrdersToCustomers",
                param_HostParameter, param_TPParameter, param_OrderNoParameter, param_UserNameParameter,
                param_RecalcPricesParameter);
        }

        public virtual int Kompas_Orders_CreateIndexRegulationList(string param_FromOrderNo, string param_ToOrderNo,
            string param_FromPriceList, string param_ToPriceList, string param_FromCustomer, string param_ToCustomer,
            string param_FromCustomerCategory, string param_ToCustomerCategory, string param_FromCustomerGrouping,
            string param_ToCustomerGrouping, string param_FromItem, string param_ToItem,
            string param_FromInventoryCategory, string param_ToInventoryCategory, string param_FromInventoryGrouping,
            string param_ToInventoryGrouping, string param_Host, Nullable<int> param_Tp)
        {
            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_FromPriceListParameter = param_FromPriceList != null
                ? new ObjectParameter("Param_FromPriceList", param_FromPriceList)
                : new ObjectParameter("Param_FromPriceList", typeof(string));

            var param_ToPriceListParameter = param_ToPriceList != null
                ? new ObjectParameter("Param_ToPriceList", param_ToPriceList)
                : new ObjectParameter("Param_ToPriceList", typeof(string));

            var param_FromCustomerParameter = param_FromCustomer != null
                ? new ObjectParameter("Param_FromCustomer", param_FromCustomer)
                : new ObjectParameter("Param_FromCustomer", typeof(string));

            var param_ToCustomerParameter = param_ToCustomer != null
                ? new ObjectParameter("Param_ToCustomer", param_ToCustomer)
                : new ObjectParameter("Param_ToCustomer", typeof(string));

            var param_FromCustomerCategoryParameter = param_FromCustomerCategory != null
                ? new ObjectParameter("Param_FromCustomerCategory", param_FromCustomerCategory)
                : new ObjectParameter("Param_FromCustomerCategory", typeof(string));

            var param_ToCustomerCategoryParameter = param_ToCustomerCategory != null
                ? new ObjectParameter("Param_ToCustomerCategory", param_ToCustomerCategory)
                : new ObjectParameter("Param_ToCustomerCategory", typeof(string));

            var param_FromCustomerGroupingParameter = param_FromCustomerGrouping != null
                ? new ObjectParameter("Param_FromCustomerGrouping", param_FromCustomerGrouping)
                : new ObjectParameter("Param_FromCustomerGrouping", typeof(string));

            var param_ToCustomerGroupingParameter = param_ToCustomerGrouping != null
                ? new ObjectParameter("Param_ToCustomerGrouping", param_ToCustomerGrouping)
                : new ObjectParameter("Param_ToCustomerGrouping", typeof(string));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_FromInventoryCategoryParameter = param_FromInventoryCategory != null
                ? new ObjectParameter("Param_FromInventoryCategory", param_FromInventoryCategory)
                : new ObjectParameter("Param_FromInventoryCategory", typeof(string));

            var param_ToInventoryCategoryParameter = param_ToInventoryCategory != null
                ? new ObjectParameter("Param_ToInventoryCategory", param_ToInventoryCategory)
                : new ObjectParameter("Param_ToInventoryCategory", typeof(string));

            var param_FromInventoryGroupingParameter = param_FromInventoryGrouping != null
                ? new ObjectParameter("Param_FromInventoryGrouping", param_FromInventoryGrouping)
                : new ObjectParameter("Param_FromInventoryGrouping", typeof(string));

            var param_ToInventoryGroupingParameter = param_ToInventoryGrouping != null
                ? new ObjectParameter("Param_ToInventoryGrouping", param_ToInventoryGrouping)
                : new ObjectParameter("Param_ToInventoryGrouping", typeof(string));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TpParameter = param_Tp.HasValue
                ? new ObjectParameter("Param_Tp", param_Tp)
                : new ObjectParameter("Param_Tp", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_CreateIndexRegulationList",
                    param_FromOrderNoParameter, param_ToOrderNoParameter, param_FromPriceListParameter,
                    param_ToPriceListParameter, param_FromCustomerParameter, param_ToCustomerParameter,
                    param_FromCustomerCategoryParameter, param_ToCustomerCategoryParameter,
                    param_FromCustomerGroupingParameter, param_ToCustomerGroupingParameter, param_FromItemParameter,
                    param_ToItemParameter, param_FromInventoryCategoryParameter, param_ToInventoryCategoryParameter,
                    param_FromInventoryGroupingParameter, param_ToInventoryGroupingParameter, param_HostParameter,
                    param_TpParameter);
        }

        public virtual int Kompas_Orders_CreateOrderSelectionList(string param_FromOrderNo, string param_ToOrderNo,
            string param_FromCustomer, string param_ToCustomer, string param_FromStatus, string param_ToStatus,
            string param_FromGrouping, string param_ToGrouping, string param_FromItem, string param_ToItem,
            Nullable<bool> param_SelectOrders, Nullable<bool> param_SelectSubscriptions, string param_Host,
            Nullable<int> param_Tp)
        {
            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_FromCustomerParameter = param_FromCustomer != null
                ? new ObjectParameter("Param_FromCustomer", param_FromCustomer)
                : new ObjectParameter("Param_FromCustomer", typeof(string));

            var param_ToCustomerParameter = param_ToCustomer != null
                ? new ObjectParameter("Param_ToCustomer", param_ToCustomer)
                : new ObjectParameter("Param_ToCustomer", typeof(string));

            var param_FromStatusParameter = param_FromStatus != null
                ? new ObjectParameter("Param_FromStatus", param_FromStatus)
                : new ObjectParameter("Param_FromStatus", typeof(string));

            var param_ToStatusParameter = param_ToStatus != null
                ? new ObjectParameter("Param_ToStatus", param_ToStatus)
                : new ObjectParameter("Param_ToStatus", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromItemParameter = param_FromItem != null
                ? new ObjectParameter("Param_FromItem", param_FromItem)
                : new ObjectParameter("Param_FromItem", typeof(string));

            var param_ToItemParameter = param_ToItem != null
                ? new ObjectParameter("Param_ToItem", param_ToItem)
                : new ObjectParameter("Param_ToItem", typeof(string));

            var param_SelectOrdersParameter = param_SelectOrders.HasValue
                ? new ObjectParameter("Param_SelectOrders", param_SelectOrders)
                : new ObjectParameter("Param_SelectOrders", typeof(bool));

            var param_SelectSubscriptionsParameter = param_SelectSubscriptions.HasValue
                ? new ObjectParameter("Param_SelectSubscriptions", param_SelectSubscriptions)
                : new ObjectParameter("Param_SelectSubscriptions", typeof(bool));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TpParameter = param_Tp.HasValue
                ? new ObjectParameter("Param_Tp", param_Tp)
                : new ObjectParameter("Param_Tp", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_Orders_CreateOrderSelectionList", param_FromOrderNoParameter, param_ToOrderNoParameter,
                param_FromCustomerParameter, param_ToCustomerParameter, param_FromStatusParameter,
                param_ToStatusParameter, param_FromGroupingParameter, param_ToGroupingParameter, param_FromItemParameter,
                param_ToItemParameter, param_SelectOrdersParameter, param_SelectSubscriptionsParameter,
                param_HostParameter, param_TpParameter);
        }

        public virtual int Kompas_Orders_Delete(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Delete",
                param_OrderNoParameter);
        }

        public virtual ObjectResult<string> Kompas_Orders_GetNewOrderNo(Nullable<short> orderType)
        {
            var orderTypeParameter = orderType.HasValue
                ? new ObjectParameter("OrderType", orderType)
                : new ObjectParameter("OrderType", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_Orders_GetNewOrderNo",
                orderTypeParameter);
        }

        public virtual ObjectResult<Kompas_Orders_GetSplitOrderDeliveredLines_Result>
            Kompas_Orders_GetSplitOrderDeliveredLines(string param_OrderNo, string param_Customer,
                string param_FromStatus, string param_ToStatus, string param_FromOrderNo, string param_ToOrderNo,
                Nullable<short> param_Sort)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromStatusParameter = param_FromStatus != null
                ? new ObjectParameter("Param_FromStatus", param_FromStatus)
                : new ObjectParameter("Param_FromStatus", typeof(string));

            var param_ToStatusParameter = param_ToStatus != null
                ? new ObjectParameter("Param_ToStatus", param_ToStatus)
                : new ObjectParameter("Param_ToStatus", typeof(string));

            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_SortParameter = param_Sort.HasValue
                ? new ObjectParameter("Param_Sort", param_Sort)
                : new ObjectParameter("Param_Sort", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_Orders_GetSplitOrderDeliveredLines_Result>(
                        "Kompas_Orders_GetSplitOrderDeliveredLines", param_OrderNoParameter, param_CustomerParameter,
                        param_FromStatusParameter, param_ToStatusParameter, param_FromOrderNoParameter,
                        param_ToOrderNoParameter, param_SortParameter);
        }

        public virtual int Kompas_Orders_GetSplitOrderLines(string param_OrderNo, string param_Customer,
            string param_FromStatus, string param_ToStatus, string param_FromOrderNo, string param_ToOrderNo,
            Nullable<short> param_Sort, Nullable<short> param_FillType)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromStatusParameter = param_FromStatus != null
                ? new ObjectParameter("Param_FromStatus", param_FromStatus)
                : new ObjectParameter("Param_FromStatus", typeof(string));

            var param_ToStatusParameter = param_ToStatus != null
                ? new ObjectParameter("Param_ToStatus", param_ToStatus)
                : new ObjectParameter("Param_ToStatus", typeof(string));

            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_SortParameter = param_Sort.HasValue
                ? new ObjectParameter("Param_Sort", param_Sort)
                : new ObjectParameter("Param_Sort", typeof(short));

            var param_FillTypeParameter = param_FillType.HasValue
                ? new ObjectParameter("Param_FillType", param_FillType)
                : new ObjectParameter("Param_FillType", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_GetSplitOrderLines",
                param_OrderNoParameter, param_CustomerParameter, param_FromStatusParameter, param_ToStatusParameter,
                param_FromOrderNoParameter, param_ToOrderNoParameter, param_SortParameter, param_FillTypeParameter);
        }

        public virtual int Kompas_Orders_IndexRegulateOrderLines(string param_Host, Nullable<int> param_TP,
            Nullable<bool> param_AutoNotat)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_AutoNotatParameter = param_AutoNotat.HasValue
                ? new ObjectParameter("Param_AutoNotat", param_AutoNotat)
                : new ObjectParameter("Param_AutoNotat", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_Orders_IndexRegulateOrderLines", param_HostParameter, param_TPParameter,
                param_AutoNotatParameter);
        }

        public virtual int Kompas_Orders_Post(string param_OrderNo, string param_UserName,
            Nullable<System.DateTime> param_PostDate, Nullable<short> param_Language,
            Nullable<bool> param_AllowExceedCreditLimit, Nullable<bool> param_AllwaysUseDataOnOrder,
            string param_SubDescription, ObjectParameter trail, Nullable<System.DateTime> param_Override_InvoiceDate,
            Nullable<System.DateTime> param_Override_DueDate, Nullable<bool> param_IsQuickOrder,
            Nullable<bool> param_SimpelCheck)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            var param_AllowExceedCreditLimitParameter = param_AllowExceedCreditLimit.HasValue
                ? new ObjectParameter("Param_AllowExceedCreditLimit", param_AllowExceedCreditLimit)
                : new ObjectParameter("Param_AllowExceedCreditLimit", typeof(bool));

            var param_AllwaysUseDataOnOrderParameter = param_AllwaysUseDataOnOrder.HasValue
                ? new ObjectParameter("Param_AllwaysUseDataOnOrder", param_AllwaysUseDataOnOrder)
                : new ObjectParameter("Param_AllwaysUseDataOnOrder", typeof(bool));

            var param_SubDescriptionParameter = param_SubDescription != null
                ? new ObjectParameter("Param_SubDescription", param_SubDescription)
                : new ObjectParameter("Param_SubDescription", typeof(string));

            var param_Override_InvoiceDateParameter = param_Override_InvoiceDate.HasValue
                ? new ObjectParameter("Param_Override_InvoiceDate", param_Override_InvoiceDate)
                : new ObjectParameter("Param_Override_InvoiceDate", typeof(System.DateTime));

            var param_Override_DueDateParameter = param_Override_DueDate.HasValue
                ? new ObjectParameter("Param_Override_DueDate", param_Override_DueDate)
                : new ObjectParameter("Param_Override_DueDate", typeof(System.DateTime));

            var param_IsQuickOrderParameter = param_IsQuickOrder.HasValue
                ? new ObjectParameter("Param_IsQuickOrder", param_IsQuickOrder)
                : new ObjectParameter("Param_IsQuickOrder", typeof(bool));

            var param_SimpelCheckParameter = param_SimpelCheck.HasValue
                ? new ObjectParameter("Param_SimpelCheck", param_SimpelCheck)
                : new ObjectParameter("Param_SimpelCheck", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Post",
                param_OrderNoParameter, param_UserNameParameter, param_PostDateParameter, param_LanguageParameter,
                param_AllowExceedCreditLimitParameter, param_AllwaysUseDataOnOrderParameter,
                param_SubDescriptionParameter, trail, param_Override_InvoiceDateParameter,
                param_Override_DueDateParameter, param_IsQuickOrderParameter, param_SimpelCheckParameter);
        }

        public virtual int Kompas_Orders_Post_BOM_Accounts(string orderNo, string baseCurrency,
            Nullable<bool> postBOMLinesAsOrderLines)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var baseCurrencyParameter = baseCurrency != null
                ? new ObjectParameter("BaseCurrency", baseCurrency)
                : new ObjectParameter("BaseCurrency", typeof(string));

            var postBOMLinesAsOrderLinesParameter = postBOMLinesAsOrderLines.HasValue
                ? new ObjectParameter("PostBOMLinesAsOrderLines", postBOMLinesAsOrderLines)
                : new ObjectParameter("PostBOMLinesAsOrderLines", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Post_BOM_Accounts",
                orderNoParameter, baseCurrencyParameter, postBOMLinesAsOrderLinesParameter);
        }

        public virtual int Kompas_Orders_Post_BOM_Lines(string orderNo, string baseCurrency, string voucherNo,
            Nullable<double> trail, Nullable<System.DateTime> date, string source)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var baseCurrencyParameter = baseCurrency != null
                ? new ObjectParameter("BaseCurrency", baseCurrency)
                : new ObjectParameter("BaseCurrency", typeof(string));

            var voucherNoParameter = voucherNo != null
                ? new ObjectParameter("VoucherNo", voucherNo)
                : new ObjectParameter("VoucherNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Post_BOM_Lines",
                orderNoParameter, baseCurrencyParameter, voucherNoParameter, trailParameter, dateParameter,
                sourceParameter);
        }

        public virtual ObjectResult<Kompas_Orders_PreCheck_Result> Kompas_Orders_PreCheck(string orderNo,
            string userName, Nullable<int> language)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Orders_PreCheck_Result>(
                    "Kompas_Orders_PreCheck", orderNoParameter, userNameParameter, languageParameter);
        }

        public virtual int Kompas_Orders_QuotationCreateOrder(string orderNo, string userName)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_QuotationCreateOrder",
                orderNoParameter, userNameParameter);
        }

        public virtual int Kompas_Orders_SelectCustomersToCopy(string param_CustomerFrom, string param_CustomerTo,
            string param_GroupingFrom, string param_GroupingTo, string param_CategoryFrom, string param_CategoryTo,
            string param_Host, Nullable<int> param_TP, Nullable<bool> param_ToExistingOrders, string param_OrderNoFrom,
            string param_OrderNoTo, string param_CopyOrderNo)
        {
            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_CategoryFromParameter = param_CategoryFrom != null
                ? new ObjectParameter("Param_CategoryFrom", param_CategoryFrom)
                : new ObjectParameter("Param_CategoryFrom", typeof(string));

            var param_CategoryToParameter = param_CategoryTo != null
                ? new ObjectParameter("Param_CategoryTo", param_CategoryTo)
                : new ObjectParameter("Param_CategoryTo", typeof(string));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_ToExistingOrdersParameter = param_ToExistingOrders.HasValue
                ? new ObjectParameter("Param_ToExistingOrders", param_ToExistingOrders)
                : new ObjectParameter("Param_ToExistingOrders", typeof(bool));

            var param_OrderNoFromParameter = param_OrderNoFrom != null
                ? new ObjectParameter("Param_OrderNoFrom", param_OrderNoFrom)
                : new ObjectParameter("Param_OrderNoFrom", typeof(string));

            var param_OrderNoToParameter = param_OrderNoTo != null
                ? new ObjectParameter("Param_OrderNoTo", param_OrderNoTo)
                : new ObjectParameter("Param_OrderNoTo", typeof(string));

            var param_CopyOrderNoParameter = param_CopyOrderNo != null
                ? new ObjectParameter("Param_CopyOrderNo", param_CopyOrderNo)
                : new ObjectParameter("Param_CopyOrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_SelectCustomersToCopy",
                param_CustomerFromParameter, param_CustomerToParameter, param_GroupingFromParameter,
                param_GroupingToParameter, param_CategoryFromParameter, param_CategoryToParameter, param_HostParameter,
                param_TPParameter, param_ToExistingOrdersParameter, param_OrderNoFromParameter, param_OrderNoToParameter,
                param_CopyOrderNoParameter);
        }

        public virtual int Kompas_Orders_Sort_All_OrderLines(string param_Host, string param_SortField,
            Nullable<bool> param_Desc)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_SortFieldParameter = param_SortField != null
                ? new ObjectParameter("Param_SortField", param_SortField)
                : new ObjectParameter("Param_SortField", typeof(string));

            var param_DescParameter = param_Desc.HasValue
                ? new ObjectParameter("Param_Desc", param_Desc)
                : new ObjectParameter("Param_Desc", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Sort_All_OrderLines",
                param_HostParameter, param_SortFieldParameter, param_DescParameter);
        }

        public virtual int Kompas_Orders_Sort_OrderLines(string param_OrderNo, string param_SortField,
            Nullable<bool> param_Desc)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_SortFieldParameter = param_SortField != null
                ? new ObjectParameter("Param_SortField", param_SortField)
                : new ObjectParameter("Param_SortField", typeof(string));

            var param_DescParameter = param_Desc.HasValue
                ? new ObjectParameter("Param_Desc", param_Desc)
                : new ObjectParameter("Param_Desc", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Sort_OrderLines",
                param_OrderNoParameter, param_SortFieldParameter, param_DescParameter);
        }

        public virtual int Kompas_Orders_SplitOrderLine(string param_ToOrderNo, Nullable<int> param_FromRecordID,
            Nullable<double> param_Quantity, Nullable<bool> param_DeleteEmptyOrders, Nullable<bool> param_DeleteOnly,
            Nullable<bool> param_IsDeliveredLines)
        {
            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_FromRecordIDParameter = param_FromRecordID.HasValue
                ? new ObjectParameter("Param_FromRecordID", param_FromRecordID)
                : new ObjectParameter("Param_FromRecordID", typeof(int));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DeleteEmptyOrdersParameter = param_DeleteEmptyOrders.HasValue
                ? new ObjectParameter("Param_DeleteEmptyOrders", param_DeleteEmptyOrders)
                : new ObjectParameter("Param_DeleteEmptyOrders", typeof(bool));

            var param_DeleteOnlyParameter = param_DeleteOnly.HasValue
                ? new ObjectParameter("Param_DeleteOnly", param_DeleteOnly)
                : new ObjectParameter("Param_DeleteOnly", typeof(bool));

            var param_IsDeliveredLinesParameter = param_IsDeliveredLines.HasValue
                ? new ObjectParameter("Param_IsDeliveredLines", param_IsDeliveredLines)
                : new ObjectParameter("Param_IsDeliveredLines", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_SplitOrderLine",
                param_ToOrderNoParameter, param_FromRecordIDParameter, param_QuantityParameter,
                param_DeleteEmptyOrdersParameter, param_DeleteOnlyParameter, param_IsDeliveredLinesParameter);
        }

        public virtual int Kompas_Orders_Update(string param_OrderNo, string param_UserID, string param_Customer,
            string param_ShipTo, string param_Ship1, string param_Ship2, string param_Ship3, string param_ShipPostalCode,
            string param_ShipCityName, string param_Ship5, string param_Ship6, string param_Ship7,
            string param_PriceList, string param_SalesRep, string param_Department, string param_CostCenter,
            string param_Purpose, string param_Project, string param_Status, string param_Remarks,
            string param_InternalRemarks, Nullable<System.DateTime> param_InvoiceDate,
            Nullable<System.DateTime> param_DeliveryDate, string param_RecvNo, string param_OrderText,
            Nullable<System.DateTime> param_OrderDate, Nullable<short> param_DeliveryWeek, string param_OptionalText1,
            string param_OptionalText2, string param_OptionalText3, string param_OptionalText4,
            string param_OptionalText5, string param_OptionalText6, string param_OptionalText7,
            string param_OptionalText8, Nullable<double> param_OptionalNumber1, Nullable<double> param_OptionalNumber2,
            Nullable<double> param_OptionalNumber3, Nullable<double> param_OptionalNumber4,
            Nullable<double> param_OptionalNumber5, Nullable<double> param_OptionalNumber6,
            Nullable<double> param_OptionalNumber7, Nullable<double> param_OptionalNumber8,
            Nullable<short> param_Optional1, Nullable<short> param_Optional2, Nullable<short> param_Optional3,
            Nullable<short> param_Optional4, Nullable<short> param_Optional5, Nullable<short> param_Optional6,
            Nullable<short> param_Optional7, Nullable<short> param_Optional8, string param_CashDiscount,
            string param_YourRef, string param_OurRef, Nullable<byte> param_CalculationOfCargo,
            Nullable<short> param_EECCountry, Nullable<byte> param_EECTransCode)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_ShipPostalCodeParameter = param_ShipPostalCode != null
                ? new ObjectParameter("Param_ShipPostalCode", param_ShipPostalCode)
                : new ObjectParameter("Param_ShipPostalCode", typeof(string));

            var param_ShipCityNameParameter = param_ShipCityName != null
                ? new ObjectParameter("Param_ShipCityName", param_ShipCityName)
                : new ObjectParameter("Param_ShipCityName", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_Ship6Parameter = param_Ship6 != null
                ? new ObjectParameter("Param_Ship6", param_Ship6)
                : new ObjectParameter("Param_Ship6", typeof(string));

            var param_Ship7Parameter = param_Ship7 != null
                ? new ObjectParameter("Param_Ship7", param_Ship7)
                : new ObjectParameter("Param_Ship7", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_StatusParameter = param_Status != null
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_InternalRemarksParameter = param_InternalRemarks != null
                ? new ObjectParameter("Param_InternalRemarks", param_InternalRemarks)
                : new ObjectParameter("Param_InternalRemarks", typeof(string));

            var param_InvoiceDateParameter = param_InvoiceDate.HasValue
                ? new ObjectParameter("Param_InvoiceDate", param_InvoiceDate)
                : new ObjectParameter("Param_InvoiceDate", typeof(System.DateTime));

            var param_DeliveryDateParameter = param_DeliveryDate.HasValue
                ? new ObjectParameter("Param_DeliveryDate", param_DeliveryDate)
                : new ObjectParameter("Param_DeliveryDate", typeof(System.DateTime));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_OrderTextParameter = param_OrderText != null
                ? new ObjectParameter("Param_OrderText", param_OrderText)
                : new ObjectParameter("Param_OrderText", typeof(string));

            var param_OrderDateParameter = param_OrderDate.HasValue
                ? new ObjectParameter("Param_OrderDate", param_OrderDate)
                : new ObjectParameter("Param_OrderDate", typeof(System.DateTime));

            var param_DeliveryWeekParameter = param_DeliveryWeek.HasValue
                ? new ObjectParameter("Param_DeliveryWeek", param_DeliveryWeek)
                : new ObjectParameter("Param_DeliveryWeek", typeof(short));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            var param_CashDiscountParameter = param_CashDiscount != null
                ? new ObjectParameter("Param_CashDiscount", param_CashDiscount)
                : new ObjectParameter("Param_CashDiscount", typeof(string));

            var param_YourRefParameter = param_YourRef != null
                ? new ObjectParameter("Param_YourRef", param_YourRef)
                : new ObjectParameter("Param_YourRef", typeof(string));

            var param_OurRefParameter = param_OurRef != null
                ? new ObjectParameter("Param_OurRef", param_OurRef)
                : new ObjectParameter("Param_OurRef", typeof(string));

            var param_CalculationOfCargoParameter = param_CalculationOfCargo.HasValue
                ? new ObjectParameter("Param_CalculationOfCargo", param_CalculationOfCargo)
                : new ObjectParameter("Param_CalculationOfCargo", typeof(byte));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            var param_EECTransCodeParameter = param_EECTransCode.HasValue
                ? new ObjectParameter("Param_EECTransCode", param_EECTransCode)
                : new ObjectParameter("Param_EECTransCode", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Orders_Update",
                param_OrderNoParameter, param_UserIDParameter, param_CustomerParameter, param_ShipToParameter,
                param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter, param_ShipPostalCodeParameter,
                param_ShipCityNameParameter, param_Ship5Parameter, param_Ship6Parameter, param_Ship7Parameter,
                param_PriceListParameter, param_SalesRepParameter, param_DepartmentParameter, param_CostCenterParameter,
                param_PurposeParameter, param_ProjectParameter, param_StatusParameter, param_RemarksParameter,
                param_InternalRemarksParameter, param_InvoiceDateParameter, param_DeliveryDateParameter,
                param_RecvNoParameter, param_OrderTextParameter, param_OrderDateParameter, param_DeliveryWeekParameter,
                param_OptionalText1Parameter, param_OptionalText2Parameter, param_OptionalText3Parameter,
                param_OptionalText4Parameter, param_OptionalText5Parameter, param_OptionalText6Parameter,
                param_OptionalText7Parameter, param_OptionalText8Parameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalNumber3Parameter, param_OptionalNumber4Parameter,
                param_OptionalNumber5Parameter, param_OptionalNumber6Parameter, param_OptionalNumber7Parameter,
                param_OptionalNumber8Parameter, param_Optional1Parameter, param_Optional2Parameter,
                param_Optional3Parameter, param_Optional4Parameter, param_Optional5Parameter, param_Optional6Parameter,
                param_Optional7Parameter, param_Optional8Parameter, param_CashDiscountParameter, param_YourRefParameter,
                param_OurRefParameter, param_CalculationOfCargoParameter, param_EECCountryParameter,
                param_EECTransCodeParameter);
        }

        public virtual int Kompas_OrdersAllocateLines(string param_OrderNo, Nullable<short> param_Faktor)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersAllocateLines",
                param_OrderNoParameter, param_FaktorParameter);
        }

        public virtual int Kompas_OrdersArchive_AfterPrint(Nullable<System.Guid> gUID_Print,
            Nullable<bool> isBefore_Print, string userName, string printInfo, string formula, string fixedCriteria,
            string userSelection)
        {
            var gUID_PrintParameter = gUID_Print.HasValue
                ? new ObjectParameter("GUID_Print", gUID_Print)
                : new ObjectParameter("GUID_Print", typeof(System.Guid));

            var isBefore_PrintParameter = isBefore_Print.HasValue
                ? new ObjectParameter("IsBefore_Print", isBefore_Print)
                : new ObjectParameter("IsBefore_Print", typeof(bool));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var printInfoParameter = printInfo != null
                ? new ObjectParameter("PrintInfo", printInfo)
                : new ObjectParameter("PrintInfo", typeof(string));

            var formulaParameter = formula != null
                ? new ObjectParameter("Formula", formula)
                : new ObjectParameter("Formula", typeof(string));

            var fixedCriteriaParameter = fixedCriteria != null
                ? new ObjectParameter("FixedCriteria", fixedCriteria)
                : new ObjectParameter("FixedCriteria", typeof(string));

            var userSelectionParameter = userSelection != null
                ? new ObjectParameter("UserSelection", userSelection)
                : new ObjectParameter("UserSelection", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersArchive_AfterPrint",
                gUID_PrintParameter, isBefore_PrintParameter, userNameParameter, printInfoParameter, formulaParameter,
                fixedCriteriaParameter, userSelectionParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_OrdersCalcLineTotals(string param_OrderNo,
            Nullable<short> param_Type)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_OrdersCalcLineTotals", param_OrderNoParameter, param_TypeParameter);
        }

        public virtual int Kompas_OrdersCalcTotals(string param_OrderNo, ObjectParameter amount,
            ObjectParameter amountBase, ObjectParameter totalDuty, ObjectParameter totalDutyBase,
            ObjectParameter totalWeight, ObjectParameter totalVolume, ObjectParameter costAmountBase,
            ObjectParameter costAmount, ObjectParameter taxAmount, ObjectParameter taxAmountBase,
            ObjectParameter endDiscPct, ObjectParameter endDisc, ObjectParameter endDiscBase, ObjectParameter vatFee,
            ObjectParameter vatFreeFee, ObjectParameter vatFeeBase, ObjectParameter vatFreeFeeBase,
            ObjectParameter roundedAmount, ObjectParameter roundedAmountBase, ObjectParameter total,
            ObjectParameter totalBase, ObjectParameter vATLiableAmount, ObjectParameter vATLiableAmountBase,
            Nullable<bool> doCalcCargo, Nullable<decimal> rate, ObjectParameter allowFDAmount,
            Nullable<byte> overruledCoinRounding, ObjectParameter endDiscIncl, ObjectParameter endDiscInclBase,
            Nullable<short> calcEndDiscIncl)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var doCalcCargoParameter = doCalcCargo.HasValue
                ? new ObjectParameter("DoCalcCargo", doCalcCargo)
                : new ObjectParameter("DoCalcCargo", typeof(bool));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(decimal));

            var overruledCoinRoundingParameter = overruledCoinRounding.HasValue
                ? new ObjectParameter("OverruledCoinRounding", overruledCoinRounding)
                : new ObjectParameter("OverruledCoinRounding", typeof(byte));

            var calcEndDiscInclParameter = calcEndDiscIncl.HasValue
                ? new ObjectParameter("CalcEndDiscIncl", calcEndDiscIncl)
                : new ObjectParameter("CalcEndDiscIncl", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersCalcTotals",
                param_OrderNoParameter, amount, amountBase, totalDuty, totalDutyBase, totalWeight, totalVolume,
                costAmountBase, costAmount, taxAmount, taxAmountBase, endDiscPct, endDisc, endDiscBase, vatFee,
                vatFreeFee, vatFeeBase, vatFreeFeeBase, roundedAmount, roundedAmountBase, total, totalBase,
                vATLiableAmount, vATLiableAmountBase, doCalcCargoParameter, rateParameter, allowFDAmount,
                overruledCoinRoundingParameter, endDiscIncl, endDiscInclBase, calcEndDiscInclParameter);
        }

        public virtual int Kompas_OrdersCalcTotals_Special(string param_OrderNo, Nullable<short> param_Type,
            ObjectParameter amount, ObjectParameter amountBase, ObjectParameter totalDuty, ObjectParameter totalDutyBase,
            ObjectParameter totalWeight, ObjectParameter totalVolume, ObjectParameter costAmountBase,
            ObjectParameter costAmount, ObjectParameter taxAmount, ObjectParameter taxAmountBase,
            ObjectParameter endDiscPct, ObjectParameter endDisc, ObjectParameter endDiscBase, ObjectParameter vatFee,
            ObjectParameter vatFreeFee, ObjectParameter vatFeeBase, ObjectParameter vatFreeFeeBase,
            ObjectParameter roundedAmount, ObjectParameter roundedAmountBase, ObjectParameter total,
            ObjectParameter totalBase, ObjectParameter vATLiableAmount, ObjectParameter vATLiableAmountBase,
            Nullable<bool> doCalcCargo, Nullable<decimal> rate, ObjectParameter allowFDAmount,
            Nullable<byte> overruledCoinRounding, ObjectParameter endDiscIncl, ObjectParameter endDiscInclBase)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var doCalcCargoParameter = doCalcCargo.HasValue
                ? new ObjectParameter("DoCalcCargo", doCalcCargo)
                : new ObjectParameter("DoCalcCargo", typeof(bool));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(decimal));

            var overruledCoinRoundingParameter = overruledCoinRounding.HasValue
                ? new ObjectParameter("OverruledCoinRounding", overruledCoinRounding)
                : new ObjectParameter("OverruledCoinRounding", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersCalcTotals_Special",
                param_OrderNoParameter, param_TypeParameter, amount, amountBase, totalDuty, totalDutyBase, totalWeight,
                totalVolume, costAmountBase, costAmount, taxAmount, taxAmountBase, endDiscPct, endDisc, endDiscBase,
                vatFee, vatFreeFee, vatFeeBase, vatFreeFeeBase, roundedAmount, roundedAmountBase, total, totalBase,
                vATLiableAmount, vATLiableAmountBase, doCalcCargoParameter, rateParameter, allowFDAmount,
                overruledCoinRoundingParameter, endDiscIncl, endDiscInclBase);
        }

        public virtual int Kompas_OrdersCheckAndMakeSerialNotat(string param_OrderNo, Nullable<bool> param_OnlyDelivered)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_OnlyDeliveredParameter = param_OnlyDelivered.HasValue
                ? new ObjectParameter("Param_OnlyDelivered", param_OnlyDelivered)
                : new ObjectParameter("Param_OnlyDelivered", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersCheckAndMakeSerialNotat",
                param_OrderNoParameter, param_OnlyDeliveredParameter);
        }

        public virtual ObjectResult<Kompas_OrdersCheckSerialNo_Result> Kompas_OrdersCheckSerialNo(string param_OrderNo,
            Nullable<int> param_RecordID)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_OrdersCheckSerialNo_Result>(
                    "Kompas_OrdersCheckSerialNo", param_OrderNoParameter, param_RecordIDParameter);
        }

        public virtual int Kompas_OrdersLog_AddNew(string orderNo, Nullable<double> trail, string description,
            string voucher, string report, string createdBy, Nullable<System.Guid> fileGUID, string employee,
            string remarks)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var reportParameter = report != null
                ? new ObjectParameter("Report", report)
                : new ObjectParameter("Report", typeof(string));

            var createdByParameter = createdBy != null
                ? new ObjectParameter("CreatedBy", createdBy)
                : new ObjectParameter("CreatedBy", typeof(string));

            var fileGUIDParameter = fileGUID.HasValue
                ? new ObjectParameter("FileGUID", fileGUID)
                : new ObjectParameter("FileGUID", typeof(System.Guid));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersLog_AddNew",
                orderNoParameter, trailParameter, descriptionParameter, voucherParameter, reportParameter,
                createdByParameter, fileGUIDParameter, employeeParameter, remarksParameter);
        }

        public virtual int Kompas_OrdersRecalcOrderLines(string param_OrderNo, Nullable<bool> param_UpdatePrice,
            Nullable<bool> param_UpdateCostPrice, Nullable<bool> param_UpdateDiscount, Nullable<bool> param_UpdateWeight,
            Nullable<bool> param_UpdateVolume, Nullable<int> param_RecordID)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UpdatePriceParameter = param_UpdatePrice.HasValue
                ? new ObjectParameter("Param_UpdatePrice", param_UpdatePrice)
                : new ObjectParameter("Param_UpdatePrice", typeof(bool));

            var param_UpdateCostPriceParameter = param_UpdateCostPrice.HasValue
                ? new ObjectParameter("Param_UpdateCostPrice", param_UpdateCostPrice)
                : new ObjectParameter("Param_UpdateCostPrice", typeof(bool));

            var param_UpdateDiscountParameter = param_UpdateDiscount.HasValue
                ? new ObjectParameter("Param_UpdateDiscount", param_UpdateDiscount)
                : new ObjectParameter("Param_UpdateDiscount", typeof(bool));

            var param_UpdateWeightParameter = param_UpdateWeight.HasValue
                ? new ObjectParameter("Param_UpdateWeight", param_UpdateWeight)
                : new ObjectParameter("Param_UpdateWeight", typeof(bool));

            var param_UpdateVolumeParameter = param_UpdateVolume.HasValue
                ? new ObjectParameter("Param_UpdateVolume", param_UpdateVolume)
                : new ObjectParameter("Param_UpdateVolume", typeof(bool));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersRecalcOrderLines",
                param_OrderNoParameter, param_UpdatePriceParameter, param_UpdateCostPriceParameter,
                param_UpdateDiscountParameter, param_UpdateWeightParameter, param_UpdateVolumeParameter,
                param_RecordIDParameter);
        }

        public virtual int Kompas_OrdersUpdateTotals(string param_OrderNo, Nullable<byte> overruledCoinRounding,
            Nullable<short> calcEndDiscIncl)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var overruledCoinRoundingParameter = overruledCoinRounding.HasValue
                ? new ObjectParameter("OverruledCoinRounding", overruledCoinRounding)
                : new ObjectParameter("OverruledCoinRounding", typeof(byte));

            var calcEndDiscInclParameter = calcEndDiscIncl.HasValue
                ? new ObjectParameter("CalcEndDiscIncl", calcEndDiscIncl)
                : new ObjectParameter("CalcEndDiscIncl", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersUpdateTotals",
                param_OrderNoParameter, overruledCoinRoundingParameter, calcEndDiscInclParameter);
        }

        public virtual int Kompas_OrdersWorkInsertLine(string param_Journal, Nullable<int> param_JournalLineNo,
            string param_OrderNo, Nullable<int> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_JournalLineNoParameter = param_JournalLineNo.HasValue
                ? new ObjectParameter("Param_JournalLineNo", param_JournalLineNo)
                : new ObjectParameter("Param_JournalLineNo", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrdersWorkInsertLine",
                param_JournalParameter, param_JournalLineNoParameter, param_OrderNoParameter, param_LineNoParameter);
        }

        public virtual int Kompas_OrderTotals(string param_OrderNo, Nullable<double> param_EndDiscPct,
            Nullable<double> param_EndDisc, Nullable<double> param_VatFee, Nullable<double> param_VatFreeFee,
            Nullable<double> param_VatFeeBase, Nullable<double> param_VatFreeFeeBase,
            Nullable<double> param_RoundedAmount, Nullable<bool> param_UpdateOrder, Nullable<bool> param_CalcCargo,
            Nullable<double> param_Rate)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_EndDiscParameter = param_EndDisc.HasValue
                ? new ObjectParameter("Param_EndDisc", param_EndDisc)
                : new ObjectParameter("Param_EndDisc", typeof(double));

            var param_VatFeeParameter = param_VatFee.HasValue
                ? new ObjectParameter("Param_VatFee", param_VatFee)
                : new ObjectParameter("Param_VatFee", typeof(double));

            var param_VatFreeFeeParameter = param_VatFreeFee.HasValue
                ? new ObjectParameter("Param_VatFreeFee", param_VatFreeFee)
                : new ObjectParameter("Param_VatFreeFee", typeof(double));

            var param_VatFeeBaseParameter = param_VatFeeBase.HasValue
                ? new ObjectParameter("Param_VatFeeBase", param_VatFeeBase)
                : new ObjectParameter("Param_VatFeeBase", typeof(double));

            var param_VatFreeFeeBaseParameter = param_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Param_VatFreeFeeBase", param_VatFreeFeeBase)
                : new ObjectParameter("Param_VatFreeFeeBase", typeof(double));

            var param_RoundedAmountParameter = param_RoundedAmount.HasValue
                ? new ObjectParameter("Param_RoundedAmount", param_RoundedAmount)
                : new ObjectParameter("Param_RoundedAmount", typeof(double));

            var param_UpdateOrderParameter = param_UpdateOrder.HasValue
                ? new ObjectParameter("Param_UpdateOrder", param_UpdateOrder)
                : new ObjectParameter("Param_UpdateOrder", typeof(bool));

            var param_CalcCargoParameter = param_CalcCargo.HasValue
                ? new ObjectParameter("Param_CalcCargo", param_CalcCargo)
                : new ObjectParameter("Param_CalcCargo", typeof(bool));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderTotals",
                param_OrderNoParameter, param_EndDiscPctParameter, param_EndDiscParameter, param_VatFeeParameter,
                param_VatFreeFeeParameter, param_VatFeeBaseParameter, param_VatFreeFeeBaseParameter,
                param_RoundedAmountParameter, param_UpdateOrderParameter, param_CalcCargoParameter, param_RateParameter);
        }

        public virtual int Kompas_OrderTotals_Special(string param_OrderNo, Nullable<short> param_Type,
            Nullable<double> param_EndDiscPct, Nullable<double> param_EndDisc, Nullable<double> param_VatFee,
            Nullable<double> param_VatFreeFee, Nullable<double> param_VatFeeBase, Nullable<double> param_VatFreeFeeBase,
            Nullable<double> param_RoundedAmount, Nullable<bool> param_CalcCargo, Nullable<double> param_Rate)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_EndDiscParameter = param_EndDisc.HasValue
                ? new ObjectParameter("Param_EndDisc", param_EndDisc)
                : new ObjectParameter("Param_EndDisc", typeof(double));

            var param_VatFeeParameter = param_VatFee.HasValue
                ? new ObjectParameter("Param_VatFee", param_VatFee)
                : new ObjectParameter("Param_VatFee", typeof(double));

            var param_VatFreeFeeParameter = param_VatFreeFee.HasValue
                ? new ObjectParameter("Param_VatFreeFee", param_VatFreeFee)
                : new ObjectParameter("Param_VatFreeFee", typeof(double));

            var param_VatFeeBaseParameter = param_VatFeeBase.HasValue
                ? new ObjectParameter("Param_VatFeeBase", param_VatFeeBase)
                : new ObjectParameter("Param_VatFeeBase", typeof(double));

            var param_VatFreeFeeBaseParameter = param_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Param_VatFreeFeeBase", param_VatFreeFeeBase)
                : new ObjectParameter("Param_VatFreeFeeBase", typeof(double));

            var param_RoundedAmountParameter = param_RoundedAmount.HasValue
                ? new ObjectParameter("Param_RoundedAmount", param_RoundedAmount)
                : new ObjectParameter("Param_RoundedAmount", typeof(double));

            var param_CalcCargoParameter = param_CalcCargo.HasValue
                ? new ObjectParameter("Param_CalcCargo", param_CalcCargo)
                : new ObjectParameter("Param_CalcCargo", typeof(bool));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderTotals_Special",
                param_OrderNoParameter, param_TypeParameter, param_EndDiscPctParameter, param_EndDiscParameter,
                param_VatFeeParameter, param_VatFreeFeeParameter, param_VatFeeBaseParameter,
                param_VatFreeFeeBaseParameter, param_RoundedAmountParameter, param_CalcCargoParameter,
                param_RateParameter);
        }

        public virtual int Kompas_OrderUpdateLastDelivered(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderUpdateLastDelivered",
                param_OrderNoParameter);
        }

        public virtual int Kompas_OrderUpdateOnHandPackingList(string param_OrderNo, Nullable<bool> param_Return,
            string param_Journal, Nullable<int> param_RecordID, Nullable<bool> param_ReturnDelivered)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_ReturnParameter = param_Return.HasValue
                ? new ObjectParameter("Param_Return", param_Return)
                : new ObjectParameter("Param_Return", typeof(bool));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_ReturnDeliveredParameter = param_ReturnDelivered.HasValue
                ? new ObjectParameter("Param_ReturnDelivered", param_ReturnDelivered)
                : new ObjectParameter("Param_ReturnDelivered", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_OrderUpdateOnHandPackingList",
                param_OrderNoParameter, param_ReturnParameter, param_JournalParameter, param_RecordIDParameter,
                param_ReturnDeliveredParameter);
        }

        public virtual int Kompas_Ordre_CreateMultiOrdreCopies(string param_OrderNo, Nullable<int> param_NoOfCopies,
            Nullable<bool> param_OnlyOrderHead, string param_UserName)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_NoOfCopiesParameter = param_NoOfCopies.HasValue
                ? new ObjectParameter("Param_NoOfCopies", param_NoOfCopies)
                : new ObjectParameter("Param_NoOfCopies", typeof(int));

            var param_OnlyOrderHeadParameter = param_OnlyOrderHead.HasValue
                ? new ObjectParameter("Param_OnlyOrderHead", param_OnlyOrderHead)
                : new ObjectParameter("Param_OnlyOrderHead", typeof(bool));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Ordre_CreateMultiOrdreCopies",
                param_OrderNoParameter, param_NoOfCopiesParameter, param_OnlyOrderHeadParameter, param_UserNameParameter);
        }

        public virtual int Kompas_PerformCoinRounding(Nullable<double> amount, ObjectParameter roundedAmount)
        {
            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PerformCoinRounding",
                amountParameter, roundedAmount);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearActualsVsBudgets_Result>
            Kompas_PeriodBalanceGetYearActualsVsBudgets(string param_StartingPeriod, string param_EndingPeriod,
                string param_YearBeginningID, Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment,
                Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose,
                string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_YearBeginningIDParameter = param_YearBeginningID != null
                ? new ObjectParameter("Param_YearBeginningID", param_YearBeginningID)
                : new ObjectParameter("Param_YearBeginningID", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PeriodBalanceGetYearActualsVsBudgets_Result>(
                        "Kompas_PeriodBalanceGetYearActualsVsBudgets", param_StartingPeriodParameter,
                        param_EndingPeriodParameter, param_YearBeginningIDParameter, param_OnPeriodBalanceParameter,
                        param_UseDepartmentParameter, param_UseCostCenterParameter, param_UseProjectParameter,
                        param_UsePurposeParameter, param_DepartmentParameter, param_CostCenterParameter,
                        param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_PeriodBalanceGetYearActualsVsBudgetsCrossTabbed(string param_StartingPeriod,
            string param_EndingPeriod, string param_YearBeginningID, Nullable<bool> param_OnPeriodBalance,
            Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject,
            Nullable<bool> param_UsePurpose, string param_Department, string param_CostCenter, string param_Project,
            string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_YearBeginningIDParameter = param_YearBeginningID != null
                ? new ObjectParameter("Param_YearBeginningID", param_YearBeginningID)
                : new ObjectParameter("Param_YearBeginningID", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PeriodBalanceGetYearActualsVsBudgetsCrossTabbed", param_StartingPeriodParameter,
                    param_EndingPeriodParameter, param_YearBeginningIDParameter, param_OnPeriodBalanceParameter,
                    param_UseDepartmentParameter, param_UseCostCenterParameter, param_UseProjectParameter,
                    param_UsePurposeParameter, param_DepartmentParameter, param_CostCenterParameter,
                    param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearActualsVsLastYearActuals_Result>
            Kompas_PeriodBalanceGetYearActualsVsLastYearActuals(string param_StartingPeriod, string param_EndingPeriod,
                string param_LYStartingPeriod, string param_LYEndingPeriod, Nullable<bool> param_OnPeriodBalance,
                Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject,
                Nullable<bool> param_UsePurpose, string param_Department, string param_CostCenter, string param_Project,
                string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_LYStartingPeriodParameter = param_LYStartingPeriod != null
                ? new ObjectParameter("Param_LYStartingPeriod", param_LYStartingPeriod)
                : new ObjectParameter("Param_LYStartingPeriod", typeof(string));

            var param_LYEndingPeriodParameter = param_LYEndingPeriod != null
                ? new ObjectParameter("Param_LYEndingPeriod", param_LYEndingPeriod)
                : new ObjectParameter("Param_LYEndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PeriodBalanceGetYearActualsVsLastYearActuals_Result>(
                        "Kompas_PeriodBalanceGetYearActualsVsLastYearActuals", param_StartingPeriodParameter,
                        param_EndingPeriodParameter, param_LYStartingPeriodParameter, param_LYEndingPeriodParameter,
                        param_OnPeriodBalanceParameter, param_UseDepartmentParameter, param_UseCostCenterParameter,
                        param_UseProjectParameter, param_UsePurposeParameter, param_DepartmentParameter,
                        param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_PeriodBalanceGetYearActualsVsLastYearActualsCrossTabbed(string param_StartingPeriod,
            string param_EndingPeriod, string param_LYStartingPeriod, string param_LYEndingPeriod,
            Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter,
            Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose, string param_Department,
            string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_LYStartingPeriodParameter = param_LYStartingPeriod != null
                ? new ObjectParameter("Param_LYStartingPeriod", param_LYStartingPeriod)
                : new ObjectParameter("Param_LYStartingPeriod", typeof(string));

            var param_LYEndingPeriodParameter = param_LYEndingPeriod != null
                ? new ObjectParameter("Param_LYEndingPeriod", param_LYEndingPeriod)
                : new ObjectParameter("Param_LYEndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PeriodBalanceGetYearActualsVsLastYearActualsCrossTabbed", param_StartingPeriodParameter,
                    param_EndingPeriodParameter, param_LYStartingPeriodParameter, param_LYEndingPeriodParameter,
                    param_OnPeriodBalanceParameter, param_UseDepartmentParameter, param_UseCostCenterParameter,
                    param_UseProjectParameter, param_UsePurposeParameter, param_DepartmentParameter,
                    param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActuals_Result>
            Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActuals(string param_StartingPeriod,
                string param_EndingPeriod, string param_LYStartingPeriod, string param_LYEndingPeriod,
                Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment,
                Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose,
                string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_LYStartingPeriodParameter = param_LYStartingPeriod != null
                ? new ObjectParameter("Param_LYStartingPeriod", param_LYStartingPeriod)
                : new ObjectParameter("Param_LYStartingPeriod", typeof(string));

            var param_LYEndingPeriodParameter = param_LYEndingPeriod != null
                ? new ObjectParameter("Param_LYEndingPeriod", param_LYEndingPeriod)
                : new ObjectParameter("Param_LYEndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActuals_Result>(
                        "Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActuals", param_StartingPeriodParameter,
                        param_EndingPeriodParameter, param_LYStartingPeriodParameter, param_LYEndingPeriodParameter,
                        param_OnPeriodBalanceParameter, param_UseDepartmentParameter, param_UseCostCenterParameter,
                        param_UseProjectParameter, param_UsePurposeParameter, param_DepartmentParameter,
                        param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActualsCrossTabbed(
            string param_StartingPeriod, string param_EndingPeriod, string param_LYStartingPeriod,
            string param_LYEndingPeriod, Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment,
            Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose,
            string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_LYStartingPeriodParameter = param_LYStartingPeriod != null
                ? new ObjectParameter("Param_LYStartingPeriod", param_LYStartingPeriod)
                : new ObjectParameter("Param_LYStartingPeriod", typeof(string));

            var param_LYEndingPeriodParameter = param_LYEndingPeriod != null
                ? new ObjectParameter("Param_LYEndingPeriod", param_LYEndingPeriod)
                : new ObjectParameter("Param_LYEndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PeriodBalanceGetYearActualsWithBudgetVsLastYearActualsCrossTabbed",
                    param_StartingPeriodParameter, param_EndingPeriodParameter, param_LYStartingPeriodParameter,
                    param_LYEndingPeriodParameter, param_OnPeriodBalanceParameter, param_UseDepartmentParameter,
                    param_UseCostCenterParameter, param_UseProjectParameter, param_UsePurposeParameter,
                    param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearsActuals_Result> Kompas_PeriodBalanceGetYearsActuals(
            string param_StartingPeriod, string param_EndingPeriod, Nullable<bool> param_OnPeriodBalance,
            Nullable<System.DateTime> param_StartingDate, Nullable<System.DateTime> param_EndingDate,
            Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject,
            Nullable<bool> param_UsePurpose, string param_Department, string param_CostCenter, string param_Project,
            string param_Purpose, string param_Account100Pct)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_StartingDateParameter = param_StartingDate.HasValue
                ? new ObjectParameter("Param_StartingDate", param_StartingDate)
                : new ObjectParameter("Param_StartingDate", typeof(System.DateTime));

            var param_EndingDateParameter = param_EndingDate.HasValue
                ? new ObjectParameter("Param_EndingDate", param_EndingDate)
                : new ObjectParameter("Param_EndingDate", typeof(System.DateTime));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_Account100PctParameter = param_Account100Pct != null
                ? new ObjectParameter("Param_Account100Pct", param_Account100Pct)
                : new ObjectParameter("Param_Account100Pct", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_PeriodBalanceGetYearsActuals_Result>
                    ("Kompas_PeriodBalanceGetYearsActuals", param_StartingPeriodParameter, param_EndingPeriodParameter,
                        param_OnPeriodBalanceParameter, param_StartingDateParameter, param_EndingDateParameter,
                        param_UseDepartmentParameter, param_UseCostCenterParameter, param_UseProjectParameter,
                        param_UsePurposeParameter, param_DepartmentParameter, param_CostCenterParameter,
                        param_ProjectParameter, param_PurposeParameter, param_Account100PctParameter);
        }

        public virtual int Kompas_PeriodBalanceGetYearsActualsCrossTabbed(string param_StartingPeriod,
            string param_EndingPeriod, Nullable<bool> param_OnPeriodBalance,
            Nullable<System.DateTime> param_StartingDate, Nullable<System.DateTime> param_EndingDate,
            Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject,
            Nullable<bool> param_UsePurpose, string param_Department, string param_CostCenter, string param_Project,
            string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_StartingDateParameter = param_StartingDate.HasValue
                ? new ObjectParameter("Param_StartingDate", param_StartingDate)
                : new ObjectParameter("Param_StartingDate", typeof(System.DateTime));

            var param_EndingDateParameter = param_EndingDate.HasValue
                ? new ObjectParameter("Param_EndingDate", param_EndingDate)
                : new ObjectParameter("Param_EndingDate", typeof(System.DateTime));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PeriodBalanceGetYearsActualsCrossTabbed", param_StartingPeriodParameter,
                    param_EndingPeriodParameter, param_OnPeriodBalanceParameter, param_StartingDateParameter,
                    param_EndingDateParameter, param_UseDepartmentParameter, param_UseCostCenterParameter,
                    param_UseProjectParameter, param_UsePurposeParameter, param_DepartmentParameter,
                    param_CostCenterParameter, param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearsBudgets_Result> Kompas_PeriodBalanceGetYearsBudgets(
            string param_StartingPeriod, string param_EndingPeriod, string param_YearBeginningID,
            Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter,
            Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose, string param_Department,
            string param_CostCenter, string param_Project, string param_Purpose, string param_Account100Pct)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_YearBeginningIDParameter = param_YearBeginningID != null
                ? new ObjectParameter("Param_YearBeginningID", param_YearBeginningID)
                : new ObjectParameter("Param_YearBeginningID", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_Account100PctParameter = param_Account100Pct != null
                ? new ObjectParameter("Param_Account100Pct", param_Account100Pct)
                : new ObjectParameter("Param_Account100Pct", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_PeriodBalanceGetYearsBudgets_Result>
                    ("Kompas_PeriodBalanceGetYearsBudgets", param_StartingPeriodParameter, param_EndingPeriodParameter,
                        param_YearBeginningIDParameter, param_OnPeriodBalanceParameter, param_UseDepartmentParameter,
                        param_UseCostCenterParameter, param_UseProjectParameter, param_UsePurposeParameter,
                        param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter,
                        param_PurposeParameter, param_Account100PctParameter);
        }

        public virtual int Kompas_PeriodBalanceGetYearsBudgetsCrossTabbed(string param_StartingPeriod,
            string param_EndingPeriod, string param_YearBeginningID, Nullable<bool> param_OnPeriodBalance,
            Nullable<bool> param_UseDepartment, Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject,
            Nullable<bool> param_UsePurpose, string param_Department, string param_CostCenter, string param_Project,
            string param_Purpose)
        {
            var param_StartingPeriodParameter = param_StartingPeriod != null
                ? new ObjectParameter("Param_StartingPeriod", param_StartingPeriod)
                : new ObjectParameter("Param_StartingPeriod", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            var param_YearBeginningIDParameter = param_YearBeginningID != null
                ? new ObjectParameter("Param_YearBeginningID", param_YearBeginningID)
                : new ObjectParameter("Param_YearBeginningID", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PeriodBalanceGetYearsBudgetsCrossTabbed", param_StartingPeriodParameter,
                    param_EndingPeriodParameter, param_YearBeginningIDParameter, param_OnPeriodBalanceParameter,
                    param_UseDepartmentParameter, param_UseCostCenterParameter, param_UseProjectParameter,
                    param_UsePurposeParameter, param_DepartmentParameter, param_CostCenterParameter,
                    param_ProjectParameter, param_PurposeParameter);
        }

        public virtual ObjectResult<Kompas_PeriodBalanceGetYearTDActualsVsLastYearTDActualsWithBudgets_Result>
            Kompas_PeriodBalanceGetYearTDActualsVsLastYearTDActualsWithBudgets(string param_YearByPeriod,
                string param_LYYearByPeriod, Nullable<bool> param_OnPeriodBalance, Nullable<bool> param_UseDepartment,
                Nullable<bool> param_UseCostCenter, Nullable<bool> param_UseProject, Nullable<bool> param_UsePurpose,
                string param_Department, string param_CostCenter, string param_Project, string param_Purpose)
        {
            var param_YearByPeriodParameter = param_YearByPeriod != null
                ? new ObjectParameter("Param_YearByPeriod", param_YearByPeriod)
                : new ObjectParameter("Param_YearByPeriod", typeof(string));

            var param_LYYearByPeriodParameter = param_LYYearByPeriod != null
                ? new ObjectParameter("Param_LYYearByPeriod", param_LYYearByPeriod)
                : new ObjectParameter("Param_LYYearByPeriod", typeof(string));

            var param_OnPeriodBalanceParameter = param_OnPeriodBalance.HasValue
                ? new ObjectParameter("Param_OnPeriodBalance", param_OnPeriodBalance)
                : new ObjectParameter("Param_OnPeriodBalance", typeof(bool));

            var param_UseDepartmentParameter = param_UseDepartment.HasValue
                ? new ObjectParameter("Param_UseDepartment", param_UseDepartment)
                : new ObjectParameter("Param_UseDepartment", typeof(bool));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_UseProjectParameter = param_UseProject.HasValue
                ? new ObjectParameter("Param_UseProject", param_UseProject)
                : new ObjectParameter("Param_UseProject", typeof(bool));

            var param_UsePurposeParameter = param_UsePurpose.HasValue
                ? new ObjectParameter("Param_UsePurpose", param_UsePurpose)
                : new ObjectParameter("Param_UsePurpose", typeof(bool));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PeriodBalanceGetYearTDActualsVsLastYearTDActualsWithBudgets_Result>(
                        "Kompas_PeriodBalanceGetYearTDActualsVsLastYearTDActualsWithBudgets",
                        param_YearByPeriodParameter, param_LYYearByPeriodParameter, param_OnPeriodBalanceParameter,
                        param_UseDepartmentParameter, param_UseCostCenterParameter, param_UseProjectParameter,
                        param_UsePurposeParameter, param_DepartmentParameter, param_CostCenterParameter,
                        param_ProjectParameter, param_PurposeParameter);
        }

        public virtual int Kompas_PeriodsChangePeriod(Nullable<System.DateTime> startDate,
            Nullable<System.DateTime> endDate, Nullable<System.DateTime> newStartDate,
            Nullable<System.DateTime> newEndDate)
        {
            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var newStartDateParameter = newStartDate.HasValue
                ? new ObjectParameter("NewStartDate", newStartDate)
                : new ObjectParameter("NewStartDate", typeof(System.DateTime));

            var newEndDateParameter = newEndDate.HasValue
                ? new ObjectParameter("NewEndDate", newEndDate)
                : new ObjectParameter("NewEndDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PeriodsChangePeriod",
                startDateParameter, endDateParameter, newStartDateParameter, newEndDateParameter);
        }

        public virtual ObjectResult<Kompas_PeriodsGetPeriodIDWithNameAndEnding_Result>
            Kompas_PeriodsGetPeriodIDWithNameAndEnding(string param_PrimoID, string param_UltimoID)
        {
            var param_PrimoIDParameter = param_PrimoID != null
                ? new ObjectParameter("Param_PrimoID", param_PrimoID)
                : new ObjectParameter("Param_PrimoID", typeof(string));

            var param_UltimoIDParameter = param_UltimoID != null
                ? new ObjectParameter("Param_UltimoID", param_UltimoID)
                : new ObjectParameter("Param_UltimoID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PeriodsGetPeriodIDWithNameAndEnding_Result>(
                        "Kompas_PeriodsGetPeriodIDWithNameAndEnding", param_PrimoIDParameter, param_UltimoIDParameter);
        }

        public virtual int Kompas_PickBudgetActivateBudget(string param_Budget, Nullable<bool> param_Activate)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_ActivateParameter = param_Activate.HasValue
                ? new ObjectParameter("Param_Activate", param_Activate)
                : new ObjectParameter("Param_Activate", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PickBudgetActivateBudget",
                param_BudgetParameter, param_ActivateParameter);
        }

        public virtual int Kompas_PickBudgetDeleteBudgetLines(string param_Budget)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PickBudgetDeleteBudgetLines",
                param_BudgetParameter);
        }

        public virtual int Kompas_PickBudgetSaveBudgetSettings(string param_Budget, string param_Name,
            string param_PeriodStart, string param_PeriodEnd, Nullable<bool> param_Activated, string param_Remarks)
        {
            var param_BudgetParameter = param_Budget != null
                ? new ObjectParameter("Param_Budget", param_Budget)
                : new ObjectParameter("Param_Budget", typeof(string));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            var param_PeriodStartParameter = param_PeriodStart != null
                ? new ObjectParameter("Param_PeriodStart", param_PeriodStart)
                : new ObjectParameter("Param_PeriodStart", typeof(string));

            var param_PeriodEndParameter = param_PeriodEnd != null
                ? new ObjectParameter("Param_PeriodEnd", param_PeriodEnd)
                : new ObjectParameter("Param_PeriodEnd", typeof(string));

            var param_ActivatedParameter = param_Activated.HasValue
                ? new ObjectParameter("Param_Activated", param_Activated)
                : new ObjectParameter("Param_Activated", typeof(bool));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PickBudgetSaveBudgetSettings",
                param_BudgetParameter, param_NameParameter, param_PeriodStartParameter, param_PeriodEndParameter,
                param_ActivatedParameter, param_RemarksParameter);
        }

        public virtual int Kompas_PriceListCopyItemPrice(string param_FromPriceList, string param_ToPriceList,
            Nullable<short> param_PriceType, string param_UserID)
        {
            var param_FromPriceListParameter = param_FromPriceList != null
                ? new ObjectParameter("Param_FromPriceList", param_FromPriceList)
                : new ObjectParameter("Param_FromPriceList", typeof(string));

            var param_ToPriceListParameter = param_ToPriceList != null
                ? new ObjectParameter("Param_ToPriceList", param_ToPriceList)
                : new ObjectParameter("Param_ToPriceList", typeof(string));

            var param_PriceTypeParameter = param_PriceType.HasValue
                ? new ObjectParameter("Param_PriceType", param_PriceType)
                : new ObjectParameter("Param_PriceType", typeof(short));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PriceListCopyItemPrice",
                param_FromPriceListParameter, param_ToPriceListParameter, param_PriceTypeParameter,
                param_UserIDParameter);
        }

        public virtual int Kompas_Project_ActualData(string param_Project, Nullable<bool> param_BudgetOnly,
            Nullable<bool> param_IncludeSubProjects)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_BudgetOnlyParameter = param_BudgetOnly.HasValue
                ? new ObjectParameter("Param_BudgetOnly", param_BudgetOnly)
                : new ObjectParameter("Param_BudgetOnly", typeof(bool));

            var param_IncludeSubProjectsParameter = param_IncludeSubProjects.HasValue
                ? new ObjectParameter("Param_IncludeSubProjects", param_IncludeSubProjects)
                : new ObjectParameter("Param_IncludeSubProjects", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_ActualData",
                param_ProjectParameter, param_BudgetOnlyParameter, param_IncludeSubProjectsParameter);
        }

        public virtual int Kompas_Project_AddAll(string param_Project)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_AddAll",
                param_ProjectParameter);
        }

        public virtual ObjectResult<Kompas_Project_Budget_Result> Kompas_Project_Budget(string param_Project,
            Nullable<bool> param_ShowGrouping)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_ShowGroupingParameter = param_ShowGrouping.HasValue
                ? new ObjectParameter("Param_ShowGrouping", param_ShowGrouping)
                : new ObjectParameter("Param_ShowGrouping", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Project_Budget_Result>(
                    "Kompas_Project_Budget", param_ProjectParameter, param_ShowGroupingParameter);
        }

        public virtual int Kompas_Project_Budget_Copy(string param_ProjectTo, string param_ProjectFrom)
        {
            var param_ProjectToParameter = param_ProjectTo != null
                ? new ObjectParameter("Param_ProjectTo", param_ProjectTo)
                : new ObjectParameter("Param_ProjectTo", typeof(string));

            var param_ProjectFromParameter = param_ProjectFrom != null
                ? new ObjectParameter("Param_ProjectFrom", param_ProjectFrom)
                : new ObjectParameter("Param_ProjectFrom", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_Budget_Copy",
                param_ProjectToParameter, param_ProjectFromParameter);
        }

        public virtual int Kompas_Project_ChageProjectOnTransactions(string fromProject, string toProject,
            Nullable<int> recordID)
        {
            var fromProjectParameter = fromProject != null
                ? new ObjectParameter("FromProject", fromProject)
                : new ObjectParameter("FromProject", typeof(string));

            var toProjectParameter = toProject != null
                ? new ObjectParameter("ToProject", toProject)
                : new ObjectParameter("ToProject", typeof(string));

            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Project_ChageProjectOnTransactions", fromProjectParameter, toProjectParameter,
                    recordIDParameter);
        }

        public virtual ObjectResult<Kompas_Project_CostCenterAvance_Result> Kompas_Project_CostCenterAvance(
            string param_Project)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Project_CostCenterAvance_Result>(
                    "Kompas_Project_CostCenterAvance", param_ProjectParameter);
        }

        public virtual int Kompas_Project_CreateProjectLinesFromLines(Nullable<double> param_Trail,
            Nullable<short> param_FromWhere, string param_UserName, string param_OrderNo)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_FromWhereParameter = param_FromWhere.HasValue
                ? new ObjectParameter("Param_FromWhere", param_FromWhere)
                : new ObjectParameter("Param_FromWhere", typeof(short));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Project_CreateProjectLinesFromLines", param_TrailParameter, param_FromWhereParameter,
                    param_UserNameParameter, param_OrderNoParameter);
        }

        public virtual int Kompas_Project_CreateProjectLinesFromTransactions(Nullable<double> param_Trail)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_Project_CreateProjectLinesFromTransactions", param_TrailParameter);
        }

        public virtual int Kompas_Project_De_Activating_Post(Nullable<byte> type, string dataLinkID,
            Nullable<int> dltProjectDeActivate, Nullable<System.DateTime> postDate,
            Nullable<System.DateTime> postingDateFrom, Nullable<System.DateTime> postingDateTo,
            Nullable<bool> blockDeactivatedProjects, Nullable<short> text_language, string current_userid)
        {
            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var dataLinkIDParameter = dataLinkID != null
                ? new ObjectParameter("DataLinkID", dataLinkID)
                : new ObjectParameter("DataLinkID", typeof(string));

            var dltProjectDeActivateParameter = dltProjectDeActivate.HasValue
                ? new ObjectParameter("dltProjectDeActivate", dltProjectDeActivate)
                : new ObjectParameter("dltProjectDeActivate", typeof(int));

            var postDateParameter = postDate.HasValue
                ? new ObjectParameter("PostDate", postDate)
                : new ObjectParameter("PostDate", typeof(System.DateTime));

            var postingDateFromParameter = postingDateFrom.HasValue
                ? new ObjectParameter("PostingDateFrom", postingDateFrom)
                : new ObjectParameter("PostingDateFrom", typeof(System.DateTime));

            var postingDateToParameter = postingDateTo.HasValue
                ? new ObjectParameter("PostingDateTo", postingDateTo)
                : new ObjectParameter("PostingDateTo", typeof(System.DateTime));

            var blockDeactivatedProjectsParameter = blockDeactivatedProjects.HasValue
                ? new ObjectParameter("BlockDeactivatedProjects", blockDeactivatedProjects)
                : new ObjectParameter("BlockDeactivatedProjects", typeof(bool));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_De_Activating_Post",
                typeParameter, dataLinkIDParameter, dltProjectDeActivateParameter, postDateParameter,
                postingDateFromParameter, postingDateToParameter, blockDeactivatedProjectsParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_Project_De_Activating_Select(Nullable<byte> type, string projectFrom, string projectTo,
            string customerFrom, string customerTo, Nullable<System.DateTime> postingDateFrom,
            Nullable<System.DateTime> postingDateTo, string dataLinkID, Nullable<int> dltProjectDeActivate)
        {
            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var projectFromParameter = projectFrom != null
                ? new ObjectParameter("ProjectFrom", projectFrom)
                : new ObjectParameter("ProjectFrom", typeof(string));

            var projectToParameter = projectTo != null
                ? new ObjectParameter("ProjectTo", projectTo)
                : new ObjectParameter("ProjectTo", typeof(string));

            var customerFromParameter = customerFrom != null
                ? new ObjectParameter("CustomerFrom", customerFrom)
                : new ObjectParameter("CustomerFrom", typeof(string));

            var customerToParameter = customerTo != null
                ? new ObjectParameter("CustomerTo", customerTo)
                : new ObjectParameter("CustomerTo", typeof(string));

            var postingDateFromParameter = postingDateFrom.HasValue
                ? new ObjectParameter("PostingDateFrom", postingDateFrom)
                : new ObjectParameter("PostingDateFrom", typeof(System.DateTime));

            var postingDateToParameter = postingDateTo.HasValue
                ? new ObjectParameter("PostingDateTo", postingDateTo)
                : new ObjectParameter("PostingDateTo", typeof(System.DateTime));

            var dataLinkIDParameter = dataLinkID != null
                ? new ObjectParameter("DataLinkID", dataLinkID)
                : new ObjectParameter("DataLinkID", typeof(string));

            var dltProjectDeActivateParameter = dltProjectDeActivate.HasValue
                ? new ObjectParameter("dltProjectDeActivate", dltProjectDeActivate)
                : new ObjectParameter("dltProjectDeActivate", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_De_Activating_Select",
                typeParameter, projectFromParameter, projectToParameter, customerFromParameter, customerToParameter,
                postingDateFromParameter, postingDateToParameter, dataLinkIDParameter, dltProjectDeActivateParameter);
        }

        public virtual int Kompas_Project_Make_ProjectLine(string param_project, Nullable<decimal> param_RecordID)
        {
            var param_projectParameter = param_project != null
                ? new ObjectParameter("Param_project", param_project)
                : new ObjectParameter("Param_project", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(decimal));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_Make_ProjectLine",
                param_projectParameter, param_RecordIDParameter);
        }

        public virtual int Kompas_Project_OpenCloseProjectLines(Nullable<int> param_RecordID,
            Nullable<byte> param_Option, Nullable<System.DateTime> param_CurrentDate)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OptionParameter = param_Option.HasValue
                ? new ObjectParameter("Param_Option", param_Option)
                : new ObjectParameter("Param_Option", typeof(byte));

            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_OpenCloseProjectLines",
                param_RecordIDParameter, param_OptionParameter, param_CurrentDateParameter);
        }

        public virtual int Kompas_Project_Statistics(Nullable<int> param_Type, string param_Level1, string param_Level2,
            string param_Level3, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            string param_FromProject, string param_ToProject, string param_FromEmployee, string param_ToEmployee,
            Nullable<bool> param_SumLevel1, Nullable<bool> param_SumLevel2, Nullable<bool> param_SumLevel3,
            Nullable<short> param_SumType, Nullable<bool> param_ShowName1, Nullable<bool> param_ShowName2,
            Nullable<bool> param_ShowName3)
        {
            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(int));

            var param_Level1Parameter = param_Level1 != null
                ? new ObjectParameter("Param_Level1", param_Level1)
                : new ObjectParameter("Param_Level1", typeof(string));

            var param_Level2Parameter = param_Level2 != null
                ? new ObjectParameter("Param_Level2", param_Level2)
                : new ObjectParameter("Param_Level2", typeof(string));

            var param_Level3Parameter = param_Level3 != null
                ? new ObjectParameter("Param_Level3", param_Level3)
                : new ObjectParameter("Param_Level3", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FromProjectParameter = param_FromProject != null
                ? new ObjectParameter("Param_FromProject", param_FromProject)
                : new ObjectParameter("Param_FromProject", typeof(string));

            var param_ToProjectParameter = param_ToProject != null
                ? new ObjectParameter("Param_ToProject", param_ToProject)
                : new ObjectParameter("Param_ToProject", typeof(string));

            var param_FromEmployeeParameter = param_FromEmployee != null
                ? new ObjectParameter("Param_FromEmployee", param_FromEmployee)
                : new ObjectParameter("Param_FromEmployee", typeof(string));

            var param_ToEmployeeParameter = param_ToEmployee != null
                ? new ObjectParameter("Param_ToEmployee", param_ToEmployee)
                : new ObjectParameter("Param_ToEmployee", typeof(string));

            var param_SumLevel1Parameter = param_SumLevel1.HasValue
                ? new ObjectParameter("Param_SumLevel1", param_SumLevel1)
                : new ObjectParameter("Param_SumLevel1", typeof(bool));

            var param_SumLevel2Parameter = param_SumLevel2.HasValue
                ? new ObjectParameter("Param_SumLevel2", param_SumLevel2)
                : new ObjectParameter("Param_SumLevel2", typeof(bool));

            var param_SumLevel3Parameter = param_SumLevel3.HasValue
                ? new ObjectParameter("Param_SumLevel3", param_SumLevel3)
                : new ObjectParameter("Param_SumLevel3", typeof(bool));

            var param_SumTypeParameter = param_SumType.HasValue
                ? new ObjectParameter("Param_SumType", param_SumType)
                : new ObjectParameter("Param_SumType", typeof(short));

            var param_ShowName1Parameter = param_ShowName1.HasValue
                ? new ObjectParameter("Param_ShowName1", param_ShowName1)
                : new ObjectParameter("Param_ShowName1", typeof(bool));

            var param_ShowName2Parameter = param_ShowName2.HasValue
                ? new ObjectParameter("Param_ShowName2", param_ShowName2)
                : new ObjectParameter("Param_ShowName2", typeof(bool));

            var param_ShowName3Parameter = param_ShowName3.HasValue
                ? new ObjectParameter("Param_ShowName3", param_ShowName3)
                : new ObjectParameter("Param_ShowName3", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Project_Statistics",
                param_TypeParameter, param_Level1Parameter, param_Level2Parameter, param_Level3Parameter,
                param_FromDateParameter, param_ToDateParameter, param_FromProjectParameter, param_ToProjectParameter,
                param_FromEmployeeParameter, param_ToEmployeeParameter, param_SumLevel1Parameter,
                param_SumLevel2Parameter, param_SumLevel3Parameter, param_SumTypeParameter, param_ShowName1Parameter,
                param_ShowName2Parameter, param_ShowName3Parameter);
        }

        public virtual int Kompas_ProjectActivating_Post_Sum(string original_Project, string source, string voucher,
            Nullable<System.DateTime> postDate, Nullable<System.DateTime> postingDateFrom,
            Nullable<System.DateTime> postingDateTo, Nullable<short> text_language, string current_userid)
        {
            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var postDateParameter = postDate.HasValue
                ? new ObjectParameter("PostDate", postDate)
                : new ObjectParameter("PostDate", typeof(System.DateTime));

            var postingDateFromParameter = postingDateFrom.HasValue
                ? new ObjectParameter("PostingDateFrom", postingDateFrom)
                : new ObjectParameter("PostingDateFrom", typeof(System.DateTime));

            var postingDateToParameter = postingDateTo.HasValue
                ? new ObjectParameter("PostingDateTo", postingDateTo)
                : new ObjectParameter("PostingDateTo", typeof(System.DateTime));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectActivating_Post_Sum",
                original_ProjectParameter, sourceParameter, voucherParameter, postDateParameter,
                postingDateFromParameter, postingDateToParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_ProjectCalculation_CopyToBudget(string param_Project, Nullable<int> param_RecordID)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectCalculation_CopyToBudget", param_ProjectParameter, param_RecordIDParameter);
        }

        public virtual int Kompas_ProjectCalculation_Delete(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectCalculation_Delete",
                recordIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_ProjectCalculation_MakeCopy(string param_Project,
            Nullable<int> param_RecordID, string param_NewName)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_NewNameParameter = param_NewName != null
                ? new ObjectParameter("Param_NewName", param_NewName)
                : new ObjectParameter("Param_NewName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_ProjectCalculation_MakeCopy", param_ProjectParameter, param_RecordIDParameter,
                    param_NewNameParameter);
        }

        public virtual int Kompas_ProjectCalculationLines_AddAll(string param_Project, string param_CalculationName)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CalculationNameParameter = param_CalculationName != null
                ? new ObjectParameter("Param_CalculationName", param_CalculationName)
                : new ObjectParameter("Param_CalculationName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectCalculationLines_AddAll", param_ProjectParameter, param_CalculationNameParameter);
        }

        public virtual int Kompas_ProjectCalulationines_CalcDelLines(string param_Project, string param_Name)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_ProjectCalulationines_CalcDelLines", param_ProjectParameter, param_NameParameter);
        }

        public virtual int Kompas_ProjectCostCenterAvance_AddAll(string param_Project)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectCostCenterAvance_AddAll", param_ProjectParameter);
        }

        public virtual int Kompas_ProjectDeActivating_Post_Sum(string original_Project, string source, string voucher,
            Nullable<System.DateTime> postDate, Nullable<bool> blockDeactivatedProjects, Nullable<short> text_language,
            string current_userid)
        {
            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var postDateParameter = postDate.HasValue
                ? new ObjectParameter("PostDate", postDate)
                : new ObjectParameter("PostDate", typeof(System.DateTime));

            var blockDeactivatedProjectsParameter = blockDeactivatedProjects.HasValue
                ? new ObjectParameter("BlockDeactivatedProjects", blockDeactivatedProjects)
                : new ObjectParameter("BlockDeactivatedProjects", typeof(bool));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectDeActivating_Post_Sum",
                original_ProjectParameter, sourceParameter, voucherParameter, postDateParameter,
                blockDeactivatedProjectsParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_ProjectDeleteClosed_CreateLinkInfo(string param_ProjectFrom, string param_ProjectTo,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate, string param_DataLinkID,
            Nullable<int> param_dltProjectDeleteClosed)
        {
            var param_ProjectFromParameter = param_ProjectFrom != null
                ? new ObjectParameter("Param_ProjectFrom", param_ProjectFrom)
                : new ObjectParameter("Param_ProjectFrom", typeof(string));

            var param_ProjectToParameter = param_ProjectTo != null
                ? new ObjectParameter("Param_ProjectTo", param_ProjectTo)
                : new ObjectParameter("Param_ProjectTo", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltProjectDeleteClosedParameter = param_dltProjectDeleteClosed.HasValue
                ? new ObjectParameter("Param_dltProjectDeleteClosed", param_dltProjectDeleteClosed)
                : new ObjectParameter("Param_dltProjectDeleteClosed", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_ProjectDeleteClosed_CreateLinkInfo", param_ProjectFromParameter, param_ProjectToParameter,
                    param_FromDateParameter, param_ToDateParameter, param_DataLinkIDParameter,
                    param_dltProjectDeleteClosedParameter);
        }

        public virtual int Kompas_ProjectDeleteClosed_Delete(string param_DataLinkID,
            Nullable<int> param_dltProjectDeleteClosed)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltProjectDeleteClosedParameter = param_dltProjectDeleteClosed.HasValue
                ? new ObjectParameter("Param_dltProjectDeleteClosed", param_dltProjectDeleteClosed)
                : new ObjectParameter("Param_dltProjectDeleteClosed", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectDeleteClosed_Delete",
                param_DataLinkIDParameter, param_dltProjectDeleteClosedParameter);
        }

        public virtual int Kompas_ProjectInvoice_CreateData(Nullable<short> type, string project, string host,
            Nullable<bool> sumItem, Nullable<bool> sumService, Nullable<double> acountAmount, Nullable<int> sortNo)
        {
            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var sumItemParameter = sumItem.HasValue
                ? new ObjectParameter("SumItem", sumItem)
                : new ObjectParameter("SumItem", typeof(bool));

            var sumServiceParameter = sumService.HasValue
                ? new ObjectParameter("SumService", sumService)
                : new ObjectParameter("SumService", typeof(bool));

            var acountAmountParameter = acountAmount.HasValue
                ? new ObjectParameter("AcountAmount", acountAmount)
                : new ObjectParameter("AcountAmount", typeof(double));

            var sortNoParameter = sortNo.HasValue
                ? new ObjectParameter("SortNo", sortNo)
                : new ObjectParameter("SortNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectInvoice_CreateData",
                typeParameter, projectParameter, hostParameter, sumItemParameter, sumServiceParameter,
                acountAmountParameter, sortNoParameter);
        }

        public virtual int Kompas_ProjectInvoice_CreateLines(string param_Host, Nullable<int> param_dltProjectLines,
            string param_Project)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_dltProjectLinesParameter = param_dltProjectLines.HasValue
                ? new ObjectParameter("Param_dltProjectLines", param_dltProjectLines)
                : new ObjectParameter("Param_dltProjectLines", typeof(int));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectInvoice_CreateLines",
                param_HostParameter, param_dltProjectLinesParameter, param_ProjectParameter);
        }

        public virtual ObjectResult<Kompas_ProjectInvoice_CreateNewOrder_Result> Kompas_ProjectInvoice_CreateNewOrder(
            string project, Nullable<short> text_language, string current_userid)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_ProjectInvoice_CreateNewOrder_Result>(
                        "Kompas_ProjectInvoice_CreateNewOrder", projectParameter, text_languageParameter,
                        current_useridParameter);
        }

        public virtual int Kompas_ProjectInvoice_GetArchiveLines(string host, string project, Nullable<double> trail,
            Nullable<bool> isCreditnota)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var isCreditnotaParameter = isCreditnota.HasValue
                ? new ObjectParameter("IsCreditnota", isCreditnota)
                : new ObjectParameter("IsCreditnota", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectInvoice_GetArchiveLines", hostParameter, projectParameter, trailParameter,
                isCreditnotaParameter);
        }

        public virtual ObjectResult<Kompas_ProjectInvoice_GetData_Result> Kompas_ProjectInvoice_GetData(string host)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_ProjectInvoice_GetData_Result>(
                    "Kompas_ProjectInvoice_GetData", hostParameter);
        }

        public virtual int Kompas_ProjectInvoice_InsertLine(string project, string host, Nullable<int> lineNo)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectInvoice_InsertLine",
                projectParameter, hostParameter, lineNoParameter);
        }

        public virtual ObjectResult<Kompas_ProjectInvoiceCreateOrder_Result> Kompas_ProjectInvoiceCreateOrder(
            string project, Nullable<short> type, string remarks, string internalRemarks, string host,
            Nullable<short> text_language, string current_userid)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_ProjectInvoiceCreateOrder_Result>(
                    "Kompas_ProjectInvoiceCreateOrder", projectParameter, typeParameter, remarksParameter,
                    internalRemarksParameter, hostParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_ProjectInvoiceCreateOrderLines(string project, Nullable<short> type, string orderNo,
            string host, Nullable<short> text_language, string current_userid)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectInvoiceCreateOrderLines", projectParameter, typeParameter, orderNoParameter,
                hostParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_ProjectLines_CloseSelectedLines(string param_Host, Nullable<int> param_dltProjectLines,
            string param_OrderNo, Nullable<System.DateTime> param_CurrentDate)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_dltProjectLinesParameter = param_dltProjectLines.HasValue
                ? new ObjectParameter("Param_dltProjectLines", param_dltProjectLines)
                : new ObjectParameter("Param_dltProjectLines", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_ProjectLines_CloseSelectedLines", param_HostParameter, param_dltProjectLinesParameter,
                param_OrderNoParameter, param_CurrentDateParameter);
        }

        public virtual ObjectResult<string> Kompas_ProjectLines_CreateInvoiceRamarks(string param_Host,
            Nullable<int> param_dltProjectLines, Nullable<bool> param_SortItem, Nullable<bool> param_SortEmployee,
            Nullable<bool> param_SortCostCenter, Nullable<bool> param_SortAccount)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_dltProjectLinesParameter = param_dltProjectLines.HasValue
                ? new ObjectParameter("Param_dltProjectLines", param_dltProjectLines)
                : new ObjectParameter("Param_dltProjectLines", typeof(int));

            var param_SortItemParameter = param_SortItem.HasValue
                ? new ObjectParameter("Param_SortItem", param_SortItem)
                : new ObjectParameter("Param_SortItem", typeof(bool));

            var param_SortEmployeeParameter = param_SortEmployee.HasValue
                ? new ObjectParameter("Param_SortEmployee", param_SortEmployee)
                : new ObjectParameter("Param_SortEmployee", typeof(bool));

            var param_SortCostCenterParameter = param_SortCostCenter.HasValue
                ? new ObjectParameter("Param_SortCostCenter", param_SortCostCenter)
                : new ObjectParameter("Param_SortCostCenter", typeof(bool));

            var param_SortAccountParameter = param_SortAccount.HasValue
                ? new ObjectParameter("Param_SortAccount", param_SortAccount)
                : new ObjectParameter("Param_SortAccount", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_ProjectLines_CreateInvoiceRamarks", param_HostParameter, param_dltProjectLinesParameter,
                    param_SortItemParameter, param_SortEmployeeParameter, param_SortCostCenterParameter,
                    param_SortAccountParameter);
        }

        public virtual ObjectResult<Kompas_ProjectLines_ProjectAcontoInvoice_Result>
            Kompas_ProjectLines_ProjectAcontoInvoice(string param_Project)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_ProjectLines_ProjectAcontoInvoice_Result>(
                        "Kompas_ProjectLines_ProjectAcontoInvoice", param_ProjectParameter);
        }

        public virtual ObjectResult<Kompas_ProjectLines_ProjectMoreSaleInvoice_Result>
            Kompas_ProjectLines_ProjectMoreSaleInvoice(string param_Project)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_ProjectLines_ProjectMoreSaleInvoice_Result>(
                        "Kompas_ProjectLines_ProjectMoreSaleInvoice", param_ProjectParameter);
        }

        public virtual ObjectResult<Kompas_ProjectLines_SumSelectedLines_Result> Kompas_ProjectLines_SumSelectedLines(
            string param_Host, Nullable<int> param_dltProjectLines)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_dltProjectLinesParameter = param_dltProjectLines.HasValue
                ? new ObjectParameter("Param_dltProjectLines", param_dltProjectLines)
                : new ObjectParameter("Param_dltProjectLines", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_ProjectLines_SumSelectedLines_Result>(
                        "Kompas_ProjectLines_SumSelectedLines", param_HostParameter, param_dltProjectLinesParameter);
        }

        public virtual int Kompas_ProjectLines_UpdateSalesPriceWithAvance(string project)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_ProjectLines_UpdateSalesPriceWithAvance", projectParameter);
        }

        public virtual int Kompas_ProjectSubProject_Add(string mainProject, string subProject)
        {
            var mainProjectParameter = mainProject != null
                ? new ObjectParameter("MainProject", mainProject)
                : new ObjectParameter("MainProject", typeof(string));

            var subProjectParameter = subProject != null
                ? new ObjectParameter("SubProject", subProject)
                : new ObjectParameter("SubProject", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ProjectSubProject_Add",
                mainProjectParameter, subProjectParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_ProjectZoomLines(string param_Project, string param_CostCenter,
            Nullable<bool> param_UseCostCenter)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                "Kompas_ProjectZoomLines", param_ProjectParameter, param_CostCenterParameter,
                param_UseCostCenterParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> Kompas_ProjectZoomProjectLines(string param_Project,
            string param_CostCenter, Nullable<bool> param_UseCostCenter, Nullable<short> param_Invoiced)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            var param_InvoicedParameter = param_Invoiced.HasValue
                ? new ObjectParameter("Param_Invoiced", param_Invoiced)
                : new ObjectParameter("Param_Invoiced", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<decimal>>(
                    "Kompas_ProjectZoomProjectLines", param_ProjectParameter, param_CostCenterParameter,
                    param_UseCostCenterParameter, param_InvoicedParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_ProjectZoomTransactions(string param_Project,
            string param_CostCenter, Nullable<bool> param_UseCostCenter)
        {
            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_UseCostCenterParameter = param_UseCostCenter.HasValue
                ? new ObjectParameter("Param_UseCostCenter", param_UseCostCenter)
                : new ObjectParameter("Param_UseCostCenter", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_ProjectZoomTransactions", param_ProjectParameter, param_CostCenterParameter,
                    param_UseCostCenterParameter);
        }

        public virtual int Kompas_PurchaseArchive_AfterPrint(Nullable<System.Guid> gUID_Print,
            Nullable<bool> isBefore_Print, string userName, string printInfo, string formula, string fixedCriteria,
            string userSelection)
        {
            var gUID_PrintParameter = gUID_Print.HasValue
                ? new ObjectParameter("GUID_Print", gUID_Print)
                : new ObjectParameter("GUID_Print", typeof(System.Guid));

            var isBefore_PrintParameter = isBefore_Print.HasValue
                ? new ObjectParameter("IsBefore_Print", isBefore_Print)
                : new ObjectParameter("IsBefore_Print", typeof(bool));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var printInfoParameter = printInfo != null
                ? new ObjectParameter("PrintInfo", printInfo)
                : new ObjectParameter("PrintInfo", typeof(string));

            var formulaParameter = formula != null
                ? new ObjectParameter("Formula", formula)
                : new ObjectParameter("Formula", typeof(string));

            var fixedCriteriaParameter = fixedCriteria != null
                ? new ObjectParameter("FixedCriteria", fixedCriteria)
                : new ObjectParameter("FixedCriteria", typeof(string));

            var userSelectionParameter = userSelection != null
                ? new ObjectParameter("UserSelection", userSelection)
                : new ObjectParameter("UserSelection", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseArchive_AfterPrint",
                gUID_PrintParameter, isBefore_PrintParameter, userNameParameter, printInfoParameter, formulaParameter,
                fixedCriteriaParameter, userSelectionParameter);
        }

        public virtual int Kompas_PurchaseLines_CompressLines(string purchaseNo)
        {
            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseLines_CompressLines",
                purchaseNoParameter);
        }

        public virtual ObjectResult<Nullable<int>> Kompas_PurchaseLineSplitLine(Nullable<int> recordID,
            Nullable<double> quantity, string batchNo)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "Kompas_PurchaseLineSplitLine", recordIDParameter, quantityParameter, batchNoParameter);
        }

        public virtual int Kompas_PurchaseOrderedLines(string param_PurchaseNo, Nullable<short> param_Faktor)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_FaktorParameter = param_Faktor.HasValue
                ? new ObjectParameter("Param_Faktor", param_Faktor)
                : new ObjectParameter("Param_Faktor", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseOrderedLines",
                param_PurchaseNoParameter, param_FaktorParameter);
        }

        public virtual int Kompas_PurchaseReceiptPostLines(string param_PurchaseNo, string param_UserName,
            Nullable<bool> param_Invoice)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_InvoiceParameter = param_Invoice.HasValue
                ? new ObjectParameter("Param_Invoice", param_Invoice)
                : new ObjectParameter("Param_Invoice", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseReceiptPostLines",
                param_PurchaseNoParameter, param_UserNameParameter, param_InvoiceParameter);
        }

        public virtual int Kompas_Purchases_AddCopy(string param_FromPurchaseNo, Nullable<double> param_FromTrail,
            string param_ToPurchaseNo, string param_UserID, Nullable<bool> param_AsCreditNota)
        {
            var param_FromPurchaseNoParameter = param_FromPurchaseNo != null
                ? new ObjectParameter("Param_FromPurchaseNo", param_FromPurchaseNo)
                : new ObjectParameter("Param_FromPurchaseNo", typeof(string));

            var param_FromTrailParameter = param_FromTrail.HasValue
                ? new ObjectParameter("Param_FromTrail", param_FromTrail)
                : new ObjectParameter("Param_FromTrail", typeof(double));

            var param_ToPurchaseNoParameter = param_ToPurchaseNo != null
                ? new ObjectParameter("Param_ToPurchaseNo", param_ToPurchaseNo)
                : new ObjectParameter("Param_ToPurchaseNo", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_AsCreditNotaParameter = param_AsCreditNota.HasValue
                ? new ObjectParameter("Param_AsCreditNota", param_AsCreditNota)
                : new ObjectParameter("Param_AsCreditNota", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_AddCopy",
                param_FromPurchaseNoParameter, param_FromTrailParameter, param_ToPurchaseNoParameter,
                param_UserIDParameter, param_AsCreditNotaParameter);
        }

        public virtual int Kompas_Purchases_AddNew(string param_PurchaseNo, string param_Supplier, string param_UserID,
            string param_ShipCustomer, string param_Ship1, string param_Ship2, string param_Ship3,
            string param_ShipCityName, string param_ShipPostalCode, string param_Ship5, string param_Ship6,
            string param_Ship7, string param_Warehouse, string param_PriceList, string param_Buyer,
            string param_Department, string param_CostCenter, string param_Purpose, string param_Project,
            string param_Status, string param_Remarks, string param_InternalRemarks, string param_InvoiceNo,
            Nullable<System.DateTime> param_InvoiceDate, Nullable<System.DateTime> param_DeliveryDate,
            string param_RecvNo, string param_PurchaseText, Nullable<System.DateTime> param_PurchaseDate,
            Nullable<short> param_DeliveryWeek, string param_OptionalText1, string param_OptionalText2,
            string param_OptionalText3, string param_OptionalText4, string param_OptionalText5,
            string param_OptionalText6, string param_OptionalText7, string param_OptionalText8,
            Nullable<double> param_OptionalNumber1, Nullable<double> param_OptionalNumber2,
            Nullable<double> param_OptionalNumber3, Nullable<double> param_OptionalNumber4,
            Nullable<double> param_OptionalNumber5, Nullable<double> param_OptionalNumber6,
            Nullable<double> param_OptionalNumber7, Nullable<double> param_OptionalNumber8,
            Nullable<short> param_Optional1, Nullable<short> param_Optional2, Nullable<short> param_Optional3,
            Nullable<short> param_Optional4, Nullable<short> param_Optional5, Nullable<short> param_Optional6,
            Nullable<short> param_Optional7, Nullable<short> param_Optional8, string param_CashDiscount,
            Nullable<short> param_EECCountry, Nullable<byte> param_EECTransCode)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_ShipCustomerParameter = param_ShipCustomer != null
                ? new ObjectParameter("Param_ShipCustomer", param_ShipCustomer)
                : new ObjectParameter("Param_ShipCustomer", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_ShipCityNameParameter = param_ShipCityName != null
                ? new ObjectParameter("Param_ShipCityName", param_ShipCityName)
                : new ObjectParameter("Param_ShipCityName", typeof(string));

            var param_ShipPostalCodeParameter = param_ShipPostalCode != null
                ? new ObjectParameter("Param_ShipPostalCode", param_ShipPostalCode)
                : new ObjectParameter("Param_ShipPostalCode", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_Ship6Parameter = param_Ship6 != null
                ? new ObjectParameter("Param_Ship6", param_Ship6)
                : new ObjectParameter("Param_Ship6", typeof(string));

            var param_Ship7Parameter = param_Ship7 != null
                ? new ObjectParameter("Param_Ship7", param_Ship7)
                : new ObjectParameter("Param_Ship7", typeof(string));

            var param_WarehouseParameter = param_Warehouse != null
                ? new ObjectParameter("Param_Warehouse", param_Warehouse)
                : new ObjectParameter("Param_Warehouse", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_BuyerParameter = param_Buyer != null
                ? new ObjectParameter("Param_Buyer", param_Buyer)
                : new ObjectParameter("Param_Buyer", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_StatusParameter = param_Status != null
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_InternalRemarksParameter = param_InternalRemarks != null
                ? new ObjectParameter("Param_InternalRemarks", param_InternalRemarks)
                : new ObjectParameter("Param_InternalRemarks", typeof(string));

            var param_InvoiceNoParameter = param_InvoiceNo != null
                ? new ObjectParameter("Param_InvoiceNo", param_InvoiceNo)
                : new ObjectParameter("Param_InvoiceNo", typeof(string));

            var param_InvoiceDateParameter = param_InvoiceDate.HasValue
                ? new ObjectParameter("Param_InvoiceDate", param_InvoiceDate)
                : new ObjectParameter("Param_InvoiceDate", typeof(System.DateTime));

            var param_DeliveryDateParameter = param_DeliveryDate.HasValue
                ? new ObjectParameter("Param_DeliveryDate", param_DeliveryDate)
                : new ObjectParameter("Param_DeliveryDate", typeof(System.DateTime));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_PurchaseTextParameter = param_PurchaseText != null
                ? new ObjectParameter("Param_PurchaseText", param_PurchaseText)
                : new ObjectParameter("Param_PurchaseText", typeof(string));

            var param_PurchaseDateParameter = param_PurchaseDate.HasValue
                ? new ObjectParameter("Param_PurchaseDate", param_PurchaseDate)
                : new ObjectParameter("Param_PurchaseDate", typeof(System.DateTime));

            var param_DeliveryWeekParameter = param_DeliveryWeek.HasValue
                ? new ObjectParameter("Param_DeliveryWeek", param_DeliveryWeek)
                : new ObjectParameter("Param_DeliveryWeek", typeof(short));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_OptionalNumber3Parameter = param_OptionalNumber3.HasValue
                ? new ObjectParameter("Param_OptionalNumber3", param_OptionalNumber3)
                : new ObjectParameter("Param_OptionalNumber3", typeof(double));

            var param_OptionalNumber4Parameter = param_OptionalNumber4.HasValue
                ? new ObjectParameter("Param_OptionalNumber4", param_OptionalNumber4)
                : new ObjectParameter("Param_OptionalNumber4", typeof(double));

            var param_OptionalNumber5Parameter = param_OptionalNumber5.HasValue
                ? new ObjectParameter("Param_OptionalNumber5", param_OptionalNumber5)
                : new ObjectParameter("Param_OptionalNumber5", typeof(double));

            var param_OptionalNumber6Parameter = param_OptionalNumber6.HasValue
                ? new ObjectParameter("Param_OptionalNumber6", param_OptionalNumber6)
                : new ObjectParameter("Param_OptionalNumber6", typeof(double));

            var param_OptionalNumber7Parameter = param_OptionalNumber7.HasValue
                ? new ObjectParameter("Param_OptionalNumber7", param_OptionalNumber7)
                : new ObjectParameter("Param_OptionalNumber7", typeof(double));

            var param_OptionalNumber8Parameter = param_OptionalNumber8.HasValue
                ? new ObjectParameter("Param_OptionalNumber8", param_OptionalNumber8)
                : new ObjectParameter("Param_OptionalNumber8", typeof(double));

            var param_Optional1Parameter = param_Optional1.HasValue
                ? new ObjectParameter("Param_Optional1", param_Optional1)
                : new ObjectParameter("Param_Optional1", typeof(short));

            var param_Optional2Parameter = param_Optional2.HasValue
                ? new ObjectParameter("Param_Optional2", param_Optional2)
                : new ObjectParameter("Param_Optional2", typeof(short));

            var param_Optional3Parameter = param_Optional3.HasValue
                ? new ObjectParameter("Param_Optional3", param_Optional3)
                : new ObjectParameter("Param_Optional3", typeof(short));

            var param_Optional4Parameter = param_Optional4.HasValue
                ? new ObjectParameter("Param_Optional4", param_Optional4)
                : new ObjectParameter("Param_Optional4", typeof(short));

            var param_Optional5Parameter = param_Optional5.HasValue
                ? new ObjectParameter("Param_Optional5", param_Optional5)
                : new ObjectParameter("Param_Optional5", typeof(short));

            var param_Optional6Parameter = param_Optional6.HasValue
                ? new ObjectParameter("Param_Optional6", param_Optional6)
                : new ObjectParameter("Param_Optional6", typeof(short));

            var param_Optional7Parameter = param_Optional7.HasValue
                ? new ObjectParameter("Param_Optional7", param_Optional7)
                : new ObjectParameter("Param_Optional7", typeof(short));

            var param_Optional8Parameter = param_Optional8.HasValue
                ? new ObjectParameter("Param_Optional8", param_Optional8)
                : new ObjectParameter("Param_Optional8", typeof(short));

            var param_CashDiscountParameter = param_CashDiscount != null
                ? new ObjectParameter("Param_CashDiscount", param_CashDiscount)
                : new ObjectParameter("Param_CashDiscount", typeof(string));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            var param_EECTransCodeParameter = param_EECTransCode.HasValue
                ? new ObjectParameter("Param_EECTransCode", param_EECTransCode)
                : new ObjectParameter("Param_EECTransCode", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_AddNew",
                param_PurchaseNoParameter, param_SupplierParameter, param_UserIDParameter, param_ShipCustomerParameter,
                param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter, param_ShipCityNameParameter,
                param_ShipPostalCodeParameter, param_Ship5Parameter, param_Ship6Parameter, param_Ship7Parameter,
                param_WarehouseParameter, param_PriceListParameter, param_BuyerParameter, param_DepartmentParameter,
                param_CostCenterParameter, param_PurposeParameter, param_ProjectParameter, param_StatusParameter,
                param_RemarksParameter, param_InternalRemarksParameter, param_InvoiceNoParameter,
                param_InvoiceDateParameter, param_DeliveryDateParameter, param_RecvNoParameter,
                param_PurchaseTextParameter, param_PurchaseDateParameter, param_DeliveryWeekParameter,
                param_OptionalText1Parameter, param_OptionalText2Parameter, param_OptionalText3Parameter,
                param_OptionalText4Parameter, param_OptionalText5Parameter, param_OptionalText6Parameter,
                param_OptionalText7Parameter, param_OptionalText8Parameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_OptionalNumber3Parameter, param_OptionalNumber4Parameter,
                param_OptionalNumber5Parameter, param_OptionalNumber6Parameter, param_OptionalNumber7Parameter,
                param_OptionalNumber8Parameter, param_Optional1Parameter, param_Optional2Parameter,
                param_Optional3Parameter, param_Optional4Parameter, param_Optional5Parameter, param_Optional6Parameter,
                param_Optional7Parameter, param_Optional8Parameter, param_CashDiscountParameter,
                param_EECCountryParameter, param_EECTransCodeParameter);
        }

        public virtual int Kompas_Purchases_Check(string param_PurchaseNo, Nullable<bool> param_BookBySupplierGroup,
            string param_UserName)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_BookBySupplierGroupParameter = param_BookBySupplierGroup.HasValue
                ? new ObjectParameter("Param_BookBySupplierGroup", param_BookBySupplierGroup)
                : new ObjectParameter("Param_BookBySupplierGroup", typeof(bool));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_Check",
                param_PurchaseNoParameter, param_BookBySupplierGroupParameter, param_UserNameParameter);
        }

        public virtual int Kompas_Purchases_CopyLines(Nullable<double> fromTrail, string toPurchaseNo,
            Nullable<short> text_language, string current_userid)
        {
            var fromTrailParameter = fromTrail.HasValue
                ? new ObjectParameter("FromTrail", fromTrail)
                : new ObjectParameter("FromTrail", typeof(double));

            var toPurchaseNoParameter = toPurchaseNo != null
                ? new ObjectParameter("ToPurchaseNo", toPurchaseNo)
                : new ObjectParameter("ToPurchaseNo", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_CopyLines",
                fromTrailParameter, toPurchaseNoParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_Purchases_Delete(string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_Delete",
                param_PurchaseNoParameter);
        }

        public virtual ObjectResult<Kompas_Purchases_GetSplitOrderDeliveredLines_Result>
            Kompas_Purchases_GetSplitOrderDeliveredLines(string param_PurchaseNo, string param_Supplier,
                string param_FromStatus, string param_ToStatus, string param_FromPurchaseNo, string param_ToPurchaseNo,
                Nullable<short> param_Sort)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromStatusParameter = param_FromStatus != null
                ? new ObjectParameter("Param_FromStatus", param_FromStatus)
                : new ObjectParameter("Param_FromStatus", typeof(string));

            var param_ToStatusParameter = param_ToStatus != null
                ? new ObjectParameter("Param_ToStatus", param_ToStatus)
                : new ObjectParameter("Param_ToStatus", typeof(string));

            var param_FromPurchaseNoParameter = param_FromPurchaseNo != null
                ? new ObjectParameter("Param_FromPurchaseNo", param_FromPurchaseNo)
                : new ObjectParameter("Param_FromPurchaseNo", typeof(string));

            var param_ToPurchaseNoParameter = param_ToPurchaseNo != null
                ? new ObjectParameter("Param_ToPurchaseNo", param_ToPurchaseNo)
                : new ObjectParameter("Param_ToPurchaseNo", typeof(string));

            var param_SortParameter = param_Sort.HasValue
                ? new ObjectParameter("Param_Sort", param_Sort)
                : new ObjectParameter("Param_Sort", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_Purchases_GetSplitOrderDeliveredLines_Result>(
                        "Kompas_Purchases_GetSplitOrderDeliveredLines", param_PurchaseNoParameter,
                        param_SupplierParameter, param_FromStatusParameter, param_ToStatusParameter,
                        param_FromPurchaseNoParameter, param_ToPurchaseNoParameter, param_SortParameter);
        }

        public virtual int Kompas_Purchases_GetSplitOrderLines(string param_PurchaseNo, string param_Supplier,
            string param_FromStatus, string param_ToStatus, string param_FromPurchaseNo, string param_ToPurchaseNo,
            Nullable<short> param_Sort, Nullable<short> param_FillType)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromStatusParameter = param_FromStatus != null
                ? new ObjectParameter("Param_FromStatus", param_FromStatus)
                : new ObjectParameter("Param_FromStatus", typeof(string));

            var param_ToStatusParameter = param_ToStatus != null
                ? new ObjectParameter("Param_ToStatus", param_ToStatus)
                : new ObjectParameter("Param_ToStatus", typeof(string));

            var param_FromPurchaseNoParameter = param_FromPurchaseNo != null
                ? new ObjectParameter("Param_FromPurchaseNo", param_FromPurchaseNo)
                : new ObjectParameter("Param_FromPurchaseNo", typeof(string));

            var param_ToPurchaseNoParameter = param_ToPurchaseNo != null
                ? new ObjectParameter("Param_ToPurchaseNo", param_ToPurchaseNo)
                : new ObjectParameter("Param_ToPurchaseNo", typeof(string));

            var param_SortParameter = param_Sort.HasValue
                ? new ObjectParameter("Param_Sort", param_Sort)
                : new ObjectParameter("Param_Sort", typeof(short));

            var param_FillTypeParameter = param_FillType.HasValue
                ? new ObjectParameter("Param_FillType", param_FillType)
                : new ObjectParameter("Param_FillType", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_GetSplitOrderLines",
                param_PurchaseNoParameter, param_SupplierParameter, param_FromStatusParameter, param_ToStatusParameter,
                param_FromPurchaseNoParameter, param_ToPurchaseNoParameter, param_SortParameter, param_FillTypeParameter);
        }

        public virtual int Kompas_Purchases_Post(string param_PurchaseNo, string param_UserName,
            Nullable<System.DateTime> param_PostDate, Nullable<short> param_Language,
            Nullable<bool> param_AllwaysUseDataOnOrder, Nullable<bool> param_UpdatePrices, string param_Description,
            string param_CashInvoiceAccount, Nullable<bool> param_UpdateCostPrices)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            var param_AllwaysUseDataOnOrderParameter = param_AllwaysUseDataOnOrder.HasValue
                ? new ObjectParameter("Param_AllwaysUseDataOnOrder", param_AllwaysUseDataOnOrder)
                : new ObjectParameter("Param_AllwaysUseDataOnOrder", typeof(bool));

            var param_UpdatePricesParameter = param_UpdatePrices.HasValue
                ? new ObjectParameter("Param_UpdatePrices", param_UpdatePrices)
                : new ObjectParameter("Param_UpdatePrices", typeof(bool));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_CashInvoiceAccountParameter = param_CashInvoiceAccount != null
                ? new ObjectParameter("Param_CashInvoiceAccount", param_CashInvoiceAccount)
                : new ObjectParameter("Param_CashInvoiceAccount", typeof(string));

            var param_UpdateCostPricesParameter = param_UpdateCostPrices.HasValue
                ? new ObjectParameter("Param_UpdateCostPrices", param_UpdateCostPrices)
                : new ObjectParameter("Param_UpdateCostPrices", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_Post",
                param_PurchaseNoParameter, param_UserNameParameter, param_PostDateParameter, param_LanguageParameter,
                param_AllwaysUseDataOnOrderParameter, param_UpdatePricesParameter, param_DescriptionParameter,
                param_CashInvoiceAccountParameter, param_UpdateCostPricesParameter);
        }

        public virtual int Kompas_Purchases_SplitPurchaseLine(string param_ToPurchaseNo,
            Nullable<int> param_FromRecordID, Nullable<double> param_Quantity, Nullable<bool> param_DeleteEmptyOrders,
            Nullable<bool> param_DeleteOnly, Nullable<bool> param_IsDeliveredLines)
        {
            var param_ToPurchaseNoParameter = param_ToPurchaseNo != null
                ? new ObjectParameter("Param_ToPurchaseNo", param_ToPurchaseNo)
                : new ObjectParameter("Param_ToPurchaseNo", typeof(string));

            var param_FromRecordIDParameter = param_FromRecordID.HasValue
                ? new ObjectParameter("Param_FromRecordID", param_FromRecordID)
                : new ObjectParameter("Param_FromRecordID", typeof(int));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DeleteEmptyOrdersParameter = param_DeleteEmptyOrders.HasValue
                ? new ObjectParameter("Param_DeleteEmptyOrders", param_DeleteEmptyOrders)
                : new ObjectParameter("Param_DeleteEmptyOrders", typeof(bool));

            var param_DeleteOnlyParameter = param_DeleteOnly.HasValue
                ? new ObjectParameter("Param_DeleteOnly", param_DeleteOnly)
                : new ObjectParameter("Param_DeleteOnly", typeof(bool));

            var param_IsDeliveredLinesParameter = param_IsDeliveredLines.HasValue
                ? new ObjectParameter("Param_IsDeliveredLines", param_IsDeliveredLines)
                : new ObjectParameter("Param_IsDeliveredLines", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Purchases_SplitPurchaseLine",
                param_ToPurchaseNoParameter, param_FromRecordIDParameter, param_QuantityParameter,
                param_DeleteEmptyOrdersParameter, param_DeleteOnlyParameter, param_IsDeliveredLinesParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_PurchasesCalcLineTotals(string param_PurchaseNo,
            Nullable<short> param_Type)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_PurchasesCalcLineTotals", param_PurchaseNoParameter, param_TypeParameter);
        }

        public virtual int Kompas_PurchasesCalcTotals(string param_PurchaseNo, ObjectParameter amount,
            ObjectParameter amountBase, ObjectParameter totalDuty, ObjectParameter totalDutyBase,
            ObjectParameter totalWeight, ObjectParameter totalVolume, ObjectParameter taxAmount,
            ObjectParameter taxAmountBase, ObjectParameter endDiscPct, ObjectParameter endDisc,
            ObjectParameter endDiscBase, ObjectParameter vatFee, ObjectParameter vatFreeFee, ObjectParameter vatFeeBase,
            ObjectParameter vatFreeFeeBase, ObjectParameter roundedAmount, ObjectParameter roundedAmountBase,
            ObjectParameter total, ObjectParameter totalBase, ObjectParameter vATLiableAmount,
            ObjectParameter vATLiableAmountBase, ObjectParameter amountBaseExclAccounts, Nullable<decimal> rate)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(decimal));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesCalcTotals",
                param_PurchaseNoParameter, amount, amountBase, totalDuty, totalDutyBase, totalWeight, totalVolume,
                taxAmount, taxAmountBase, endDiscPct, endDisc, endDiscBase, vatFee, vatFreeFee, vatFeeBase,
                vatFreeFeeBase, roundedAmount, roundedAmountBase, total, totalBase, vATLiableAmount, vATLiableAmountBase,
                amountBaseExclAccounts, rateParameter);
        }

        public virtual int Kompas_PurchasesCalcTotals_Special(string param_PurchaseNo, Nullable<short> param_Type,
            ObjectParameter amount, ObjectParameter amountBase, ObjectParameter totalDuty, ObjectParameter totalDutyBase,
            ObjectParameter totalWeight, ObjectParameter totalVolume, ObjectParameter taxAmount,
            ObjectParameter taxAmountBase, ObjectParameter endDiscPct, ObjectParameter endDisc,
            ObjectParameter endDiscBase, ObjectParameter vatFee, ObjectParameter vatFreeFee, ObjectParameter vatFeeBase,
            ObjectParameter vatFreeFeeBase, ObjectParameter roundedAmount, ObjectParameter roundedAmountBase,
            ObjectParameter total, ObjectParameter totalBase, ObjectParameter vATLiableAmount,
            ObjectParameter vATLiableAmountBase, ObjectParameter amountBaseExclAccounts, Nullable<decimal> rate)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(decimal));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesCalcTotals_Special",
                param_PurchaseNoParameter, param_TypeParameter, amount, amountBase, totalDuty, totalDutyBase,
                totalWeight, totalVolume, taxAmount, taxAmountBase, endDiscPct, endDisc, endDiscBase, vatFee, vatFreeFee,
                vatFeeBase, vatFreeFeeBase, roundedAmount, roundedAmountBase, total, totalBase, vATLiableAmount,
                vATLiableAmountBase, amountBaseExclAccounts, rateParameter);
        }

        public virtual int Kompas_PurchasesCheckAndMakeSerialNotat(string param_PurchaseNo,
            Nullable<bool> param_OnlyDelivered)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_OnlyDeliveredParameter = param_OnlyDelivered.HasValue
                ? new ObjectParameter("Param_OnlyDelivered", param_OnlyDelivered)
                : new ObjectParameter("Param_OnlyDelivered", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesCheckAndMakeSerialNotat",
                    param_PurchaseNoParameter, param_OnlyDeliveredParameter);
        }

        public virtual int Kompas_PurchasesCopyLinesToOrder(string purchaseNo, Nullable<double> trail, string orderNo,
            string current_userid, Nullable<short> text_language)
        {
            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesCopyLinesToOrder",
                purchaseNoParameter, trailParameter, orderNoParameter, current_useridParameter, text_languageParameter);
        }

        public virtual ObjectResult<Kompas_PurchasesCreateFromOrderLines_Result> Kompas_PurchasesCreateFromOrderLines(
            string param_FromOrder, Nullable<int> param_Option, string param_FixedSupplier, string param_FixedPurchases,
            Nullable<short> param_TransferRemarks, Nullable<short> param_Language, string param_UserName,
            Nullable<bool> param_UseDescription, Nullable<bool> param_UseOrderNoAsRecvNo,
            Nullable<bool> param_UseRemarks, Nullable<bool> param_UseSRFromOrder, Nullable<bool> param_UseUserAsBuyer,
            Nullable<bool> param_UseCPFromOrder)
        {
            var param_FromOrderParameter = param_FromOrder != null
                ? new ObjectParameter("Param_FromOrder", param_FromOrder)
                : new ObjectParameter("Param_FromOrder", typeof(string));

            var param_OptionParameter = param_Option.HasValue
                ? new ObjectParameter("Param_Option", param_Option)
                : new ObjectParameter("Param_Option", typeof(int));

            var param_FixedSupplierParameter = param_FixedSupplier != null
                ? new ObjectParameter("Param_FixedSupplier", param_FixedSupplier)
                : new ObjectParameter("Param_FixedSupplier", typeof(string));

            var param_FixedPurchasesParameter = param_FixedPurchases != null
                ? new ObjectParameter("Param_FixedPurchases", param_FixedPurchases)
                : new ObjectParameter("Param_FixedPurchases", typeof(string));

            var param_TransferRemarksParameter = param_TransferRemarks.HasValue
                ? new ObjectParameter("Param_TransferRemarks", param_TransferRemarks)
                : new ObjectParameter("Param_TransferRemarks", typeof(short));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_UseDescriptionParameter = param_UseDescription.HasValue
                ? new ObjectParameter("Param_UseDescription", param_UseDescription)
                : new ObjectParameter("Param_UseDescription", typeof(bool));

            var param_UseOrderNoAsRecvNoParameter = param_UseOrderNoAsRecvNo.HasValue
                ? new ObjectParameter("Param_UseOrderNoAsRecvNo", param_UseOrderNoAsRecvNo)
                : new ObjectParameter("Param_UseOrderNoAsRecvNo", typeof(bool));

            var param_UseRemarksParameter = param_UseRemarks.HasValue
                ? new ObjectParameter("Param_UseRemarks", param_UseRemarks)
                : new ObjectParameter("Param_UseRemarks", typeof(bool));

            var param_UseSRFromOrderParameter = param_UseSRFromOrder.HasValue
                ? new ObjectParameter("Param_UseSRFromOrder", param_UseSRFromOrder)
                : new ObjectParameter("Param_UseSRFromOrder", typeof(bool));

            var param_UseUserAsBuyerParameter = param_UseUserAsBuyer.HasValue
                ? new ObjectParameter("Param_UseUserAsBuyer", param_UseUserAsBuyer)
                : new ObjectParameter("Param_UseUserAsBuyer", typeof(bool));

            var param_UseCPFromOrderParameter = param_UseCPFromOrder.HasValue
                ? new ObjectParameter("Param_UseCPFromOrder", param_UseCPFromOrder)
                : new ObjectParameter("Param_UseCPFromOrder", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_PurchasesCreateFromOrderLines_Result>(
                        "Kompas_PurchasesCreateFromOrderLines", param_FromOrderParameter, param_OptionParameter,
                        param_FixedSupplierParameter, param_FixedPurchasesParameter, param_TransferRemarksParameter,
                        param_LanguageParameter, param_UserNameParameter, param_UseDescriptionParameter,
                        param_UseOrderNoAsRecvNoParameter, param_UseRemarksParameter, param_UseSRFromOrderParameter,
                        param_UseUserAsBuyerParameter, param_UseCPFromOrderParameter);
        }

        public virtual int Kompas_PurchasesDeleteSerialNoByRecordID(Nullable<int> param_RecordID,
            string param_PurchaseNo, string param_Supplier)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PurchasesDeleteSerialNoByRecordID", param_RecordIDParameter, param_PurchaseNoParameter,
                    param_SupplierParameter);
        }

        public virtual int Kompas_PurchasesLog_AddNew(string purchaseNo, Nullable<double> trail, string description,
            string voucher, string report, string createdBy, Nullable<System.Guid> fileGUID, string remarks)
        {
            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var reportParameter = report != null
                ? new ObjectParameter("Report", report)
                : new ObjectParameter("Report", typeof(string));

            var createdByParameter = createdBy != null
                ? new ObjectParameter("CreatedBy", createdBy)
                : new ObjectParameter("CreatedBy", typeof(string));

            var fileGUIDParameter = fileGUID.HasValue
                ? new ObjectParameter("FileGUID", fileGUID)
                : new ObjectParameter("FileGUID", typeof(System.Guid));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesLog_AddNew",
                purchaseNoParameter, trailParameter, descriptionParameter, voucherParameter, reportParameter,
                createdByParameter, fileGUIDParameter, remarksParameter);
        }

        public virtual int Kompas_PurchasesSelectOrDeselectAllLines(Nullable<bool> param_Selected,
            string param_PurchaseNo)
        {
            var param_SelectedParameter = param_Selected.HasValue
                ? new ObjectParameter("Param_Selected", param_Selected)
                : new ObjectParameter("Param_Selected", typeof(bool));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_PurchasesSelectOrDeselectAllLines", param_SelectedParameter, param_PurchaseNoParameter);
        }

        public virtual int Kompas_PurchasesUpdateLastDelivered(string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesUpdateLastDelivered",
                param_PurchaseNoParameter);
        }

        public virtual int Kompas_PurchasesUpdateTotals(string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchasesUpdateTotals",
                param_PurchaseNoParameter);
        }

        public virtual int Kompas_PurchaseTotals(string param_PurchaseNo, Nullable<double> param_EndDiscPct,
            Nullable<double> param_EndDisc, Nullable<double> param_VatFee, Nullable<double> param_VatFreeFee,
            Nullable<double> param_VatFeeBase, Nullable<double> param_VatFreeFeeBase,
            Nullable<double> param_RoundedAmount, Nullable<bool> param_UpdatePurchase, Nullable<double> param_Rate,
            Nullable<double> param_CostPercent, Nullable<byte> param_CostPercentDistribution)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_EndDiscParameter = param_EndDisc.HasValue
                ? new ObjectParameter("Param_EndDisc", param_EndDisc)
                : new ObjectParameter("Param_EndDisc", typeof(double));

            var param_VatFeeParameter = param_VatFee.HasValue
                ? new ObjectParameter("Param_VatFee", param_VatFee)
                : new ObjectParameter("Param_VatFee", typeof(double));

            var param_VatFreeFeeParameter = param_VatFreeFee.HasValue
                ? new ObjectParameter("Param_VatFreeFee", param_VatFreeFee)
                : new ObjectParameter("Param_VatFreeFee", typeof(double));

            var param_VatFeeBaseParameter = param_VatFeeBase.HasValue
                ? new ObjectParameter("Param_VatFeeBase", param_VatFeeBase)
                : new ObjectParameter("Param_VatFeeBase", typeof(double));

            var param_VatFreeFeeBaseParameter = param_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Param_VatFreeFeeBase", param_VatFreeFeeBase)
                : new ObjectParameter("Param_VatFreeFeeBase", typeof(double));

            var param_RoundedAmountParameter = param_RoundedAmount.HasValue
                ? new ObjectParameter("Param_RoundedAmount", param_RoundedAmount)
                : new ObjectParameter("Param_RoundedAmount", typeof(double));

            var param_UpdatePurchaseParameter = param_UpdatePurchase.HasValue
                ? new ObjectParameter("Param_UpdatePurchase", param_UpdatePurchase)
                : new ObjectParameter("Param_UpdatePurchase", typeof(bool));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            var param_CostPercentParameter = param_CostPercent.HasValue
                ? new ObjectParameter("Param_CostPercent", param_CostPercent)
                : new ObjectParameter("Param_CostPercent", typeof(double));

            var param_CostPercentDistributionParameter = param_CostPercentDistribution.HasValue
                ? new ObjectParameter("Param_CostPercentDistribution", param_CostPercentDistribution)
                : new ObjectParameter("Param_CostPercentDistribution", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseTotals",
                param_PurchaseNoParameter, param_EndDiscPctParameter, param_EndDiscParameter, param_VatFeeParameter,
                param_VatFreeFeeParameter, param_VatFeeBaseParameter, param_VatFreeFeeBaseParameter,
                param_RoundedAmountParameter, param_UpdatePurchaseParameter, param_RateParameter,
                param_CostPercentParameter, param_CostPercentDistributionParameter);
        }

        public virtual int Kompas_PurchaseTotals_Special(string param_PurchaseNo, Nullable<short> param_Type,
            Nullable<double> param_EndDiscPct, Nullable<double> param_EndDisc, Nullable<double> param_VatFee,
            Nullable<double> param_VatFreeFee, Nullable<double> param_VatFeeBase, Nullable<double> param_VatFreeFeeBase,
            Nullable<double> param_RoundedAmount, Nullable<double> param_Rate, Nullable<double> param_CostPercent,
            Nullable<byte> param_CostPercentDistribution)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var param_EndDiscPctParameter = param_EndDiscPct.HasValue
                ? new ObjectParameter("Param_EndDiscPct", param_EndDiscPct)
                : new ObjectParameter("Param_EndDiscPct", typeof(double));

            var param_EndDiscParameter = param_EndDisc.HasValue
                ? new ObjectParameter("Param_EndDisc", param_EndDisc)
                : new ObjectParameter("Param_EndDisc", typeof(double));

            var param_VatFeeParameter = param_VatFee.HasValue
                ? new ObjectParameter("Param_VatFee", param_VatFee)
                : new ObjectParameter("Param_VatFee", typeof(double));

            var param_VatFreeFeeParameter = param_VatFreeFee.HasValue
                ? new ObjectParameter("Param_VatFreeFee", param_VatFreeFee)
                : new ObjectParameter("Param_VatFreeFee", typeof(double));

            var param_VatFeeBaseParameter = param_VatFeeBase.HasValue
                ? new ObjectParameter("Param_VatFeeBase", param_VatFeeBase)
                : new ObjectParameter("Param_VatFeeBase", typeof(double));

            var param_VatFreeFeeBaseParameter = param_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Param_VatFreeFeeBase", param_VatFreeFeeBase)
                : new ObjectParameter("Param_VatFreeFeeBase", typeof(double));

            var param_RoundedAmountParameter = param_RoundedAmount.HasValue
                ? new ObjectParameter("Param_RoundedAmount", param_RoundedAmount)
                : new ObjectParameter("Param_RoundedAmount", typeof(double));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            var param_CostPercentParameter = param_CostPercent.HasValue
                ? new ObjectParameter("Param_CostPercent", param_CostPercent)
                : new ObjectParameter("Param_CostPercent", typeof(double));

            var param_CostPercentDistributionParameter = param_CostPercentDistribution.HasValue
                ? new ObjectParameter("Param_CostPercentDistribution", param_CostPercentDistribution)
                : new ObjectParameter("Param_CostPercentDistribution", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseTotals_Special",
                param_PurchaseNoParameter, param_TypeParameter, param_EndDiscPctParameter, param_EndDiscParameter,
                param_VatFeeParameter, param_VatFreeFeeParameter, param_VatFeeBaseParameter,
                param_VatFreeFeeBaseParameter, param_RoundedAmountParameter, param_RateParameter,
                param_CostPercentParameter, param_CostPercentDistributionParameter);
        }

        public virtual int Kompas_PurchaseTotalsUpdateInfo(string param_PurchaseNo,
            Nullable<System.DateTime> param_InvoiceDate, string param_InvoiceNo, Nullable<System.DateTime> param_Due,
            string param_Payment, Nullable<double> param_CostPercent)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_InvoiceDateParameter = param_InvoiceDate.HasValue
                ? new ObjectParameter("Param_InvoiceDate", param_InvoiceDate)
                : new ObjectParameter("Param_InvoiceDate", typeof(System.DateTime));

            var param_InvoiceNoParameter = param_InvoiceNo != null
                ? new ObjectParameter("Param_InvoiceNo", param_InvoiceNo)
                : new ObjectParameter("Param_InvoiceNo", typeof(string));

            var param_DueParameter = param_Due.HasValue
                ? new ObjectParameter("Param_Due", param_Due)
                : new ObjectParameter("Param_Due", typeof(System.DateTime));

            var param_PaymentParameter = param_Payment != null
                ? new ObjectParameter("Param_Payment", param_Payment)
                : new ObjectParameter("Param_Payment", typeof(string));

            var param_CostPercentParameter = param_CostPercent.HasValue
                ? new ObjectParameter("Param_CostPercent", param_CostPercent)
                : new ObjectParameter("Param_CostPercent", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseTotalsUpdateInfo",
                param_PurchaseNoParameter, param_InvoiceDateParameter, param_InvoiceNoParameter, param_DueParameter,
                param_PaymentParameter, param_CostPercentParameter);
        }

        public virtual int Kompas_PurchaseUpdateOnHandReceipt(string param_PurchaseNo, Nullable<bool> param_Return,
            Nullable<int> param_RecordID, Nullable<bool> param_LastReceipt)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_ReturnParameter = param_Return.HasValue
                ? new ObjectParameter("Param_Return", param_Return)
                : new ObjectParameter("Param_Return", typeof(bool));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_LastReceiptParameter = param_LastReceipt.HasValue
                ? new ObjectParameter("Param_LastReceipt", param_LastReceipt)
                : new ObjectParameter("Param_LastReceipt", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_PurchaseUpdateOnHandReceipt",
                param_PurchaseNoParameter, param_ReturnParameter, param_RecordIDParameter, param_LastReceiptParameter);
        }

        public virtual ObjectResult<Kompas_RateAdjustment_CreateEntries_Result> Kompas_RateAdjustment_CreateEntries(
            string host, Nullable<int> tP, Nullable<bool> isCustomer, string source, Nullable<System.DateTime> date,
            string bookText, string currency, string username)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var isCustomerParameter = isCustomer.HasValue
                ? new ObjectParameter("IsCustomer", isCustomer)
                : new ObjectParameter("IsCustomer", typeof(bool));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var bookTextParameter = bookText != null
                ? new ObjectParameter("BookText", bookText)
                : new ObjectParameter("BookText", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var usernameParameter = username != null
                ? new ObjectParameter("Username", username)
                : new ObjectParameter("Username", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_RateAdjustment_CreateEntries_Result>
                    ("Kompas_RateAdjustment_CreateEntries", hostParameter, tPParameter, isCustomerParameter,
                        sourceParameter, dateParameter, bookTextParameter, currencyParameter, usernameParameter);
        }

        public virtual ObjectResult<Kompas_RateAdjustment_HentData_Result> Kompas_RateAdjustment_HentData(string host,
            Nullable<int> tP, Nullable<bool> icCreate, string currency, Nullable<bool> isCustomer, string fromCS,
            string toCS, string fromGroup, string toGroup, Nullable<System.DateTime> fromDate,
            Nullable<System.DateTime> toDate)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var icCreateParameter = icCreate.HasValue
                ? new ObjectParameter("IcCreate", icCreate)
                : new ObjectParameter("IcCreate", typeof(bool));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var isCustomerParameter = isCustomer.HasValue
                ? new ObjectParameter("IsCustomer", isCustomer)
                : new ObjectParameter("IsCustomer", typeof(bool));

            var fromCSParameter = fromCS != null
                ? new ObjectParameter("FromCS", fromCS)
                : new ObjectParameter("FromCS", typeof(string));

            var toCSParameter = toCS != null
                ? new ObjectParameter("ToCS", toCS)
                : new ObjectParameter("ToCS", typeof(string));

            var fromGroupParameter = fromGroup != null
                ? new ObjectParameter("FromGroup", fromGroup)
                : new ObjectParameter("FromGroup", typeof(string));

            var toGroupParameter = toGroup != null
                ? new ObjectParameter("ToGroup", toGroup)
                : new ObjectParameter("ToGroup", typeof(string));

            var fromDateParameter = fromDate.HasValue
                ? new ObjectParameter("FromDate", fromDate)
                : new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue
                ? new ObjectParameter("ToDate", toDate)
                : new ObjectParameter("ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_RateAdjustment_HentData_Result>(
                    "Kompas_RateAdjustment_HentData", hostParameter, tPParameter, icCreateParameter, currencyParameter,
                    isCustomerParameter, fromCSParameter, toCSParameter, fromGroupParameter, toGroupParameter,
                    fromDateParameter, toDateParameter);
        }

        public virtual int Kompas_RecalcAccounts(string account)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcAccounts",
                accountParameter);
        }

        public virtual int Kompas_RecalcCustomersErrorCorection()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcCustomersErrorCorection");
        }

        public virtual int Kompas_RecalcDeleteEmptyRecords(Nullable<byte> param_Module)
        {
            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcDeleteEmptyRecords",
                param_ModuleParameter);
        }

        public virtual int Kompas_RecalcInventory(string item)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcInventory", itemParameter);
        }

        public virtual int Kompas_RecalcOrdersRecalcOrderTotals()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcOrdersRecalcOrderTotals");
        }

        public virtual int Kompas_RecalcPurchasesRecalcPurchaseTotals()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_RecalcPurchasesRecalcPurchaseTotals");
        }

        public virtual int Kompas_RecalcSuppliersErrorCorection()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_RecalcSuppliersErrorCorection");
        }

        public virtual ObjectResult<Kompas_RecalcZeroControl_Result> Kompas_RecalcZeroControl()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_RecalcZeroControl_Result>(
                    "Kompas_RecalcZeroControl");
        }

        public virtual ObjectResult<Kompas_ReportCriteria_Process_Result> Kompas_ReportCriteria_Process(
            Nullable<short> param_Type, Nullable<short> param_Module, string param_Report, string param_UserName,
            string param_Table_Name, string param_Column_Name, string param_FromValue, string param_ToValue)
        {
            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(short));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            var param_Column_NameParameter = param_Column_Name != null
                ? new ObjectParameter("Param_Column_Name", param_Column_Name)
                : new ObjectParameter("Param_Column_Name", typeof(string));

            var param_FromValueParameter = param_FromValue != null
                ? new ObjectParameter("Param_FromValue", param_FromValue)
                : new ObjectParameter("Param_FromValue", typeof(string));

            var param_ToValueParameter = param_ToValue != null
                ? new ObjectParameter("Param_ToValue", param_ToValue)
                : new ObjectParameter("Param_ToValue", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_ReportCriteria_Process_Result>(
                    "Kompas_ReportCriteria_Process", param_TypeParameter, param_ModuleParameter, param_ReportParameter,
                    param_UserNameParameter, param_Table_NameParameter, param_Column_NameParameter,
                    param_FromValueParameter, param_ToValueParameter);
        }

        public virtual ObjectResult<Kompas_ReportManagerGetReport_Result> Kompas_ReportManagerGetReport(
            string param_Report, Nullable<short> param_Module)
        {
            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_ReportManagerGetReport_Result>(
                    "Kompas_ReportManagerGetReport", param_ReportParameter, param_ModuleParameter);
        }

        public virtual int Kompas_ReportManagerUpdateReport(string oldReport, string report, Nullable<short> module,
            string fileName, Nullable<short> onMenu, string printer, Nullable<short> copies,
            Nullable<short> firstCopyTray, Nullable<short> otherCopiesTray, string next, string selection,
            string sortFields, string remarks, string statusAfter, Nullable<byte> preViewFormat, string before_SQL,
            string after_SQL, string archiveReport, Nullable<short> fileSaveStatus, string category, string eMailSubject)
        {
            var oldReportParameter = oldReport != null
                ? new ObjectParameter("OldReport", oldReport)
                : new ObjectParameter("OldReport", typeof(string));

            var reportParameter = report != null
                ? new ObjectParameter("Report", report)
                : new ObjectParameter("Report", typeof(string));

            var moduleParameter = module.HasValue
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(short));

            var fileNameParameter = fileName != null
                ? new ObjectParameter("FileName", fileName)
                : new ObjectParameter("FileName", typeof(string));

            var onMenuParameter = onMenu.HasValue
                ? new ObjectParameter("OnMenu", onMenu)
                : new ObjectParameter("OnMenu", typeof(short));

            var printerParameter = printer != null
                ? new ObjectParameter("Printer", printer)
                : new ObjectParameter("Printer", typeof(string));

            var copiesParameter = copies.HasValue
                ? new ObjectParameter("Copies", copies)
                : new ObjectParameter("Copies", typeof(short));

            var firstCopyTrayParameter = firstCopyTray.HasValue
                ? new ObjectParameter("FirstCopyTray", firstCopyTray)
                : new ObjectParameter("FirstCopyTray", typeof(short));

            var otherCopiesTrayParameter = otherCopiesTray.HasValue
                ? new ObjectParameter("OtherCopiesTray", otherCopiesTray)
                : new ObjectParameter("OtherCopiesTray", typeof(short));

            var nextParameter = next != null
                ? new ObjectParameter("Next", next)
                : new ObjectParameter("Next", typeof(string));

            var selectionParameter = selection != null
                ? new ObjectParameter("Selection", selection)
                : new ObjectParameter("Selection", typeof(string));

            var sortFieldsParameter = sortFields != null
                ? new ObjectParameter("SortFields", sortFields)
                : new ObjectParameter("SortFields", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var statusAfterParameter = statusAfter != null
                ? new ObjectParameter("StatusAfter", statusAfter)
                : new ObjectParameter("StatusAfter", typeof(string));

            var preViewFormatParameter = preViewFormat.HasValue
                ? new ObjectParameter("PreViewFormat", preViewFormat)
                : new ObjectParameter("PreViewFormat", typeof(byte));

            var before_SQLParameter = before_SQL != null
                ? new ObjectParameter("Before_SQL", before_SQL)
                : new ObjectParameter("Before_SQL", typeof(string));

            var after_SQLParameter = after_SQL != null
                ? new ObjectParameter("After_SQL", after_SQL)
                : new ObjectParameter("After_SQL", typeof(string));

            var archiveReportParameter = archiveReport != null
                ? new ObjectParameter("ArchiveReport", archiveReport)
                : new ObjectParameter("ArchiveReport", typeof(string));

            var fileSaveStatusParameter = fileSaveStatus.HasValue
                ? new ObjectParameter("FileSaveStatus", fileSaveStatus)
                : new ObjectParameter("FileSaveStatus", typeof(short));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var eMailSubjectParameter = eMailSubject != null
                ? new ObjectParameter("EMailSubject", eMailSubject)
                : new ObjectParameter("EMailSubject", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ReportManagerUpdateReport",
                oldReportParameter, reportParameter, moduleParameter, fileNameParameter, onMenuParameter,
                printerParameter, copiesParameter, firstCopyTrayParameter, otherCopiesTrayParameter, nextParameter,
                selectionParameter, sortFieldsParameter, remarksParameter, statusAfterParameter, preViewFormatParameter,
                before_SQLParameter, after_SQLParameter, archiveReportParameter, fileSaveStatusParameter,
                categoryParameter, eMailSubjectParameter);
        }

        public virtual int Kompas_ReportSetDefaultViewFormat(string param_Report, Nullable<short> param_Module,
            Nullable<byte> param_Format)
        {
            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_FormatParameter = param_Format.HasValue
                ? new ObjectParameter("Param_Format", param_Format)
                : new ObjectParameter("Param_Format", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ReportSetDefaultViewFormat",
                param_ReportParameter, param_ModuleParameter, param_FormatParameter);
        }

        public virtual int Kompas_ReportSetLastUsedPrinter(string param_Report, Nullable<short> param_Module,
            string param_Printer)
        {
            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_PrinterParameter = param_Printer != null
                ? new ObjectParameter("Param_Printer", param_Printer)
                : new ObjectParameter("Param_Printer", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ReportSetLastUsedPrinter",
                param_ReportParameter, param_ModuleParameter, param_PrinterParameter);
        }

        public virtual int Kompas_ReportSetLastUsedViewFormat(string param_Report, Nullable<short> param_Module,
            Nullable<byte> param_Format)
        {
            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_FormatParameter = param_Format.HasValue
                ? new ObjectParameter("Param_Format", param_Format)
                : new ObjectParameter("Param_Format", typeof(byte));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_ReportSetLastUsedViewFormat",
                param_ReportParameter, param_ModuleParameter, param_FormatParameter);
        }

        public virtual int Kompas_Rights_Copy(string param_FromCompany, string param_FromUser, string param_ToUser,
            Nullable<short> param_Option, string param_CurrentCompany)
        {
            var param_FromCompanyParameter = param_FromCompany != null
                ? new ObjectParameter("Param_FromCompany", param_FromCompany)
                : new ObjectParameter("Param_FromCompany", typeof(string));

            var param_FromUserParameter = param_FromUser != null
                ? new ObjectParameter("Param_FromUser", param_FromUser)
                : new ObjectParameter("Param_FromUser", typeof(string));

            var param_ToUserParameter = param_ToUser != null
                ? new ObjectParameter("Param_ToUser", param_ToUser)
                : new ObjectParameter("Param_ToUser", typeof(string));

            var param_OptionParameter = param_Option.HasValue
                ? new ObjectParameter("Param_Option", param_Option)
                : new ObjectParameter("Param_Option", typeof(short));

            var param_CurrentCompanyParameter = param_CurrentCompany != null
                ? new ObjectParameter("Param_CurrentCompany", param_CurrentCompany)
                : new ObjectParameter("Param_CurrentCompany", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Rights_Copy",
                param_FromCompanyParameter, param_FromUserParameter, param_ToUserParameter, param_OptionParameter,
                param_CurrentCompanyParameter);
        }

        public virtual int Kompas_Rights_Delete(string param_User)
        {
            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Rights_Delete",
                param_UserParameter);
        }

        public virtual int Kompas_SaveSetupValue(string param_OptionID, string param_Value, string param_Module)
        {
            var param_OptionIDParameter = param_OptionID != null
                ? new ObjectParameter("Param_OptionID", param_OptionID)
                : new ObjectParameter("Param_OptionID", typeof(string));

            var param_ValueParameter = param_Value != null
                ? new ObjectParameter("Param_Value", param_Value)
                : new ObjectParameter("Param_Value", typeof(string));

            var param_ModuleParameter = param_Module != null
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SaveSetupValue",
                param_OptionIDParameter, param_ValueParameter, param_ModuleParameter);
        }

        public virtual int Kompas_SaveSetupValue1(string param_OptionID, string param_Value1)
        {
            var param_OptionIDParameter = param_OptionID != null
                ? new ObjectParameter("Param_OptionID", param_OptionID)
                : new ObjectParameter("Param_OptionID", typeof(string));

            var param_Value1Parameter = param_Value1 != null
                ? new ObjectParameter("Param_Value1", param_Value1)
                : new ObjectParameter("Param_Value1", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SaveSetupValue1",
                param_OptionIDParameter, param_Value1Parameter);
        }

        public virtual int Kompas_SaveUserSettings(string param_UserName, string param_SupAuthBank)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_SupAuthBankParameter = param_SupAuthBank != null
                ? new ObjectParameter("Param_SupAuthBank", param_SupAuthBank)
                : new ObjectParameter("Param_SupAuthBank", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SaveUserSettings",
                param_UserNameParameter, param_SupAuthBankParameter);
        }

        public virtual int Kompas_SaveUserSetupValue(string param_FormID, string param_ControlID, string param_UserName,
            string param_Value)
        {
            var param_FormIDParameter = param_FormID != null
                ? new ObjectParameter("Param_FormID", param_FormID)
                : new ObjectParameter("Param_FormID", typeof(string));

            var param_ControlIDParameter = param_ControlID != null
                ? new ObjectParameter("Param_ControlID", param_ControlID)
                : new ObjectParameter("Param_ControlID", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_ValueParameter = param_Value != null
                ? new ObjectParameter("Param_Value", param_Value)
                : new ObjectParameter("Param_Value", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SaveUserSetupValue",
                param_FormIDParameter, param_ControlIDParameter, param_UserNameParameter, param_ValueParameter);
        }

        public virtual int Kompas_SearchNextPrevKey(string table_Name, string key_Column_Name, string sort_Column_Name,
            Nullable<bool> is_Search_Next, string last_Key_Value, string last_Sort_Value, string where,
            string return_Column_Name)
        {
            var table_NameParameter = table_Name != null
                ? new ObjectParameter("Table_Name", table_Name)
                : new ObjectParameter("Table_Name", typeof(string));

            var key_Column_NameParameter = key_Column_Name != null
                ? new ObjectParameter("Key_Column_Name", key_Column_Name)
                : new ObjectParameter("Key_Column_Name", typeof(string));

            var sort_Column_NameParameter = sort_Column_Name != null
                ? new ObjectParameter("Sort_Column_Name", sort_Column_Name)
                : new ObjectParameter("Sort_Column_Name", typeof(string));

            var is_Search_NextParameter = is_Search_Next.HasValue
                ? new ObjectParameter("Is_Search_Next", is_Search_Next)
                : new ObjectParameter("Is_Search_Next", typeof(bool));

            var last_Key_ValueParameter = last_Key_Value != null
                ? new ObjectParameter("Last_Key_Value", last_Key_Value)
                : new ObjectParameter("Last_Key_Value", typeof(string));

            var last_Sort_ValueParameter = last_Sort_Value != null
                ? new ObjectParameter("Last_Sort_Value", last_Sort_Value)
                : new ObjectParameter("Last_Sort_Value", typeof(string));

            var whereParameter = where != null
                ? new ObjectParameter("Where", where)
                : new ObjectParameter("Where", typeof(string));

            var return_Column_NameParameter = return_Column_Name != null
                ? new ObjectParameter("Return_Column_Name", return_Column_Name)
                : new ObjectParameter("Return_Column_Name", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SearchNextPrevKey",
                table_NameParameter, key_Column_NameParameter, sort_Column_NameParameter, is_Search_NextParameter,
                last_Key_ValueParameter, last_Sort_ValueParameter, whereParameter, return_Column_NameParameter);
        }

        public virtual ObjectResult<Kompas_SelectFieldsList_Result> Kompas_SelectFieldsList(string param_Table_Name)
        {
            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_SelectFieldsList_Result>(
                    "Kompas_SelectFieldsList", param_Table_NameParameter);
        }

        public virtual ObjectResult<Kompas_SettelSmallBalance_Customers_Result> Kompas_SettelSmallBalance_Customers(
            string param_UserID, string param_From, string param_To, string param_GroupingFrom, string param_GroupingTo,
            Nullable<double> param_Balance)
        {
            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_FromParameter = param_From != null
                ? new ObjectParameter("Param_From", param_From)
                : new ObjectParameter("Param_From", typeof(string));

            var param_ToParameter = param_To != null
                ? new ObjectParameter("Param_To", param_To)
                : new ObjectParameter("Param_To", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_BalanceParameter = param_Balance.HasValue
                ? new ObjectParameter("Param_Balance", param_Balance)
                : new ObjectParameter("Param_Balance", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_SettelSmallBalance_Customers_Result>
                    ("Kompas_SettelSmallBalance_Customers", param_UserIDParameter, param_FromParameter,
                        param_ToParameter, param_GroupingFromParameter, param_GroupingToParameter,
                        param_BalanceParameter);
        }

        public virtual ObjectResult<Kompas_SettelSmallBalance_Suppliers_Result> Kompas_SettelSmallBalance_Suppliers(
            string param_UserID, string param_From, string param_To, string param_GroupingFrom, string param_GroupingTo,
            Nullable<double> param_Balance)
        {
            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_FromParameter = param_From != null
                ? new ObjectParameter("Param_From", param_From)
                : new ObjectParameter("Param_From", typeof(string));

            var param_ToParameter = param_To != null
                ? new ObjectParameter("Param_To", param_To)
                : new ObjectParameter("Param_To", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_BalanceParameter = param_Balance.HasValue
                ? new ObjectParameter("Param_Balance", param_Balance)
                : new ObjectParameter("Param_Balance", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_SettelSmallBalance_Suppliers_Result>
                    ("Kompas_SettelSmallBalance_Suppliers", param_UserIDParameter, param_FromParameter,
                        param_ToParameter, param_GroupingFromParameter, param_GroupingToParameter,
                        param_BalanceParameter);
        }

        public virtual int Kompas_SettelSmallBalancePost(string param_Host, string param_Description,
            string param_Account, string param_Source, string param_UserName, Nullable<short> param_DataLinkTP,
            Nullable<bool> param_PerformOpenItem, Nullable<System.DateTime> param_PostDate)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_SourceParameter = param_Source != null
                ? new ObjectParameter("Param_Source", param_Source)
                : new ObjectParameter("Param_Source", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_DataLinkTPParameter = param_DataLinkTP.HasValue
                ? new ObjectParameter("Param_DataLinkTP", param_DataLinkTP)
                : new ObjectParameter("Param_DataLinkTP", typeof(short));

            var param_PerformOpenItemParameter = param_PerformOpenItem.HasValue
                ? new ObjectParameter("Param_PerformOpenItem", param_PerformOpenItem)
                : new ObjectParameter("Param_PerformOpenItem", typeof(bool));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SettelSmallBalancePost",
                param_HostParameter, param_DescriptionParameter, param_AccountParameter, param_SourceParameter,
                param_UserNameParameter, param_DataLinkTPParameter, param_PerformOpenItemParameter,
                param_PostDateParameter);
        }

        public virtual int Kompas_SettleAllSettlements(string param_Host, Nullable<int> param_TP,
            Nullable<bool> param_LinkType, Nullable<bool> param_IsCustomer, string param_CusSup,
            Nullable<bool> param_ForceTransOpenItem, Nullable<System.DateTime> param_SettleUpToDate)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_TPParameter = param_TP.HasValue
                ? new ObjectParameter("Param_TP", param_TP)
                : new ObjectParameter("Param_TP", typeof(int));

            var param_LinkTypeParameter = param_LinkType.HasValue
                ? new ObjectParameter("Param_LinkType", param_LinkType)
                : new ObjectParameter("Param_LinkType", typeof(bool));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_ForceTransOpenItemParameter = param_ForceTransOpenItem.HasValue
                ? new ObjectParameter("Param_ForceTransOpenItem", param_ForceTransOpenItem)
                : new ObjectParameter("Param_ForceTransOpenItem", typeof(bool));

            var param_SettleUpToDateParameter = param_SettleUpToDate.HasValue
                ? new ObjectParameter("Param_SettleUpToDate", param_SettleUpToDate)
                : new ObjectParameter("Param_SettleUpToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SettleAllSettlements",
                param_HostParameter, param_TPParameter, param_LinkTypeParameter, param_IsCustomerParameter,
                param_CusSupParameter, param_ForceTransOpenItemParameter, param_SettleUpToDateParameter);
        }

        public virtual ObjectResult<string> Kompas_Sigma_CreateProject(string projectName, string responsible,
            string customer)
        {
            var projectNameParameter = projectName != null
                ? new ObjectParameter("ProjectName", projectName)
                : new ObjectParameter("ProjectName", typeof(string));

            var responsibleParameter = responsible != null
                ? new ObjectParameter("Responsible", responsible)
                : new ObjectParameter("Responsible", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("Kompas_Sigma_CreateProject",
                projectNameParameter, responsibleParameter, customerParameter);
        }

        public virtual int Kompas_Sigma_CreatePurchasesFromSigma(string project, string userName)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_Sigma_CreatePurchasesFromSigma", projectParameter, userNameParameter);
        }

        public virtual int Kompas_Sigma_DeleteProjectFromSigma(string project)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Sigma_DeleteProjectFromSigma",
                projectParameter);
        }

        public virtual ObjectResult<Kompas_SimulateSimulatedPeriodBalance_Result> Kompas_SimulateSimulatedPeriodBalance(
            string param_Journal, string param_EndingPeriod)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_EndingPeriodParameter = param_EndingPeriod != null
                ? new ObjectParameter("Param_EndingPeriod", param_EndingPeriod)
                : new ObjectParameter("Param_EndingPeriod", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SimulateSimulatedPeriodBalance_Result>(
                        "Kompas_SimulateSimulatedPeriodBalance", param_JournalParameter, param_EndingPeriodParameter);
        }

        public virtual int Kompas_SMSCreateTriggers(Nullable<bool> addTrigger)
        {
            var addTriggerParameter = addTrigger.HasValue
                ? new ObjectParameter("AddTrigger", addTrigger)
                : new ObjectParameter("AddTrigger", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SMSCreateTriggers",
                addTriggerParameter);
        }

        public virtual int Kompas_StatusOnHand(string param_Item, string param_Location, string param_Parameter1,
            string param_Parameter2, Nullable<bool> param_ShowAllStatus)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_ShowAllStatusParameter = param_ShowAllStatus.HasValue
                ? new ObjectParameter("Param_ShowAllStatus", param_ShowAllStatus)
                : new ObjectParameter("Param_ShowAllStatus", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_StatusOnHand",
                param_ItemParameter, param_LocationParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                param_ShowAllStatusParameter);
        }

        public virtual int Kompas_StatusOnHand_GetItemFromMaster(string mainMaster, string master, string statusItem,
            Nullable<int> level, Nullable<double> faktor)
        {
            var mainMasterParameter = mainMaster != null
                ? new ObjectParameter("MainMaster", mainMaster)
                : new ObjectParameter("MainMaster", typeof(string));

            var masterParameter = master != null
                ? new ObjectParameter("Master", master)
                : new ObjectParameter("Master", typeof(string));

            var statusItemParameter = statusItem != null
                ? new ObjectParameter("StatusItem", statusItem)
                : new ObjectParameter("StatusItem", typeof(string));

            var levelParameter = level.HasValue
                ? new ObjectParameter("Level", level)
                : new ObjectParameter("Level", typeof(int));

            var faktorParameter = faktor.HasValue
                ? new ObjectParameter("Faktor", faktor)
                : new ObjectParameter("Faktor", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_StatusOnHand_GetItemFromMaster", mainMasterParameter, masterParameter, statusItemParameter,
                levelParameter, faktorParameter);
        }

        public virtual int Kompas_SupplierAuthorize_UpdatePayeDate(Nullable<System.DateTime> payDate,
            Nullable<bool> outdatedOnly, Nullable<bool> allSuppliers, string supplier)
        {
            var payDateParameter = payDate.HasValue
                ? new ObjectParameter("PayDate", payDate)
                : new ObjectParameter("PayDate", typeof(System.DateTime));

            var outdatedOnlyParameter = outdatedOnly.HasValue
                ? new ObjectParameter("OutdatedOnly", outdatedOnly)
                : new ObjectParameter("OutdatedOnly", typeof(bool));

            var allSuppliersParameter = allSuppliers.HasValue
                ? new ObjectParameter("AllSuppliers", allSuppliers)
                : new ObjectParameter("AllSuppliers", typeof(bool));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SupplierAuthorize_UpdatePayeDate",
                    payDateParameter, outdatedOnlyParameter, allSuppliersParameter, supplierParameter);
        }

        public virtual int Kompas_SupplierAuthorizeDoCheckSupplier(string param_BankModul, string param_Supplier,
            string param_Currency, Nullable<bool> param_IntenseCheck)
        {
            var param_BankModulParameter = param_BankModul != null
                ? new ObjectParameter("Param_BankModul", param_BankModul)
                : new ObjectParameter("Param_BankModul", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_IntenseCheckParameter = param_IntenseCheck.HasValue
                ? new ObjectParameter("Param_IntenseCheck", param_IntenseCheck)
                : new ObjectParameter("Param_IntenseCheck", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SupplierAuthorizeDoCheckSupplier",
                    param_BankModulParameter, param_SupplierParameter, param_CurrencyParameter,
                    param_IntenseCheckParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeDoCheckTransactions_Result>
            Kompas_SupplierAuthorizeDoCheckTransactions(string param_BankModul, Nullable<int> param_LinkRecordID)
        {
            var param_BankModulParameter = param_BankModul != null
                ? new ObjectParameter("Param_BankModul", param_BankModul)
                : new ObjectParameter("Param_BankModul", typeof(string));

            var param_LinkRecordIDParameter = param_LinkRecordID.HasValue
                ? new ObjectParameter("Param_LinkRecordID", param_LinkRecordID)
                : new ObjectParameter("Param_LinkRecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeDoCheckTransactions_Result>(
                        "Kompas_SupplierAuthorizeDoCheckTransactions", param_BankModulParameter,
                        param_LinkRecordIDParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeGetCurrencyInformation_Result>
            Kompas_SupplierAuthorizeGetCurrencyInformation(string param_BankID)
        {
            var param_BankIDParameter = param_BankID != null
                ? new ObjectParameter("Param_BankID", param_BankID)
                : new ObjectParameter("Param_BankID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeGetCurrencyInformation_Result>(
                        "Kompas_SupplierAuthorizeGetCurrencyInformation", param_BankIDParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeGetSupplierBankData_Result>
            Kompas_SupplierAuthorizeGetSupplierBankData(string param_BankID, Nullable<System.DateTime> param_ByDate,
                string param_OrderBy)
        {
            var param_BankIDParameter = param_BankID != null
                ? new ObjectParameter("Param_BankID", param_BankID)
                : new ObjectParameter("Param_BankID", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_OrderByParameter = param_OrderBy != null
                ? new ObjectParameter("Param_OrderBy", param_OrderBy)
                : new ObjectParameter("Param_OrderBy", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeGetSupplierBankData_Result>(
                        "Kompas_SupplierAuthorizeGetSupplierBankData", param_BankIDParameter, param_ByDateParameter,
                        param_OrderByParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_SupplierAuthorizeGetTotalEndorsed(
            string param_SupplierFrom, string param_SupplierTo, string param_EmployeeFrom, string param_EmployeeTo,
            Nullable<System.DateTime> param_DueBy)
        {
            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_EmployeeFromParameter = param_EmployeeFrom != null
                ? new ObjectParameter("Param_EmployeeFrom", param_EmployeeFrom)
                : new ObjectParameter("Param_EmployeeFrom", typeof(string));

            var param_EmployeeToParameter = param_EmployeeTo != null
                ? new ObjectParameter("Param_EmployeeTo", param_EmployeeTo)
                : new ObjectParameter("Param_EmployeeTo", typeof(string));

            var param_DueByParameter = param_DueBy.HasValue
                ? new ObjectParameter("Param_DueBy", param_DueBy)
                : new ObjectParameter("Param_DueBy", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_SupplierAuthorizeGetTotalEndorsed", param_SupplierFromParameter, param_SupplierToParameter,
                    param_EmployeeFromParameter, param_EmployeeToParameter, param_DueByParameter);
        }

        public virtual ObjectResult<Nullable<double>> Kompas_SupplierAuthorizeGetTotalPayment(string param_SupplierFrom,
            string param_SupplierTo, string param_EmployeeFrom, string param_EmployeeTo,
            Nullable<System.DateTime> param_DueBy)
        {
            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_EmployeeFromParameter = param_EmployeeFrom != null
                ? new ObjectParameter("Param_EmployeeFrom", param_EmployeeFrom)
                : new ObjectParameter("Param_EmployeeFrom", typeof(string));

            var param_EmployeeToParameter = param_EmployeeTo != null
                ? new ObjectParameter("Param_EmployeeTo", param_EmployeeTo)
                : new ObjectParameter("Param_EmployeeTo", typeof(string));

            var param_DueByParameter = param_DueBy.HasValue
                ? new ObjectParameter("Param_DueBy", param_DueBy)
                : new ObjectParameter("Param_DueBy", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "Kompas_SupplierAuthorizeGetTotalPayment", param_SupplierFromParameter, param_SupplierToParameter,
                    param_EmployeeFromParameter, param_EmployeeToParameter, param_DueByParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeGetTransactions_Result>
            Kompas_SupplierAuthorizeGetTransactions(string param_SupplierFrom, string param_SupplierTo,
                string param_EmployeeFrom, string param_EmployeeTo, Nullable<System.DateTime> param_DueBy,
                Nullable<byte> param_SortFilter)
        {
            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_EmployeeFromParameter = param_EmployeeFrom != null
                ? new ObjectParameter("Param_EmployeeFrom", param_EmployeeFrom)
                : new ObjectParameter("Param_EmployeeFrom", typeof(string));

            var param_EmployeeToParameter = param_EmployeeTo != null
                ? new ObjectParameter("Param_EmployeeTo", param_EmployeeTo)
                : new ObjectParameter("Param_EmployeeTo", typeof(string));

            var param_DueByParameter = param_DueBy.HasValue
                ? new ObjectParameter("Param_DueBy", param_DueBy)
                : new ObjectParameter("Param_DueBy", typeof(System.DateTime));

            var param_SortFilterParameter = param_SortFilter.HasValue
                ? new ObjectParameter("Param_SortFilter", param_SortFilter)
                : new ObjectParameter("Param_SortFilter", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeGetTransactions_Result>(
                        "Kompas_SupplierAuthorizeGetTransactions", param_SupplierFromParameter,
                        param_SupplierToParameter, param_EmployeeFromParameter, param_EmployeeToParameter,
                        param_DueByParameter, param_SortFilterParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeGetTransactionsBankData_Result>
            Kompas_SupplierAuthorizeGetTransactionsBankData(string param_BankID, string param_Supplier)
        {
            var param_BankIDParameter = param_BankID != null
                ? new ObjectParameter("Param_BankID", param_BankID)
                : new ObjectParameter("Param_BankID", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeGetTransactionsBankData_Result>(
                        "Kompas_SupplierAuthorizeGetTransactionsBankData", param_BankIDParameter,
                        param_SupplierParameter);
        }

        public virtual int Kompas_SupplierAuthorizeSaveBankID(string param_UserName, string param_BankID)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_BankIDParameter = param_BankID != null
                ? new ObjectParameter("Param_BankID", param_BankID)
                : new ObjectParameter("Param_BankID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SupplierAuthorizeSaveBankID",
                param_UserNameParameter, param_BankIDParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeTransferToJournal_Result>
            Kompas_SupplierAuthorizeTransferToJournal(string param_Journal, Nullable<System.DateTime> param_PaymentDate,
                string param_SupplierFrom, string param_SupplierTo, string param_EmployeeFrom, string param_EmployeeTo,
                Nullable<System.DateTime> param_DueBy, string param_TransferViaBank, string param_SortBy)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_PaymentDateParameter = param_PaymentDate.HasValue
                ? new ObjectParameter("Param_PaymentDate", param_PaymentDate)
                : new ObjectParameter("Param_PaymentDate", typeof(System.DateTime));

            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_EmployeeFromParameter = param_EmployeeFrom != null
                ? new ObjectParameter("Param_EmployeeFrom", param_EmployeeFrom)
                : new ObjectParameter("Param_EmployeeFrom", typeof(string));

            var param_EmployeeToParameter = param_EmployeeTo != null
                ? new ObjectParameter("Param_EmployeeTo", param_EmployeeTo)
                : new ObjectParameter("Param_EmployeeTo", typeof(string));

            var param_DueByParameter = param_DueBy.HasValue
                ? new ObjectParameter("Param_DueBy", param_DueBy)
                : new ObjectParameter("Param_DueBy", typeof(System.DateTime));

            var param_TransferViaBankParameter = param_TransferViaBank != null
                ? new ObjectParameter("Param_TransferViaBank", param_TransferViaBank)
                : new ObjectParameter("Param_TransferViaBank", typeof(string));

            var param_SortByParameter = param_SortBy != null
                ? new ObjectParameter("Param_SortBy", param_SortBy)
                : new ObjectParameter("Param_SortBy", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeTransferToJournal_Result>(
                        "Kompas_SupplierAuthorizeTransferToJournal", param_JournalParameter, param_PaymentDateParameter,
                        param_SupplierFromParameter, param_SupplierToParameter, param_EmployeeFromParameter,
                        param_EmployeeToParameter, param_DueByParameter, param_TransferViaBankParameter,
                        param_SortByParameter);
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeUpdatePayAmount_Result>
            Kompas_SupplierAuthorizeUpdatePayAmount()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeUpdatePayAmount_Result>(
                        "Kompas_SupplierAuthorizeUpdatePayAmount");
        }

        public virtual ObjectResult<Kompas_SupplierAuthorizeUpdateSupplierAndTransactionBankData_Result>
            Kompas_SupplierAuthorizeUpdateSupplierAndTransactionBankData(Nullable<System.DateTime> param_PayDate,
                Nullable<short> param_Language)
        {
            var param_PayDateParameter = param_PayDate.HasValue
                ? new ObjectParameter("Param_PayDate", param_PayDate)
                : new ObjectParameter("Param_PayDate", typeof(System.DateTime));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Kompas_SupplierAuthorizeUpdateSupplierAndTransactionBankData_Result>(
                        "Kompas_SupplierAuthorizeUpdateSupplierAndTransactionBankData", param_PayDateParameter,
                        param_LanguageParameter);
        }

        public virtual int Kompas_SupplierAuthorizeUpdateTransactionsBankDataFromSupplierBankData(string param_Supplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_SupplierAuthorizeUpdateTransactionsBankDataFromSupplierBankData", param_SupplierParameter);
        }

        public virtual ObjectResult<Kompas_Suppliers_MayDelete_Result> Kompas_Suppliers_MayDelete(string param_Supplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Suppliers_MayDelete_Result>(
                    "Kompas_Suppliers_MayDelete", param_SupplierParameter);
        }

        public virtual int Kompas_SupplierUpdateBankInformation(string param_Supplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SupplierUpdateBankInformation",
                param_SupplierParameter);
        }

        public virtual int Kompas_SyncTable(string dataName_From, string tableName)
        {
            var dataName_FromParameter = dataName_From != null
                ? new ObjectParameter("DataName_From", dataName_From)
                : new ObjectParameter("DataName_From", typeof(string));

            var tableNameParameter = tableName != null
                ? new ObjectParameter("TableName", tableName)
                : new ObjectParameter("TableName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SyncTable",
                dataName_FromParameter, tableNameParameter);
        }

        public virtual int Kompas_SystemCheck(Nullable<int> error_Prioritet)
        {
            var error_PrioritetParameter = error_Prioritet.HasValue
                ? new ObjectParameter("Error_Prioritet", error_Prioritet)
                : new ObjectParameter("Error_Prioritet", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_SystemCheck",
                error_PrioritetParameter);
        }

        public virtual int Kompas_TextHolder_AddUpdate(string param_ID, Nullable<short> param_IX, string param_Text)
        {
            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_IXParameter = param_IX.HasValue
                ? new ObjectParameter("Param_IX", param_IX)
                : new ObjectParameter("Param_IX", typeof(short));

            var param_TextParameter = param_Text != null
                ? new ObjectParameter("Param_Text", param_Text)
                : new ObjectParameter("Param_Text", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TextHolder_AddUpdate",
                param_IDParameter, param_IXParameter, param_TextParameter);
        }

        public virtual int Kompas_TextHolderMainKey_Change(string table_name, string key_value, string new_key_value)
        {
            var table_nameParameter = table_name != null
                ? new ObjectParameter("table_name", table_name)
                : new ObjectParameter("table_name", typeof(string));

            var key_valueParameter = key_value != null
                ? new ObjectParameter("key_value", key_value)
                : new ObjectParameter("key_value", typeof(string));

            var new_key_valueParameter = new_key_value != null
                ? new ObjectParameter("new_key_value", new_key_value)
                : new ObjectParameter("new_key_value", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TextHolderMainKey_Change",
                table_nameParameter, key_valueParameter, new_key_valueParameter);
        }

        public virtual ObjectResult<Kompas_TimeLines_Post_Result> Kompas_TimeLines_Post(string employee,
            Nullable<System.DateTime> startDate, string post_Description, Nullable<short> text_language,
            string current_userid)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var post_DescriptionParameter = post_Description != null
                ? new ObjectParameter("Post_Description", post_Description)
                : new ObjectParameter("Post_Description", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_TimeLines_Post_Result>(
                    "Kompas_TimeLines_Post", employeeParameter, startDateParameter, post_DescriptionParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_TimeLink_GreateExportLines(string clientID, Nullable<bool> b_Accounts,
            Nullable<bool> b_Suppliers, Nullable<bool> b_Tax, Nullable<bool> b_Dim1, Nullable<short> b_DimCode1,
            Nullable<bool> b_Dim2, Nullable<short> b_DimCode2, Nullable<bool> b_Dim3, Nullable<short> b_DimCode3,
            Nullable<bool> b_Dim4, Nullable<short> b_DimCode4)
        {
            var clientIDParameter = clientID != null
                ? new ObjectParameter("ClientID", clientID)
                : new ObjectParameter("ClientID", typeof(string));

            var b_AccountsParameter = b_Accounts.HasValue
                ? new ObjectParameter("b_Accounts", b_Accounts)
                : new ObjectParameter("b_Accounts", typeof(bool));

            var b_SuppliersParameter = b_Suppliers.HasValue
                ? new ObjectParameter("b_Suppliers", b_Suppliers)
                : new ObjectParameter("b_Suppliers", typeof(bool));

            var b_TaxParameter = b_Tax.HasValue
                ? new ObjectParameter("b_Tax", b_Tax)
                : new ObjectParameter("b_Tax", typeof(bool));

            var b_Dim1Parameter = b_Dim1.HasValue
                ? new ObjectParameter("b_Dim1", b_Dim1)
                : new ObjectParameter("b_Dim1", typeof(bool));

            var b_DimCode1Parameter = b_DimCode1.HasValue
                ? new ObjectParameter("b_DimCode1", b_DimCode1)
                : new ObjectParameter("b_DimCode1", typeof(short));

            var b_Dim2Parameter = b_Dim2.HasValue
                ? new ObjectParameter("b_Dim2", b_Dim2)
                : new ObjectParameter("b_Dim2", typeof(bool));

            var b_DimCode2Parameter = b_DimCode2.HasValue
                ? new ObjectParameter("b_DimCode2", b_DimCode2)
                : new ObjectParameter("b_DimCode2", typeof(short));

            var b_Dim3Parameter = b_Dim3.HasValue
                ? new ObjectParameter("b_Dim3", b_Dim3)
                : new ObjectParameter("b_Dim3", typeof(bool));

            var b_DimCode3Parameter = b_DimCode3.HasValue
                ? new ObjectParameter("b_DimCode3", b_DimCode3)
                : new ObjectParameter("b_DimCode3", typeof(short));

            var b_Dim4Parameter = b_Dim4.HasValue
                ? new ObjectParameter("b_Dim4", b_Dim4)
                : new ObjectParameter("b_Dim4", typeof(bool));

            var b_DimCode4Parameter = b_DimCode4.HasValue
                ? new ObjectParameter("b_DimCode4", b_DimCode4)
                : new ObjectParameter("b_DimCode4", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TimeLink_GreateExportLines",
                clientIDParameter, b_AccountsParameter, b_SuppliersParameter, b_TaxParameter, b_Dim1Parameter,
                b_DimCode1Parameter, b_Dim2Parameter, b_DimCode2Parameter, b_Dim3Parameter, b_DimCode3Parameter,
                b_Dim4Parameter, b_DimCode4Parameter);
        }

        public virtual int Kompas_TimeLink_ImportLines(string clientID, string journal, Nullable<short> text_language,
            string current_userid, Nullable<int> dimension1, Nullable<int> dimension2, Nullable<int> dimension3,
            Nullable<int> dimension4, string data)
        {
            var clientIDParameter = clientID != null
                ? new ObjectParameter("ClientID", clientID)
                : new ObjectParameter("ClientID", typeof(string));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var dimension1Parameter = dimension1.HasValue
                ? new ObjectParameter("Dimension1", dimension1)
                : new ObjectParameter("Dimension1", typeof(int));

            var dimension2Parameter = dimension2.HasValue
                ? new ObjectParameter("Dimension2", dimension2)
                : new ObjectParameter("Dimension2", typeof(int));

            var dimension3Parameter = dimension3.HasValue
                ? new ObjectParameter("Dimension3", dimension3)
                : new ObjectParameter("Dimension3", typeof(int));

            var dimension4Parameter = dimension4.HasValue
                ? new ObjectParameter("Dimension4", dimension4)
                : new ObjectParameter("Dimension4", typeof(int));

            var dataParameter = data != null
                ? new ObjectParameter("Data", data)
                : new ObjectParameter("Data", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TimeLink_ImportLines",
                clientIDParameter, journalParameter, text_languageParameter, current_useridParameter,
                dimension1Parameter, dimension2Parameter, dimension3Parameter, dimension4Parameter, dataParameter);
        }

        public virtual ObjectResult<Kompas_TimeManager_CreateOrder_Result> Kompas_TimeManager_CreateOrder(
            string customer, string item, Nullable<short> text_language, string current_userid)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_TimeManager_CreateOrder_Result>(
                    "Kompas_TimeManager_CreateOrder", customerParameter, itemParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual ObjectResult<Kompas_TransactionsByRecordID_Result> Kompas_TransactionsByRecordID(
            Nullable<int> recordID, Nullable<bool> suppressTaxInfo)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var suppressTaxInfoParameter = suppressTaxInfo.HasValue
                ? new ObjectParameter("SuppressTaxInfo", suppressTaxInfo)
                : new ObjectParameter("SuppressTaxInfo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_TransactionsByRecordID_Result>(
                    "Kompas_TransactionsByRecordID", recordIDParameter, suppressTaxInfoParameter);
        }

        public virtual int Kompas_TransOpenItem_Update(Nullable<int> param_SettleRef, Nullable<int> param_TransRef,
            Nullable<double> param_Amount, Nullable<double> param_SettleRate, Nullable<double> param_TransRate,
            Nullable<System.DateTime> param_SettledDate)
        {
            var param_SettleRefParameter = param_SettleRef.HasValue
                ? new ObjectParameter("Param_SettleRef", param_SettleRef)
                : new ObjectParameter("Param_SettleRef", typeof(int));

            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_SettleRateParameter = param_SettleRate.HasValue
                ? new ObjectParameter("Param_SettleRate", param_SettleRate)
                : new ObjectParameter("Param_SettleRate", typeof(double));

            var param_TransRateParameter = param_TransRate.HasValue
                ? new ObjectParameter("Param_TransRate", param_TransRate)
                : new ObjectParameter("Param_TransRate", typeof(double));

            var param_SettledDateParameter = param_SettledDate.HasValue
                ? new ObjectParameter("Param_SettledDate", param_SettledDate)
                : new ObjectParameter("Param_SettledDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TransOpenItem_Update",
                param_SettleRefParameter, param_TransRefParameter, param_AmountParameter, param_SettleRateParameter,
                param_TransRateParameter, param_SettledDateParameter);
        }

        public virtual int Kompas_TransTransferNew(Nullable<System.DateTime> param_OpeningDate,
            Nullable<System.DateTime> param_Starting, Nullable<System.DateTime> param_Ending,
            Nullable<int> param_Language, string param_UserName, Nullable<bool> param_UseDistribution)
        {
            var param_OpeningDateParameter = param_OpeningDate.HasValue
                ? new ObjectParameter("Param_OpeningDate", param_OpeningDate)
                : new ObjectParameter("Param_OpeningDate", typeof(System.DateTime));

            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(int));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_UseDistributionParameter = param_UseDistribution.HasValue
                ? new ObjectParameter("Param_UseDistribution", param_UseDistribution)
                : new ObjectParameter("Param_UseDistribution", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_TransTransferNew",
                param_OpeningDateParameter, param_StartingParameter, param_EndingParameter, param_LanguageParameter,
                param_UserNameParameter, param_UseDistributionParameter);
        }

        public virtual ObjectResult<Kompas_TransTransferNewCheck_Result> Kompas_TransTransferNewCheck()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_TransTransferNewCheck_Result>(
                    "Kompas_TransTransferNewCheck");
        }

        public virtual int Kompas_UpdateBalanceSheetPreferences(string param_UserName,
            Nullable<bool> param_UseDimensions, Nullable<short> param_DimLevel1, Nullable<short> param_DimLevel2,
            Nullable<short> param_DimLevel3, Nullable<short> param_DimLevel4, string param_Account100Pct)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_UseDimensionsParameter = param_UseDimensions.HasValue
                ? new ObjectParameter("Param_UseDimensions", param_UseDimensions)
                : new ObjectParameter("Param_UseDimensions", typeof(bool));

            var param_DimLevel1Parameter = param_DimLevel1.HasValue
                ? new ObjectParameter("Param_DimLevel1", param_DimLevel1)
                : new ObjectParameter("Param_DimLevel1", typeof(short));

            var param_DimLevel2Parameter = param_DimLevel2.HasValue
                ? new ObjectParameter("Param_DimLevel2", param_DimLevel2)
                : new ObjectParameter("Param_DimLevel2", typeof(short));

            var param_DimLevel3Parameter = param_DimLevel3.HasValue
                ? new ObjectParameter("Param_DimLevel3", param_DimLevel3)
                : new ObjectParameter("Param_DimLevel3", typeof(short));

            var param_DimLevel4Parameter = param_DimLevel4.HasValue
                ? new ObjectParameter("Param_DimLevel4", param_DimLevel4)
                : new ObjectParameter("Param_DimLevel4", typeof(short));

            var param_Account100PctParameter = param_Account100Pct != null
                ? new ObjectParameter("Param_Account100Pct", param_Account100Pct)
                : new ObjectParameter("Param_Account100Pct", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UpdateBalanceSheetPreferences",
                param_UserNameParameter, param_UseDimensionsParameter, param_DimLevel1Parameter,
                param_DimLevel2Parameter, param_DimLevel3Parameter, param_DimLevel4Parameter,
                param_Account100PctParameter);
        }

        public virtual int Kompas_UpdateCustomsNoOnLines(string param_Item, string param_CustomsNo,
            Nullable<bool> param_UpdateLines, Nullable<bool> param_UpdateLinesEntry,
            Nullable<bool> param_UpdateIntrastatLines)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CustomsNoParameter = param_CustomsNo != null
                ? new ObjectParameter("Param_CustomsNo", param_CustomsNo)
                : new ObjectParameter("Param_CustomsNo", typeof(string));

            var param_UpdateLinesParameter = param_UpdateLines.HasValue
                ? new ObjectParameter("Param_UpdateLines", param_UpdateLines)
                : new ObjectParameter("Param_UpdateLines", typeof(bool));

            var param_UpdateLinesEntryParameter = param_UpdateLinesEntry.HasValue
                ? new ObjectParameter("Param_UpdateLinesEntry", param_UpdateLinesEntry)
                : new ObjectParameter("Param_UpdateLinesEntry", typeof(bool));

            var param_UpdateIntrastatLinesParameter = param_UpdateIntrastatLines.HasValue
                ? new ObjectParameter("Param_UpdateIntrastatLines", param_UpdateIntrastatLines)
                : new ObjectParameter("Param_UpdateIntrastatLines", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UpdateCustomsNoOnLines",
                param_ItemParameter, param_CustomsNoParameter, param_UpdateLinesParameter,
                param_UpdateLinesEntryParameter, param_UpdateIntrastatLinesParameter);
        }

        public virtual int Kompas_UpdateProjectInfoFromCustomer(string param_CustomerFrom, string param_CustomerTo,
            string param_GroupFrom, string param_GroupTo, Nullable<bool> param_UpdateName,
            Nullable<bool> param_UpdateAddress1, Nullable<bool> param_UpdateAddress2,
            Nullable<bool> param_UpdateAddress3, Nullable<bool> param_UpdateCity, Nullable<bool> param_UpdateCountry,
            Nullable<bool> param_UpdateContact, Nullable<bool> param_UpdatePriceList, Nullable<bool> param_UpdatePhone,
            Nullable<bool> param_UpdateFax, Nullable<bool> param_UpdateMobile)
        {
            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_UpdateNameParameter = param_UpdateName.HasValue
                ? new ObjectParameter("Param_UpdateName", param_UpdateName)
                : new ObjectParameter("Param_UpdateName", typeof(bool));

            var param_UpdateAddress1Parameter = param_UpdateAddress1.HasValue
                ? new ObjectParameter("Param_UpdateAddress1", param_UpdateAddress1)
                : new ObjectParameter("Param_UpdateAddress1", typeof(bool));

            var param_UpdateAddress2Parameter = param_UpdateAddress2.HasValue
                ? new ObjectParameter("Param_UpdateAddress2", param_UpdateAddress2)
                : new ObjectParameter("Param_UpdateAddress2", typeof(bool));

            var param_UpdateAddress3Parameter = param_UpdateAddress3.HasValue
                ? new ObjectParameter("Param_UpdateAddress3", param_UpdateAddress3)
                : new ObjectParameter("Param_UpdateAddress3", typeof(bool));

            var param_UpdateCityParameter = param_UpdateCity.HasValue
                ? new ObjectParameter("Param_UpdateCity", param_UpdateCity)
                : new ObjectParameter("Param_UpdateCity", typeof(bool));

            var param_UpdateCountryParameter = param_UpdateCountry.HasValue
                ? new ObjectParameter("Param_UpdateCountry", param_UpdateCountry)
                : new ObjectParameter("Param_UpdateCountry", typeof(bool));

            var param_UpdateContactParameter = param_UpdateContact.HasValue
                ? new ObjectParameter("Param_UpdateContact", param_UpdateContact)
                : new ObjectParameter("Param_UpdateContact", typeof(bool));

            var param_UpdatePriceListParameter = param_UpdatePriceList.HasValue
                ? new ObjectParameter("Param_UpdatePriceList", param_UpdatePriceList)
                : new ObjectParameter("Param_UpdatePriceList", typeof(bool));

            var param_UpdatePhoneParameter = param_UpdatePhone.HasValue
                ? new ObjectParameter("Param_UpdatePhone", param_UpdatePhone)
                : new ObjectParameter("Param_UpdatePhone", typeof(bool));

            var param_UpdateFaxParameter = param_UpdateFax.HasValue
                ? new ObjectParameter("Param_UpdateFax", param_UpdateFax)
                : new ObjectParameter("Param_UpdateFax", typeof(bool));

            var param_UpdateMobileParameter = param_UpdateMobile.HasValue
                ? new ObjectParameter("Param_UpdateMobile", param_UpdateMobile)
                : new ObjectParameter("Param_UpdateMobile", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UpdateProjectInfoFromCustomer",
                param_CustomerFromParameter, param_CustomerToParameter, param_GroupFromParameter, param_GroupToParameter,
                param_UpdateNameParameter, param_UpdateAddress1Parameter, param_UpdateAddress2Parameter,
                param_UpdateAddress3Parameter, param_UpdateCityParameter, param_UpdateCountryParameter,
                param_UpdateContactParameter, param_UpdatePriceListParameter, param_UpdatePhoneParameter,
                param_UpdateFaxParameter, param_UpdateMobileParameter);
        }

        public virtual int Kompas_UserFormGridSetup_Update(string userName, string formName, Nullable<byte> gridType,
            string gridName, Nullable<int> rowHeight, string columns, string noViewColumns)
        {
            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var formNameParameter = formName != null
                ? new ObjectParameter("FormName", formName)
                : new ObjectParameter("FormName", typeof(string));

            var gridTypeParameter = gridType.HasValue
                ? new ObjectParameter("GridType", gridType)
                : new ObjectParameter("GridType", typeof(byte));

            var gridNameParameter = gridName != null
                ? new ObjectParameter("GridName", gridName)
                : new ObjectParameter("GridName", typeof(string));

            var rowHeightParameter = rowHeight.HasValue
                ? new ObjectParameter("RowHeight", rowHeight)
                : new ObjectParameter("RowHeight", typeof(int));

            var columnsParameter = columns != null
                ? new ObjectParameter("Columns", columns)
                : new ObjectParameter("Columns", typeof(string));

            var noViewColumnsParameter = noViewColumns != null
                ? new ObjectParameter("NoViewColumns", noViewColumns)
                : new ObjectParameter("NoViewColumns", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UserFormGridSetup_Update",
                userNameParameter, formNameParameter, gridTypeParameter, gridNameParameter, rowHeightParameter,
                columnsParameter, noViewColumnsParameter);
        }

        public virtual int Kompas_UserFormPositions_Copy(string param_FromCompany, string param_FromUser,
            string param_ToUser, Nullable<short> param_Option, string param_CurrentCompany)
        {
            var param_FromCompanyParameter = param_FromCompany != null
                ? new ObjectParameter("Param_FromCompany", param_FromCompany)
                : new ObjectParameter("Param_FromCompany", typeof(string));

            var param_FromUserParameter = param_FromUser != null
                ? new ObjectParameter("Param_FromUser", param_FromUser)
                : new ObjectParameter("Param_FromUser", typeof(string));

            var param_ToUserParameter = param_ToUser != null
                ? new ObjectParameter("Param_ToUser", param_ToUser)
                : new ObjectParameter("Param_ToUser", typeof(string));

            var param_OptionParameter = param_Option.HasValue
                ? new ObjectParameter("Param_Option", param_Option)
                : new ObjectParameter("Param_Option", typeof(short));

            var param_CurrentCompanyParameter = param_CurrentCompany != null
                ? new ObjectParameter("Param_CurrentCompany", param_CurrentCompany)
                : new ObjectParameter("Param_CurrentCompany", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UserFormPositions_Copy",
                param_FromCompanyParameter, param_FromUserParameter, param_ToUserParameter, param_OptionParameter,
                param_CurrentCompanyParameter);
        }

        public virtual int Kompas_UserLastViewRecord_AddUpdate(string param_UserName, Nullable<short> param_Module,
            string param_KeyValue1, string param_KeyValue2)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_KeyValue1Parameter = param_KeyValue1 != null
                ? new ObjectParameter("Param_KeyValue1", param_KeyValue1)
                : new ObjectParameter("Param_KeyValue1", typeof(string));

            var param_KeyValue2Parameter = param_KeyValue2 != null
                ? new ObjectParameter("Param_KeyValue2", param_KeyValue2)
                : new ObjectParameter("Param_KeyValue2", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_UserLastViewRecord_AddUpdate",
                param_UserNameParameter, param_ModuleParameter, param_KeyValue1Parameter, param_KeyValue2Parameter);
        }

        public virtual ObjectResult<Kompas_Voucher_GetNext_Result> Kompas_Voucher_GetNext(string param_Voucher,
            Nullable<bool> param_TTS, string param_Description, Nullable<double> param_Min, Nullable<double> param_Max,
            Nullable<double> param_Next)
        {
            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_TTSParameter = param_TTS.HasValue
                ? new ObjectParameter("Param_TTS", param_TTS)
                : new ObjectParameter("Param_TTS", typeof(bool));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_MinParameter = param_Min.HasValue
                ? new ObjectParameter("Param_Min", param_Min)
                : new ObjectParameter("Param_Min", typeof(double));

            var param_MaxParameter = param_Max.HasValue
                ? new ObjectParameter("Param_Max", param_Max)
                : new ObjectParameter("Param_Max", typeof(double));

            var param_NextParameter = param_Next.HasValue
                ? new ObjectParameter("Param_Next", param_Next)
                : new ObjectParameter("Param_Next", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_Voucher_GetNext_Result>(
                    "Kompas_Voucher_GetNext", param_VoucherParameter, param_TTSParameter, param_DescriptionParameter,
                    param_MinParameter, param_MaxParameter, param_NextParameter);
        }

        public virtual int Kompas_Voucher_Update(string param_Voucher, Nullable<double> param_Next,
            Nullable<double> param_Minimum, Nullable<double> param_Maximum)
        {
            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_NextParameter = param_Next.HasValue
                ? new ObjectParameter("Param_Next", param_Next)
                : new ObjectParameter("Param_Next", typeof(double));

            var param_MinimumParameter = param_Minimum.HasValue
                ? new ObjectParameter("Param_Minimum", param_Minimum)
                : new ObjectParameter("Param_Minimum", typeof(double));

            var param_MaximumParameter = param_Maximum.HasValue
                ? new ObjectParameter("Param_Maximum", param_Maximum)
                : new ObjectParameter("Param_Maximum", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_Voucher_Update",
                param_VoucherParameter, param_NextParameter, param_MinimumParameter, param_MaximumParameter);
        }

        public virtual int Kompas_WaterMeter_CreateLeavningLines(string customer, Nullable<System.DateTime> startDate)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Kompas_WaterMeter_CreateLeavningLines", customerParameter, startDateParameter);
        }

        public virtual ObjectResult<Kompas_WaterMeter_CreateOrder_Result> Kompas_WaterMeter_CreateOrder(string host,
            Nullable<int> tP, Nullable<byte> month, Nullable<bool> isReturn, Nullable<bool> createOrder,
            Nullable<byte> isStatement, string voucher, string reports, Nullable<System.DateTime> currentDate,
            string remarksAconto, string remarksStatement, Nullable<byte> isMove, ObjectParameter orderNo,
            Nullable<short> text_language, string current_userid, Nullable<bool> compressAcontoLines,
            string remarksStatementAconto, Nullable<bool> itemAccountOnAcontoLines)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var monthParameter = month.HasValue
                ? new ObjectParameter("Month", month)
                : new ObjectParameter("Month", typeof(byte));

            var isReturnParameter = isReturn.HasValue
                ? new ObjectParameter("IsReturn", isReturn)
                : new ObjectParameter("IsReturn", typeof(bool));

            var createOrderParameter = createOrder.HasValue
                ? new ObjectParameter("CreateOrder", createOrder)
                : new ObjectParameter("CreateOrder", typeof(bool));

            var isStatementParameter = isStatement.HasValue
                ? new ObjectParameter("IsStatement", isStatement)
                : new ObjectParameter("IsStatement", typeof(byte));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var currentDateParameter = currentDate.HasValue
                ? new ObjectParameter("CurrentDate", currentDate)
                : new ObjectParameter("CurrentDate", typeof(System.DateTime));

            var remarksAcontoParameter = remarksAconto != null
                ? new ObjectParameter("RemarksAconto", remarksAconto)
                : new ObjectParameter("RemarksAconto", typeof(string));

            var remarksStatementParameter = remarksStatement != null
                ? new ObjectParameter("RemarksStatement", remarksStatement)
                : new ObjectParameter("RemarksStatement", typeof(string));

            var isMoveParameter = isMove.HasValue
                ? new ObjectParameter("IsMove", isMove)
                : new ObjectParameter("IsMove", typeof(byte));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var compressAcontoLinesParameter = compressAcontoLines.HasValue
                ? new ObjectParameter("CompressAcontoLines", compressAcontoLines)
                : new ObjectParameter("CompressAcontoLines", typeof(bool));

            var remarksStatementAcontoParameter = remarksStatementAconto != null
                ? new ObjectParameter("RemarksStatementAconto", remarksStatementAconto)
                : new ObjectParameter("RemarksStatementAconto", typeof(string));

            var itemAccountOnAcontoLinesParameter = itemAccountOnAcontoLines.HasValue
                ? new ObjectParameter("ItemAccountOnAcontoLines", itemAccountOnAcontoLines)
                : new ObjectParameter("ItemAccountOnAcontoLines", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_WaterMeter_CreateOrder_Result>(
                    "Kompas_WaterMeter_CreateOrder", hostParameter, tPParameter, monthParameter, isReturnParameter,
                    createOrderParameter, isStatementParameter, voucherParameter, reportsParameter, currentDateParameter,
                    remarksAcontoParameter, remarksStatementParameter, isMoveParameter, orderNo, text_languageParameter,
                    current_useridParameter, compressAcontoLinesParameter, remarksStatementAcontoParameter,
                    itemAccountOnAcontoLinesParameter);
        }

        public virtual ObjectResult<Kompas_WaterMeter_CustomerLeaving_Result> Kompas_WaterMeter_CustomerLeaving(
            string customer, string waterMeter, string reports, Nullable<int> tP, Nullable<short> text_language,
            string current_userid)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var waterMeterParameter = waterMeter != null
                ? new ObjectParameter("WaterMeter", waterMeter)
                : new ObjectParameter("WaterMeter", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_WaterMeter_CustomerLeaving_Result>(
                    "Kompas_WaterMeter_CustomerLeaving", customerParameter, waterMeterParameter, reportsParameter,
                    tPParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Kompas_WaterMeter_Delete(string customer, string waterMeter)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var waterMeterParameter = waterMeter != null
                ? new ObjectParameter("WaterMeter", waterMeter)
                : new ObjectParameter("WaterMeter", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeter_Delete",
                customerParameter, waterMeterParameter);
        }

        public virtual ObjectResult<Kompas_WaterMeter_GetEntries_Result> Kompas_WaterMeter_GetEntries(string customer,
            string waterMeter, Nullable<bool> openOnly)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var waterMeterParameter = waterMeter != null
                ? new ObjectParameter("WaterMeter", waterMeter)
                : new ObjectParameter("WaterMeter", typeof(string));

            var openOnlyParameter = openOnly.HasValue
                ? new ObjectParameter("OpenOnly", openOnly)
                : new ObjectParameter("OpenOnly", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_WaterMeter_GetEntries_Result>(
                    "Kompas_WaterMeter_GetEntries", customerParameter, waterMeterParameter, openOnlyParameter);
        }

        public virtual ObjectResult<Kompas_WaterMeter_HentData_Result> Kompas_WaterMeter_HentData(string host,
            Nullable<int> tP, Nullable<byte> month, Nullable<byte> isStatement, Nullable<short> sorting)
        {
            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            var monthParameter = month.HasValue
                ? new ObjectParameter("Month", month)
                : new ObjectParameter("Month", typeof(byte));

            var isStatementParameter = isStatement.HasValue
                ? new ObjectParameter("IsStatement", isStatement)
                : new ObjectParameter("IsStatement", typeof(byte));

            var sortingParameter = sorting.HasValue
                ? new ObjectParameter("Sorting", sorting)
                : new ObjectParameter("Sorting", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_WaterMeter_HentData_Result>(
                    "Kompas_WaterMeter_HentData", hostParameter, tPParameter, monthParameter, isStatementParameter,
                    sortingParameter);
        }

        public virtual int Kompas_WaterMeter_InsertLine(string customer, string waterMeter, Nullable<int> lineNo)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var waterMeterParameter = waterMeter != null
                ? new ObjectParameter("WaterMeter", waterMeter)
                : new ObjectParameter("WaterMeter", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeter_InsertLine",
                customerParameter, waterMeterParameter, lineNoParameter);
        }

        public virtual int Kompas_WaterMeter_SelectOrder(string customerFrom, string customerTo, string groupingFrom,
            string groupingTo, string categoryFrom, string categoryTo, Nullable<byte> collectMonth,
            Nullable<bool> isReturn, Nullable<byte> isStatement, string host, Nullable<int> tP)
        {
            var customerFromParameter = customerFrom != null
                ? new ObjectParameter("CustomerFrom", customerFrom)
                : new ObjectParameter("CustomerFrom", typeof(string));

            var customerToParameter = customerTo != null
                ? new ObjectParameter("CustomerTo", customerTo)
                : new ObjectParameter("CustomerTo", typeof(string));

            var groupingFromParameter = groupingFrom != null
                ? new ObjectParameter("GroupingFrom", groupingFrom)
                : new ObjectParameter("GroupingFrom", typeof(string));

            var groupingToParameter = groupingTo != null
                ? new ObjectParameter("GroupingTo", groupingTo)
                : new ObjectParameter("GroupingTo", typeof(string));

            var categoryFromParameter = categoryFrom != null
                ? new ObjectParameter("CategoryFrom", categoryFrom)
                : new ObjectParameter("CategoryFrom", typeof(string));

            var categoryToParameter = categoryTo != null
                ? new ObjectParameter("CategoryTo", categoryTo)
                : new ObjectParameter("CategoryTo", typeof(string));

            var collectMonthParameter = collectMonth.HasValue
                ? new ObjectParameter("CollectMonth", collectMonth)
                : new ObjectParameter("CollectMonth", typeof(byte));

            var isReturnParameter = isReturn.HasValue
                ? new ObjectParameter("IsReturn", isReturn)
                : new ObjectParameter("IsReturn", typeof(bool));

            var isStatementParameter = isStatement.HasValue
                ? new ObjectParameter("IsStatement", isStatement)
                : new ObjectParameter("IsStatement", typeof(byte));

            var hostParameter = host != null
                ? new ObjectParameter("Host", host)
                : new ObjectParameter("Host", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeter_SelectOrder",
                customerFromParameter, customerToParameter, groupingFromParameter, groupingToParameter,
                categoryFromParameter, categoryToParameter, collectMonthParameter, isReturnParameter,
                isStatementParameter, hostParameter, tPParameter);
        }

        public virtual ObjectResult<Kompas_WaterMeter_Statistic_Result> Kompas_WaterMeter_Statistic(string customer,
            string waterMeter)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var waterMeterParameter = waterMeter != null
                ? new ObjectParameter("WaterMeter", waterMeter)
                : new ObjectParameter("WaterMeter", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Kompas_WaterMeter_Statistic_Result>(
                    "Kompas_WaterMeter_Statistic", customerParameter, waterMeterParameter);
        }

        public virtual int Kompas_WaterMeterCopyCustomer(string customer, string voucher,
            Nullable<System.DateTime> startDate, Nullable<System.DateTime> leavingDate)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var leavingDateParameter = leavingDate.HasValue
                ? new ObjectParameter("LeavingDate", leavingDate)
                : new ObjectParameter("LeavingDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeterCopyCustomer",
                customerParameter, voucherParameter, startDateParameter, leavingDateParameter);
        }

        public virtual int Kompas_WaterMeterItems_UpdateLines(string fromItem, string toItem, string fromCustomer,
            string toCustomer, string fromCustomerCategory, string toCustomerCategory, string fromCustomerGrouping,
            string toCustomerGrouping, Nullable<bool> updateDescription, Nullable<bool> updateSalesPrice,
            Nullable<bool> updateNextSalesPrice, Nullable<bool> updateTax)
        {
            var fromItemParameter = fromItem != null
                ? new ObjectParameter("FromItem", fromItem)
                : new ObjectParameter("FromItem", typeof(string));

            var toItemParameter = toItem != null
                ? new ObjectParameter("ToItem", toItem)
                : new ObjectParameter("ToItem", typeof(string));

            var fromCustomerParameter = fromCustomer != null
                ? new ObjectParameter("FromCustomer", fromCustomer)
                : new ObjectParameter("FromCustomer", typeof(string));

            var toCustomerParameter = toCustomer != null
                ? new ObjectParameter("ToCustomer", toCustomer)
                : new ObjectParameter("ToCustomer", typeof(string));

            var fromCustomerCategoryParameter = fromCustomerCategory != null
                ? new ObjectParameter("FromCustomerCategory", fromCustomerCategory)
                : new ObjectParameter("FromCustomerCategory", typeof(string));

            var toCustomerCategoryParameter = toCustomerCategory != null
                ? new ObjectParameter("ToCustomerCategory", toCustomerCategory)
                : new ObjectParameter("ToCustomerCategory", typeof(string));

            var fromCustomerGroupingParameter = fromCustomerGrouping != null
                ? new ObjectParameter("FromCustomerGrouping", fromCustomerGrouping)
                : new ObjectParameter("FromCustomerGrouping", typeof(string));

            var toCustomerGroupingParameter = toCustomerGrouping != null
                ? new ObjectParameter("ToCustomerGrouping", toCustomerGrouping)
                : new ObjectParameter("ToCustomerGrouping", typeof(string));

            var updateDescriptionParameter = updateDescription.HasValue
                ? new ObjectParameter("UpdateDescription", updateDescription)
                : new ObjectParameter("UpdateDescription", typeof(bool));

            var updateSalesPriceParameter = updateSalesPrice.HasValue
                ? new ObjectParameter("UpdateSalesPrice", updateSalesPrice)
                : new ObjectParameter("UpdateSalesPrice", typeof(bool));

            var updateNextSalesPriceParameter = updateNextSalesPrice.HasValue
                ? new ObjectParameter("UpdateNextSalesPrice", updateNextSalesPrice)
                : new ObjectParameter("UpdateNextSalesPrice", typeof(bool));

            var updateTaxParameter = updateTax.HasValue
                ? new ObjectParameter("UpdateTax", updateTax)
                : new ObjectParameter("UpdateTax", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeterItems_UpdateLines",
                fromItemParameter, toItemParameter, fromCustomerParameter, toCustomerParameter,
                fromCustomerCategoryParameter, toCustomerCategoryParameter, fromCustomerGroupingParameter,
                toCustomerGroupingParameter, updateDescriptionParameter, updateSalesPriceParameter,
                updateNextSalesPriceParameter, updateTaxParameter);
        }

        public virtual int Kompas_WaterMeterLog_DeleteCreatedOrders(Nullable<int> procedureTrail, string userName)
        {
            var procedureTrailParameter = procedureTrail.HasValue
                ? new ObjectParameter("ProcedureTrail", procedureTrail)
                : new ObjectParameter("ProcedureTrail", typeof(int));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Kompas_WaterMeterLog_DeleteCreatedOrders", procedureTrailParameter, userNameParameter);
        }

        public virtual int Kompas_WaterMeterWorkSheet_Check(string journal)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeterWorkSheet_Check",
                journalParameter);
        }

        public virtual int Kompas_WaterMeterWorkSheet_Post(string userName, string journal)
        {
            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Kompas_WaterMeterWorkSheet_Post",
                userNameParameter, journalParameter);
        }

        public virtual ObjectResult<string> Kompas_WorksheetArchive_GetDistinctJournal(Nullable<short> viewModule,
            Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var viewModuleParameter = viewModule.HasValue
                ? new ObjectParameter("ViewModule", viewModule)
                : new ObjectParameter("ViewModule", typeof(short));

            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "Kompas_WorksheetArchive_GetDistinctJournal", viewModuleParameter, dateFromParameter,
                    dateToParameter);
        }

        public virtual ObjectResult<KompasReport_AdjustInventory_Result> KompasReport_AdjustInventory(
            string param_DataLinkID, Nullable<int> param_dltAdjustInventory)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<KompasReport_AdjustInventory_Result>(
                    "KompasReport_AdjustInventory", param_DataLinkIDParameter, param_dltAdjustInventoryParameter);
        }

        public virtual int KompasReport_BalanceAgeingAllCustomers(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, string param_CustomerFrom, string param_CustomerTo,
            string param_GroupFrom, string param_GroupTo, Nullable<bool> param_UseOpen)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_UseOpenParameter = param_UseOpen.HasValue
                ? new ObjectParameter("Param_UseOpen", param_UseOpen)
                : new ObjectParameter("Param_UseOpen", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "KompasReport_BalanceAgeingAllCustomers", param_DateFromParameter, param_DateToParameter,
                param_CustomerFromParameter, param_CustomerToParameter, param_GroupFromParameter, param_GroupToParameter,
                param_UseOpenParameter);
        }

        public virtual int KompasReport_BalanceAgeingAllSuppliers(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, string param_SupplierFrom, string param_SupplierTo,
            string param_GroupFrom, string param_GroupTo, Nullable<bool> param_UseOpen)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_UseOpenParameter = param_UseOpen.HasValue
                ? new ObjectParameter("Param_UseOpen", param_UseOpen)
                : new ObjectParameter("Param_UseOpen", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "KompasReport_BalanceAgeingAllSuppliers", param_DateFromParameter, param_DateToParameter,
                param_SupplierFromParameter, param_SupplierToParameter, param_GroupFromParameter, param_GroupToParameter,
                param_UseOpenParameter);
        }

        public virtual int KompasReport_BOMListSubBOMList(string param_Master)
        {
            var param_MasterParameter = param_Master != null
                ? new ObjectParameter("Param_Master", param_Master)
                : new ObjectParameter("Param_Master", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_BOMListSubBOMList",
                param_MasterParameter);
        }

        public virtual int KompasReport_CashFlowOverview(Nullable<System.DateTime> startDate,
            Nullable<System.DateTime> endDate, Nullable<byte> intervalType, Nullable<short> intervalDays,
            Nullable<byte> calendarType, Nullable<short> language)
        {
            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var intervalTypeParameter = intervalType.HasValue
                ? new ObjectParameter("IntervalType", intervalType)
                : new ObjectParameter("IntervalType", typeof(byte));

            var intervalDaysParameter = intervalDays.HasValue
                ? new ObjectParameter("IntervalDays", intervalDays)
                : new ObjectParameter("IntervalDays", typeof(short));

            var calendarTypeParameter = calendarType.HasValue
                ? new ObjectParameter("CalendarType", calendarType)
                : new ObjectParameter("CalendarType", typeof(byte));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_CashFlowOverview",
                startDateParameter, endDateParameter, intervalTypeParameter, intervalDaysParameter,
                calendarTypeParameter, languageParameter);
        }

        public virtual int KompasReport_CustomerDueOverview(Nullable<System.DateTime> startDate,
            Nullable<System.DateTime> endDate, Nullable<byte> intervalType, Nullable<short> intervalDays,
            Nullable<byte> calendarType, Nullable<short> language)
        {
            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var intervalTypeParameter = intervalType.HasValue
                ? new ObjectParameter("IntervalType", intervalType)
                : new ObjectParameter("IntervalType", typeof(byte));

            var intervalDaysParameter = intervalDays.HasValue
                ? new ObjectParameter("IntervalDays", intervalDays)
                : new ObjectParameter("IntervalDays", typeof(short));

            var calendarTypeParameter = calendarType.HasValue
                ? new ObjectParameter("CalendarType", calendarType)
                : new ObjectParameter("CalendarType", typeof(byte));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_CustomerDueOverview",
                startDateParameter, endDateParameter, intervalTypeParameter, intervalDaysParameter,
                calendarTypeParameter, languageParameter);
        }

        public virtual ObjectResult<KompasReport_CustomerStatisticsByMonth_Result>
            KompasReport_CustomerStatisticsByMonth(Nullable<System.DateTime> yearBegin,
                Nullable<System.DateTime> yearEnd, Nullable<int> language, Nullable<bool> sumQuantity,
                Nullable<bool> noZeroKonti)
        {
            var yearBeginParameter = yearBegin.HasValue
                ? new ObjectParameter("YearBegin", yearBegin)
                : new ObjectParameter("YearBegin", typeof(System.DateTime));

            var yearEndParameter = yearEnd.HasValue
                ? new ObjectParameter("YearEnd", yearEnd)
                : new ObjectParameter("YearEnd", typeof(System.DateTime));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            var sumQuantityParameter = sumQuantity.HasValue
                ? new ObjectParameter("SumQuantity", sumQuantity)
                : new ObjectParameter("SumQuantity", typeof(bool));

            var noZeroKontiParameter = noZeroKonti.HasValue
                ? new ObjectParameter("NoZeroKonti", noZeroKonti)
                : new ObjectParameter("NoZeroKonti", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_CustomerStatisticsByMonth_Result>(
                        "KompasReport_CustomerStatisticsByMonth", yearBeginParameter, yearEndParameter,
                        languageParameter, sumQuantityParameter, noZeroKontiParameter);
        }

        public virtual int KompasReport_InventorDescriptions()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_InventorDescriptions");
        }

        public virtual ObjectResult<KompasReport_InventoryOnHand_Statistics_Result>
            KompasReport_InventoryOnHand_Statistics(Nullable<System.DateTime> lines_Date_From)
        {
            var lines_Date_FromParameter = lines_Date_From.HasValue
                ? new ObjectParameter("Lines_Date_From", lines_Date_From)
                : new ObjectParameter("Lines_Date_From", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_InventoryOnHand_Statistics_Result>(
                        "KompasReport_InventoryOnHand_Statistics", lines_Date_FromParameter);
        }

        public virtual ObjectResult<KompasReport_InventoryPurchaseStatisticsByMonth_Result>
            KompasReport_InventoryPurchaseStatisticsByMonth(Nullable<System.DateTime> yearBegin,
                Nullable<System.DateTime> yearEnd, Nullable<int> language, Nullable<bool> sumQuantity,
                Nullable<bool> noZeroKonti)
        {
            var yearBeginParameter = yearBegin.HasValue
                ? new ObjectParameter("YearBegin", yearBegin)
                : new ObjectParameter("YearBegin", typeof(System.DateTime));

            var yearEndParameter = yearEnd.HasValue
                ? new ObjectParameter("YearEnd", yearEnd)
                : new ObjectParameter("YearEnd", typeof(System.DateTime));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            var sumQuantityParameter = sumQuantity.HasValue
                ? new ObjectParameter("SumQuantity", sumQuantity)
                : new ObjectParameter("SumQuantity", typeof(bool));

            var noZeroKontiParameter = noZeroKonti.HasValue
                ? new ObjectParameter("NoZeroKonti", noZeroKonti)
                : new ObjectParameter("NoZeroKonti", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_InventoryPurchaseStatisticsByMonth_Result>(
                        "KompasReport_InventoryPurchaseStatisticsByMonth", yearBeginParameter, yearEndParameter,
                        languageParameter, sumQuantityParameter, noZeroKontiParameter);
        }

        public virtual ObjectResult<KompasReport_InventorySalesStatisticsByMonth_Result>
            KompasReport_InventorySalesStatisticsByMonth(Nullable<System.DateTime> yearBegin,
                Nullable<System.DateTime> yearEnd, Nullable<int> language, Nullable<bool> sumQuantity,
                Nullable<bool> noZeroKonti)
        {
            var yearBeginParameter = yearBegin.HasValue
                ? new ObjectParameter("YearBegin", yearBegin)
                : new ObjectParameter("YearBegin", typeof(System.DateTime));

            var yearEndParameter = yearEnd.HasValue
                ? new ObjectParameter("YearEnd", yearEnd)
                : new ObjectParameter("YearEnd", typeof(System.DateTime));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            var sumQuantityParameter = sumQuantity.HasValue
                ? new ObjectParameter("SumQuantity", sumQuantity)
                : new ObjectParameter("SumQuantity", typeof(bool));

            var noZeroKontiParameter = noZeroKonti.HasValue
                ? new ObjectParameter("NoZeroKonti", noZeroKonti)
                : new ObjectParameter("NoZeroKonti", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_InventorySalesStatisticsByMonth_Result>(
                        "KompasReport_InventorySalesStatisticsByMonth", yearBeginParameter, yearEndParameter,
                        languageParameter, sumQuantityParameter, noZeroKontiParameter);
        }

        public virtual int KompasReport_OrderDocument_BOM(string param_OrderNo, Nullable<double> param_Trail,
            Nullable<bool> param_IsInvoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_OrderDocument_BOM",
                param_OrderNoParameter, param_TrailParameter, param_IsInvoiceParameter);
        }

        public virtual int KompasReport_OrderDocument_Total(string param_OrderNo, Nullable<double> param_Trail,
            Nullable<bool> param_IsInvoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_OrderDocument_Total",
                param_OrderNoParameter, param_TrailParameter, param_IsInvoiceParameter);
        }

        public virtual int KompasReport_Project_ActualData(string project)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_Project_ActualData",
                projectParameter);
        }

        public virtual int KompasReport_ProjectBudgetControl(Nullable<System.DateTime> dateFrom,
            Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_ProjectBudgetControl",
                dateFromParameter, dateToParameter);
        }

        public virtual ObjectResult<KompasReport_ProjectedInventoryOnhandMonthly_Result>
            KompasReport_ProjectedInventoryOnhandMonthly(Nullable<System.DateTime> byDate)
        {
            var byDateParameter = byDate.HasValue
                ? new ObjectParameter("ByDate", byDate)
                : new ObjectParameter("ByDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_ProjectedInventoryOnhandMonthly_Result>(
                        "KompasReport_ProjectedInventoryOnhandMonthly", byDateParameter);
        }

        public virtual ObjectResult<KompasReport_ProjectedInventoryOnhandWeekly_Result>
            KompasReport_ProjectedInventoryOnhandWeekly(Nullable<System.DateTime> byDate, Nullable<int> language)
        {
            var byDateParameter = byDate.HasValue
                ? new ObjectParameter("ByDate", byDate)
                : new ObjectParameter("ByDate", typeof(System.DateTime));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_ProjectedInventoryOnhandWeekly_Result>(
                        "KompasReport_ProjectedInventoryOnhandWeekly", byDateParameter, languageParameter);
        }

        public virtual int KompasReport_ProjectEnhancedBudgetControl(Nullable<System.DateTime> dateFrom,
            Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "KompasReport_ProjectEnhancedBudgetControl", dateFromParameter, dateToParameter);
        }

        public virtual int KompasReport_ProjectKeyFigures(Nullable<System.DateTime> dateFrom,
            Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_ProjectKeyFigures",
                dateFromParameter, dateToParameter);
        }

        public virtual ObjectResult<KompasReport_ProjectOrderDocument_Result> KompasReport_ProjectOrderDocument(
            string param_OrderNo, Nullable<double> param_Trail, Nullable<bool> param_IsInvoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<KompasReport_ProjectOrderDocument_Result>(
                    "KompasReport_ProjectOrderDocument", param_OrderNoParameter, param_TrailParameter,
                    param_IsInvoiceParameter);
        }

        public virtual int KompasReport_ProjectPostCalculation(string project)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_ProjectPostCalculation",
                projectParameter);
        }

        public virtual int KompasReport_ProjectPostCalculationByCostCenter(Nullable<System.DateTime> dateFrom,
            Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "KompasReport_ProjectPostCalculationByCostCenter", dateFromParameter, dateToParameter);
        }

        public virtual ObjectResult<KompasReport_ProjectPurchaseDocument_Result> KompasReport_ProjectPurchaseDocument(
            string param_PurchaseNo, Nullable<double> param_Trail, Nullable<bool> param_IsInvoice)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_ProjectPurchaseDocument_Result>(
                        "KompasReport_ProjectPurchaseDocument", param_PurchaseNoParameter, param_TrailParameter,
                        param_IsInvoiceParameter);
        }

        public virtual ObjectResult<KompasReport_ProjektlisteDB_Result> KompasReport_ProjektlisteDB(
            Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<KompasReport_ProjektlisteDB_Result>(
                    "KompasReport_ProjektlisteDB", dateFromParameter, dateToParameter);
        }

        public virtual ObjectResult<KompasReport_ProjektlisteDB_Oversigt_Result> KompasReport_ProjektlisteDB_Oversigt(
            Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue
                ? new ObjectParameter("DateFrom", dateFrom)
                : new ObjectParameter("DateFrom", typeof(System.DateTime));

            var dateToParameter = dateTo.HasValue
                ? new ObjectParameter("DateTo", dateTo)
                : new ObjectParameter("DateTo", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_ProjektlisteDB_Oversigt_Result>(
                        "KompasReport_ProjektlisteDB_Oversigt", dateFromParameter, dateToParameter);
        }

        public virtual ObjectResult<KompasReport_Provision_Result> KompasReport_Provision(
            Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue
                ? new ObjectParameter("FromDate", fromDate)
                : new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue
                ? new ObjectParameter("ToDate", toDate)
                : new ObjectParameter("ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<KompasReport_Provision_Result>(
                    "KompasReport_Provision", fromDateParameter, toDateParameter);
        }

        public virtual int KompasReport_PurchaseDocument_Total(string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_PurchaseDocument_Total",
                param_PurchaseNoParameter);
        }

        public virtual int KompasReport_SupplierDueOverview(Nullable<System.DateTime> startDate,
            Nullable<System.DateTime> endDate, Nullable<byte> intervalType, Nullable<short> intervalDays,
            Nullable<byte> calendarType, Nullable<short> language)
        {
            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var intervalTypeParameter = intervalType.HasValue
                ? new ObjectParameter("IntervalType", intervalType)
                : new ObjectParameter("IntervalType", typeof(byte));

            var intervalDaysParameter = intervalDays.HasValue
                ? new ObjectParameter("IntervalDays", intervalDays)
                : new ObjectParameter("IntervalDays", typeof(short));

            var calendarTypeParameter = calendarType.HasValue
                ? new ObjectParameter("CalendarType", calendarType)
                : new ObjectParameter("CalendarType", typeof(byte));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("KompasReport_SupplierDueOverview",
                startDateParameter, endDateParameter, intervalTypeParameter, intervalDaysParameter,
                calendarTypeParameter, languageParameter);
        }

        public virtual ObjectResult<KompasReport_SupplierStatisticsByMonth_Result>
            KompasReport_SupplierStatisticsByMonth(Nullable<System.DateTime> yearBegin,
                Nullable<System.DateTime> yearEnd, Nullable<int> language, Nullable<bool> noZeroKonti)
        {
            var yearBeginParameter = yearBegin.HasValue
                ? new ObjectParameter("YearBegin", yearBegin)
                : new ObjectParameter("YearBegin", typeof(System.DateTime));

            var yearEndParameter = yearEnd.HasValue
                ? new ObjectParameter("YearEnd", yearEnd)
                : new ObjectParameter("YearEnd", typeof(System.DateTime));

            var languageParameter = language.HasValue
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(int));

            var noZeroKontiParameter = noZeroKonti.HasValue
                ? new ObjectParameter("NoZeroKonti", noZeroKonti)
                : new ObjectParameter("NoZeroKonti", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<KompasReport_SupplierStatisticsByMonth_Result>(
                        "KompasReport_SupplierStatisticsByMonth", yearBeginParameter, yearEndParameter,
                        languageParameter, noZeroKontiParameter);
        }

        public virtual ObjectResult<Public_Accounts_AddNew_Result> Public_Accounts_AddNew(string account,
            string account2, Nullable<short> blocked, string consolidate, string costCenter, string currency,
            string defaultText, string department, string name, string name2, Nullable<bool> pageBreakBefore,
            string project, string purpose, string remarks, string reportCode1, string reportCode2, string reportCode3,
            string reportCode4, string setOff, Nullable<bool> statementPageBreakBefore, Nullable<short> tabTo,
            string tax, Nullable<bool> totalAfter, Nullable<byte> type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var account2Parameter = account2 != null
                ? new ObjectParameter("Account2", account2)
                : new ObjectParameter("Account2", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var consolidateParameter = consolidate != null
                ? new ObjectParameter("Consolidate", consolidate)
                : new ObjectParameter("Consolidate", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var defaultTextParameter = defaultText != null
                ? new ObjectParameter("DefaultText", defaultText)
                : new ObjectParameter("DefaultText", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var name2Parameter = name2 != null
                ? new ObjectParameter("Name2", name2)
                : new ObjectParameter("Name2", typeof(string));

            var pageBreakBeforeParameter = pageBreakBefore.HasValue
                ? new ObjectParameter("PageBreakBefore", pageBreakBefore)
                : new ObjectParameter("PageBreakBefore", typeof(bool));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportCode1Parameter = reportCode1 != null
                ? new ObjectParameter("ReportCode1", reportCode1)
                : new ObjectParameter("ReportCode1", typeof(string));

            var reportCode2Parameter = reportCode2 != null
                ? new ObjectParameter("ReportCode2", reportCode2)
                : new ObjectParameter("ReportCode2", typeof(string));

            var reportCode3Parameter = reportCode3 != null
                ? new ObjectParameter("ReportCode3", reportCode3)
                : new ObjectParameter("ReportCode3", typeof(string));

            var reportCode4Parameter = reportCode4 != null
                ? new ObjectParameter("ReportCode4", reportCode4)
                : new ObjectParameter("ReportCode4", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var statementPageBreakBeforeParameter = statementPageBreakBefore.HasValue
                ? new ObjectParameter("StatementPageBreakBefore", statementPageBreakBefore)
                : new ObjectParameter("StatementPageBreakBefore", typeof(bool));

            var tabToParameter = tabTo.HasValue
                ? new ObjectParameter("TabTo", tabTo)
                : new ObjectParameter("TabTo", typeof(short));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var totalAfterParameter = totalAfter.HasValue
                ? new ObjectParameter("TotalAfter", totalAfter)
                : new ObjectParameter("TotalAfter", typeof(bool));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Accounts_AddNew_Result>(
                    "Public_Accounts_AddNew", accountParameter, account2Parameter, blockedParameter,
                    consolidateParameter, costCenterParameter, currencyParameter, defaultTextParameter,
                    departmentParameter, nameParameter, name2Parameter, pageBreakBeforeParameter, projectParameter,
                    purposeParameter, remarksParameter, reportCode1Parameter, reportCode2Parameter, reportCode3Parameter,
                    reportCode4Parameter, setOffParameter, statementPageBreakBeforeParameter, tabToParameter,
                    taxParameter, totalAfterParameter, typeParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Accounts_Delete(string original_Account, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Accounts_Delete",
                original_AccountParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Accounts_Select_All_Result> Public_Accounts_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Accounts_Select_All_Result>(
                    "Public_Accounts_Select_All");
        }

        public virtual ObjectResult<Public_Accounts_Select_Single_Result> Public_Accounts_Select_Single(
            string original_Account, Nullable<System.Guid> gUID)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Accounts_Select_Single_Result>(
                    "Public_Accounts_Select_Single", original_AccountParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Accounts_Update_Result> Public_Accounts_Update(string account2,
            Nullable<short> blocked, string consolidate, string costCenter, string currency, string defaultText,
            string department, string name, string name2, Nullable<bool> pageBreakBefore, string project, string purpose,
            string remarks, string reportCode1, string reportCode2, string reportCode3, string reportCode4,
            string setOff, Nullable<bool> statementPageBreakBefore, Nullable<short> tabTo, string tax,
            Nullable<bool> totalAfter, Nullable<byte> type, string original_Account, string original_Account2,
            Nullable<short> original_Blocked, string original_Consolidate, string original_CostCenter,
            string original_Currency, string original_DefaultText, string original_Department, string original_Name,
            string original_Name2, Nullable<bool> original_PageBreakBefore, string original_Project,
            string original_Purpose, string original_Remarks, string original_ReportCode1, string original_ReportCode2,
            string original_ReportCode3, string original_ReportCode4, string original_SetOff,
            Nullable<bool> original_StatementPageBreakBefore, Nullable<short> original_TabTo, string original_Tax,
            Nullable<bool> original_TotalAfter, Nullable<byte> original_Type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var account2Parameter = account2 != null
                ? new ObjectParameter("Account2", account2)
                : new ObjectParameter("Account2", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var consolidateParameter = consolidate != null
                ? new ObjectParameter("Consolidate", consolidate)
                : new ObjectParameter("Consolidate", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var defaultTextParameter = defaultText != null
                ? new ObjectParameter("DefaultText", defaultText)
                : new ObjectParameter("DefaultText", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var name2Parameter = name2 != null
                ? new ObjectParameter("Name2", name2)
                : new ObjectParameter("Name2", typeof(string));

            var pageBreakBeforeParameter = pageBreakBefore.HasValue
                ? new ObjectParameter("PageBreakBefore", pageBreakBefore)
                : new ObjectParameter("PageBreakBefore", typeof(bool));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportCode1Parameter = reportCode1 != null
                ? new ObjectParameter("ReportCode1", reportCode1)
                : new ObjectParameter("ReportCode1", typeof(string));

            var reportCode2Parameter = reportCode2 != null
                ? new ObjectParameter("ReportCode2", reportCode2)
                : new ObjectParameter("ReportCode2", typeof(string));

            var reportCode3Parameter = reportCode3 != null
                ? new ObjectParameter("ReportCode3", reportCode3)
                : new ObjectParameter("ReportCode3", typeof(string));

            var reportCode4Parameter = reportCode4 != null
                ? new ObjectParameter("ReportCode4", reportCode4)
                : new ObjectParameter("ReportCode4", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var statementPageBreakBeforeParameter = statementPageBreakBefore.HasValue
                ? new ObjectParameter("StatementPageBreakBefore", statementPageBreakBefore)
                : new ObjectParameter("StatementPageBreakBefore", typeof(bool));

            var tabToParameter = tabTo.HasValue
                ? new ObjectParameter("TabTo", tabTo)
                : new ObjectParameter("TabTo", typeof(short));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var totalAfterParameter = totalAfter.HasValue
                ? new ObjectParameter("TotalAfter", totalAfter)
                : new ObjectParameter("TotalAfter", typeof(bool));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_Account2Parameter = original_Account2 != null
                ? new ObjectParameter("Original_Account2", original_Account2)
                : new ObjectParameter("Original_Account2", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_ConsolidateParameter = original_Consolidate != null
                ? new ObjectParameter("Original_Consolidate", original_Consolidate)
                : new ObjectParameter("Original_Consolidate", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DefaultTextParameter = original_DefaultText != null
                ? new ObjectParameter("Original_DefaultText", original_DefaultText)
                : new ObjectParameter("Original_DefaultText", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Name2Parameter = original_Name2 != null
                ? new ObjectParameter("Original_Name2", original_Name2)
                : new ObjectParameter("Original_Name2", typeof(string));

            var original_PageBreakBeforeParameter = original_PageBreakBefore.HasValue
                ? new ObjectParameter("Original_PageBreakBefore", original_PageBreakBefore)
                : new ObjectParameter("Original_PageBreakBefore", typeof(bool));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportCode1Parameter = original_ReportCode1 != null
                ? new ObjectParameter("Original_ReportCode1", original_ReportCode1)
                : new ObjectParameter("Original_ReportCode1", typeof(string));

            var original_ReportCode2Parameter = original_ReportCode2 != null
                ? new ObjectParameter("Original_ReportCode2", original_ReportCode2)
                : new ObjectParameter("Original_ReportCode2", typeof(string));

            var original_ReportCode3Parameter = original_ReportCode3 != null
                ? new ObjectParameter("Original_ReportCode3", original_ReportCode3)
                : new ObjectParameter("Original_ReportCode3", typeof(string));

            var original_ReportCode4Parameter = original_ReportCode4 != null
                ? new ObjectParameter("Original_ReportCode4", original_ReportCode4)
                : new ObjectParameter("Original_ReportCode4", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_StatementPageBreakBeforeParameter = original_StatementPageBreakBefore.HasValue
                ? new ObjectParameter("Original_StatementPageBreakBefore", original_StatementPageBreakBefore)
                : new ObjectParameter("Original_StatementPageBreakBefore", typeof(bool));

            var original_TabToParameter = original_TabTo.HasValue
                ? new ObjectParameter("Original_TabTo", original_TabTo)
                : new ObjectParameter("Original_TabTo", typeof(short));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TotalAfterParameter = original_TotalAfter.HasValue
                ? new ObjectParameter("Original_TotalAfter", original_TotalAfter)
                : new ObjectParameter("Original_TotalAfter", typeof(bool));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Accounts_Update_Result>(
                    "Public_Accounts_Update", account2Parameter, blockedParameter, consolidateParameter,
                    costCenterParameter, currencyParameter, defaultTextParameter, departmentParameter, nameParameter,
                    name2Parameter, pageBreakBeforeParameter, projectParameter, purposeParameter, remarksParameter,
                    reportCode1Parameter, reportCode2Parameter, reportCode3Parameter, reportCode4Parameter,
                    setOffParameter, statementPageBreakBeforeParameter, tabToParameter, taxParameter,
                    totalAfterParameter, typeParameter, original_AccountParameter, original_Account2Parameter,
                    original_BlockedParameter, original_ConsolidateParameter, original_CostCenterParameter,
                    original_CurrencyParameter, original_DefaultTextParameter, original_DepartmentParameter,
                    original_NameParameter, original_Name2Parameter, original_PageBreakBeforeParameter,
                    original_ProjectParameter, original_PurposeParameter, original_RemarksParameter,
                    original_ReportCode1Parameter, original_ReportCode2Parameter, original_ReportCode3Parameter,
                    original_ReportCode4Parameter, original_SetOffParameter, original_StatementPageBreakBeforeParameter,
                    original_TabToParameter, original_TaxParameter, original_TotalAfterParameter, original_TypeParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_ArchiveOrderLine_Select_All_Result> Public_ArchiveOrderLine_Select_All(
            string original_OrderNo, Nullable<double> original_Trail)
        {
            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ArchiveOrderLine_Select_All_Result>(
                    "Public_ArchiveOrderLine_Select_All", original_OrderNoParameter, original_TrailParameter);
        }

        public virtual ObjectResult<Public_ArchiveOrderLine_Select_Single_Result> Public_ArchiveOrderLine_Select_Single(
            Nullable<int> original_RecordID, Nullable<int> decimals, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_ArchiveOrderLine_Select_Single_Result>(
                        "Public_ArchiveOrderLine_Select_Single", original_RecordIDParameter, decimalsParameter,
                        gUIDParameter);
        }

        public virtual int Public_CashDiscount_AddNew(string cashDiscount, Nullable<short> cashDiscountInclFee,
            Nullable<short> cashDiscountInclTax, Nullable<double> cashDiscountPct, Nullable<short> days,
            string description, string remarks, Nullable<short> showInTP, Nullable<short> type,
            string standard_CashDiscount, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var cashDiscountInclFeeParameter = cashDiscountInclFee.HasValue
                ? new ObjectParameter("CashDiscountInclFee", cashDiscountInclFee)
                : new ObjectParameter("CashDiscountInclFee", typeof(short));

            var cashDiscountInclTaxParameter = cashDiscountInclTax.HasValue
                ? new ObjectParameter("CashDiscountInclTax", cashDiscountInclTax)
                : new ObjectParameter("CashDiscountInclTax", typeof(short));

            var cashDiscountPctParameter = cashDiscountPct.HasValue
                ? new ObjectParameter("CashDiscountPct", cashDiscountPct)
                : new ObjectParameter("CashDiscountPct", typeof(double));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInTPParameter = showInTP.HasValue
                ? new ObjectParameter("ShowInTP", showInTP)
                : new ObjectParameter("ShowInTP", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var standard_CashDiscountParameter = standard_CashDiscount != null
                ? new ObjectParameter("Standard_CashDiscount", standard_CashDiscount)
                : new ObjectParameter("Standard_CashDiscount", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CashDiscount_AddNew",
                cashDiscountParameter, cashDiscountInclFeeParameter, cashDiscountInclTaxParameter,
                cashDiscountPctParameter, daysParameter, descriptionParameter, remarksParameter, showInTPParameter,
                typeParameter, standard_CashDiscountParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_CashDiscount_Delete(string original_CashDiscount, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CashDiscount_Delete",
                original_CashDiscountParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CashDiscount_Select_All_Result> Public_CashDiscount_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CashDiscount_Select_All_Result>(
                    "Public_CashDiscount_Select_All");
        }

        public virtual ObjectResult<Public_CashDiscount_Select_Single_Result> Public_CashDiscount_Select_Single(
            string original_CashDiscount, Nullable<System.Guid> gUID)
        {
            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CashDiscount_Select_Single_Result>(
                    "Public_CashDiscount_Select_Single", original_CashDiscountParameter, gUIDParameter);
        }

        public virtual int Public_CashDiscount_Update(Nullable<short> cashDiscountInclFee,
            Nullable<short> cashDiscountInclTax, Nullable<double> cashDiscountPct, Nullable<short> days,
            string description, string remarks, Nullable<short> showInTP, Nullable<short> type,
            string original_CashDiscount, Nullable<short> original_CashDiscountInclFee,
            Nullable<short> original_CashDiscountInclTax, Nullable<double> original_CashDiscountPct,
            Nullable<short> original_Days, string original_Description, string original_Remarks,
            Nullable<short> original_ShowInTP, Nullable<short> original_Type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var cashDiscountInclFeeParameter = cashDiscountInclFee.HasValue
                ? new ObjectParameter("CashDiscountInclFee", cashDiscountInclFee)
                : new ObjectParameter("CashDiscountInclFee", typeof(short));

            var cashDiscountInclTaxParameter = cashDiscountInclTax.HasValue
                ? new ObjectParameter("CashDiscountInclTax", cashDiscountInclTax)
                : new ObjectParameter("CashDiscountInclTax", typeof(short));

            var cashDiscountPctParameter = cashDiscountPct.HasValue
                ? new ObjectParameter("CashDiscountPct", cashDiscountPct)
                : new ObjectParameter("CashDiscountPct", typeof(double));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInTPParameter = showInTP.HasValue
                ? new ObjectParameter("ShowInTP", showInTP)
                : new ObjectParameter("ShowInTP", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CashDiscountInclFeeParameter = original_CashDiscountInclFee.HasValue
                ? new ObjectParameter("Original_CashDiscountInclFee", original_CashDiscountInclFee)
                : new ObjectParameter("Original_CashDiscountInclFee", typeof(short));

            var original_CashDiscountInclTaxParameter = original_CashDiscountInclTax.HasValue
                ? new ObjectParameter("Original_CashDiscountInclTax", original_CashDiscountInclTax)
                : new ObjectParameter("Original_CashDiscountInclTax", typeof(short));

            var original_CashDiscountPctParameter = original_CashDiscountPct.HasValue
                ? new ObjectParameter("Original_CashDiscountPct", original_CashDiscountPct)
                : new ObjectParameter("Original_CashDiscountPct", typeof(double));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInTPParameter = original_ShowInTP.HasValue
                ? new ObjectParameter("Original_ShowInTP", original_ShowInTP)
                : new ObjectParameter("Original_ShowInTP", typeof(short));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CashDiscount_Update",
                cashDiscountInclFeeParameter, cashDiscountInclTaxParameter, cashDiscountPctParameter, daysParameter,
                descriptionParameter, remarksParameter, showInTPParameter, typeParameter, original_CashDiscountParameter,
                original_CashDiscountInclFeeParameter, original_CashDiscountInclTaxParameter,
                original_CashDiscountPctParameter, original_DaysParameter, original_DescriptionParameter,
                original_RemarksParameter, original_ShowInTPParameter, original_TypeParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Company_Select_All_Result> Public_Company_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Company_Select_All_Result>(
                    "Public_Company_Select_All");
        }

        public virtual ObjectResult<Public_Company_Select_Single_Result> Public_Company_Select_Single(
            string original_Company, Nullable<System.Guid> gUID)
        {
            var original_CompanyParameter = original_Company != null
                ? new ObjectParameter("Original_Company", original_Company)
                : new ObjectParameter("Original_Company", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Company_Select_Single_Result>(
                    "Public_Company_Select_Single", original_CompanyParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_CostCenter_AddNew_Result> Public_CostCenter_AddNew(Nullable<double> avance,
            string costCenter, Nullable<byte> costCenterType, Nullable<byte> costCenterType2, Nullable<double> costPrice,
            string grouping, string name, Nullable<double> price, Nullable<byte> projectLineState, string remarks,
            Nullable<short> sortOrder, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costCenterTypeParameter = costCenterType.HasValue
                ? new ObjectParameter("CostCenterType", costCenterType)
                : new ObjectParameter("CostCenterType", typeof(byte));

            var costCenterType2Parameter = costCenterType2.HasValue
                ? new ObjectParameter("CostCenterType2", costCenterType2)
                : new ObjectParameter("CostCenterType2", typeof(byte));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectLineStateParameter = projectLineState.HasValue
                ? new ObjectParameter("ProjectLineState", projectLineState)
                : new ObjectParameter("ProjectLineState", typeof(byte));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var sortOrderParameter = sortOrder.HasValue
                ? new ObjectParameter("SortOrder", sortOrder)
                : new ObjectParameter("SortOrder", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenter_AddNew_Result>(
                    "Public_CostCenter_AddNew", avanceParameter, costCenterParameter, costCenterTypeParameter,
                    costCenterType2Parameter, costPriceParameter, groupingParameter, nameParameter, priceParameter,
                    projectLineStateParameter, remarksParameter, sortOrderParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_CostCenter_Delete(string original_CostCenter, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CostCenter_Delete",
                original_CostCenterParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CostCenter_Select_All_Result> Public_CostCenter_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenter_Select_All_Result>(
                    "Public_CostCenter_Select_All");
        }

        public virtual ObjectResult<Public_CostCenter_Select_Single_Result> Public_CostCenter_Select_Single(
            string original_CostCenter, Nullable<System.Guid> gUID)
        {
            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenter_Select_Single_Result>(
                    "Public_CostCenter_Select_Single", original_CostCenterParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_CostCenter_Update_Result> Public_CostCenter_Update(Nullable<double> avance,
            Nullable<byte> costCenterType, Nullable<byte> costCenterType2, Nullable<double> costPrice, string grouping,
            string name, Nullable<double> price, Nullable<byte> projectLineState, string remarks,
            Nullable<short> sortOrder, Nullable<double> original_Avance, string original_CostCenter,
            Nullable<byte> original_CostCenterType, Nullable<byte> original_CostCenterType2,
            Nullable<double> original_CostPrice, string original_Grouping, string original_Name,
            Nullable<double> original_Price, Nullable<byte> original_ProjectLineState, string original_Remarks,
            Nullable<short> original_SortOrder, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var costCenterTypeParameter = costCenterType.HasValue
                ? new ObjectParameter("CostCenterType", costCenterType)
                : new ObjectParameter("CostCenterType", typeof(byte));

            var costCenterType2Parameter = costCenterType2.HasValue
                ? new ObjectParameter("CostCenterType2", costCenterType2)
                : new ObjectParameter("CostCenterType2", typeof(byte));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectLineStateParameter = projectLineState.HasValue
                ? new ObjectParameter("ProjectLineState", projectLineState)
                : new ObjectParameter("ProjectLineState", typeof(byte));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var sortOrderParameter = sortOrder.HasValue
                ? new ObjectParameter("SortOrder", sortOrder)
                : new ObjectParameter("SortOrder", typeof(short));

            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostCenterTypeParameter = original_CostCenterType.HasValue
                ? new ObjectParameter("Original_CostCenterType", original_CostCenterType)
                : new ObjectParameter("Original_CostCenterType", typeof(byte));

            var original_CostCenterType2Parameter = original_CostCenterType2.HasValue
                ? new ObjectParameter("Original_CostCenterType2", original_CostCenterType2)
                : new ObjectParameter("Original_CostCenterType2", typeof(byte));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectLineStateParameter = original_ProjectLineState.HasValue
                ? new ObjectParameter("Original_ProjectLineState", original_ProjectLineState)
                : new ObjectParameter("Original_ProjectLineState", typeof(byte));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SortOrderParameter = original_SortOrder.HasValue
                ? new ObjectParameter("Original_SortOrder", original_SortOrder)
                : new ObjectParameter("Original_SortOrder", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenter_Update_Result>(
                    "Public_CostCenter_Update", avanceParameter, costCenterTypeParameter, costCenterType2Parameter,
                    costPriceParameter, groupingParameter, nameParameter, priceParameter, projectLineStateParameter,
                    remarksParameter, sortOrderParameter, original_AvanceParameter, original_CostCenterParameter,
                    original_CostCenterTypeParameter, original_CostCenterType2Parameter, original_CostPriceParameter,
                    original_GroupingParameter, original_NameParameter, original_PriceParameter,
                    original_ProjectLineStateParameter, original_RemarksParameter, original_SortOrderParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CostCenterGroup_AddNew_Result> Public_CostCenterGroup_AddNew(string grouping,
            string name, Nullable<byte> sortOrder, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var sortOrderParameter = sortOrder.HasValue
                ? new ObjectParameter("SortOrder", sortOrder)
                : new ObjectParameter("SortOrder", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenterGroup_AddNew_Result>(
                    "Public_CostCenterGroup_AddNew", groupingParameter, nameParameter, sortOrderParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_CostCenterGroup_Delete(string original_Grouping, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CostCenterGroup_Delete",
                original_GroupingParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CostCenterGroup_Select_All_Result> Public_CostCenterGroup_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenterGroup_Select_All_Result>(
                    "Public_CostCenterGroup_Select_All");
        }

        public virtual ObjectResult<Public_CostCenterGroup_Select_Single_Result> Public_CostCenterGroup_Select_Single(
            string original_Grouping, Nullable<System.Guid> gUID)
        {
            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_CostCenterGroup_Select_Single_Result>(
                        "Public_CostCenterGroup_Select_Single", original_GroupingParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_CostCenterGroup_Update_Result> Public_CostCenterGroup_Update(string name,
            Nullable<byte> sortOrder, string original_Grouping, string original_Name, Nullable<byte> original_SortOrder,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var sortOrderParameter = sortOrder.HasValue
                ? new ObjectParameter("SortOrder", sortOrder)
                : new ObjectParameter("SortOrder", typeof(byte));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_SortOrderParameter = original_SortOrder.HasValue
                ? new ObjectParameter("Original_SortOrder", original_SortOrder)
                : new ObjectParameter("Original_SortOrder", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CostCenterGroup_Update_Result>(
                    "Public_CostCenterGroup_Update", nameParameter, sortOrderParameter, original_GroupingParameter,
                    original_NameParameter, original_SortOrderParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Currency_AddNew(string account, string currency, string iSOCurrency, string name,
            string remarks, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var iSOCurrencyParameter = iSOCurrency != null
                ? new ObjectParameter("ISOCurrency", iSOCurrency)
                : new ObjectParameter("ISOCurrency", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Currency_AddNew",
                accountParameter, currencyParameter, iSOCurrencyParameter, nameParameter, remarksParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Currency_Delete(string original_Currency, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Currency_Delete",
                original_CurrencyParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Currency_Select_All_Result> Public_Currency_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Currency_Select_All_Result>(
                    "Public_Currency_Select_All");
        }

        public virtual ObjectResult<Public_Currency_Select_Single_Result> Public_Currency_Select_Single(
            string original_Currency, Nullable<System.Guid> gUID)
        {
            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Currency_Select_Single_Result>(
                    "Public_Currency_Select_Single", original_CurrencyParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Currency_Update_Result> Public_Currency_Update(string account,
            string iSOCurrency, string name, string remarks, string original_Account, string original_Currency,
            string original_ISOCurrency, string original_Name, string original_Remarks, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var iSOCurrencyParameter = iSOCurrency != null
                ? new ObjectParameter("ISOCurrency", iSOCurrency)
                : new ObjectParameter("ISOCurrency", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_ISOCurrencyParameter = original_ISOCurrency != null
                ? new ObjectParameter("Original_ISOCurrency", original_ISOCurrency)
                : new ObjectParameter("Original_ISOCurrency", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Currency_Update_Result>(
                    "Public_Currency_Update", accountParameter, iSOCurrencyParameter, nameParameter, remarksParameter,
                    original_AccountParameter, original_CurrencyParameter, original_ISOCurrencyParameter,
                    original_NameParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CustomerCategory_AddNew_Result> Public_CustomerCategory_AddNew(
            string customerCat, string name, string remarks, string standard_CustomerCat, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var customerCatParameter = customerCat != null
                ? new ObjectParameter("CustomerCat", customerCat)
                : new ObjectParameter("CustomerCat", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var standard_CustomerCatParameter = standard_CustomerCat != null
                ? new ObjectParameter("Standard_CustomerCat", standard_CustomerCat)
                : new ObjectParameter("Standard_CustomerCat", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerCategory_AddNew_Result>(
                    "Public_CustomerCategory_AddNew", customerCatParameter, nameParameter, remarksParameter,
                    standard_CustomerCatParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_CustomerCategory_Delete(string original_CustomerCat, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CustomerCatParameter = original_CustomerCat != null
                ? new ObjectParameter("Original_CustomerCat", original_CustomerCat)
                : new ObjectParameter("Original_CustomerCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CustomerCategory_Delete",
                original_CustomerCatParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CustomerCategory_Select_All_Result> Public_CustomerCategory_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerCategory_Select_All_Result>(
                    "Public_CustomerCategory_Select_All");
        }

        public virtual ObjectResult<Public_CustomerCategory_Select_Single_Result> Public_CustomerCategory_Select_Single(
            string original_CustomerCat, Nullable<System.Guid> gUID)
        {
            var original_CustomerCatParameter = original_CustomerCat != null
                ? new ObjectParameter("Original_CustomerCat", original_CustomerCat)
                : new ObjectParameter("Original_CustomerCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_CustomerCategory_Select_Single_Result>(
                        "Public_CustomerCategory_Select_Single", original_CustomerCatParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_CustomerCategory_Update_Result> Public_CustomerCategory_Update(string name,
            string remarks, string original_CustomerCat, string original_Name, string original_Remarks,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_CustomerCatParameter = original_CustomerCat != null
                ? new ObjectParameter("Original_CustomerCat", original_CustomerCat)
                : new ObjectParameter("Original_CustomerCat", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerCategory_Update_Result>(
                    "Public_CustomerCategory_Update", nameParameter, remarksParameter, original_CustomerCatParameter,
                    original_NameParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CustomerContacts_AddNew_Result> Public_CustomerContacts_AddNew(
            string address1, string address2, string city, string country, string customer, string directPhone,
            string email, string fax, string interNet, string localNumber, string loginName, string loginPassWord,
            string mobile, string name, string phone, string postalCode, string title, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var directPhoneParameter = directPhone != null
                ? new ObjectParameter("DirectPhone", directPhone)
                : new ObjectParameter("DirectPhone", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var localNumberParameter = localNumber != null
                ? new ObjectParameter("LocalNumber", localNumber)
                : new ObjectParameter("LocalNumber", typeof(string));

            var loginNameParameter = loginName != null
                ? new ObjectParameter("LoginName", loginName)
                : new ObjectParameter("LoginName", typeof(string));

            var loginPassWordParameter = loginPassWord != null
                ? new ObjectParameter("LoginPassWord", loginPassWord)
                : new ObjectParameter("LoginPassWord", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerContacts_AddNew_Result>(
                    "Public_CustomerContacts_AddNew", address1Parameter, address2Parameter, cityParameter,
                    countryParameter, customerParameter, directPhoneParameter, emailParameter, faxParameter,
                    interNetParameter, localNumberParameter, loginNameParameter, loginPassWordParameter, mobileParameter,
                    nameParameter, phoneParameter, postalCodeParameter, titleParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_CustomerContacts_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CustomerContacts_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CustomerContacts_Select_All_Result> Public_CustomerContacts_Select_All(
            string customer)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerContacts_Select_All_Result>(
                    "Public_CustomerContacts_Select_All", customerParameter);
        }

        public virtual ObjectResult<Public_CustomerContacts_Select_Single_Result> Public_CustomerContacts_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_CustomerContacts_Select_Single_Result>(
                        "Public_CustomerContacts_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_CustomerContacts_Update_Result> Public_CustomerContacts_Update(
            ObjectParameter address1, ObjectParameter address2, ObjectParameter city, ObjectParameter country,
            ObjectParameter customer, ObjectParameter directPhone, ObjectParameter email, ObjectParameter fax,
            ObjectParameter interNet, ObjectParameter localNumber, ObjectParameter loginName,
            ObjectParameter loginPassWord, ObjectParameter mobile, ObjectParameter name, ObjectParameter phone,
            ObjectParameter postalCode, ObjectParameter title, string original_Address1, string original_Address2,
            string original_City, string original_Country, string original_Customer, string original_DirectPhone,
            string original_Email, string original_Fax, string original_InterNet, string original_LocalNumber,
            string original_LoginName, string original_LoginPassWord, string original_Mobile, string original_Name,
            string original_Phone, string original_PostalCode, Nullable<int> original_RecordID, string original_Title,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DirectPhoneParameter = original_DirectPhone != null
                ? new ObjectParameter("Original_DirectPhone", original_DirectPhone)
                : new ObjectParameter("Original_DirectPhone", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_LocalNumberParameter = original_LocalNumber != null
                ? new ObjectParameter("Original_LocalNumber", original_LocalNumber)
                : new ObjectParameter("Original_LocalNumber", typeof(string));

            var original_LoginNameParameter = original_LoginName != null
                ? new ObjectParameter("Original_LoginName", original_LoginName)
                : new ObjectParameter("Original_LoginName", typeof(string));

            var original_LoginPassWordParameter = original_LoginPassWord != null
                ? new ObjectParameter("Original_LoginPassWord", original_LoginPassWord)
                : new ObjectParameter("Original_LoginPassWord", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerContacts_Update_Result>(
                    "Public_CustomerContacts_Update", address1, address2, city, country, customer, directPhone, email,
                    fax, interNet, localNumber, loginName, loginPassWord, mobile, name, phone, postalCode, title,
                    original_Address1Parameter, original_Address2Parameter, original_CityParameter,
                    original_CountryParameter, original_CustomerParameter, original_DirectPhoneParameter,
                    original_EmailParameter, original_FaxParameter, original_InterNetParameter,
                    original_LocalNumberParameter, original_LoginNameParameter, original_LoginPassWordParameter,
                    original_MobileParameter, original_NameParameter, original_PhoneParameter,
                    original_PostalCodeParameter, original_RecordIDParameter, original_TitleParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_CustomerLog_AddNew_Result> Public_CustomerLog_AddNew(string contact,
            string customer, Nullable<System.DateTime> date, Nullable<int> elapsedTime,
            Nullable<System.DateTime> recontactDate, string remark, string salesRep, string subject,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var elapsedTimeParameter = elapsedTime.HasValue
                ? new ObjectParameter("ElapsedTime", elapsedTime)
                : new ObjectParameter("ElapsedTime", typeof(int));

            var recontactDateParameter = recontactDate.HasValue
                ? new ObjectParameter("RecontactDate", recontactDate)
                : new ObjectParameter("RecontactDate", typeof(System.DateTime));

            var remarkParameter = remark != null
                ? new ObjectParameter("Remark", remark)
                : new ObjectParameter("Remark", typeof(string));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var subjectParameter = subject != null
                ? new ObjectParameter("Subject", subject)
                : new ObjectParameter("Subject", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerLog_AddNew_Result>(
                    "Public_CustomerLog_AddNew", contactParameter, customerParameter, dateParameter,
                    elapsedTimeParameter, recontactDateParameter, remarkParameter, salesRepParameter, subjectParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_CustomerLog_Delete()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CustomerLog_Delete");
        }

        public virtual int Public_CustomerLog_Select_All()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CustomerLog_Select_All");
        }

        public virtual ObjectResult<Public_CustomerLog_Select_Single_Result> Public_CustomerLog_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_CustomerLog_Select_Single_Result>(
                    "Public_CustomerLog_Select_Single", gUIDParameter);
        }

        public virtual int Public_CustomerLog_Update()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_CustomerLog_Update");
        }

        public virtual ObjectResult<Public_Customers_AddNew_Result> Public_Customers_AddNew(string address1,
            string address2, string address3, string agent, Nullable<short> allocate, Nullable<byte> allowStatement,
            string bank, Nullable<short> blocked, string cashDiscount, string category, string city, string contact,
            string costCenter, string country, string countryCode, string cPR, Nullable<double> creditLimit,
            string currency, string customer, string delivery, string department, Nullable<short> eECCountry,
            Nullable<byte> eECTransCode, string eDILocationNr, string email, Nullable<double> endDiscPct,
            Nullable<byte> factoringState, string factoringGroup, string fax, string fIKNo, string giro, string grouping,
            string interest, string internalRemarks, string interNet, string invoiceTo, Nullable<byte> isLiableToPayTax,
            string language, string loginName, string loginPassWord, string mobile, string name,
            Nullable<short> optional1, Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4,
            Nullable<short> optional5, Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<System.DateTime> optionalDate3, Nullable<System.DateTime> optionalDate4,
            Nullable<System.DateTime> optionalDate5, Nullable<System.DateTime> optionalDate6,
            Nullable<System.DateTime> optionalDate7, Nullable<System.DateTime> optionalDate8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string orderCommunication, string payment,
            Nullable<long> pBSAgrementNo, Nullable<long> pBSGruppeNo, Nullable<System.DateTime> pBSStartDate,
            string phone, string postalCode, string priceList, string project, string purpose, string remarks,
            string reports, string salesRep, string ship1, string ship2, string ship3, string ship4, string ship5,
            string ship6, string ship7, string shipCityName, string shipPostalCode, string shipTo, string tax,
            string taxNo, string standard_Customer, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid, Nullable<short> orderMerging)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allocateParameter = allocate.HasValue
                ? new ObjectParameter("Allocate", allocate)
                : new ObjectParameter("Allocate", typeof(short));

            var allowStatementParameter = allowStatement.HasValue
                ? new ObjectParameter("AllowStatement", allowStatement)
                : new ObjectParameter("AllowStatement", typeof(byte));

            var bankParameter = bank != null
                ? new ObjectParameter("Bank", bank)
                : new ObjectParameter("Bank", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var countryCodeParameter = countryCode != null
                ? new ObjectParameter("CountryCode", countryCode)
                : new ObjectParameter("CountryCode", typeof(string));

            var cPRParameter = cPR != null
                ? new ObjectParameter("CPR", cPR)
                : new ObjectParameter("CPR", typeof(string));

            var creditLimitParameter = creditLimit.HasValue
                ? new ObjectParameter("CreditLimit", creditLimit)
                : new ObjectParameter("CreditLimit", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var factoringStateParameter = factoringState.HasValue
                ? new ObjectParameter("FactoringState", factoringState)
                : new ObjectParameter("FactoringState", typeof(byte));

            var factoringGroupParameter = factoringGroup != null
                ? new ObjectParameter("FactoringGroup", factoringGroup)
                : new ObjectParameter("FactoringGroup", typeof(string));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fIKNoParameter = fIKNo != null
                ? new ObjectParameter("FIKNo", fIKNo)
                : new ObjectParameter("FIKNo", typeof(string));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var interestParameter = interest != null
                ? new ObjectParameter("Interest", interest)
                : new ObjectParameter("Interest", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var invoiceToParameter = invoiceTo != null
                ? new ObjectParameter("InvoiceTo", invoiceTo)
                : new ObjectParameter("InvoiceTo", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var loginNameParameter = loginName != null
                ? new ObjectParameter("LoginName", loginName)
                : new ObjectParameter("LoginName", typeof(string));

            var loginPassWordParameter = loginPassWord != null
                ? new ObjectParameter("LoginPassWord", loginPassWord)
                : new ObjectParameter("LoginPassWord", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalDate3Parameter = optionalDate3.HasValue
                ? new ObjectParameter("OptionalDate3", optionalDate3)
                : new ObjectParameter("OptionalDate3", typeof(System.DateTime));

            var optionalDate4Parameter = optionalDate4.HasValue
                ? new ObjectParameter("OptionalDate4", optionalDate4)
                : new ObjectParameter("OptionalDate4", typeof(System.DateTime));

            var optionalDate5Parameter = optionalDate5.HasValue
                ? new ObjectParameter("OptionalDate5", optionalDate5)
                : new ObjectParameter("OptionalDate5", typeof(System.DateTime));

            var optionalDate6Parameter = optionalDate6.HasValue
                ? new ObjectParameter("OptionalDate6", optionalDate6)
                : new ObjectParameter("OptionalDate6", typeof(System.DateTime));

            var optionalDate7Parameter = optionalDate7.HasValue
                ? new ObjectParameter("OptionalDate7", optionalDate7)
                : new ObjectParameter("OptionalDate7", typeof(System.DateTime));

            var optionalDate8Parameter = optionalDate8.HasValue
                ? new ObjectParameter("OptionalDate8", optionalDate8)
                : new ObjectParameter("OptionalDate8", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var pBSAgrementNoParameter = pBSAgrementNo.HasValue
                ? new ObjectParameter("PBSAgrementNo", pBSAgrementNo)
                : new ObjectParameter("PBSAgrementNo", typeof(long));

            var pBSGruppeNoParameter = pBSGruppeNo.HasValue
                ? new ObjectParameter("PBSGruppeNo", pBSGruppeNo)
                : new ObjectParameter("PBSGruppeNo", typeof(long));

            var pBSStartDateParameter = pBSStartDate.HasValue
                ? new ObjectParameter("PBSStartDate", pBSStartDate)
                : new ObjectParameter("PBSStartDate", typeof(System.DateTime));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var standard_CustomerParameter = standard_Customer != null
                ? new ObjectParameter("Standard_Customer", standard_Customer)
                : new ObjectParameter("Standard_Customer", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var orderMergingParameter = orderMerging.HasValue
                ? new ObjectParameter("OrderMerging", orderMerging)
                : new ObjectParameter("OrderMerging", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Customers_AddNew_Result>(
                    "Public_Customers_AddNew", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    allocateParameter, allowStatementParameter, bankParameter, blockedParameter, cashDiscountParameter,
                    categoryParameter, cityParameter, contactParameter, costCenterParameter, countryParameter,
                    countryCodeParameter, cPRParameter, creditLimitParameter, currencyParameter, customerParameter,
                    deliveryParameter, departmentParameter, eECCountryParameter, eECTransCodeParameter,
                    eDILocationNrParameter, emailParameter, endDiscPctParameter, factoringStateParameter,
                    factoringGroupParameter, faxParameter, fIKNoParameter, giroParameter, groupingParameter,
                    interestParameter, internalRemarksParameter, interNetParameter, invoiceToParameter,
                    isLiableToPayTaxParameter, languageParameter, loginNameParameter, loginPassWordParameter,
                    mobileParameter, nameParameter, optional1Parameter, optional2Parameter, optional3Parameter,
                    optional4Parameter, optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optionalDate1Parameter, optionalDate2Parameter, optionalDate3Parameter, optionalDate4Parameter,
                    optionalDate5Parameter, optionalDate6Parameter, optionalDate7Parameter, optionalDate8Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter,
                    optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                    optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                    optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                    optionalText7Parameter, optionalText8Parameter, orderCommunicationParameter, paymentParameter,
                    pBSAgrementNoParameter, pBSGruppeNoParameter, pBSStartDateParameter, phoneParameter,
                    postalCodeParameter, priceListParameter, projectParameter, purposeParameter, remarksParameter,
                    reportsParameter, salesRepParameter, ship1Parameter, ship2Parameter, ship3Parameter, ship4Parameter,
                    ship5Parameter, ship6Parameter, ship7Parameter, shipCityNameParameter, shipPostalCodeParameter,
                    shipToParameter, taxParameter, taxNoParameter, standard_CustomerParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter, orderMergingParameter);
        }

        public virtual int Public_Customers_Delete(string original_Customer, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Customers_Delete",
                original_CustomerParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Customers_Select_All_Result> Public_Customers_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Customers_Select_All_Result>(
                    "Public_Customers_Select_All");
        }

        public virtual ObjectResult<Public_Customers_Select_Single_Result> Public_Customers_Select_Single(
            string original_Customer, Nullable<System.Guid> gUID)
        {
            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Customers_Select_Single_Result>(
                    "Public_Customers_Select_Single", original_CustomerParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Customers_Update_Result> Public_Customers_Update(string address1,
            string address2, string address3, string agent, Nullable<short> allocate, Nullable<byte> allowStatement,
            string bank, Nullable<short> blocked, string cashDiscount, string category, string city, string contact,
            string costCenter, string country, string countryCode, string cPR, Nullable<double> creditLimit,
            string currency, string delivery, string department, Nullable<short> eECCountry, Nullable<byte> eECTransCode,
            string eDILocationNr, string email, Nullable<double> endDiscPct, Nullable<byte> factoringState,
            string factoringGroup, string fax, string fIKNo, string giro, string grouping, string interest,
            string internalRemarks, string interNet, string invoiceTo, Nullable<byte> isLiableToPayTax, string language,
            string loginName, string loginPassWord, string mobile, string name, Nullable<short> optional1,
            Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5,
            Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<System.DateTime> optionalDate3, Nullable<System.DateTime> optionalDate4,
            Nullable<System.DateTime> optionalDate5, Nullable<System.DateTime> optionalDate6,
            Nullable<System.DateTime> optionalDate7, Nullable<System.DateTime> optionalDate8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string orderCommunication, string payment,
            Nullable<long> pBSAgrementNo, Nullable<long> pBSGruppeNo, Nullable<System.DateTime> pBSStartDate,
            string phone, string postalCode, string priceList, string project, string purpose, string remarks,
            string reports, string salesRep, string ship1, string ship2, string ship3, string ship4, string ship5,
            string ship6, string ship7, string shipCityName, string shipPostalCode, string shipTo, string tax,
            string taxNo, string original_Address1, string original_Address2, string original_Address3,
            string original_Agent, Nullable<short> original_Allocate, Nullable<byte> original_AllowStatement,
            string original_Bank, Nullable<short> original_Blocked, string original_CashDiscount,
            string original_Category, string original_City, string original_Contact, string original_CostCenter,
            string original_Country, string original_CountryCode, string original_CPR,
            Nullable<double> original_CreditLimit, string original_Currency, string original_Customer,
            string original_Delivery, string original_Department, Nullable<short> original_EECCountry,
            Nullable<byte> original_EECTransCode, string original_EDILocationNr, string original_Email,
            Nullable<double> original_EndDiscPct, Nullable<byte> original_FactoringState, string original_FactoringGroup,
            string original_Fax, string original_FIKNo, string original_Giro, string original_Grouping,
            string original_Interest, string original_InternalRemarks, string original_InterNet,
            string original_InvoiceTo, Nullable<byte> original_IsLiableToPayTax, string original_Language,
            string original_LoginName, string original_LoginPassWord, string original_Mobile, string original_Name,
            Nullable<short> original_Optional1, Nullable<short> original_Optional2, Nullable<short> original_Optional3,
            Nullable<short> original_Optional4, Nullable<short> original_Optional5, Nullable<short> original_Optional6,
            Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<System.DateTime> original_OptionalDate3, Nullable<System.DateTime> original_OptionalDate4,
            Nullable<System.DateTime> original_OptionalDate5, Nullable<System.DateTime> original_OptionalDate6,
            Nullable<System.DateTime> original_OptionalDate7, Nullable<System.DateTime> original_OptionalDate8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OrderCommunication,
            string original_Payment, Nullable<long> original_PBSAgrementNo, Nullable<long> original_PBSGruppeNo,
            Nullable<System.DateTime> original_PBSStartDate, string original_Phone, string original_PostalCode,
            string original_PriceList, string original_Project, string original_Purpose, string original_Remarks,
            string original_Reports, string original_SalesRep, string original_Ship1, string original_Ship2,
            string original_Ship3, string original_Ship4, string original_Ship5, string original_Ship6,
            string original_Ship7, string original_ShipCityName, string original_ShipPostalCode, string original_ShipTo,
            string original_Tax, string original_TaxNo, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid, Nullable<short> orderMerging,
            Nullable<short> original_OrderMerging)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allocateParameter = allocate.HasValue
                ? new ObjectParameter("Allocate", allocate)
                : new ObjectParameter("Allocate", typeof(short));

            var allowStatementParameter = allowStatement.HasValue
                ? new ObjectParameter("AllowStatement", allowStatement)
                : new ObjectParameter("AllowStatement", typeof(byte));

            var bankParameter = bank != null
                ? new ObjectParameter("Bank", bank)
                : new ObjectParameter("Bank", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var countryCodeParameter = countryCode != null
                ? new ObjectParameter("CountryCode", countryCode)
                : new ObjectParameter("CountryCode", typeof(string));

            var cPRParameter = cPR != null
                ? new ObjectParameter("CPR", cPR)
                : new ObjectParameter("CPR", typeof(string));

            var creditLimitParameter = creditLimit.HasValue
                ? new ObjectParameter("CreditLimit", creditLimit)
                : new ObjectParameter("CreditLimit", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var factoringStateParameter = factoringState.HasValue
                ? new ObjectParameter("FactoringState", factoringState)
                : new ObjectParameter("FactoringState", typeof(byte));

            var factoringGroupParameter = factoringGroup != null
                ? new ObjectParameter("FactoringGroup", factoringGroup)
                : new ObjectParameter("FactoringGroup", typeof(string));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fIKNoParameter = fIKNo != null
                ? new ObjectParameter("FIKNo", fIKNo)
                : new ObjectParameter("FIKNo", typeof(string));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var interestParameter = interest != null
                ? new ObjectParameter("Interest", interest)
                : new ObjectParameter("Interest", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var invoiceToParameter = invoiceTo != null
                ? new ObjectParameter("InvoiceTo", invoiceTo)
                : new ObjectParameter("InvoiceTo", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var loginNameParameter = loginName != null
                ? new ObjectParameter("LoginName", loginName)
                : new ObjectParameter("LoginName", typeof(string));

            var loginPassWordParameter = loginPassWord != null
                ? new ObjectParameter("LoginPassWord", loginPassWord)
                : new ObjectParameter("LoginPassWord", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalDate3Parameter = optionalDate3.HasValue
                ? new ObjectParameter("OptionalDate3", optionalDate3)
                : new ObjectParameter("OptionalDate3", typeof(System.DateTime));

            var optionalDate4Parameter = optionalDate4.HasValue
                ? new ObjectParameter("OptionalDate4", optionalDate4)
                : new ObjectParameter("OptionalDate4", typeof(System.DateTime));

            var optionalDate5Parameter = optionalDate5.HasValue
                ? new ObjectParameter("OptionalDate5", optionalDate5)
                : new ObjectParameter("OptionalDate5", typeof(System.DateTime));

            var optionalDate6Parameter = optionalDate6.HasValue
                ? new ObjectParameter("OptionalDate6", optionalDate6)
                : new ObjectParameter("OptionalDate6", typeof(System.DateTime));

            var optionalDate7Parameter = optionalDate7.HasValue
                ? new ObjectParameter("OptionalDate7", optionalDate7)
                : new ObjectParameter("OptionalDate7", typeof(System.DateTime));

            var optionalDate8Parameter = optionalDate8.HasValue
                ? new ObjectParameter("OptionalDate8", optionalDate8)
                : new ObjectParameter("OptionalDate8", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var pBSAgrementNoParameter = pBSAgrementNo.HasValue
                ? new ObjectParameter("PBSAgrementNo", pBSAgrementNo)
                : new ObjectParameter("PBSAgrementNo", typeof(long));

            var pBSGruppeNoParameter = pBSGruppeNo.HasValue
                ? new ObjectParameter("PBSGruppeNo", pBSGruppeNo)
                : new ObjectParameter("PBSGruppeNo", typeof(long));

            var pBSStartDateParameter = pBSStartDate.HasValue
                ? new ObjectParameter("PBSStartDate", pBSStartDate)
                : new ObjectParameter("PBSStartDate", typeof(System.DateTime));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllocateParameter = original_Allocate.HasValue
                ? new ObjectParameter("Original_Allocate", original_Allocate)
                : new ObjectParameter("Original_Allocate", typeof(short));

            var original_AllowStatementParameter = original_AllowStatement.HasValue
                ? new ObjectParameter("Original_AllowStatement", original_AllowStatement)
                : new ObjectParameter("Original_AllowStatement", typeof(byte));

            var original_BankParameter = original_Bank != null
                ? new ObjectParameter("Original_Bank", original_Bank)
                : new ObjectParameter("Original_Bank", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CountryCodeParameter = original_CountryCode != null
                ? new ObjectParameter("Original_CountryCode", original_CountryCode)
                : new ObjectParameter("Original_CountryCode", typeof(string));

            var original_CPRParameter = original_CPR != null
                ? new ObjectParameter("Original_CPR", original_CPR)
                : new ObjectParameter("Original_CPR", typeof(string));

            var original_CreditLimitParameter = original_CreditLimit.HasValue
                ? new ObjectParameter("Original_CreditLimit", original_CreditLimit)
                : new ObjectParameter("Original_CreditLimit", typeof(double));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_FactoringStateParameter = original_FactoringState.HasValue
                ? new ObjectParameter("Original_FactoringState", original_FactoringState)
                : new ObjectParameter("Original_FactoringState", typeof(byte));

            var original_FactoringGroupParameter = original_FactoringGroup != null
                ? new ObjectParameter("Original_FactoringGroup", original_FactoringGroup)
                : new ObjectParameter("Original_FactoringGroup", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FIKNoParameter = original_FIKNo != null
                ? new ObjectParameter("Original_FIKNo", original_FIKNo)
                : new ObjectParameter("Original_FIKNo", typeof(string));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_InvoiceToParameter = original_InvoiceTo != null
                ? new ObjectParameter("Original_InvoiceTo", original_InvoiceTo)
                : new ObjectParameter("Original_InvoiceTo", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_LoginNameParameter = original_LoginName != null
                ? new ObjectParameter("Original_LoginName", original_LoginName)
                : new ObjectParameter("Original_LoginName", typeof(string));

            var original_LoginPassWordParameter = original_LoginPassWord != null
                ? new ObjectParameter("Original_LoginPassWord", original_LoginPassWord)
                : new ObjectParameter("Original_LoginPassWord", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalDate3Parameter = original_OptionalDate3.HasValue
                ? new ObjectParameter("Original_OptionalDate3", original_OptionalDate3)
                : new ObjectParameter("Original_OptionalDate3", typeof(System.DateTime));

            var original_OptionalDate4Parameter = original_OptionalDate4.HasValue
                ? new ObjectParameter("Original_OptionalDate4", original_OptionalDate4)
                : new ObjectParameter("Original_OptionalDate4", typeof(System.DateTime));

            var original_OptionalDate5Parameter = original_OptionalDate5.HasValue
                ? new ObjectParameter("Original_OptionalDate5", original_OptionalDate5)
                : new ObjectParameter("Original_OptionalDate5", typeof(System.DateTime));

            var original_OptionalDate6Parameter = original_OptionalDate6.HasValue
                ? new ObjectParameter("Original_OptionalDate6", original_OptionalDate6)
                : new ObjectParameter("Original_OptionalDate6", typeof(System.DateTime));

            var original_OptionalDate7Parameter = original_OptionalDate7.HasValue
                ? new ObjectParameter("Original_OptionalDate7", original_OptionalDate7)
                : new ObjectParameter("Original_OptionalDate7", typeof(System.DateTime));

            var original_OptionalDate8Parameter = original_OptionalDate8.HasValue
                ? new ObjectParameter("Original_OptionalDate8", original_OptionalDate8)
                : new ObjectParameter("Original_OptionalDate8", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderCommunicationParameter = original_OrderCommunication != null
                ? new ObjectParameter("Original_OrderCommunication", original_OrderCommunication)
                : new ObjectParameter("Original_OrderCommunication", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PBSAgrementNoParameter = original_PBSAgrementNo.HasValue
                ? new ObjectParameter("Original_PBSAgrementNo", original_PBSAgrementNo)
                : new ObjectParameter("Original_PBSAgrementNo", typeof(long));

            var original_PBSGruppeNoParameter = original_PBSGruppeNo.HasValue
                ? new ObjectParameter("Original_PBSGruppeNo", original_PBSGruppeNo)
                : new ObjectParameter("Original_PBSGruppeNo", typeof(long));

            var original_PBSStartDateParameter = original_PBSStartDate.HasValue
                ? new ObjectParameter("Original_PBSStartDate", original_PBSStartDate)
                : new ObjectParameter("Original_PBSStartDate", typeof(System.DateTime));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_SalesRepParameter = original_SalesRep != null
                ? new ObjectParameter("Original_SalesRep", original_SalesRep)
                : new ObjectParameter("Original_SalesRep", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship4Parameter = original_Ship4 != null
                ? new ObjectParameter("Original_Ship4", original_Ship4)
                : new ObjectParameter("Original_Ship4", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            var orderMergingParameter = orderMerging.HasValue
                ? new ObjectParameter("OrderMerging", orderMerging)
                : new ObjectParameter("OrderMerging", typeof(short));

            var original_OrderMergingParameter = original_OrderMerging.HasValue
                ? new ObjectParameter("Original_OrderMerging", original_OrderMerging)
                : new ObjectParameter("Original_OrderMerging", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Customers_Update_Result>(
                    "Public_Customers_Update", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    allocateParameter, allowStatementParameter, bankParameter, blockedParameter, cashDiscountParameter,
                    categoryParameter, cityParameter, contactParameter, costCenterParameter, countryParameter,
                    countryCodeParameter, cPRParameter, creditLimitParameter, currencyParameter, deliveryParameter,
                    departmentParameter, eECCountryParameter, eECTransCodeParameter, eDILocationNrParameter,
                    emailParameter, endDiscPctParameter, factoringStateParameter, factoringGroupParameter, faxParameter,
                    fIKNoParameter, giroParameter, groupingParameter, interestParameter, internalRemarksParameter,
                    interNetParameter, invoiceToParameter, isLiableToPayTaxParameter, languageParameter,
                    loginNameParameter, loginPassWordParameter, mobileParameter, nameParameter, optional1Parameter,
                    optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                    optional7Parameter, optional8Parameter, optionalDate1Parameter, optionalDate2Parameter,
                    optionalDate3Parameter, optionalDate4Parameter, optionalDate5Parameter, optionalDate6Parameter,
                    optionalDate7Parameter, optionalDate8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                    optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                    optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                    optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                    optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, orderCommunicationParameter,
                    paymentParameter, pBSAgrementNoParameter, pBSGruppeNoParameter, pBSStartDateParameter,
                    phoneParameter, postalCodeParameter, priceListParameter, projectParameter, purposeParameter,
                    remarksParameter, reportsParameter, salesRepParameter, ship1Parameter, ship2Parameter,
                    ship3Parameter, ship4Parameter, ship5Parameter, ship6Parameter, ship7Parameter,
                    shipCityNameParameter, shipPostalCodeParameter, shipToParameter, taxParameter, taxNoParameter,
                    original_Address1Parameter, original_Address2Parameter, original_Address3Parameter,
                    original_AgentParameter, original_AllocateParameter, original_AllowStatementParameter,
                    original_BankParameter, original_BlockedParameter, original_CashDiscountParameter,
                    original_CategoryParameter, original_CityParameter, original_ContactParameter,
                    original_CostCenterParameter, original_CountryParameter, original_CountryCodeParameter,
                    original_CPRParameter, original_CreditLimitParameter, original_CurrencyParameter,
                    original_CustomerParameter, original_DeliveryParameter, original_DepartmentParameter,
                    original_EECCountryParameter, original_EECTransCodeParameter, original_EDILocationNrParameter,
                    original_EmailParameter, original_EndDiscPctParameter, original_FactoringStateParameter,
                    original_FactoringGroupParameter, original_FaxParameter, original_FIKNoParameter,
                    original_GiroParameter, original_GroupingParameter, original_InterestParameter,
                    original_InternalRemarksParameter, original_InterNetParameter, original_InvoiceToParameter,
                    original_IsLiableToPayTaxParameter, original_LanguageParameter, original_LoginNameParameter,
                    original_LoginPassWordParameter, original_MobileParameter, original_NameParameter,
                    original_Optional1Parameter, original_Optional2Parameter, original_Optional3Parameter,
                    original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                    original_Optional7Parameter, original_Optional8Parameter, original_OptionalDate1Parameter,
                    original_OptionalDate2Parameter, original_OptionalDate3Parameter, original_OptionalDate4Parameter,
                    original_OptionalDate5Parameter, original_OptionalDate6Parameter, original_OptionalDate7Parameter,
                    original_OptionalDate8Parameter, original_OptionalNumber1Parameter,
                    original_OptionalNumber2Parameter, original_OptionalNumber3Parameter,
                    original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                    original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                    original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                    original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                    original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                    original_OrderCommunicationParameter, original_PaymentParameter, original_PBSAgrementNoParameter,
                    original_PBSGruppeNoParameter, original_PBSStartDateParameter, original_PhoneParameter,
                    original_PostalCodeParameter, original_PriceListParameter, original_ProjectParameter,
                    original_PurposeParameter, original_RemarksParameter, original_ReportsParameter,
                    original_SalesRepParameter, original_Ship1Parameter, original_Ship2Parameter,
                    original_Ship3Parameter, original_Ship4Parameter, original_Ship5Parameter, original_Ship6Parameter,
                    original_Ship7Parameter, original_ShipCityNameParameter, original_ShipPostalCodeParameter,
                    original_ShipToParameter, original_TaxParameter, original_TaxNoParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter, orderMergingParameter,
                    original_OrderMergingParameter);
        }

        public virtual int Public_Delivery_AddNew(Nullable<byte> aDeliveryPacket, string clientNo, Nullable<short> days,
            string delivery, string description, string packFilePath, string packFormat, Nullable<int> packNextFileNo,
            Nullable<int> packNextSerialNo, Nullable<int> packNoAmount, string remarks, Nullable<short> tax,
            string standard_Delivery, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(byte));

            var clientNoParameter = clientNo != null
                ? new ObjectParameter("ClientNo", clientNo)
                : new ObjectParameter("ClientNo", typeof(string));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var packFilePathParameter = packFilePath != null
                ? new ObjectParameter("PackFilePath", packFilePath)
                : new ObjectParameter("PackFilePath", typeof(string));

            var packFormatParameter = packFormat != null
                ? new ObjectParameter("PackFormat", packFormat)
                : new ObjectParameter("PackFormat", typeof(string));

            var packNextFileNoParameter = packNextFileNo.HasValue
                ? new ObjectParameter("PackNextFileNo", packNextFileNo)
                : new ObjectParameter("PackNextFileNo", typeof(int));

            var packNextSerialNoParameter = packNextSerialNo.HasValue
                ? new ObjectParameter("PackNextSerialNo", packNextSerialNo)
                : new ObjectParameter("PackNextSerialNo", typeof(int));

            var packNoAmountParameter = packNoAmount.HasValue
                ? new ObjectParameter("PackNoAmount", packNoAmount)
                : new ObjectParameter("PackNoAmount", typeof(int));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var taxParameter = tax.HasValue
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(short));

            var standard_DeliveryParameter = standard_Delivery != null
                ? new ObjectParameter("Standard_Delivery", standard_Delivery)
                : new ObjectParameter("Standard_Delivery", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Delivery_AddNew",
                aDeliveryPacketParameter, clientNoParameter, daysParameter, deliveryParameter, descriptionParameter,
                packFilePathParameter, packFormatParameter, packNextFileNoParameter, packNextSerialNoParameter,
                packNoAmountParameter, remarksParameter, taxParameter, standard_DeliveryParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Delivery_Delete(string original_Delivery, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Delivery_Delete",
                original_DeliveryParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Delivery_Select_All_Result> Public_Delivery_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Delivery_Select_All_Result>(
                    "Public_Delivery_Select_All");
        }

        public virtual int Public_Delivery_Select_Single(string original_Delivery, Nullable<System.Guid> gUID)
        {
            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Delivery_Select_Single",
                original_DeliveryParameter, gUIDParameter);
        }

        public virtual int Public_Delivery_Update(Nullable<byte> aDeliveryPacket, string clientNo, Nullable<short> days,
            string description, string packFilePath, string packFormat, Nullable<int> packNextFileNo,
            Nullable<int> packNextSerialNo, Nullable<int> packNoAmount, string remarks, Nullable<short> tax,
            Nullable<byte> original_ADeliveryPacket, string original_ClientNo, Nullable<short> original_Days,
            string original_Delivery, string original_Description, string original_PackFilePath,
            string original_PackFormat, Nullable<int> original_PackNextFileNo, Nullable<int> original_PackNextSerialNo,
            Nullable<int> original_PackNoAmount, string original_Remarks, Nullable<short> original_Tax,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(byte));

            var clientNoParameter = clientNo != null
                ? new ObjectParameter("ClientNo", clientNo)
                : new ObjectParameter("ClientNo", typeof(string));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var packFilePathParameter = packFilePath != null
                ? new ObjectParameter("PackFilePath", packFilePath)
                : new ObjectParameter("PackFilePath", typeof(string));

            var packFormatParameter = packFormat != null
                ? new ObjectParameter("PackFormat", packFormat)
                : new ObjectParameter("PackFormat", typeof(string));

            var packNextFileNoParameter = packNextFileNo.HasValue
                ? new ObjectParameter("PackNextFileNo", packNextFileNo)
                : new ObjectParameter("PackNextFileNo", typeof(int));

            var packNextSerialNoParameter = packNextSerialNo.HasValue
                ? new ObjectParameter("PackNextSerialNo", packNextSerialNo)
                : new ObjectParameter("PackNextSerialNo", typeof(int));

            var packNoAmountParameter = packNoAmount.HasValue
                ? new ObjectParameter("PackNoAmount", packNoAmount)
                : new ObjectParameter("PackNoAmount", typeof(int));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var taxParameter = tax.HasValue
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(short));

            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(byte));

            var original_ClientNoParameter = original_ClientNo != null
                ? new ObjectParameter("Original_ClientNo", original_ClientNo)
                : new ObjectParameter("Original_ClientNo", typeof(string));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_PackFilePathParameter = original_PackFilePath != null
                ? new ObjectParameter("Original_PackFilePath", original_PackFilePath)
                : new ObjectParameter("Original_PackFilePath", typeof(string));

            var original_PackFormatParameter = original_PackFormat != null
                ? new ObjectParameter("Original_PackFormat", original_PackFormat)
                : new ObjectParameter("Original_PackFormat", typeof(string));

            var original_PackNextFileNoParameter = original_PackNextFileNo.HasValue
                ? new ObjectParameter("Original_PackNextFileNo", original_PackNextFileNo)
                : new ObjectParameter("Original_PackNextFileNo", typeof(int));

            var original_PackNextSerialNoParameter = original_PackNextSerialNo.HasValue
                ? new ObjectParameter("Original_PackNextSerialNo", original_PackNextSerialNo)
                : new ObjectParameter("Original_PackNextSerialNo", typeof(int));

            var original_PackNoAmountParameter = original_PackNoAmount.HasValue
                ? new ObjectParameter("Original_PackNoAmount", original_PackNoAmount)
                : new ObjectParameter("Original_PackNoAmount", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_TaxParameter = original_Tax.HasValue
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Delivery_Update",
                aDeliveryPacketParameter, clientNoParameter, daysParameter, descriptionParameter, packFilePathParameter,
                packFormatParameter, packNextFileNoParameter, packNextSerialNoParameter, packNoAmountParameter,
                remarksParameter, taxParameter, original_ADeliveryPacketParameter, original_ClientNoParameter,
                original_DaysParameter, original_DeliveryParameter, original_DescriptionParameter,
                original_PackFilePathParameter, original_PackFormatParameter, original_PackNextFileNoParameter,
                original_PackNextSerialNoParameter, original_PackNoAmountParameter, original_RemarksParameter,
                original_TaxParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_Department_AddNew_Result> Public_Department_AddNew(string department,
            string name, string remarks, string standard_Department, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var standard_DepartmentParameter = standard_Department != null
                ? new ObjectParameter("Standard_Department", standard_Department)
                : new ObjectParameter("Standard_Department", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Department_AddNew_Result>(
                    "Public_Department_AddNew", departmentParameter, nameParameter, remarksParameter,
                    standard_DepartmentParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_Department_Delete(string original_Department, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Department_Delete",
                original_DepartmentParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Department_Select_All_Result> Public_Department_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Department_Select_All_Result>(
                    "Public_Department_Select_All");
        }

        public virtual ObjectResult<Public_Department_Select_Single_Result> Public_Department_Select_Single(
            string original_Department, Nullable<System.Guid> gUID)
        {
            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Department_Select_Single_Result>(
                    "Public_Department_Select_Single", original_DepartmentParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Department_Update_Result> Public_Department_Update(string name,
            string remarks, string original_Department, string original_Name, string original_Remarks,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Department_Update_Result>(
                    "Public_Department_Update", nameParameter, remarksParameter, original_DepartmentParameter,
                    original_NameParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Employee_AddNew_Result> Public_Employee_AddNew(string city, string country,
            string department, string email, string employee, string grouping, string handPhone, string homePhone,
            string location, string name, Nullable<double> normTime_Friday, Nullable<double> normTime_Monday,
            Nullable<double> normTime_Saturday, Nullable<double> normTime_Sunday, Nullable<double> normTime_Thursday,
            Nullable<double> normTime_Tuesday, Nullable<double> normTime_Wednesday, string pager, string passWord,
            string postalCode, string remarks, string street, string title, string userName, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var handPhoneParameter = handPhone != null
                ? new ObjectParameter("HandPhone", handPhone)
                : new ObjectParameter("HandPhone", typeof(string));

            var homePhoneParameter = homePhone != null
                ? new ObjectParameter("HomePhone", homePhone)
                : new ObjectParameter("HomePhone", typeof(string));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var normTime_FridayParameter = normTime_Friday.HasValue
                ? new ObjectParameter("NormTime_Friday", normTime_Friday)
                : new ObjectParameter("NormTime_Friday", typeof(double));

            var normTime_MondayParameter = normTime_Monday.HasValue
                ? new ObjectParameter("NormTime_Monday", normTime_Monday)
                : new ObjectParameter("NormTime_Monday", typeof(double));

            var normTime_SaturdayParameter = normTime_Saturday.HasValue
                ? new ObjectParameter("NormTime_Saturday", normTime_Saturday)
                : new ObjectParameter("NormTime_Saturday", typeof(double));

            var normTime_SundayParameter = normTime_Sunday.HasValue
                ? new ObjectParameter("NormTime_Sunday", normTime_Sunday)
                : new ObjectParameter("NormTime_Sunday", typeof(double));

            var normTime_ThursdayParameter = normTime_Thursday.HasValue
                ? new ObjectParameter("NormTime_Thursday", normTime_Thursday)
                : new ObjectParameter("NormTime_Thursday", typeof(double));

            var normTime_TuesdayParameter = normTime_Tuesday.HasValue
                ? new ObjectParameter("NormTime_Tuesday", normTime_Tuesday)
                : new ObjectParameter("NormTime_Tuesday", typeof(double));

            var normTime_WednesdayParameter = normTime_Wednesday.HasValue
                ? new ObjectParameter("NormTime_Wednesday", normTime_Wednesday)
                : new ObjectParameter("NormTime_Wednesday", typeof(double));

            var pagerParameter = pager != null
                ? new ObjectParameter("Pager", pager)
                : new ObjectParameter("Pager", typeof(string));

            var passWordParameter = passWord != null
                ? new ObjectParameter("PassWord", passWord)
                : new ObjectParameter("PassWord", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var streetParameter = street != null
                ? new ObjectParameter("Street", street)
                : new ObjectParameter("Street", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Employee_AddNew_Result>(
                    "Public_Employee_AddNew", cityParameter, countryParameter, departmentParameter, emailParameter,
                    employeeParameter, groupingParameter, handPhoneParameter, homePhoneParameter, locationParameter,
                    nameParameter, normTime_FridayParameter, normTime_MondayParameter, normTime_SaturdayParameter,
                    normTime_SundayParameter, normTime_ThursdayParameter, normTime_TuesdayParameter,
                    normTime_WednesdayParameter, pagerParameter, passWordParameter, postalCodeParameter,
                    remarksParameter, streetParameter, titleParameter, userNameParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Employee_Delete(string original_Employee, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Employee_Delete",
                original_EmployeeParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Employee_Select_All_Result> Public_Employee_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Employee_Select_All_Result>(
                    "Public_Employee_Select_All");
        }

        public virtual ObjectResult<Public_Employee_Select_All_Timekladde_Result> Public_Employee_Select_All_Timekladde(
            string employee, string password)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var passwordParameter = password != null
                ? new ObjectParameter("Password", password)
                : new ObjectParameter("Password", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_Employee_Select_All_Timekladde_Result>(
                        "Public_Employee_Select_All_Timekladde", employeeParameter, passwordParameter);
        }

        public virtual ObjectResult<Public_Employee_Select_Single_Result> Public_Employee_Select_Single(
            string original_Employee, Nullable<System.Guid> gUID)
        {
            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Employee_Select_Single_Result>(
                    "Public_Employee_Select_Single", original_EmployeeParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Employee_Update_Result> Public_Employee_Update(string city, string country,
            string department, string email, string grouping, string handPhone, string homePhone, string location,
            string name, Nullable<double> normTime_Friday, Nullable<double> normTime_Monday,
            Nullable<double> normTime_Saturday, Nullable<double> normTime_Sunday, Nullable<double> normTime_Thursday,
            Nullable<double> normTime_Tuesday, Nullable<double> normTime_Wednesday, string pager, string passWord,
            string postalCode, string remarks, string street, string title, string userName, string original_City,
            string original_Country, string original_Department, string original_Email, string original_Employee,
            string original_Grouping, string original_HandPhone, string original_HomePhone, string original_Location,
            string original_Name, Nullable<double> original_NormTime_Friday, Nullable<double> original_NormTime_Monday,
            Nullable<double> original_NormTime_Saturday, Nullable<double> original_NormTime_Sunday,
            Nullable<double> original_NormTime_Thursday, Nullable<double> original_NormTime_Tuesday,
            Nullable<double> original_NormTime_Wednesday, string original_Pager, string original_PassWord,
            string original_PostalCode, string original_Remarks, string original_Street, string original_Title,
            string original_UserName, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var handPhoneParameter = handPhone != null
                ? new ObjectParameter("HandPhone", handPhone)
                : new ObjectParameter("HandPhone", typeof(string));

            var homePhoneParameter = homePhone != null
                ? new ObjectParameter("HomePhone", homePhone)
                : new ObjectParameter("HomePhone", typeof(string));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var normTime_FridayParameter = normTime_Friday.HasValue
                ? new ObjectParameter("NormTime_Friday", normTime_Friday)
                : new ObjectParameter("NormTime_Friday", typeof(double));

            var normTime_MondayParameter = normTime_Monday.HasValue
                ? new ObjectParameter("NormTime_Monday", normTime_Monday)
                : new ObjectParameter("NormTime_Monday", typeof(double));

            var normTime_SaturdayParameter = normTime_Saturday.HasValue
                ? new ObjectParameter("NormTime_Saturday", normTime_Saturday)
                : new ObjectParameter("NormTime_Saturday", typeof(double));

            var normTime_SundayParameter = normTime_Sunday.HasValue
                ? new ObjectParameter("NormTime_Sunday", normTime_Sunday)
                : new ObjectParameter("NormTime_Sunday", typeof(double));

            var normTime_ThursdayParameter = normTime_Thursday.HasValue
                ? new ObjectParameter("NormTime_Thursday", normTime_Thursday)
                : new ObjectParameter("NormTime_Thursday", typeof(double));

            var normTime_TuesdayParameter = normTime_Tuesday.HasValue
                ? new ObjectParameter("NormTime_Tuesday", normTime_Tuesday)
                : new ObjectParameter("NormTime_Tuesday", typeof(double));

            var normTime_WednesdayParameter = normTime_Wednesday.HasValue
                ? new ObjectParameter("NormTime_Wednesday", normTime_Wednesday)
                : new ObjectParameter("NormTime_Wednesday", typeof(double));

            var pagerParameter = pager != null
                ? new ObjectParameter("Pager", pager)
                : new ObjectParameter("Pager", typeof(string));

            var passWordParameter = passWord != null
                ? new ObjectParameter("PassWord", passWord)
                : new ObjectParameter("PassWord", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var streetParameter = street != null
                ? new ObjectParameter("Street", street)
                : new ObjectParameter("Street", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var userNameParameter = userName != null
                ? new ObjectParameter("UserName", userName)
                : new ObjectParameter("UserName", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_HandPhoneParameter = original_HandPhone != null
                ? new ObjectParameter("Original_HandPhone", original_HandPhone)
                : new ObjectParameter("Original_HandPhone", typeof(string));

            var original_HomePhoneParameter = original_HomePhone != null
                ? new ObjectParameter("Original_HomePhone", original_HomePhone)
                : new ObjectParameter("Original_HomePhone", typeof(string));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_NormTime_FridayParameter = original_NormTime_Friday.HasValue
                ? new ObjectParameter("Original_NormTime_Friday", original_NormTime_Friday)
                : new ObjectParameter("Original_NormTime_Friday", typeof(double));

            var original_NormTime_MondayParameter = original_NormTime_Monday.HasValue
                ? new ObjectParameter("Original_NormTime_Monday", original_NormTime_Monday)
                : new ObjectParameter("Original_NormTime_Monday", typeof(double));

            var original_NormTime_SaturdayParameter = original_NormTime_Saturday.HasValue
                ? new ObjectParameter("Original_NormTime_Saturday", original_NormTime_Saturday)
                : new ObjectParameter("Original_NormTime_Saturday", typeof(double));

            var original_NormTime_SundayParameter = original_NormTime_Sunday.HasValue
                ? new ObjectParameter("Original_NormTime_Sunday", original_NormTime_Sunday)
                : new ObjectParameter("Original_NormTime_Sunday", typeof(double));

            var original_NormTime_ThursdayParameter = original_NormTime_Thursday.HasValue
                ? new ObjectParameter("Original_NormTime_Thursday", original_NormTime_Thursday)
                : new ObjectParameter("Original_NormTime_Thursday", typeof(double));

            var original_NormTime_TuesdayParameter = original_NormTime_Tuesday.HasValue
                ? new ObjectParameter("Original_NormTime_Tuesday", original_NormTime_Tuesday)
                : new ObjectParameter("Original_NormTime_Tuesday", typeof(double));

            var original_NormTime_WednesdayParameter = original_NormTime_Wednesday.HasValue
                ? new ObjectParameter("Original_NormTime_Wednesday", original_NormTime_Wednesday)
                : new ObjectParameter("Original_NormTime_Wednesday", typeof(double));

            var original_PagerParameter = original_Pager != null
                ? new ObjectParameter("Original_Pager", original_Pager)
                : new ObjectParameter("Original_Pager", typeof(string));

            var original_PassWordParameter = original_PassWord != null
                ? new ObjectParameter("Original_PassWord", original_PassWord)
                : new ObjectParameter("Original_PassWord", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_StreetParameter = original_Street != null
                ? new ObjectParameter("Original_Street", original_Street)
                : new ObjectParameter("Original_Street", typeof(string));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var original_UserNameParameter = original_UserName != null
                ? new ObjectParameter("Original_UserName", original_UserName)
                : new ObjectParameter("Original_UserName", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Employee_Update_Result>(
                    "Public_Employee_Update", cityParameter, countryParameter, departmentParameter, emailParameter,
                    groupingParameter, handPhoneParameter, homePhoneParameter, locationParameter, nameParameter,
                    normTime_FridayParameter, normTime_MondayParameter, normTime_SaturdayParameter,
                    normTime_SundayParameter, normTime_ThursdayParameter, normTime_TuesdayParameter,
                    normTime_WednesdayParameter, pagerParameter, passWordParameter, postalCodeParameter,
                    remarksParameter, streetParameter, titleParameter, userNameParameter, original_CityParameter,
                    original_CountryParameter, original_DepartmentParameter, original_EmailParameter,
                    original_EmployeeParameter, original_GroupingParameter, original_HandPhoneParameter,
                    original_HomePhoneParameter, original_LocationParameter, original_NameParameter,
                    original_NormTime_FridayParameter, original_NormTime_MondayParameter,
                    original_NormTime_SaturdayParameter, original_NormTime_SundayParameter,
                    original_NormTime_ThursdayParameter, original_NormTime_TuesdayParameter,
                    original_NormTime_WednesdayParameter, original_PagerParameter, original_PassWordParameter,
                    original_PostalCodeParameter, original_RemarksParameter, original_StreetParameter,
                    original_TitleParameter, original_UserNameParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_ExtraInventory_AddNew_Result> Public_ExtraInventory_AddNew(
            Nullable<short> aDeliveryPacket, Nullable<short> allocateBOMItems, Nullable<short> allowDiscount,
            Nullable<short> allowFinalDiscount, string alternative, Nullable<double> avance, Nullable<short> avanceType,
            Nullable<short> blocked, string category, string costCenter, Nullable<double> costPrice,
            Nullable<byte> costPriceAdjustment, string customerNo, string customsNo, Nullable<double> decimals,
            Nullable<double> defaultQuantity, Nullable<int> deliveryTime, string department, string description,
            string extra, string grouping, string internalNo, string internetGroup, string item, string itemAlternative,
            string itemEAN, Nullable<byte> keepPriceOnOrdreRecalc, Nullable<double> lastCostPercentAmount,
            string location, Nullable<double> multiplaFaktor, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            string picture, string picture2, string placement, Nullable<byte> postServiceCostPrice,
            Nullable<double> priceIncl, Nullable<short> priceInclDuty, string project, string provisionGroup,
            string purpose, Nullable<double> quantityPrColi, string remarks, Nullable<double> salesPrice,
            Nullable<double> salesUnit, Nullable<short> serialTypeBuy, Nullable<short> serialTypeSale,
            Nullable<short> status, string supplierNo, string taxBuying, string taxSelling, Nullable<short> tracking,
            string unit, string uRL, Nullable<float> volume, Nullable<byte> webUseOnWeb, Nullable<byte> webHasNews,
            Nullable<byte> webIsDiscount, string webAlt, string webMetaDescription, string webMetaTags, string webTitle,
            Nullable<float> weight, string standard_Item, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allocateBOMItemsParameter = allocateBOMItems.HasValue
                ? new ObjectParameter("AllocateBOMItems", allocateBOMItems)
                : new ObjectParameter("AllocateBOMItems", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var alternativeParameter = alternative != null
                ? new ObjectParameter("Alternative", alternative)
                : new ObjectParameter("Alternative", typeof(string));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var avanceTypeParameter = avanceType.HasValue
                ? new ObjectParameter("AvanceType", avanceType)
                : new ObjectParameter("AvanceType", typeof(short));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var costPriceAdjustmentParameter = costPriceAdjustment.HasValue
                ? new ObjectParameter("CostPriceAdjustment", costPriceAdjustment)
                : new ObjectParameter("CostPriceAdjustment", typeof(byte));

            var customerNoParameter = customerNo != null
                ? new ObjectParameter("CustomerNo", customerNo)
                : new ObjectParameter("CustomerNo", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(double));

            var defaultQuantityParameter = defaultQuantity.HasValue
                ? new ObjectParameter("DefaultQuantity", defaultQuantity)
                : new ObjectParameter("DefaultQuantity", typeof(double));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var extraParameter = extra != null
                ? new ObjectParameter("Extra", extra)
                : new ObjectParameter("Extra", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var internalNoParameter = internalNo != null
                ? new ObjectParameter("InternalNo", internalNo)
                : new ObjectParameter("InternalNo", typeof(string));

            var internetGroupParameter = internetGroup != null
                ? new ObjectParameter("InternetGroup", internetGroup)
                : new ObjectParameter("InternetGroup", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var keepPriceOnOrdreRecalcParameter = keepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("KeepPriceOnOrdreRecalc", keepPriceOnOrdreRecalc)
                : new ObjectParameter("KeepPriceOnOrdreRecalc", typeof(byte));

            var lastCostPercentAmountParameter = lastCostPercentAmount.HasValue
                ? new ObjectParameter("LastCostPercentAmount", lastCostPercentAmount)
                : new ObjectParameter("LastCostPercentAmount", typeof(double));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var pictureParameter = picture != null
                ? new ObjectParameter("Picture", picture)
                : new ObjectParameter("Picture", typeof(string));

            var picture2Parameter = picture2 != null
                ? new ObjectParameter("Picture2", picture2)
                : new ObjectParameter("Picture2", typeof(string));

            var placementParameter = placement != null
                ? new ObjectParameter("Placement", placement)
                : new ObjectParameter("Placement", typeof(string));

            var postServiceCostPriceParameter = postServiceCostPrice.HasValue
                ? new ObjectParameter("PostServiceCostPrice", postServiceCostPrice)
                : new ObjectParameter("PostServiceCostPrice", typeof(byte));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var priceInclDutyParameter = priceInclDuty.HasValue
                ? new ObjectParameter("PriceInclDuty", priceInclDuty)
                : new ObjectParameter("PriceInclDuty", typeof(short));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var provisionGroupParameter = provisionGroup != null
                ? new ObjectParameter("ProvisionGroup", provisionGroup)
                : new ObjectParameter("ProvisionGroup", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var salesUnitParameter = salesUnit.HasValue
                ? new ObjectParameter("SalesUnit", salesUnit)
                : new ObjectParameter("SalesUnit", typeof(double));

            var serialTypeBuyParameter = serialTypeBuy.HasValue
                ? new ObjectParameter("SerialTypeBuy", serialTypeBuy)
                : new ObjectParameter("SerialTypeBuy", typeof(short));

            var serialTypeSaleParameter = serialTypeSale.HasValue
                ? new ObjectParameter("SerialTypeSale", serialTypeSale)
                : new ObjectParameter("SerialTypeSale", typeof(short));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var supplierNoParameter = supplierNo != null
                ? new ObjectParameter("SupplierNo", supplierNo)
                : new ObjectParameter("SupplierNo", typeof(string));

            var taxBuyingParameter = taxBuying != null
                ? new ObjectParameter("TaxBuying", taxBuying)
                : new ObjectParameter("TaxBuying", typeof(string));

            var taxSellingParameter = taxSelling != null
                ? new ObjectParameter("TaxSelling", taxSelling)
                : new ObjectParameter("TaxSelling", typeof(string));

            var trackingParameter = tracking.HasValue
                ? new ObjectParameter("Tracking", tracking)
                : new ObjectParameter("Tracking", typeof(short));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var uRLParameter = uRL != null
                ? new ObjectParameter("URL", uRL)
                : new ObjectParameter("URL", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(float));

            var webUseOnWebParameter = webUseOnWeb.HasValue
                ? new ObjectParameter("WebUseOnWeb", webUseOnWeb)
                : new ObjectParameter("WebUseOnWeb", typeof(byte));

            var webHasNewsParameter = webHasNews.HasValue
                ? new ObjectParameter("WebHasNews", webHasNews)
                : new ObjectParameter("WebHasNews", typeof(byte));

            var webIsDiscountParameter = webIsDiscount.HasValue
                ? new ObjectParameter("WebIsDiscount", webIsDiscount)
                : new ObjectParameter("WebIsDiscount", typeof(byte));

            var webAltParameter = webAlt != null
                ? new ObjectParameter("WebAlt", webAlt)
                : new ObjectParameter("WebAlt", typeof(string));

            var webMetaDescriptionParameter = webMetaDescription != null
                ? new ObjectParameter("WebMetaDescription", webMetaDescription)
                : new ObjectParameter("WebMetaDescription", typeof(string));

            var webMetaTagsParameter = webMetaTags != null
                ? new ObjectParameter("WebMetaTags", webMetaTags)
                : new ObjectParameter("WebMetaTags", typeof(string));

            var webTitleParameter = webTitle != null
                ? new ObjectParameter("WebTitle", webTitle)
                : new ObjectParameter("WebTitle", typeof(string));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(float));

            var standard_ItemParameter = standard_Item != null
                ? new ObjectParameter("Standard_Item", standard_Item)
                : new ObjectParameter("Standard_Item", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ExtraInventory_AddNew_Result>(
                    "Public_ExtraInventory_AddNew", aDeliveryPacketParameter, allocateBOMItemsParameter,
                    allowDiscountParameter, allowFinalDiscountParameter, alternativeParameter, avanceParameter,
                    avanceTypeParameter, blockedParameter, categoryParameter, costCenterParameter, costPriceParameter,
                    costPriceAdjustmentParameter, customerNoParameter, customsNoParameter, decimalsParameter,
                    defaultQuantityParameter, deliveryTimeParameter, departmentParameter, descriptionParameter,
                    extraParameter, groupingParameter, internalNoParameter, internetGroupParameter, itemParameter,
                    itemAlternativeParameter, itemEANParameter, keepPriceOnOrdreRecalcParameter,
                    lastCostPercentAmountParameter, locationParameter, multiplaFaktorParameter, optional1Parameter,
                    optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                    optional7Parameter, optional8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                    optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                    optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                    optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                    optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, pictureParameter,
                    picture2Parameter, placementParameter, postServiceCostPriceParameter, priceInclParameter,
                    priceInclDutyParameter, projectParameter, provisionGroupParameter, purposeParameter,
                    quantityPrColiParameter, remarksParameter, salesPriceParameter, salesUnitParameter,
                    serialTypeBuyParameter, serialTypeSaleParameter, statusParameter, supplierNoParameter,
                    taxBuyingParameter, taxSellingParameter, trackingParameter, unitParameter, uRLParameter,
                    volumeParameter, webUseOnWebParameter, webHasNewsParameter, webIsDiscountParameter, webAltParameter,
                    webMetaDescriptionParameter, webMetaTagsParameter, webTitleParameter, weightParameter,
                    standard_ItemParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_ExtraInventory_Delete(string original_Item, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ExtraInventory_Delete",
                original_ItemParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_ExtraInventory_Select_All(string itemEAN, string itemAlternative, string where)
        {
            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var whereParameter = where != null
                ? new ObjectParameter("Where", where)
                : new ObjectParameter("Where", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ExtraInventory_Select_All",
                itemEANParameter, itemAlternativeParameter, whereParameter);
        }

        public virtual ObjectResult<Public_ExtraInventory_Select_Single_Result> Public_ExtraInventory_Select_Single(
            string original_Item, Nullable<System.Guid> gUID)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ExtraInventory_Select_Single_Result>
                    ("Public_ExtraInventory_Select_Single", original_ItemParameter, gUIDParameter);
        }

        public virtual int Public_ExtraInventory_Update(Nullable<short> aDeliveryPacket,
            Nullable<short> allocateBOMItems, Nullable<short> allowDiscount, Nullable<short> allowFinalDiscount,
            string alternative, Nullable<double> avance, Nullable<short> avanceType, Nullable<short> blocked,
            string category, string costCenter, Nullable<double> costPrice, Nullable<byte> costPriceAdjustment,
            string customerNo, string customsNo, Nullable<double> decimals, Nullable<double> defaultQuantity,
            Nullable<int> deliveryTime, string department, string description, string extra, string grouping,
            string internalNo, string internetGroup, string itemAlternative, string itemEAN,
            Nullable<byte> keepPriceOnOrdreRecalc, Nullable<double> lastCostPercentAmount, string location,
            Nullable<double> multiplaFaktor, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            string picture, string picture2, string placement, Nullable<byte> postServiceCostPrice,
            Nullable<double> priceIncl, Nullable<short> priceInclDuty, string project, string provisionGroup,
            string purpose, Nullable<double> quantityPrColi, string remarks, Nullable<double> salesPrice,
            Nullable<double> salesUnit, Nullable<short> serialTypeBuy, Nullable<short> serialTypeSale,
            Nullable<short> status, string supplierNo, string taxBuying, string taxSelling, Nullable<short> tracking,
            string unit, string uRL, Nullable<float> volume, Nullable<byte> webUseOnWeb, Nullable<byte> webHasNews,
            Nullable<byte> webIsDiscount, string webAlt, string webMetaDescription, string webMetaTags, string webTitle,
            Nullable<float> weight, Nullable<short> original_ADeliveryPacket, Nullable<short> original_AllocateBOMItems,
            Nullable<short> original_AllowDiscount, Nullable<short> original_AllowFinalDiscount,
            string original_Alternative, Nullable<double> original_Avance, Nullable<short> original_AvanceType,
            Nullable<short> original_Blocked, string original_Category, string original_CostCenter,
            Nullable<double> original_CostPrice, Nullable<byte> original_CostPriceAdjustment, string original_CustomerNo,
            string original_CustomsNo, Nullable<double> original_Decimals, Nullable<double> original_DefaultQuantity,
            Nullable<int> original_DeliveryTime, string original_Department, string original_Description,
            string original_Extra, string original_Grouping, string original_InternalNo, string original_InternetGroup,
            string original_Item, string original_ItemAlternative, string original_ItemEAN,
            Nullable<byte> original_KeepPriceOnOrdreRecalc, Nullable<double> original_LastCostPercentAmount,
            string original_Location, Nullable<double> original_MultiplaFaktor, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            string original_Picture, string original_Picture2, string original_Placement,
            Nullable<byte> original_PostServiceCostPrice, Nullable<double> original_PriceIncl,
            Nullable<short> original_PriceInclDuty, string original_Project, string original_ProvisionGroup,
            string original_Purpose, Nullable<double> original_QuantityPrColi, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<double> original_SalesUnit,
            Nullable<short> original_SerialTypeBuy, Nullable<short> original_SerialTypeSale,
            Nullable<short> original_Status, string original_SupplierNo, string original_TaxBuying,
            string original_TaxSelling, Nullable<short> original_Tracking, string original_Unit, string original_URL,
            Nullable<float> original_Volume, Nullable<byte> original_WebUseOnWeb, Nullable<byte> original_WebHasNews,
            Nullable<byte> original_WebIsDiscount, string original_WebAlt, string original_WebMetaDescription,
            string original_WebMetaTags, string original_WebTitle, Nullable<float> original_Weight,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allocateBOMItemsParameter = allocateBOMItems.HasValue
                ? new ObjectParameter("AllocateBOMItems", allocateBOMItems)
                : new ObjectParameter("AllocateBOMItems", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var alternativeParameter = alternative != null
                ? new ObjectParameter("Alternative", alternative)
                : new ObjectParameter("Alternative", typeof(string));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var avanceTypeParameter = avanceType.HasValue
                ? new ObjectParameter("AvanceType", avanceType)
                : new ObjectParameter("AvanceType", typeof(short));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var costPriceAdjustmentParameter = costPriceAdjustment.HasValue
                ? new ObjectParameter("CostPriceAdjustment", costPriceAdjustment)
                : new ObjectParameter("CostPriceAdjustment", typeof(byte));

            var customerNoParameter = customerNo != null
                ? new ObjectParameter("CustomerNo", customerNo)
                : new ObjectParameter("CustomerNo", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(double));

            var defaultQuantityParameter = defaultQuantity.HasValue
                ? new ObjectParameter("DefaultQuantity", defaultQuantity)
                : new ObjectParameter("DefaultQuantity", typeof(double));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var extraParameter = extra != null
                ? new ObjectParameter("Extra", extra)
                : new ObjectParameter("Extra", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var internalNoParameter = internalNo != null
                ? new ObjectParameter("InternalNo", internalNo)
                : new ObjectParameter("InternalNo", typeof(string));

            var internetGroupParameter = internetGroup != null
                ? new ObjectParameter("InternetGroup", internetGroup)
                : new ObjectParameter("InternetGroup", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var keepPriceOnOrdreRecalcParameter = keepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("KeepPriceOnOrdreRecalc", keepPriceOnOrdreRecalc)
                : new ObjectParameter("KeepPriceOnOrdreRecalc", typeof(byte));

            var lastCostPercentAmountParameter = lastCostPercentAmount.HasValue
                ? new ObjectParameter("LastCostPercentAmount", lastCostPercentAmount)
                : new ObjectParameter("LastCostPercentAmount", typeof(double));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var pictureParameter = picture != null
                ? new ObjectParameter("Picture", picture)
                : new ObjectParameter("Picture", typeof(string));

            var picture2Parameter = picture2 != null
                ? new ObjectParameter("Picture2", picture2)
                : new ObjectParameter("Picture2", typeof(string));

            var placementParameter = placement != null
                ? new ObjectParameter("Placement", placement)
                : new ObjectParameter("Placement", typeof(string));

            var postServiceCostPriceParameter = postServiceCostPrice.HasValue
                ? new ObjectParameter("PostServiceCostPrice", postServiceCostPrice)
                : new ObjectParameter("PostServiceCostPrice", typeof(byte));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var priceInclDutyParameter = priceInclDuty.HasValue
                ? new ObjectParameter("PriceInclDuty", priceInclDuty)
                : new ObjectParameter("PriceInclDuty", typeof(short));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var provisionGroupParameter = provisionGroup != null
                ? new ObjectParameter("ProvisionGroup", provisionGroup)
                : new ObjectParameter("ProvisionGroup", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var salesUnitParameter = salesUnit.HasValue
                ? new ObjectParameter("SalesUnit", salesUnit)
                : new ObjectParameter("SalesUnit", typeof(double));

            var serialTypeBuyParameter = serialTypeBuy.HasValue
                ? new ObjectParameter("SerialTypeBuy", serialTypeBuy)
                : new ObjectParameter("SerialTypeBuy", typeof(short));

            var serialTypeSaleParameter = serialTypeSale.HasValue
                ? new ObjectParameter("SerialTypeSale", serialTypeSale)
                : new ObjectParameter("SerialTypeSale", typeof(short));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var supplierNoParameter = supplierNo != null
                ? new ObjectParameter("SupplierNo", supplierNo)
                : new ObjectParameter("SupplierNo", typeof(string));

            var taxBuyingParameter = taxBuying != null
                ? new ObjectParameter("TaxBuying", taxBuying)
                : new ObjectParameter("TaxBuying", typeof(string));

            var taxSellingParameter = taxSelling != null
                ? new ObjectParameter("TaxSelling", taxSelling)
                : new ObjectParameter("TaxSelling", typeof(string));

            var trackingParameter = tracking.HasValue
                ? new ObjectParameter("Tracking", tracking)
                : new ObjectParameter("Tracking", typeof(short));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var uRLParameter = uRL != null
                ? new ObjectParameter("URL", uRL)
                : new ObjectParameter("URL", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(float));

            var webUseOnWebParameter = webUseOnWeb.HasValue
                ? new ObjectParameter("WebUseOnWeb", webUseOnWeb)
                : new ObjectParameter("WebUseOnWeb", typeof(byte));

            var webHasNewsParameter = webHasNews.HasValue
                ? new ObjectParameter("WebHasNews", webHasNews)
                : new ObjectParameter("WebHasNews", typeof(byte));

            var webIsDiscountParameter = webIsDiscount.HasValue
                ? new ObjectParameter("WebIsDiscount", webIsDiscount)
                : new ObjectParameter("WebIsDiscount", typeof(byte));

            var webAltParameter = webAlt != null
                ? new ObjectParameter("WebAlt", webAlt)
                : new ObjectParameter("WebAlt", typeof(string));

            var webMetaDescriptionParameter = webMetaDescription != null
                ? new ObjectParameter("WebMetaDescription", webMetaDescription)
                : new ObjectParameter("WebMetaDescription", typeof(string));

            var webMetaTagsParameter = webMetaTags != null
                ? new ObjectParameter("WebMetaTags", webMetaTags)
                : new ObjectParameter("WebMetaTags", typeof(string));

            var webTitleParameter = webTitle != null
                ? new ObjectParameter("WebTitle", webTitle)
                : new ObjectParameter("WebTitle", typeof(string));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(float));

            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllocateBOMItemsParameter = original_AllocateBOMItems.HasValue
                ? new ObjectParameter("Original_AllocateBOMItems", original_AllocateBOMItems)
                : new ObjectParameter("Original_AllocateBOMItems", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_AlternativeParameter = original_Alternative != null
                ? new ObjectParameter("Original_Alternative", original_Alternative)
                : new ObjectParameter("Original_Alternative", typeof(string));

            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_AvanceTypeParameter = original_AvanceType.HasValue
                ? new ObjectParameter("Original_AvanceType", original_AvanceType)
                : new ObjectParameter("Original_AvanceType", typeof(short));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CostPriceAdjustmentParameter = original_CostPriceAdjustment.HasValue
                ? new ObjectParameter("Original_CostPriceAdjustment", original_CostPriceAdjustment)
                : new ObjectParameter("Original_CostPriceAdjustment", typeof(byte));

            var original_CustomerNoParameter = original_CustomerNo != null
                ? new ObjectParameter("Original_CustomerNo", original_CustomerNo)
                : new ObjectParameter("Original_CustomerNo", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DecimalsParameter = original_Decimals.HasValue
                ? new ObjectParameter("Original_Decimals", original_Decimals)
                : new ObjectParameter("Original_Decimals", typeof(double));

            var original_DefaultQuantityParameter = original_DefaultQuantity.HasValue
                ? new ObjectParameter("Original_DefaultQuantity", original_DefaultQuantity)
                : new ObjectParameter("Original_DefaultQuantity", typeof(double));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ExtraParameter = original_Extra != null
                ? new ObjectParameter("Original_Extra", original_Extra)
                : new ObjectParameter("Original_Extra", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InternalNoParameter = original_InternalNo != null
                ? new ObjectParameter("Original_InternalNo", original_InternalNo)
                : new ObjectParameter("Original_InternalNo", typeof(string));

            var original_InternetGroupParameter = original_InternetGroup != null
                ? new ObjectParameter("Original_InternetGroup", original_InternetGroup)
                : new ObjectParameter("Original_InternetGroup", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_ItemAlternativeParameter = original_ItemAlternative != null
                ? new ObjectParameter("Original_ItemAlternative", original_ItemAlternative)
                : new ObjectParameter("Original_ItemAlternative", typeof(string));

            var original_ItemEANParameter = original_ItemEAN != null
                ? new ObjectParameter("Original_ItemEAN", original_ItemEAN)
                : new ObjectParameter("Original_ItemEAN", typeof(string));

            var original_KeepPriceOnOrdreRecalcParameter = original_KeepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("Original_KeepPriceOnOrdreRecalc", original_KeepPriceOnOrdreRecalc)
                : new ObjectParameter("Original_KeepPriceOnOrdreRecalc", typeof(byte));

            var original_LastCostPercentAmountParameter = original_LastCostPercentAmount.HasValue
                ? new ObjectParameter("Original_LastCostPercentAmount", original_LastCostPercentAmount)
                : new ObjectParameter("Original_LastCostPercentAmount", typeof(double));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_MultiplaFaktorParameter = original_MultiplaFaktor.HasValue
                ? new ObjectParameter("Original_MultiplaFaktor", original_MultiplaFaktor)
                : new ObjectParameter("Original_MultiplaFaktor", typeof(double));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_PictureParameter = original_Picture != null
                ? new ObjectParameter("Original_Picture", original_Picture)
                : new ObjectParameter("Original_Picture", typeof(string));

            var original_Picture2Parameter = original_Picture2 != null
                ? new ObjectParameter("Original_Picture2", original_Picture2)
                : new ObjectParameter("Original_Picture2", typeof(string));

            var original_PlacementParameter = original_Placement != null
                ? new ObjectParameter("Original_Placement", original_Placement)
                : new ObjectParameter("Original_Placement", typeof(string));

            var original_PostServiceCostPriceParameter = original_PostServiceCostPrice.HasValue
                ? new ObjectParameter("Original_PostServiceCostPrice", original_PostServiceCostPrice)
                : new ObjectParameter("Original_PostServiceCostPrice", typeof(byte));

            var original_PriceInclParameter = original_PriceIncl.HasValue
                ? new ObjectParameter("Original_PriceIncl", original_PriceIncl)
                : new ObjectParameter("Original_PriceIncl", typeof(double));

            var original_PriceInclDutyParameter = original_PriceInclDuty.HasValue
                ? new ObjectParameter("Original_PriceInclDuty", original_PriceInclDuty)
                : new ObjectParameter("Original_PriceInclDuty", typeof(short));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProvisionGroupParameter = original_ProvisionGroup != null
                ? new ObjectParameter("Original_ProvisionGroup", original_ProvisionGroup)
                : new ObjectParameter("Original_ProvisionGroup", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_SalesUnitParameter = original_SalesUnit.HasValue
                ? new ObjectParameter("Original_SalesUnit", original_SalesUnit)
                : new ObjectParameter("Original_SalesUnit", typeof(double));

            var original_SerialTypeBuyParameter = original_SerialTypeBuy.HasValue
                ? new ObjectParameter("Original_SerialTypeBuy", original_SerialTypeBuy)
                : new ObjectParameter("Original_SerialTypeBuy", typeof(short));

            var original_SerialTypeSaleParameter = original_SerialTypeSale.HasValue
                ? new ObjectParameter("Original_SerialTypeSale", original_SerialTypeSale)
                : new ObjectParameter("Original_SerialTypeSale", typeof(short));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_SupplierNoParameter = original_SupplierNo != null
                ? new ObjectParameter("Original_SupplierNo", original_SupplierNo)
                : new ObjectParameter("Original_SupplierNo", typeof(string));

            var original_TaxBuyingParameter = original_TaxBuying != null
                ? new ObjectParameter("Original_TaxBuying", original_TaxBuying)
                : new ObjectParameter("Original_TaxBuying", typeof(string));

            var original_TaxSellingParameter = original_TaxSelling != null
                ? new ObjectParameter("Original_TaxSelling", original_TaxSelling)
                : new ObjectParameter("Original_TaxSelling", typeof(string));

            var original_TrackingParameter = original_Tracking.HasValue
                ? new ObjectParameter("Original_Tracking", original_Tracking)
                : new ObjectParameter("Original_Tracking", typeof(short));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_URLParameter = original_URL != null
                ? new ObjectParameter("Original_URL", original_URL)
                : new ObjectParameter("Original_URL", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(float));

            var original_WebUseOnWebParameter = original_WebUseOnWeb.HasValue
                ? new ObjectParameter("Original_WebUseOnWeb", original_WebUseOnWeb)
                : new ObjectParameter("Original_WebUseOnWeb", typeof(byte));

            var original_WebHasNewsParameter = original_WebHasNews.HasValue
                ? new ObjectParameter("Original_WebHasNews", original_WebHasNews)
                : new ObjectParameter("Original_WebHasNews", typeof(byte));

            var original_WebIsDiscountParameter = original_WebIsDiscount.HasValue
                ? new ObjectParameter("Original_WebIsDiscount", original_WebIsDiscount)
                : new ObjectParameter("Original_WebIsDiscount", typeof(byte));

            var original_WebAltParameter = original_WebAlt != null
                ? new ObjectParameter("Original_WebAlt", original_WebAlt)
                : new ObjectParameter("Original_WebAlt", typeof(string));

            var original_WebMetaDescriptionParameter = original_WebMetaDescription != null
                ? new ObjectParameter("Original_WebMetaDescription", original_WebMetaDescription)
                : new ObjectParameter("Original_WebMetaDescription", typeof(string));

            var original_WebMetaTagsParameter = original_WebMetaTags != null
                ? new ObjectParameter("Original_WebMetaTags", original_WebMetaTags)
                : new ObjectParameter("Original_WebMetaTags", typeof(string));

            var original_WebTitleParameter = original_WebTitle != null
                ? new ObjectParameter("Original_WebTitle", original_WebTitle)
                : new ObjectParameter("Original_WebTitle", typeof(string));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(float));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ExtraInventory_Update",
                aDeliveryPacketParameter, allocateBOMItemsParameter, allowDiscountParameter, allowFinalDiscountParameter,
                alternativeParameter, avanceParameter, avanceTypeParameter, blockedParameter, categoryParameter,
                costCenterParameter, costPriceParameter, costPriceAdjustmentParameter, customerNoParameter,
                customsNoParameter, decimalsParameter, defaultQuantityParameter, deliveryTimeParameter,
                departmentParameter, descriptionParameter, extraParameter, groupingParameter, internalNoParameter,
                internetGroupParameter, itemAlternativeParameter, itemEANParameter, keepPriceOnOrdreRecalcParameter,
                lastCostPercentAmountParameter, locationParameter, multiplaFaktorParameter, optional1Parameter,
                optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                optional7Parameter, optional8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                optionalText7Parameter, optionalText8Parameter, pictureParameter, picture2Parameter, placementParameter,
                postServiceCostPriceParameter, priceInclParameter, priceInclDutyParameter, projectParameter,
                provisionGroupParameter, purposeParameter, quantityPrColiParameter, remarksParameter,
                salesPriceParameter, salesUnitParameter, serialTypeBuyParameter, serialTypeSaleParameter,
                statusParameter, supplierNoParameter, taxBuyingParameter, taxSellingParameter, trackingParameter,
                unitParameter, uRLParameter, volumeParameter, webUseOnWebParameter, webHasNewsParameter,
                webIsDiscountParameter, webAltParameter, webMetaDescriptionParameter, webMetaTagsParameter,
                webTitleParameter, weightParameter, original_ADeliveryPacketParameter,
                original_AllocateBOMItemsParameter, original_AllowDiscountParameter,
                original_AllowFinalDiscountParameter, original_AlternativeParameter, original_AvanceParameter,
                original_AvanceTypeParameter, original_BlockedParameter, original_CategoryParameter,
                original_CostCenterParameter, original_CostPriceParameter, original_CostPriceAdjustmentParameter,
                original_CustomerNoParameter, original_CustomsNoParameter, original_DecimalsParameter,
                original_DefaultQuantityParameter, original_DeliveryTimeParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_ExtraParameter, original_GroupingParameter,
                original_InternalNoParameter, original_InternetGroupParameter, original_ItemParameter,
                original_ItemAlternativeParameter, original_ItemEANParameter, original_KeepPriceOnOrdreRecalcParameter,
                original_LastCostPercentAmountParameter, original_LocationParameter, original_MultiplaFaktorParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                original_OptionalNumber5Parameter, original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                original_PictureParameter, original_Picture2Parameter, original_PlacementParameter,
                original_PostServiceCostPriceParameter, original_PriceInclParameter, original_PriceInclDutyParameter,
                original_ProjectParameter, original_ProvisionGroupParameter, original_PurposeParameter,
                original_QuantityPrColiParameter, original_RemarksParameter, original_SalesPriceParameter,
                original_SalesUnitParameter, original_SerialTypeBuyParameter, original_SerialTypeSaleParameter,
                original_StatusParameter, original_SupplierNoParameter, original_TaxBuyingParameter,
                original_TaxSellingParameter, original_TrackingParameter, original_UnitParameter, original_URLParameter,
                original_VolumeParameter, original_WebUseOnWebParameter, original_WebHasNewsParameter,
                original_WebIsDiscountParameter, original_WebAltParameter, original_WebMetaDescriptionParameter,
                original_WebMetaTagsParameter, original_WebTitleParameter, original_WeightParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Interest_AddNew(string account, Nullable<double> amountDue, Nullable<double> charge,
            string chargeAccount, Nullable<short> chargeIsCarrier, Nullable<short> days, string description,
            string interest, Nullable<short> interestIsCarrier, Nullable<double> rate, string remarks,
            string standard_Interest, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountDueParameter = amountDue.HasValue
                ? new ObjectParameter("AmountDue", amountDue)
                : new ObjectParameter("AmountDue", typeof(double));

            var chargeParameter = charge.HasValue
                ? new ObjectParameter("Charge", charge)
                : new ObjectParameter("Charge", typeof(double));

            var chargeAccountParameter = chargeAccount != null
                ? new ObjectParameter("ChargeAccount", chargeAccount)
                : new ObjectParameter("ChargeAccount", typeof(string));

            var chargeIsCarrierParameter = chargeIsCarrier.HasValue
                ? new ObjectParameter("ChargeIsCarrier", chargeIsCarrier)
                : new ObjectParameter("ChargeIsCarrier", typeof(short));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var interestParameter = interest != null
                ? new ObjectParameter("Interest", interest)
                : new ObjectParameter("Interest", typeof(string));

            var interestIsCarrierParameter = interestIsCarrier.HasValue
                ? new ObjectParameter("InterestIsCarrier", interestIsCarrier)
                : new ObjectParameter("InterestIsCarrier", typeof(short));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var standard_InterestParameter = standard_Interest != null
                ? new ObjectParameter("Standard_Interest", standard_Interest)
                : new ObjectParameter("Standard_Interest", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Interest_AddNew",
                accountParameter, amountDueParameter, chargeParameter, chargeAccountParameter, chargeIsCarrierParameter,
                daysParameter, descriptionParameter, interestParameter, interestIsCarrierParameter, rateParameter,
                remarksParameter, standard_InterestParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Interest_Delete(string original_Interest, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Interest_Delete",
                original_InterestParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Interest_Select_All_Result> Public_Interest_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Interest_Select_All_Result>(
                    "Public_Interest_Select_All");
        }

        public virtual ObjectResult<Public_Interest_Select_Single_Result> Public_Interest_Select_Single(
            string original_Interest, Nullable<System.Guid> gUID)
        {
            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Interest_Select_Single_Result>(
                    "Public_Interest_Select_Single", original_InterestParameter, gUIDParameter);
        }

        public virtual int Public_Interest_Update(string account, Nullable<double> amountDue, Nullable<double> charge,
            string chargeAccount, Nullable<short> chargeIsCarrier, Nullable<short> days, string description,
            Nullable<short> interestIsCarrier, Nullable<double> rate, string remarks, string original_Account,
            Nullable<double> original_AmountDue, Nullable<double> original_Charge, string original_ChargeAccount,
            Nullable<short> original_ChargeIsCarrier, Nullable<short> original_Days, string original_Description,
            string original_Interest, Nullable<short> original_InterestIsCarrier, Nullable<double> original_Rate,
            string original_Remarks, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountDueParameter = amountDue.HasValue
                ? new ObjectParameter("AmountDue", amountDue)
                : new ObjectParameter("AmountDue", typeof(double));

            var chargeParameter = charge.HasValue
                ? new ObjectParameter("Charge", charge)
                : new ObjectParameter("Charge", typeof(double));

            var chargeAccountParameter = chargeAccount != null
                ? new ObjectParameter("ChargeAccount", chargeAccount)
                : new ObjectParameter("ChargeAccount", typeof(string));

            var chargeIsCarrierParameter = chargeIsCarrier.HasValue
                ? new ObjectParameter("ChargeIsCarrier", chargeIsCarrier)
                : new ObjectParameter("ChargeIsCarrier", typeof(short));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var interestIsCarrierParameter = interestIsCarrier.HasValue
                ? new ObjectParameter("InterestIsCarrier", interestIsCarrier)
                : new ObjectParameter("InterestIsCarrier", typeof(short));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountDueParameter = original_AmountDue.HasValue
                ? new ObjectParameter("Original_AmountDue", original_AmountDue)
                : new ObjectParameter("Original_AmountDue", typeof(double));

            var original_ChargeParameter = original_Charge.HasValue
                ? new ObjectParameter("Original_Charge", original_Charge)
                : new ObjectParameter("Original_Charge", typeof(double));

            var original_ChargeAccountParameter = original_ChargeAccount != null
                ? new ObjectParameter("Original_ChargeAccount", original_ChargeAccount)
                : new ObjectParameter("Original_ChargeAccount", typeof(string));

            var original_ChargeIsCarrierParameter = original_ChargeIsCarrier.HasValue
                ? new ObjectParameter("Original_ChargeIsCarrier", original_ChargeIsCarrier)
                : new ObjectParameter("Original_ChargeIsCarrier", typeof(short));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var original_InterestIsCarrierParameter = original_InterestIsCarrier.HasValue
                ? new ObjectParameter("Original_InterestIsCarrier", original_InterestIsCarrier)
                : new ObjectParameter("Original_InterestIsCarrier", typeof(short));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Interest_Update",
                accountParameter, amountDueParameter, chargeParameter, chargeAccountParameter, chargeIsCarrierParameter,
                daysParameter, descriptionParameter, interestIsCarrierParameter, rateParameter, remarksParameter,
                original_AccountParameter, original_AmountDueParameter, original_ChargeParameter,
                original_ChargeAccountParameter, original_ChargeIsCarrierParameter, original_DaysParameter,
                original_DescriptionParameter, original_InterestParameter, original_InterestIsCarrierParameter,
                original_RateParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_IntrastatLines_AddNew_Result> Public_IntrastatLines_AddNew(
            Nullable<double> amount, string customer, string customsNo, Nullable<System.DateTime> date,
            string description, Nullable<short> eECCountry, Nullable<byte> eECTransCode, string item,
            Nullable<short> module, Nullable<double> quantity, string supplier, Nullable<byte> type,
            Nullable<float> weight, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var moduleParameter = module.HasValue
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(short));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(byte));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(float));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_IntrastatLines_AddNew_Result>(
                    "Public_IntrastatLines_AddNew", amountParameter, customerParameter, customsNoParameter,
                    dateParameter, descriptionParameter, eECCountryParameter, eECTransCodeParameter, itemParameter,
                    moduleParameter, quantityParameter, supplierParameter, typeParameter, weightParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_IntrastatLines_Delete()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_IntrastatLines_Delete");
        }

        public virtual int Public_IntrastatLines_Select_All()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_IntrastatLines_Select_All");
        }

        public virtual ObjectResult<Public_IntrastatLines_Select_Single_Result> Public_IntrastatLines_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_IntrastatLines_Select_Single_Result>
                    ("Public_IntrastatLines_Select_Single", gUIDParameter);
        }

        public virtual int Public_IntrastatLines_Update()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_IntrastatLines_Update");
        }

        public virtual ObjectResult<Public_Inventory_AddNew_Result> Public_Inventory_AddNew(
            Nullable<short> aDeliveryPacket, Nullable<short> allocateBOMItems, Nullable<short> allowDiscount,
            Nullable<short> allowFinalDiscount, string alternative, Nullable<double> avance, Nullable<short> avanceType,
            Nullable<short> blocked, string category, string costCenter, Nullable<double> costPrice,
            Nullable<byte> costPriceAdjustment, string customerNo, string customsNo, Nullable<double> decimals,
            Nullable<double> defaultQuantity, Nullable<int> deliveryTime, string department, string description,
            string extra, string grouping, string internalNo, string internetGroup, string item, string itemAlternative,
            string itemEAN, Nullable<byte> keepPriceOnOrdreRecalc, Nullable<double> lastCostPercentAmount,
            string location, Nullable<double> multiplaFaktor, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            string picture, string picture2, string placement, Nullable<byte> postServiceCostPrice,
            Nullable<double> priceIncl, Nullable<short> priceInclDuty, string project, string provisionGroup,
            string purpose, Nullable<double> quantityPrColi, string remarks, Nullable<double> salesPrice,
            Nullable<double> salesUnit, Nullable<short> serialTypeBuy, Nullable<short> serialTypeSale,
            Nullable<short> status, string supplierNo, string taxBuying, string taxSelling, Nullable<short> tracking,
            string unit, string uRL, Nullable<float> volume, Nullable<byte> webUseOnWeb, Nullable<byte> webHasNews,
            Nullable<byte> webIsDiscount, string webAlt, string webMetaDescription, string webMetaTags, string webTitle,
            Nullable<float> weight, string standard_Item, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allocateBOMItemsParameter = allocateBOMItems.HasValue
                ? new ObjectParameter("AllocateBOMItems", allocateBOMItems)
                : new ObjectParameter("AllocateBOMItems", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var alternativeParameter = alternative != null
                ? new ObjectParameter("Alternative", alternative)
                : new ObjectParameter("Alternative", typeof(string));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var avanceTypeParameter = avanceType.HasValue
                ? new ObjectParameter("AvanceType", avanceType)
                : new ObjectParameter("AvanceType", typeof(short));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var costPriceAdjustmentParameter = costPriceAdjustment.HasValue
                ? new ObjectParameter("CostPriceAdjustment", costPriceAdjustment)
                : new ObjectParameter("CostPriceAdjustment", typeof(byte));

            var customerNoParameter = customerNo != null
                ? new ObjectParameter("CustomerNo", customerNo)
                : new ObjectParameter("CustomerNo", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(double));

            var defaultQuantityParameter = defaultQuantity.HasValue
                ? new ObjectParameter("DefaultQuantity", defaultQuantity)
                : new ObjectParameter("DefaultQuantity", typeof(double));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var extraParameter = extra != null
                ? new ObjectParameter("Extra", extra)
                : new ObjectParameter("Extra", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var internalNoParameter = internalNo != null
                ? new ObjectParameter("InternalNo", internalNo)
                : new ObjectParameter("InternalNo", typeof(string));

            var internetGroupParameter = internetGroup != null
                ? new ObjectParameter("InternetGroup", internetGroup)
                : new ObjectParameter("InternetGroup", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var keepPriceOnOrdreRecalcParameter = keepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("KeepPriceOnOrdreRecalc", keepPriceOnOrdreRecalc)
                : new ObjectParameter("KeepPriceOnOrdreRecalc", typeof(byte));

            var lastCostPercentAmountParameter = lastCostPercentAmount.HasValue
                ? new ObjectParameter("LastCostPercentAmount", lastCostPercentAmount)
                : new ObjectParameter("LastCostPercentAmount", typeof(double));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var pictureParameter = picture != null
                ? new ObjectParameter("Picture", picture)
                : new ObjectParameter("Picture", typeof(string));

            var picture2Parameter = picture2 != null
                ? new ObjectParameter("Picture2", picture2)
                : new ObjectParameter("Picture2", typeof(string));

            var placementParameter = placement != null
                ? new ObjectParameter("Placement", placement)
                : new ObjectParameter("Placement", typeof(string));

            var postServiceCostPriceParameter = postServiceCostPrice.HasValue
                ? new ObjectParameter("PostServiceCostPrice", postServiceCostPrice)
                : new ObjectParameter("PostServiceCostPrice", typeof(byte));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var priceInclDutyParameter = priceInclDuty.HasValue
                ? new ObjectParameter("PriceInclDuty", priceInclDuty)
                : new ObjectParameter("PriceInclDuty", typeof(short));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var provisionGroupParameter = provisionGroup != null
                ? new ObjectParameter("ProvisionGroup", provisionGroup)
                : new ObjectParameter("ProvisionGroup", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var salesUnitParameter = salesUnit.HasValue
                ? new ObjectParameter("SalesUnit", salesUnit)
                : new ObjectParameter("SalesUnit", typeof(double));

            var serialTypeBuyParameter = serialTypeBuy.HasValue
                ? new ObjectParameter("SerialTypeBuy", serialTypeBuy)
                : new ObjectParameter("SerialTypeBuy", typeof(short));

            var serialTypeSaleParameter = serialTypeSale.HasValue
                ? new ObjectParameter("SerialTypeSale", serialTypeSale)
                : new ObjectParameter("SerialTypeSale", typeof(short));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var supplierNoParameter = supplierNo != null
                ? new ObjectParameter("SupplierNo", supplierNo)
                : new ObjectParameter("SupplierNo", typeof(string));

            var taxBuyingParameter = taxBuying != null
                ? new ObjectParameter("TaxBuying", taxBuying)
                : new ObjectParameter("TaxBuying", typeof(string));

            var taxSellingParameter = taxSelling != null
                ? new ObjectParameter("TaxSelling", taxSelling)
                : new ObjectParameter("TaxSelling", typeof(string));

            var trackingParameter = tracking.HasValue
                ? new ObjectParameter("Tracking", tracking)
                : new ObjectParameter("Tracking", typeof(short));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var uRLParameter = uRL != null
                ? new ObjectParameter("URL", uRL)
                : new ObjectParameter("URL", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(float));

            var webUseOnWebParameter = webUseOnWeb.HasValue
                ? new ObjectParameter("WebUseOnWeb", webUseOnWeb)
                : new ObjectParameter("WebUseOnWeb", typeof(byte));

            var webHasNewsParameter = webHasNews.HasValue
                ? new ObjectParameter("WebHasNews", webHasNews)
                : new ObjectParameter("WebHasNews", typeof(byte));

            var webIsDiscountParameter = webIsDiscount.HasValue
                ? new ObjectParameter("WebIsDiscount", webIsDiscount)
                : new ObjectParameter("WebIsDiscount", typeof(byte));

            var webAltParameter = webAlt != null
                ? new ObjectParameter("WebAlt", webAlt)
                : new ObjectParameter("WebAlt", typeof(string));

            var webMetaDescriptionParameter = webMetaDescription != null
                ? new ObjectParameter("WebMetaDescription", webMetaDescription)
                : new ObjectParameter("WebMetaDescription", typeof(string));

            var webMetaTagsParameter = webMetaTags != null
                ? new ObjectParameter("WebMetaTags", webMetaTags)
                : new ObjectParameter("WebMetaTags", typeof(string));

            var webTitleParameter = webTitle != null
                ? new ObjectParameter("WebTitle", webTitle)
                : new ObjectParameter("WebTitle", typeof(string));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(float));

            var standard_ItemParameter = standard_Item != null
                ? new ObjectParameter("Standard_Item", standard_Item)
                : new ObjectParameter("Standard_Item", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Inventory_AddNew_Result>(
                    "Public_Inventory_AddNew", aDeliveryPacketParameter, allocateBOMItemsParameter,
                    allowDiscountParameter, allowFinalDiscountParameter, alternativeParameter, avanceParameter,
                    avanceTypeParameter, blockedParameter, categoryParameter, costCenterParameter, costPriceParameter,
                    costPriceAdjustmentParameter, customerNoParameter, customsNoParameter, decimalsParameter,
                    defaultQuantityParameter, deliveryTimeParameter, departmentParameter, descriptionParameter,
                    extraParameter, groupingParameter, internalNoParameter, internetGroupParameter, itemParameter,
                    itemAlternativeParameter, itemEANParameter, keepPriceOnOrdreRecalcParameter,
                    lastCostPercentAmountParameter, locationParameter, multiplaFaktorParameter, optional1Parameter,
                    optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                    optional7Parameter, optional8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                    optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                    optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                    optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                    optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, pictureParameter,
                    picture2Parameter, placementParameter, postServiceCostPriceParameter, priceInclParameter,
                    priceInclDutyParameter, projectParameter, provisionGroupParameter, purposeParameter,
                    quantityPrColiParameter, remarksParameter, salesPriceParameter, salesUnitParameter,
                    serialTypeBuyParameter, serialTypeSaleParameter, statusParameter, supplierNoParameter,
                    taxBuyingParameter, taxSellingParameter, trackingParameter, unitParameter, uRLParameter,
                    volumeParameter, webUseOnWebParameter, webHasNewsParameter, webIsDiscountParameter, webAltParameter,
                    webMetaDescriptionParameter, webMetaTagsParameter, webTitleParameter, weightParameter,
                    standard_ItemParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_Inventory_Delete(string original_Item, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Inventory_Delete",
                original_ItemParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Inventory_Select_All(string itemEAN, string itemAlternative, string where)
        {
            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var whereParameter = where != null
                ? new ObjectParameter("Where", where)
                : new ObjectParameter("Where", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Inventory_Select_All",
                itemEANParameter, itemAlternativeParameter, whereParameter);
        }

        public virtual ObjectResult<Public_Inventory_Select_Single_Result> Public_Inventory_Select_Single(
            string original_Item, Nullable<System.Guid> gUID)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Inventory_Select_Single_Result>(
                    "Public_Inventory_Select_Single", original_ItemParameter, gUIDParameter);
        }

        public virtual int Public_Inventory_Update(Nullable<short> aDeliveryPacket, Nullable<short> allocateBOMItems,
            Nullable<short> allowDiscount, Nullable<short> allowFinalDiscount, string alternative,
            Nullable<double> avance, Nullable<short> avanceType, Nullable<short> blocked, string category,
            string costCenter, Nullable<double> costPrice, Nullable<byte> costPriceAdjustment, string customerNo,
            string customsNo, Nullable<double> decimals, Nullable<double> defaultQuantity, Nullable<int> deliveryTime,
            string department, string description, string extra, string grouping, string internalNo,
            string internetGroup, string itemAlternative, string itemEAN, Nullable<byte> keepPriceOnOrdreRecalc,
            Nullable<double> lastCostPercentAmount, string location, Nullable<double> multiplaFaktor,
            Nullable<short> optional1, Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4,
            Nullable<short> optional5, Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string picture, string picture2, string placement,
            Nullable<byte> postServiceCostPrice, Nullable<double> priceIncl, Nullable<short> priceInclDuty,
            string project, string provisionGroup, string purpose, Nullable<double> quantityPrColi, string remarks,
            Nullable<double> salesPrice, Nullable<double> salesUnit, Nullable<short> serialTypeBuy,
            Nullable<short> serialTypeSale, Nullable<short> status, string supplierNo, string taxBuying,
            string taxSelling, Nullable<short> tracking, string unit, string uRL, Nullable<float> volume,
            Nullable<byte> webUseOnWeb, Nullable<byte> webHasNews, Nullable<byte> webIsDiscount, string webAlt,
            string webMetaDescription, string webMetaTags, string webTitle, Nullable<float> weight,
            Nullable<short> original_ADeliveryPacket, Nullable<short> original_AllocateBOMItems,
            Nullable<short> original_AllowDiscount, Nullable<short> original_AllowFinalDiscount,
            string original_Alternative, Nullable<double> original_Avance, Nullable<short> original_AvanceType,
            Nullable<short> original_Blocked, string original_Category, string original_CostCenter,
            Nullable<double> original_CostPrice, Nullable<byte> original_CostPriceAdjustment, string original_CustomerNo,
            string original_CustomsNo, Nullable<double> original_Decimals, Nullable<double> original_DefaultQuantity,
            Nullable<int> original_DeliveryTime, string original_Department, string original_Description,
            string original_Extra, string original_Grouping, string original_InternalNo, string original_InternetGroup,
            string original_Item, string original_ItemAlternative, string original_ItemEAN,
            Nullable<byte> original_KeepPriceOnOrdreRecalc, Nullable<double> original_LastCostPercentAmount,
            string original_Location, Nullable<double> original_MultiplaFaktor, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            string original_Picture, string original_Picture2, string original_Placement,
            Nullable<byte> original_PostServiceCostPrice, Nullable<double> original_PriceIncl,
            Nullable<short> original_PriceInclDuty, string original_Project, string original_ProvisionGroup,
            string original_Purpose, Nullable<double> original_QuantityPrColi, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<double> original_SalesUnit,
            Nullable<short> original_SerialTypeBuy, Nullable<short> original_SerialTypeSale,
            Nullable<short> original_Status, string original_SupplierNo, string original_TaxBuying,
            string original_TaxSelling, Nullable<short> original_Tracking, string original_Unit, string original_URL,
            Nullable<float> original_Volume, Nullable<byte> original_WebUseOnWeb, Nullable<byte> original_WebHasNews,
            Nullable<byte> original_WebIsDiscount, string original_WebAlt, string original_WebMetaDescription,
            string original_WebMetaTags, string original_WebTitle, Nullable<float> original_Weight,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allocateBOMItemsParameter = allocateBOMItems.HasValue
                ? new ObjectParameter("AllocateBOMItems", allocateBOMItems)
                : new ObjectParameter("AllocateBOMItems", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var alternativeParameter = alternative != null
                ? new ObjectParameter("Alternative", alternative)
                : new ObjectParameter("Alternative", typeof(string));

            var avanceParameter = avance.HasValue
                ? new ObjectParameter("Avance", avance)
                : new ObjectParameter("Avance", typeof(double));

            var avanceTypeParameter = avanceType.HasValue
                ? new ObjectParameter("AvanceType", avanceType)
                : new ObjectParameter("AvanceType", typeof(short));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var costPriceAdjustmentParameter = costPriceAdjustment.HasValue
                ? new ObjectParameter("CostPriceAdjustment", costPriceAdjustment)
                : new ObjectParameter("CostPriceAdjustment", typeof(byte));

            var customerNoParameter = customerNo != null
                ? new ObjectParameter("CustomerNo", customerNo)
                : new ObjectParameter("CustomerNo", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(double));

            var defaultQuantityParameter = defaultQuantity.HasValue
                ? new ObjectParameter("DefaultQuantity", defaultQuantity)
                : new ObjectParameter("DefaultQuantity", typeof(double));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var extraParameter = extra != null
                ? new ObjectParameter("Extra", extra)
                : new ObjectParameter("Extra", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var internalNoParameter = internalNo != null
                ? new ObjectParameter("InternalNo", internalNo)
                : new ObjectParameter("InternalNo", typeof(string));

            var internetGroupParameter = internetGroup != null
                ? new ObjectParameter("InternetGroup", internetGroup)
                : new ObjectParameter("InternetGroup", typeof(string));

            var itemAlternativeParameter = itemAlternative != null
                ? new ObjectParameter("ItemAlternative", itemAlternative)
                : new ObjectParameter("ItemAlternative", typeof(string));

            var itemEANParameter = itemEAN != null
                ? new ObjectParameter("ItemEAN", itemEAN)
                : new ObjectParameter("ItemEAN", typeof(string));

            var keepPriceOnOrdreRecalcParameter = keepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("KeepPriceOnOrdreRecalc", keepPriceOnOrdreRecalc)
                : new ObjectParameter("KeepPriceOnOrdreRecalc", typeof(byte));

            var lastCostPercentAmountParameter = lastCostPercentAmount.HasValue
                ? new ObjectParameter("LastCostPercentAmount", lastCostPercentAmount)
                : new ObjectParameter("LastCostPercentAmount", typeof(double));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var pictureParameter = picture != null
                ? new ObjectParameter("Picture", picture)
                : new ObjectParameter("Picture", typeof(string));

            var picture2Parameter = picture2 != null
                ? new ObjectParameter("Picture2", picture2)
                : new ObjectParameter("Picture2", typeof(string));

            var placementParameter = placement != null
                ? new ObjectParameter("Placement", placement)
                : new ObjectParameter("Placement", typeof(string));

            var postServiceCostPriceParameter = postServiceCostPrice.HasValue
                ? new ObjectParameter("PostServiceCostPrice", postServiceCostPrice)
                : new ObjectParameter("PostServiceCostPrice", typeof(byte));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var priceInclDutyParameter = priceInclDuty.HasValue
                ? new ObjectParameter("PriceInclDuty", priceInclDuty)
                : new ObjectParameter("PriceInclDuty", typeof(short));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var provisionGroupParameter = provisionGroup != null
                ? new ObjectParameter("ProvisionGroup", provisionGroup)
                : new ObjectParameter("ProvisionGroup", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var salesUnitParameter = salesUnit.HasValue
                ? new ObjectParameter("SalesUnit", salesUnit)
                : new ObjectParameter("SalesUnit", typeof(double));

            var serialTypeBuyParameter = serialTypeBuy.HasValue
                ? new ObjectParameter("SerialTypeBuy", serialTypeBuy)
                : new ObjectParameter("SerialTypeBuy", typeof(short));

            var serialTypeSaleParameter = serialTypeSale.HasValue
                ? new ObjectParameter("SerialTypeSale", serialTypeSale)
                : new ObjectParameter("SerialTypeSale", typeof(short));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var supplierNoParameter = supplierNo != null
                ? new ObjectParameter("SupplierNo", supplierNo)
                : new ObjectParameter("SupplierNo", typeof(string));

            var taxBuyingParameter = taxBuying != null
                ? new ObjectParameter("TaxBuying", taxBuying)
                : new ObjectParameter("TaxBuying", typeof(string));

            var taxSellingParameter = taxSelling != null
                ? new ObjectParameter("TaxSelling", taxSelling)
                : new ObjectParameter("TaxSelling", typeof(string));

            var trackingParameter = tracking.HasValue
                ? new ObjectParameter("Tracking", tracking)
                : new ObjectParameter("Tracking", typeof(short));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var uRLParameter = uRL != null
                ? new ObjectParameter("URL", uRL)
                : new ObjectParameter("URL", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(float));

            var webUseOnWebParameter = webUseOnWeb.HasValue
                ? new ObjectParameter("WebUseOnWeb", webUseOnWeb)
                : new ObjectParameter("WebUseOnWeb", typeof(byte));

            var webHasNewsParameter = webHasNews.HasValue
                ? new ObjectParameter("WebHasNews", webHasNews)
                : new ObjectParameter("WebHasNews", typeof(byte));

            var webIsDiscountParameter = webIsDiscount.HasValue
                ? new ObjectParameter("WebIsDiscount", webIsDiscount)
                : new ObjectParameter("WebIsDiscount", typeof(byte));

            var webAltParameter = webAlt != null
                ? new ObjectParameter("WebAlt", webAlt)
                : new ObjectParameter("WebAlt", typeof(string));

            var webMetaDescriptionParameter = webMetaDescription != null
                ? new ObjectParameter("WebMetaDescription", webMetaDescription)
                : new ObjectParameter("WebMetaDescription", typeof(string));

            var webMetaTagsParameter = webMetaTags != null
                ? new ObjectParameter("WebMetaTags", webMetaTags)
                : new ObjectParameter("WebMetaTags", typeof(string));

            var webTitleParameter = webTitle != null
                ? new ObjectParameter("WebTitle", webTitle)
                : new ObjectParameter("WebTitle", typeof(string));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(float));

            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllocateBOMItemsParameter = original_AllocateBOMItems.HasValue
                ? new ObjectParameter("Original_AllocateBOMItems", original_AllocateBOMItems)
                : new ObjectParameter("Original_AllocateBOMItems", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_AlternativeParameter = original_Alternative != null
                ? new ObjectParameter("Original_Alternative", original_Alternative)
                : new ObjectParameter("Original_Alternative", typeof(string));

            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_AvanceTypeParameter = original_AvanceType.HasValue
                ? new ObjectParameter("Original_AvanceType", original_AvanceType)
                : new ObjectParameter("Original_AvanceType", typeof(short));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CostPriceAdjustmentParameter = original_CostPriceAdjustment.HasValue
                ? new ObjectParameter("Original_CostPriceAdjustment", original_CostPriceAdjustment)
                : new ObjectParameter("Original_CostPriceAdjustment", typeof(byte));

            var original_CustomerNoParameter = original_CustomerNo != null
                ? new ObjectParameter("Original_CustomerNo", original_CustomerNo)
                : new ObjectParameter("Original_CustomerNo", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DecimalsParameter = original_Decimals.HasValue
                ? new ObjectParameter("Original_Decimals", original_Decimals)
                : new ObjectParameter("Original_Decimals", typeof(double));

            var original_DefaultQuantityParameter = original_DefaultQuantity.HasValue
                ? new ObjectParameter("Original_DefaultQuantity", original_DefaultQuantity)
                : new ObjectParameter("Original_DefaultQuantity", typeof(double));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ExtraParameter = original_Extra != null
                ? new ObjectParameter("Original_Extra", original_Extra)
                : new ObjectParameter("Original_Extra", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InternalNoParameter = original_InternalNo != null
                ? new ObjectParameter("Original_InternalNo", original_InternalNo)
                : new ObjectParameter("Original_InternalNo", typeof(string));

            var original_InternetGroupParameter = original_InternetGroup != null
                ? new ObjectParameter("Original_InternetGroup", original_InternetGroup)
                : new ObjectParameter("Original_InternetGroup", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_ItemAlternativeParameter = original_ItemAlternative != null
                ? new ObjectParameter("Original_ItemAlternative", original_ItemAlternative)
                : new ObjectParameter("Original_ItemAlternative", typeof(string));

            var original_ItemEANParameter = original_ItemEAN != null
                ? new ObjectParameter("Original_ItemEAN", original_ItemEAN)
                : new ObjectParameter("Original_ItemEAN", typeof(string));

            var original_KeepPriceOnOrdreRecalcParameter = original_KeepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("Original_KeepPriceOnOrdreRecalc", original_KeepPriceOnOrdreRecalc)
                : new ObjectParameter("Original_KeepPriceOnOrdreRecalc", typeof(byte));

            var original_LastCostPercentAmountParameter = original_LastCostPercentAmount.HasValue
                ? new ObjectParameter("Original_LastCostPercentAmount", original_LastCostPercentAmount)
                : new ObjectParameter("Original_LastCostPercentAmount", typeof(double));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_MultiplaFaktorParameter = original_MultiplaFaktor.HasValue
                ? new ObjectParameter("Original_MultiplaFaktor", original_MultiplaFaktor)
                : new ObjectParameter("Original_MultiplaFaktor", typeof(double));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_PictureParameter = original_Picture != null
                ? new ObjectParameter("Original_Picture", original_Picture)
                : new ObjectParameter("Original_Picture", typeof(string));

            var original_Picture2Parameter = original_Picture2 != null
                ? new ObjectParameter("Original_Picture2", original_Picture2)
                : new ObjectParameter("Original_Picture2", typeof(string));

            var original_PlacementParameter = original_Placement != null
                ? new ObjectParameter("Original_Placement", original_Placement)
                : new ObjectParameter("Original_Placement", typeof(string));

            var original_PostServiceCostPriceParameter = original_PostServiceCostPrice.HasValue
                ? new ObjectParameter("Original_PostServiceCostPrice", original_PostServiceCostPrice)
                : new ObjectParameter("Original_PostServiceCostPrice", typeof(byte));

            var original_PriceInclParameter = original_PriceIncl.HasValue
                ? new ObjectParameter("Original_PriceIncl", original_PriceIncl)
                : new ObjectParameter("Original_PriceIncl", typeof(double));

            var original_PriceInclDutyParameter = original_PriceInclDuty.HasValue
                ? new ObjectParameter("Original_PriceInclDuty", original_PriceInclDuty)
                : new ObjectParameter("Original_PriceInclDuty", typeof(short));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProvisionGroupParameter = original_ProvisionGroup != null
                ? new ObjectParameter("Original_ProvisionGroup", original_ProvisionGroup)
                : new ObjectParameter("Original_ProvisionGroup", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_SalesUnitParameter = original_SalesUnit.HasValue
                ? new ObjectParameter("Original_SalesUnit", original_SalesUnit)
                : new ObjectParameter("Original_SalesUnit", typeof(double));

            var original_SerialTypeBuyParameter = original_SerialTypeBuy.HasValue
                ? new ObjectParameter("Original_SerialTypeBuy", original_SerialTypeBuy)
                : new ObjectParameter("Original_SerialTypeBuy", typeof(short));

            var original_SerialTypeSaleParameter = original_SerialTypeSale.HasValue
                ? new ObjectParameter("Original_SerialTypeSale", original_SerialTypeSale)
                : new ObjectParameter("Original_SerialTypeSale", typeof(short));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_SupplierNoParameter = original_SupplierNo != null
                ? new ObjectParameter("Original_SupplierNo", original_SupplierNo)
                : new ObjectParameter("Original_SupplierNo", typeof(string));

            var original_TaxBuyingParameter = original_TaxBuying != null
                ? new ObjectParameter("Original_TaxBuying", original_TaxBuying)
                : new ObjectParameter("Original_TaxBuying", typeof(string));

            var original_TaxSellingParameter = original_TaxSelling != null
                ? new ObjectParameter("Original_TaxSelling", original_TaxSelling)
                : new ObjectParameter("Original_TaxSelling", typeof(string));

            var original_TrackingParameter = original_Tracking.HasValue
                ? new ObjectParameter("Original_Tracking", original_Tracking)
                : new ObjectParameter("Original_Tracking", typeof(short));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_URLParameter = original_URL != null
                ? new ObjectParameter("Original_URL", original_URL)
                : new ObjectParameter("Original_URL", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(float));

            var original_WebUseOnWebParameter = original_WebUseOnWeb.HasValue
                ? new ObjectParameter("Original_WebUseOnWeb", original_WebUseOnWeb)
                : new ObjectParameter("Original_WebUseOnWeb", typeof(byte));

            var original_WebHasNewsParameter = original_WebHasNews.HasValue
                ? new ObjectParameter("Original_WebHasNews", original_WebHasNews)
                : new ObjectParameter("Original_WebHasNews", typeof(byte));

            var original_WebIsDiscountParameter = original_WebIsDiscount.HasValue
                ? new ObjectParameter("Original_WebIsDiscount", original_WebIsDiscount)
                : new ObjectParameter("Original_WebIsDiscount", typeof(byte));

            var original_WebAltParameter = original_WebAlt != null
                ? new ObjectParameter("Original_WebAlt", original_WebAlt)
                : new ObjectParameter("Original_WebAlt", typeof(string));

            var original_WebMetaDescriptionParameter = original_WebMetaDescription != null
                ? new ObjectParameter("Original_WebMetaDescription", original_WebMetaDescription)
                : new ObjectParameter("Original_WebMetaDescription", typeof(string));

            var original_WebMetaTagsParameter = original_WebMetaTags != null
                ? new ObjectParameter("Original_WebMetaTags", original_WebMetaTags)
                : new ObjectParameter("Original_WebMetaTags", typeof(string));

            var original_WebTitleParameter = original_WebTitle != null
                ? new ObjectParameter("Original_WebTitle", original_WebTitle)
                : new ObjectParameter("Original_WebTitle", typeof(string));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(float));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Inventory_Update",
                aDeliveryPacketParameter, allocateBOMItemsParameter, allowDiscountParameter, allowFinalDiscountParameter,
                alternativeParameter, avanceParameter, avanceTypeParameter, blockedParameter, categoryParameter,
                costCenterParameter, costPriceParameter, costPriceAdjustmentParameter, customerNoParameter,
                customsNoParameter, decimalsParameter, defaultQuantityParameter, deliveryTimeParameter,
                departmentParameter, descriptionParameter, extraParameter, groupingParameter, internalNoParameter,
                internetGroupParameter, itemAlternativeParameter, itemEANParameter, keepPriceOnOrdreRecalcParameter,
                lastCostPercentAmountParameter, locationParameter, multiplaFaktorParameter, optional1Parameter,
                optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                optional7Parameter, optional8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                optionalText7Parameter, optionalText8Parameter, pictureParameter, picture2Parameter, placementParameter,
                postServiceCostPriceParameter, priceInclParameter, priceInclDutyParameter, projectParameter,
                provisionGroupParameter, purposeParameter, quantityPrColiParameter, remarksParameter,
                salesPriceParameter, salesUnitParameter, serialTypeBuyParameter, serialTypeSaleParameter,
                statusParameter, supplierNoParameter, taxBuyingParameter, taxSellingParameter, trackingParameter,
                unitParameter, uRLParameter, volumeParameter, webUseOnWebParameter, webHasNewsParameter,
                webIsDiscountParameter, webAltParameter, webMetaDescriptionParameter, webMetaTagsParameter,
                webTitleParameter, weightParameter, original_ADeliveryPacketParameter,
                original_AllocateBOMItemsParameter, original_AllowDiscountParameter,
                original_AllowFinalDiscountParameter, original_AlternativeParameter, original_AvanceParameter,
                original_AvanceTypeParameter, original_BlockedParameter, original_CategoryParameter,
                original_CostCenterParameter, original_CostPriceParameter, original_CostPriceAdjustmentParameter,
                original_CustomerNoParameter, original_CustomsNoParameter, original_DecimalsParameter,
                original_DefaultQuantityParameter, original_DeliveryTimeParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_ExtraParameter, original_GroupingParameter,
                original_InternalNoParameter, original_InternetGroupParameter, original_ItemParameter,
                original_ItemAlternativeParameter, original_ItemEANParameter, original_KeepPriceOnOrdreRecalcParameter,
                original_LastCostPercentAmountParameter, original_LocationParameter, original_MultiplaFaktorParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                original_OptionalNumber5Parameter, original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                original_PictureParameter, original_Picture2Parameter, original_PlacementParameter,
                original_PostServiceCostPriceParameter, original_PriceInclParameter, original_PriceInclDutyParameter,
                original_ProjectParameter, original_ProvisionGroupParameter, original_PurposeParameter,
                original_QuantityPrColiParameter, original_RemarksParameter, original_SalesPriceParameter,
                original_SalesUnitParameter, original_SerialTypeBuyParameter, original_SerialTypeSaleParameter,
                original_StatusParameter, original_SupplierNoParameter, original_TaxBuyingParameter,
                original_TaxSellingParameter, original_TrackingParameter, original_UnitParameter, original_URLParameter,
                original_VolumeParameter, original_WebUseOnWebParameter, original_WebHasNewsParameter,
                original_WebIsDiscountParameter, original_WebAltParameter, original_WebMetaDescriptionParameter,
                original_WebMetaTagsParameter, original_WebTitleParameter, original_WeightParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_InventoryItemNo_AddNew_Result> Public_InventoryItemNo_AddNew(
            string cusSupItem, string customer, Nullable<int> deliveryTime, string description, string item,
            string optional1, string optional2, string supplier, Nullable<byte> tP, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var cusSupItemParameter = cusSupItem != null
                ? new ObjectParameter("CusSupItem", cusSupItem)
                : new ObjectParameter("CusSupItem", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InventoryItemNo_AddNew_Result>(
                    "Public_InventoryItemNo_AddNew", cusSupItemParameter, customerParameter, deliveryTimeParameter,
                    descriptionParameter, itemParameter, optional1Parameter, optional2Parameter, supplierParameter,
                    tPParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_InventoryItemNo_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_InventoryItemNo_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_InventoryItemNo_Select_All_Result> Public_InventoryItemNo_Select_All(
            Nullable<byte> tP)
        {
            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InventoryItemNo_Select_All_Result>(
                    "Public_InventoryItemNo_Select_All", tPParameter);
        }

        public virtual ObjectResult<Public_InventoryItemNo_Select_Single_Result> Public_InventoryItemNo_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_InventoryItemNo_Select_Single_Result>(
                        "Public_InventoryItemNo_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_InventoryItemNo_Update_Result> Public_InventoryItemNo_Update(
            string cusSupItem, string customer, Nullable<int> deliveryTime, string description, string item,
            string optional1, string optional2, string supplier, Nullable<byte> tP, string original_CusSupItem,
            string original_Customer, Nullable<int> original_DeliveryTime, string original_Description,
            string original_Item, string original_Optional1, string original_Optional2, Nullable<int> original_RecordID,
            string original_Supplier, Nullable<byte> original_TP, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var cusSupItemParameter = cusSupItem != null
                ? new ObjectParameter("CusSupItem", cusSupItem)
                : new ObjectParameter("CusSupItem", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var deliveryTimeParameter = deliveryTime.HasValue
                ? new ObjectParameter("DeliveryTime", deliveryTime)
                : new ObjectParameter("DeliveryTime", typeof(int));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(byte));

            var original_CusSupItemParameter = original_CusSupItem != null
                ? new ObjectParameter("Original_CusSupItem", original_CusSupItem)
                : new ObjectParameter("Original_CusSupItem", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TPParameter = original_TP.HasValue
                ? new ObjectParameter("Original_TP", original_TP)
                : new ObjectParameter("Original_TP", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InventoryItemNo_Update_Result>(
                    "Public_InventoryItemNo_Update", cusSupItemParameter, customerParameter, deliveryTimeParameter,
                    descriptionParameter, itemParameter, optional1Parameter, optional2Parameter, supplierParameter,
                    tPParameter, original_CusSupItemParameter, original_CustomerParameter,
                    original_DeliveryTimeParameter, original_DescriptionParameter, original_ItemParameter,
                    original_Optional1Parameter, original_Optional2Parameter, original_RecordIDParameter,
                    original_SupplierParameter, original_TPParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_InventoryWorksheet_AddNew_Result> Public_InventoryWorksheet_AddNew(
            string account, string batchNo, string costCenter, Nullable<double> costPrice,
            Nullable<System.DateTime> delivery, string department, string description, string employee, string item,
            Nullable<int> jobNo, string journal, Nullable<short> lineNo, string location, string optional1,
            string optional2, Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> ordered,
            string parameter1, string parameter2, Nullable<double> price, string project, string purpose,
            string remarksAfter, string remarksBefore, string unit, string voucher, Nullable<double> volume,
            Nullable<double> weight, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var jobNoParameter = jobNo.HasValue
                ? new ObjectParameter("JobNo", jobNo)
                : new ObjectParameter("JobNo", typeof(int));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksAfterParameter = remarksAfter != null
                ? new ObjectParameter("RemarksAfter", remarksAfter)
                : new ObjectParameter("RemarksAfter", typeof(string));

            var remarksBeforeParameter = remarksBefore != null
                ? new ObjectParameter("RemarksBefore", remarksBefore)
                : new ObjectParameter("RemarksBefore", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InventoryWorksheet_AddNew_Result>(
                    "Public_InventoryWorksheet_AddNew", accountParameter, batchNoParameter, costCenterParameter,
                    costPriceParameter, deliveryParameter, departmentParameter, descriptionParameter, employeeParameter,
                    itemParameter, jobNoParameter, journalParameter, lineNoParameter, locationParameter,
                    optional1Parameter, optional2Parameter, optionalDate1Parameter, optionalDate2Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, orderedParameter, parameter1Parameter,
                    parameter2Parameter, priceParameter, projectParameter, purposeParameter, remarksAfterParameter,
                    remarksBeforeParameter, unitParameter, voucherParameter, volumeParameter, weightParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_InventoryWorksheet_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_InventoryWorksheet_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_InventoryWorksheet_Select_All_Result> Public_InventoryWorksheet_Select_All(
            string original_Journal)
        {
            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_InventoryWorksheet_Select_All_Result>(
                        "Public_InventoryWorksheet_Select_All", original_JournalParameter);
        }

        public virtual ObjectResult<Public_InventoryWorksheet_Select_Single_Result>
            Public_InventoryWorksheet_Select_Single(Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_InventoryWorksheet_Select_Single_Result>(
                        "Public_InventoryWorksheet_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_InventoryWorksheet_Update_Result> Public_InventoryWorksheet_Update(
            string account, string batchNo, string costCenter, Nullable<double> costPrice,
            Nullable<System.DateTime> delivery, string department, string description, string employee, string item,
            Nullable<int> jobNo, Nullable<short> lineNo, string location, string optional1, string optional2,
            Nullable<double> ordered, string parameter1, string parameter2, Nullable<double> price, string project,
            string purpose, string unit, string voucher, string original_Account, string original_BatchNo,
            string original_CostCenter, Nullable<double> original_CostPrice, Nullable<System.DateTime> original_Delivery,
            string original_Department, string original_Description, string original_Employee, string original_Item,
            Nullable<int> original_JobNo, string original_Journal, Nullable<short> original_LineNo,
            string original_Location, string original_Optional1, string original_Optional2,
            Nullable<double> original_Ordered, string original_Parameter1, string original_Parameter2,
            Nullable<double> original_Price, string original_Project, string original_Purpose,
            Nullable<int> original_RecordId, string original_Unit, string original_Voucher, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var jobNoParameter = jobNo.HasValue
                ? new ObjectParameter("JobNo", jobNo)
                : new ObjectParameter("JobNo", typeof(int));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_JobNoParameter = original_JobNo.HasValue
                ? new ObjectParameter("Original_JobNo", original_JobNo)
                : new ObjectParameter("Original_JobNo", typeof(int));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_LineNoParameter = original_LineNo.HasValue
                ? new ObjectParameter("Original_LineNo", original_LineNo)
                : new ObjectParameter("Original_LineNo", typeof(short));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InventoryWorksheet_Update_Result>(
                    "Public_InventoryWorksheet_Update", accountParameter, batchNoParameter, costCenterParameter,
                    costPriceParameter, deliveryParameter, departmentParameter, descriptionParameter, employeeParameter,
                    itemParameter, jobNoParameter, lineNoParameter, locationParameter, optional1Parameter,
                    optional2Parameter, orderedParameter, parameter1Parameter, parameter2Parameter, priceParameter,
                    projectParameter, purposeParameter, unitParameter, voucherParameter, original_AccountParameter,
                    original_BatchNoParameter, original_CostCenterParameter, original_CostPriceParameter,
                    original_DeliveryParameter, original_DepartmentParameter, original_DescriptionParameter,
                    original_EmployeeParameter, original_ItemParameter, original_JobNoParameter,
                    original_JournalParameter, original_LineNoParameter, original_LocationParameter,
                    original_Optional1Parameter, original_Optional2Parameter, original_OrderedParameter,
                    original_Parameter1Parameter, original_Parameter2Parameter, original_PriceParameter,
                    original_ProjectParameter, original_PurposeParameter, original_RecordIdParameter,
                    original_UnitParameter, original_VoucherParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual ObjectResult<Public_InvoiceText_AddNew_Result> Public_InvoiceText_AddNew(
            Nullable<System.DateTime> active, string description, Nullable<System.DateTime> inActive, string language,
            Nullable<int> recordID, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var activeParameter = active.HasValue
                ? new ObjectParameter("Active", active)
                : new ObjectParameter("Active", typeof(System.DateTime));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var inActiveParameter = inActive.HasValue
                ? new ObjectParameter("InActive", inActive)
                : new ObjectParameter("InActive", typeof(System.DateTime));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InvoiceText_AddNew_Result>(
                    "Public_InvoiceText_AddNew", activeParameter, descriptionParameter, inActiveParameter,
                    languageParameter, recordIDParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_InvoiceText_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_InvoiceText_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_InvoiceText_Select_All_Result> Public_InvoiceText_Select_All(string language,
            Nullable<int> recordID)
        {
            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InvoiceText_Select_All_Result>(
                    "Public_InvoiceText_Select_All", languageParameter, recordIDParameter);
        }

        public virtual ObjectResult<Public_InvoiceText_Select_Single_Result> Public_InvoiceText_Select_Single(
            string original_Language, Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InvoiceText_Select_Single_Result>(
                    "Public_InvoiceText_Select_Single", original_LanguageParameter, original_RecordIDParameter,
                    gUIDParameter);
        }

        public virtual ObjectResult<Public_InvoiceText_Update_Result> Public_InvoiceText_Update(
            Nullable<System.DateTime> active, string description, Nullable<System.DateTime> inActive,
            Nullable<System.DateTime> original_Active, string original_Description,
            Nullable<System.DateTime> original_InActive, string original_Language, Nullable<int> original_RecordID,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var activeParameter = active.HasValue
                ? new ObjectParameter("Active", active)
                : new ObjectParameter("Active", typeof(System.DateTime));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var inActiveParameter = inActive.HasValue
                ? new ObjectParameter("InActive", inActive)
                : new ObjectParameter("InActive", typeof(System.DateTime));

            var original_ActiveParameter = original_Active.HasValue
                ? new ObjectParameter("Original_Active", original_Active)
                : new ObjectParameter("Original_Active", typeof(System.DateTime));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InActiveParameter = original_InActive.HasValue
                ? new ObjectParameter("Original_InActive", original_InActive)
                : new ObjectParameter("Original_InActive", typeof(System.DateTime));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_InvoiceText_Update_Result>(
                    "Public_InvoiceText_Update", activeParameter, descriptionParameter, inActiveParameter,
                    original_ActiveParameter, original_DescriptionParameter, original_InActiveParameter,
                    original_LanguageParameter, original_RecordIDParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_ItemSerialNo_AddNew_Result> Public_ItemSerialNo_AddNew(
            Nullable<bool> isDelivered, string item, Nullable<System.Guid> linkReceiptGUID, Nullable<short> linkTP,
            string optional1, string optional10, string optional2, string optional3, string optional4, string optional5,
            string optional6, string optional7, string optional8, string optional9, string purchaseNo,
            Nullable<int> purLineRecordID, string remarks, string serialNo, Nullable<short> status,
            Nullable<double> statusTrail, string supplier, Nullable<short> tP, Nullable<double> trail,
            string standard_Item, string standard_SerialNo, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var isDeliveredParameter = isDelivered.HasValue
                ? new ObjectParameter("IsDelivered", isDelivered)
                : new ObjectParameter("IsDelivered", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var linkReceiptGUIDParameter = linkReceiptGUID.HasValue
                ? new ObjectParameter("LinkReceiptGUID", linkReceiptGUID)
                : new ObjectParameter("LinkReceiptGUID", typeof(System.Guid));

            var linkTPParameter = linkTP.HasValue
                ? new ObjectParameter("LinkTP", linkTP)
                : new ObjectParameter("LinkTP", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional10Parameter = optional10 != null
                ? new ObjectParameter("Optional10", optional10)
                : new ObjectParameter("Optional10", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optional3Parameter = optional3 != null
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(string));

            var optional4Parameter = optional4 != null
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(string));

            var optional5Parameter = optional5 != null
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(string));

            var optional6Parameter = optional6 != null
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(string));

            var optional7Parameter = optional7 != null
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(string));

            var optional8Parameter = optional8 != null
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(string));

            var optional9Parameter = optional9 != null
                ? new ObjectParameter("Optional9", optional9)
                : new ObjectParameter("Optional9", typeof(string));

            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var purLineRecordIDParameter = purLineRecordID.HasValue
                ? new ObjectParameter("PurLineRecordID", purLineRecordID)
                : new ObjectParameter("PurLineRecordID", typeof(int));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var serialNoParameter = serialNo != null
                ? new ObjectParameter("SerialNo", serialNo)
                : new ObjectParameter("SerialNo", typeof(string));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var statusTrailParameter = statusTrail.HasValue
                ? new ObjectParameter("StatusTrail", statusTrail)
                : new ObjectParameter("StatusTrail", typeof(double));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(short));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var standard_ItemParameter = standard_Item != null
                ? new ObjectParameter("Standard_Item", standard_Item)
                : new ObjectParameter("Standard_Item", typeof(string));

            var standard_SerialNoParameter = standard_SerialNo != null
                ? new ObjectParameter("Standard_SerialNo", standard_SerialNo)
                : new ObjectParameter("Standard_SerialNo", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ItemSerialNo_AddNew_Result>(
                    "Public_ItemSerialNo_AddNew", isDeliveredParameter, itemParameter, linkReceiptGUIDParameter,
                    linkTPParameter, optional1Parameter, optional10Parameter, optional2Parameter, optional3Parameter,
                    optional4Parameter, optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optional9Parameter, purchaseNoParameter, purLineRecordIDParameter, remarksParameter,
                    serialNoParameter, statusParameter, statusTrailParameter, supplierParameter, tPParameter,
                    trailParameter, standard_ItemParameter, standard_SerialNoParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_ItemSerialNo_Delete(string original_Item, string original_SerialNo,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ItemSerialNo_Delete",
                original_ItemParameter, original_SerialNoParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_ItemSerialNo_Select_All_Result> Public_ItemSerialNo_Select_All(string item)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ItemSerialNo_Select_All_Result>(
                    "Public_ItemSerialNo_Select_All", itemParameter);
        }

        public virtual ObjectResult<Public_ItemSerialNo_Select_Single_Result> Public_ItemSerialNo_Select_Single(
            string original_Item, string original_SerialNo, Nullable<System.Guid> gUID)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ItemSerialNo_Select_Single_Result>(
                    "Public_ItemSerialNo_Select_Single", original_ItemParameter, original_SerialNoParameter,
                    gUIDParameter);
        }

        public virtual int Public_ItemSerialNo_Update(Nullable<bool> isDelivered, Nullable<System.Guid> linkReceiptGUID,
            Nullable<short> linkTP, string optional1, string optional10, string optional2, string optional3,
            string optional4, string optional5, string optional6, string optional7, string optional8, string optional9,
            string purchaseNo, Nullable<int> purLineRecordID, string remarks, Nullable<short> status,
            Nullable<double> statusTrail, string supplier, Nullable<short> tP, Nullable<double> trail,
            Nullable<bool> original_IsDelivered, string original_Item, Nullable<System.Guid> original_LinkReceiptGUID,
            Nullable<short> original_LinkTP, string original_Optional1, string original_Optional10,
            string original_Optional2, string original_Optional3, string original_Optional4, string original_Optional5,
            string original_Optional6, string original_Optional7, string original_Optional8, string original_Optional9,
            string original_PurchaseNo, Nullable<int> original_PurLineRecordID, string original_Remarks,
            string original_SerialNo, Nullable<short> original_Status, Nullable<double> original_StatusTrail,
            string original_Supplier, Nullable<short> original_TP, Nullable<double> original_Trail,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var isDeliveredParameter = isDelivered.HasValue
                ? new ObjectParameter("IsDelivered", isDelivered)
                : new ObjectParameter("IsDelivered", typeof(bool));

            var linkReceiptGUIDParameter = linkReceiptGUID.HasValue
                ? new ObjectParameter("LinkReceiptGUID", linkReceiptGUID)
                : new ObjectParameter("LinkReceiptGUID", typeof(System.Guid));

            var linkTPParameter = linkTP.HasValue
                ? new ObjectParameter("LinkTP", linkTP)
                : new ObjectParameter("LinkTP", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional10Parameter = optional10 != null
                ? new ObjectParameter("Optional10", optional10)
                : new ObjectParameter("Optional10", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optional3Parameter = optional3 != null
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(string));

            var optional4Parameter = optional4 != null
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(string));

            var optional5Parameter = optional5 != null
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(string));

            var optional6Parameter = optional6 != null
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(string));

            var optional7Parameter = optional7 != null
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(string));

            var optional8Parameter = optional8 != null
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(string));

            var optional9Parameter = optional9 != null
                ? new ObjectParameter("Optional9", optional9)
                : new ObjectParameter("Optional9", typeof(string));

            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var purLineRecordIDParameter = purLineRecordID.HasValue
                ? new ObjectParameter("PurLineRecordID", purLineRecordID)
                : new ObjectParameter("PurLineRecordID", typeof(int));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var statusTrailParameter = statusTrail.HasValue
                ? new ObjectParameter("StatusTrail", statusTrail)
                : new ObjectParameter("StatusTrail", typeof(double));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(short));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var original_IsDeliveredParameter = original_IsDelivered.HasValue
                ? new ObjectParameter("Original_IsDelivered", original_IsDelivered)
                : new ObjectParameter("Original_IsDelivered", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_LinkReceiptGUIDParameter = original_LinkReceiptGUID.HasValue
                ? new ObjectParameter("Original_LinkReceiptGUID", original_LinkReceiptGUID)
                : new ObjectParameter("Original_LinkReceiptGUID", typeof(System.Guid));

            var original_LinkTPParameter = original_LinkTP.HasValue
                ? new ObjectParameter("Original_LinkTP", original_LinkTP)
                : new ObjectParameter("Original_LinkTP", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional10Parameter = original_Optional10 != null
                ? new ObjectParameter("Original_Optional10", original_Optional10)
                : new ObjectParameter("Original_Optional10", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_Optional3Parameter = original_Optional3 != null
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(string));

            var original_Optional4Parameter = original_Optional4 != null
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(string));

            var original_Optional5Parameter = original_Optional5 != null
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(string));

            var original_Optional6Parameter = original_Optional6 != null
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(string));

            var original_Optional7Parameter = original_Optional7 != null
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(string));

            var original_Optional8Parameter = original_Optional8 != null
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(string));

            var original_Optional9Parameter = original_Optional9 != null
                ? new ObjectParameter("Original_Optional9", original_Optional9)
                : new ObjectParameter("Original_Optional9", typeof(string));

            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var original_PurLineRecordIDParameter = original_PurLineRecordID.HasValue
                ? new ObjectParameter("Original_PurLineRecordID", original_PurLineRecordID)
                : new ObjectParameter("Original_PurLineRecordID", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_StatusTrailParameter = original_StatusTrail.HasValue
                ? new ObjectParameter("Original_StatusTrail", original_StatusTrail)
                : new ObjectParameter("Original_StatusTrail", typeof(double));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TPParameter = original_TP.HasValue
                ? new ObjectParameter("Original_TP", original_TP)
                : new ObjectParameter("Original_TP", typeof(short));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ItemSerialNo_Update",
                isDeliveredParameter, linkReceiptGUIDParameter, linkTPParameter, optional1Parameter, optional10Parameter,
                optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                optional7Parameter, optional8Parameter, optional9Parameter, purchaseNoParameter,
                purLineRecordIDParameter, remarksParameter, statusParameter, statusTrailParameter, supplierParameter,
                tPParameter, trailParameter, original_IsDeliveredParameter, original_ItemParameter,
                original_LinkReceiptGUIDParameter, original_LinkTPParameter, original_Optional1Parameter,
                original_Optional10Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_Optional9Parameter,
                original_PurchaseNoParameter, original_PurLineRecordIDParameter, original_RemarksParameter,
                original_SerialNoParameter, original_StatusParameter, original_StatusTrailParameter,
                original_SupplierParameter, original_TPParameter, original_TrailParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_ItemSerialNoSale_AddNew(string customer, Nullable<short> invoiceTP,
            Nullable<bool> isDelivered, string item, Nullable<System.Guid> linkDeliveredGUID, string orderNo,
            Nullable<int> ordLineRecordID, string serialNo, Nullable<double> trail, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var invoiceTPParameter = invoiceTP.HasValue
                ? new ObjectParameter("InvoiceTP", invoiceTP)
                : new ObjectParameter("InvoiceTP", typeof(short));

            var isDeliveredParameter = isDelivered.HasValue
                ? new ObjectParameter("IsDelivered", isDelivered)
                : new ObjectParameter("IsDelivered", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var linkDeliveredGUIDParameter = linkDeliveredGUID.HasValue
                ? new ObjectParameter("LinkDeliveredGUID", linkDeliveredGUID)
                : new ObjectParameter("LinkDeliveredGUID", typeof(System.Guid));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var ordLineRecordIDParameter = ordLineRecordID.HasValue
                ? new ObjectParameter("OrdLineRecordID", ordLineRecordID)
                : new ObjectParameter("OrdLineRecordID", typeof(int));

            var serialNoParameter = serialNo != null
                ? new ObjectParameter("SerialNo", serialNo)
                : new ObjectParameter("SerialNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ItemSerialNoSale_AddNew",
                customerParameter, invoiceTPParameter, isDeliveredParameter, itemParameter, linkDeliveredGUIDParameter,
                orderNoParameter, ordLineRecordIDParameter, serialNoParameter, trailParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_ItemSerialNoSale_Delete(string original_Item, string original_SerialNo,
            Nullable<short> original_InvoiceTP, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var original_InvoiceTPParameter = original_InvoiceTP.HasValue
                ? new ObjectParameter("Original_InvoiceTP", original_InvoiceTP)
                : new ObjectParameter("Original_InvoiceTP", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ItemSerialNoSale_Delete",
                original_ItemParameter, original_SerialNoParameter, original_InvoiceTPParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_ItemSerialNoSale_Select_All_Result> Public_ItemSerialNoSale_Select_All(
            string item, Nullable<int> ordLineRecordID)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var ordLineRecordIDParameter = ordLineRecordID.HasValue
                ? new ObjectParameter("OrdLineRecordID", ordLineRecordID)
                : new ObjectParameter("OrdLineRecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ItemSerialNoSale_Select_All_Result>(
                    "Public_ItemSerialNoSale_Select_All", itemParameter, ordLineRecordIDParameter);
        }

        public virtual ObjectResult<Public_ItemSerialNoSale_Select_Single_Result> Public_ItemSerialNoSale_Select_Single(
            string original_Item, string original_SerialNo, Nullable<short> original_InvoiceTP,
            Nullable<System.Guid> gUID)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var original_InvoiceTPParameter = original_InvoiceTP.HasValue
                ? new ObjectParameter("Original_InvoiceTP", original_InvoiceTP)
                : new ObjectParameter("Original_InvoiceTP", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_ItemSerialNoSale_Select_Single_Result>(
                        "Public_ItemSerialNoSale_Select_Single", original_ItemParameter, original_SerialNoParameter,
                        original_InvoiceTPParameter, gUIDParameter);
        }

        public virtual int Public_ItemSerialNoSale_Update(string customer, Nullable<bool> isDelivered,
            Nullable<System.Guid> linkDeliveredGUID, string orderNo, Nullable<int> ordLineRecordID,
            Nullable<double> trail, ObjectParameter original_Customer, ObjectParameter original_InvoiceTP,
            ObjectParameter original_IsDelivered, ObjectParameter original_Item,
            ObjectParameter original_LinkDeliveredGUID, ObjectParameter original_OrderNo,
            ObjectParameter original_OrdLineRecordID, ObjectParameter original_SerialNo, ObjectParameter original_Trail,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var isDeliveredParameter = isDelivered.HasValue
                ? new ObjectParameter("IsDelivered", isDelivered)
                : new ObjectParameter("IsDelivered", typeof(bool));

            var linkDeliveredGUIDParameter = linkDeliveredGUID.HasValue
                ? new ObjectParameter("LinkDeliveredGUID", linkDeliveredGUID)
                : new ObjectParameter("LinkDeliveredGUID", typeof(System.Guid));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var ordLineRecordIDParameter = ordLineRecordID.HasValue
                ? new ObjectParameter("OrdLineRecordID", ordLineRecordID)
                : new ObjectParameter("OrdLineRecordID", typeof(int));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ItemSerialNoSale_Update",
                customerParameter, isDeliveredParameter, linkDeliveredGUIDParameter, orderNoParameter,
                ordLineRecordIDParameter, trailParameter, original_Customer, original_InvoiceTP, original_IsDelivered,
                original_Item, original_LinkDeliveredGUID, original_OrderNo, original_OrdLineRecordID, original_SerialNo,
                original_Trail, returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Nullable<int>> Public_Journal_AddNew(string account1, string account2,
            string account3, string account4, string account5, Nullable<short> defaultCode,
            Nullable<bool> duplicateFields, Nullable<bool> generateAmount, string journal, Nullable<short> journalType,
            string letter1, string letter2, string letter3, string letter4, string letter5, string lockedBy,
            Nullable<short> module, Nullable<bool> multiCurrency, Nullable<short> newVoucherNo, Nullable<short> printed,
            Nullable<short> recurring, string remarks, Nullable<short> remove, string source,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var account1Parameter = account1 != null
                ? new ObjectParameter("Account1", account1)
                : new ObjectParameter("Account1", typeof(string));

            var account2Parameter = account2 != null
                ? new ObjectParameter("Account2", account2)
                : new ObjectParameter("Account2", typeof(string));

            var account3Parameter = account3 != null
                ? new ObjectParameter("Account3", account3)
                : new ObjectParameter("Account3", typeof(string));

            var account4Parameter = account4 != null
                ? new ObjectParameter("Account4", account4)
                : new ObjectParameter("Account4", typeof(string));

            var account5Parameter = account5 != null
                ? new ObjectParameter("Account5", account5)
                : new ObjectParameter("Account5", typeof(string));

            var defaultCodeParameter = defaultCode.HasValue
                ? new ObjectParameter("DefaultCode", defaultCode)
                : new ObjectParameter("DefaultCode", typeof(short));

            var duplicateFieldsParameter = duplicateFields.HasValue
                ? new ObjectParameter("DuplicateFields", duplicateFields)
                : new ObjectParameter("DuplicateFields", typeof(bool));

            var generateAmountParameter = generateAmount.HasValue
                ? new ObjectParameter("GenerateAmount", generateAmount)
                : new ObjectParameter("GenerateAmount", typeof(bool));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var journalTypeParameter = journalType.HasValue
                ? new ObjectParameter("JournalType", journalType)
                : new ObjectParameter("JournalType", typeof(short));

            var letter1Parameter = letter1 != null
                ? new ObjectParameter("Letter1", letter1)
                : new ObjectParameter("Letter1", typeof(string));

            var letter2Parameter = letter2 != null
                ? new ObjectParameter("Letter2", letter2)
                : new ObjectParameter("Letter2", typeof(string));

            var letter3Parameter = letter3 != null
                ? new ObjectParameter("Letter3", letter3)
                : new ObjectParameter("Letter3", typeof(string));

            var letter4Parameter = letter4 != null
                ? new ObjectParameter("Letter4", letter4)
                : new ObjectParameter("Letter4", typeof(string));

            var letter5Parameter = letter5 != null
                ? new ObjectParameter("Letter5", letter5)
                : new ObjectParameter("Letter5", typeof(string));

            var lockedByParameter = lockedBy != null
                ? new ObjectParameter("LockedBy", lockedBy)
                : new ObjectParameter("LockedBy", typeof(string));

            var moduleParameter = module.HasValue
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(short));

            var multiCurrencyParameter = multiCurrency.HasValue
                ? new ObjectParameter("MultiCurrency", multiCurrency)
                : new ObjectParameter("MultiCurrency", typeof(bool));

            var newVoucherNoParameter = newVoucherNo.HasValue
                ? new ObjectParameter("NewVoucherNo", newVoucherNo)
                : new ObjectParameter("NewVoucherNo", typeof(short));

            var printedParameter = printed.HasValue
                ? new ObjectParameter("Printed", printed)
                : new ObjectParameter("Printed", typeof(short));

            var recurringParameter = recurring.HasValue
                ? new ObjectParameter("Recurring", recurring)
                : new ObjectParameter("Recurring", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var removeParameter = remove.HasValue
                ? new ObjectParameter("Remove", remove)
                : new ObjectParameter("Remove", typeof(short));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>("Public_Journal_AddNew",
                account1Parameter, account2Parameter, account3Parameter, account4Parameter, account5Parameter,
                defaultCodeParameter, duplicateFieldsParameter, generateAmountParameter, journalParameter,
                journalTypeParameter, letter1Parameter, letter2Parameter, letter3Parameter, letter4Parameter,
                letter5Parameter, lockedByParameter, moduleParameter, multiCurrencyParameter, newVoucherNoParameter,
                printedParameter, recurringParameter, remarksParameter, removeParameter, sourceParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Journal_Delete(string original_Journal, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Journal_Delete",
                original_JournalParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Journal_Select_All_Result> Public_Journal_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Journal_Select_All_Result>(
                    "Public_Journal_Select_All");
        }

        public virtual ObjectResult<Public_Journal_Select_Single_Result> Public_Journal_Select_Single(
            string original_Journal, Nullable<System.Guid> gUID)
        {
            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Journal_Select_Single_Result>(
                    "Public_Journal_Select_Single", original_JournalParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Journal_Update_Result> Public_Journal_Update(string account1, string account2,
            string account3, string account4, string account5, Nullable<short> defaultCode,
            Nullable<bool> duplicateFields, Nullable<bool> generateAmount, Nullable<short> journalType, string letter1,
            string letter2, string letter3, string letter4, string letter5, string lockedBy, Nullable<short> module,
            Nullable<bool> multiCurrency, Nullable<short> newVoucherNo, Nullable<short> printed,
            Nullable<short> recurring, string remarks, Nullable<short> remove, string source, string original_Account1,
            string original_Account2, string original_Account3, string original_Account4, string original_Account5,
            Nullable<short> original_DefaultCode, Nullable<bool> original_DuplicateFields,
            Nullable<bool> original_GenerateAmount, string original_Journal, Nullable<short> original_JournalType,
            string original_Letter1, string original_Letter2, string original_Letter3, string original_Letter4,
            string original_Letter5, string original_LockedBy, Nullable<short> original_Module,
            Nullable<bool> original_MultiCurrency, Nullable<short> original_NewVoucherNo,
            Nullable<short> original_Printed, Nullable<short> original_Recurring, string original_Remarks,
            Nullable<short> original_Remove, string original_Source, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var account1Parameter = account1 != null
                ? new ObjectParameter("Account1", account1)
                : new ObjectParameter("Account1", typeof(string));

            var account2Parameter = account2 != null
                ? new ObjectParameter("Account2", account2)
                : new ObjectParameter("Account2", typeof(string));

            var account3Parameter = account3 != null
                ? new ObjectParameter("Account3", account3)
                : new ObjectParameter("Account3", typeof(string));

            var account4Parameter = account4 != null
                ? new ObjectParameter("Account4", account4)
                : new ObjectParameter("Account4", typeof(string));

            var account5Parameter = account5 != null
                ? new ObjectParameter("Account5", account5)
                : new ObjectParameter("Account5", typeof(string));

            var defaultCodeParameter = defaultCode.HasValue
                ? new ObjectParameter("DefaultCode", defaultCode)
                : new ObjectParameter("DefaultCode", typeof(short));

            var duplicateFieldsParameter = duplicateFields.HasValue
                ? new ObjectParameter("DuplicateFields", duplicateFields)
                : new ObjectParameter("DuplicateFields", typeof(bool));

            var generateAmountParameter = generateAmount.HasValue
                ? new ObjectParameter("GenerateAmount", generateAmount)
                : new ObjectParameter("GenerateAmount", typeof(bool));

            var journalTypeParameter = journalType.HasValue
                ? new ObjectParameter("JournalType", journalType)
                : new ObjectParameter("JournalType", typeof(short));

            var letter1Parameter = letter1 != null
                ? new ObjectParameter("Letter1", letter1)
                : new ObjectParameter("Letter1", typeof(string));

            var letter2Parameter = letter2 != null
                ? new ObjectParameter("Letter2", letter2)
                : new ObjectParameter("Letter2", typeof(string));

            var letter3Parameter = letter3 != null
                ? new ObjectParameter("Letter3", letter3)
                : new ObjectParameter("Letter3", typeof(string));

            var letter4Parameter = letter4 != null
                ? new ObjectParameter("Letter4", letter4)
                : new ObjectParameter("Letter4", typeof(string));

            var letter5Parameter = letter5 != null
                ? new ObjectParameter("Letter5", letter5)
                : new ObjectParameter("Letter5", typeof(string));

            var lockedByParameter = lockedBy != null
                ? new ObjectParameter("LockedBy", lockedBy)
                : new ObjectParameter("LockedBy", typeof(string));

            var moduleParameter = module.HasValue
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(short));

            var multiCurrencyParameter = multiCurrency.HasValue
                ? new ObjectParameter("MultiCurrency", multiCurrency)
                : new ObjectParameter("MultiCurrency", typeof(bool));

            var newVoucherNoParameter = newVoucherNo.HasValue
                ? new ObjectParameter("NewVoucherNo", newVoucherNo)
                : new ObjectParameter("NewVoucherNo", typeof(short));

            var printedParameter = printed.HasValue
                ? new ObjectParameter("Printed", printed)
                : new ObjectParameter("Printed", typeof(short));

            var recurringParameter = recurring.HasValue
                ? new ObjectParameter("Recurring", recurring)
                : new ObjectParameter("Recurring", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var removeParameter = remove.HasValue
                ? new ObjectParameter("Remove", remove)
                : new ObjectParameter("Remove", typeof(short));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var original_Account1Parameter = original_Account1 != null
                ? new ObjectParameter("Original_Account1", original_Account1)
                : new ObjectParameter("Original_Account1", typeof(string));

            var original_Account2Parameter = original_Account2 != null
                ? new ObjectParameter("Original_Account2", original_Account2)
                : new ObjectParameter("Original_Account2", typeof(string));

            var original_Account3Parameter = original_Account3 != null
                ? new ObjectParameter("Original_Account3", original_Account3)
                : new ObjectParameter("Original_Account3", typeof(string));

            var original_Account4Parameter = original_Account4 != null
                ? new ObjectParameter("Original_Account4", original_Account4)
                : new ObjectParameter("Original_Account4", typeof(string));

            var original_Account5Parameter = original_Account5 != null
                ? new ObjectParameter("Original_Account5", original_Account5)
                : new ObjectParameter("Original_Account5", typeof(string));

            var original_DefaultCodeParameter = original_DefaultCode.HasValue
                ? new ObjectParameter("Original_DefaultCode", original_DefaultCode)
                : new ObjectParameter("Original_DefaultCode", typeof(short));

            var original_DuplicateFieldsParameter = original_DuplicateFields.HasValue
                ? new ObjectParameter("Original_DuplicateFields", original_DuplicateFields)
                : new ObjectParameter("Original_DuplicateFields", typeof(bool));

            var original_GenerateAmountParameter = original_GenerateAmount.HasValue
                ? new ObjectParameter("Original_GenerateAmount", original_GenerateAmount)
                : new ObjectParameter("Original_GenerateAmount", typeof(bool));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_JournalTypeParameter = original_JournalType.HasValue
                ? new ObjectParameter("Original_JournalType", original_JournalType)
                : new ObjectParameter("Original_JournalType", typeof(short));

            var original_Letter1Parameter = original_Letter1 != null
                ? new ObjectParameter("Original_Letter1", original_Letter1)
                : new ObjectParameter("Original_Letter1", typeof(string));

            var original_Letter2Parameter = original_Letter2 != null
                ? new ObjectParameter("Original_Letter2", original_Letter2)
                : new ObjectParameter("Original_Letter2", typeof(string));

            var original_Letter3Parameter = original_Letter3 != null
                ? new ObjectParameter("Original_Letter3", original_Letter3)
                : new ObjectParameter("Original_Letter3", typeof(string));

            var original_Letter4Parameter = original_Letter4 != null
                ? new ObjectParameter("Original_Letter4", original_Letter4)
                : new ObjectParameter("Original_Letter4", typeof(string));

            var original_Letter5Parameter = original_Letter5 != null
                ? new ObjectParameter("Original_Letter5", original_Letter5)
                : new ObjectParameter("Original_Letter5", typeof(string));

            var original_LockedByParameter = original_LockedBy != null
                ? new ObjectParameter("Original_LockedBy", original_LockedBy)
                : new ObjectParameter("Original_LockedBy", typeof(string));

            var original_ModuleParameter = original_Module.HasValue
                ? new ObjectParameter("Original_Module", original_Module)
                : new ObjectParameter("Original_Module", typeof(short));

            var original_MultiCurrencyParameter = original_MultiCurrency.HasValue
                ? new ObjectParameter("Original_MultiCurrency", original_MultiCurrency)
                : new ObjectParameter("Original_MultiCurrency", typeof(bool));

            var original_NewVoucherNoParameter = original_NewVoucherNo.HasValue
                ? new ObjectParameter("Original_NewVoucherNo", original_NewVoucherNo)
                : new ObjectParameter("Original_NewVoucherNo", typeof(short));

            var original_PrintedParameter = original_Printed.HasValue
                ? new ObjectParameter("Original_Printed", original_Printed)
                : new ObjectParameter("Original_Printed", typeof(short));

            var original_RecurringParameter = original_Recurring.HasValue
                ? new ObjectParameter("Original_Recurring", original_Recurring)
                : new ObjectParameter("Original_Recurring", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_RemoveParameter = original_Remove.HasValue
                ? new ObjectParameter("Original_Remove", original_Remove)
                : new ObjectParameter("Original_Remove", typeof(short));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Journal_Update_Result>(
                    "Public_Journal_Update", account1Parameter, account2Parameter, account3Parameter, account4Parameter,
                    account5Parameter, defaultCodeParameter, duplicateFieldsParameter, generateAmountParameter,
                    journalTypeParameter, letter1Parameter, letter2Parameter, letter3Parameter, letter4Parameter,
                    letter5Parameter, lockedByParameter, moduleParameter, multiCurrencyParameter, newVoucherNoParameter,
                    printedParameter, recurringParameter, remarksParameter, removeParameter, sourceParameter,
                    original_Account1Parameter, original_Account2Parameter, original_Account3Parameter,
                    original_Account4Parameter, original_Account5Parameter, original_DefaultCodeParameter,
                    original_DuplicateFieldsParameter, original_GenerateAmountParameter, original_JournalParameter,
                    original_JournalTypeParameter, original_Letter1Parameter, original_Letter2Parameter,
                    original_Letter3Parameter, original_Letter4Parameter, original_Letter5Parameter,
                    original_LockedByParameter, original_ModuleParameter, original_MultiCurrencyParameter,
                    original_NewVoucherNoParameter, original_PrintedParameter, original_RecurringParameter,
                    original_RemarksParameter, original_RemoveParameter, original_SourceParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Options_Select_All_Result> Public_Options_Select_All(string module)
        {
            var moduleParameter = module != null
                ? new ObjectParameter("Module", module)
                : new ObjectParameter("Module", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Options_Select_All_Result>(
                    "Public_Options_Select_All", moduleParameter);
        }

        public virtual ObjectResult<Public_Options_Select_Single_Result> Public_Options_Select_Single(
            string original_Module, string original_OptionID, Nullable<System.Guid> gUID)
        {
            var original_ModuleParameter = original_Module != null
                ? new ObjectParameter("Original_Module", original_Module)
                : new ObjectParameter("Original_Module", typeof(string));

            var original_OptionIDParameter = original_OptionID != null
                ? new ObjectParameter("Original_OptionID", original_OptionID)
                : new ObjectParameter("Original_OptionID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Options_Select_Single_Result>(
                    "Public_Options_Select_Single", original_ModuleParameter, original_OptionIDParameter, gUIDParameter);
        }

        public virtual int Public_OrderCommunication_AddNew(string communication, string name,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var communicationParameter = communication != null
                ? new ObjectParameter("Communication", communication)
                : new ObjectParameter("Communication", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderCommunication_AddNew",
                communicationParameter, nameParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_OrderCommunication_Delete(string original_Communication, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderCommunication_Delete",
                original_CommunicationParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_OrderCommunication_Select_All_Result> Public_OrderCommunication_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_OrderCommunication_Select_All_Result>("Public_OrderCommunication_Select_All");
        }

        public virtual ObjectResult<Public_OrderCommunication_Select_Single_Result>
            Public_OrderCommunication_Select_Single(string original_Communication, Nullable<System.Guid> gUID)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_OrderCommunication_Select_Single_Result>(
                        "Public_OrderCommunication_Select_Single", original_CommunicationParameter, gUIDParameter);
        }

        public virtual int Public_OrderCommunication_Update(string communication, string name,
            string original_Communication, string original_Name, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var communicationParameter = communication != null
                ? new ObjectParameter("Communication", communication)
                : new ObjectParameter("Communication", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderCommunication_Update",
                communicationParameter, nameParameter, original_CommunicationParameter, original_NameParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_OrderCommunicationStatus_AddNew(string name, string status,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_OrderCommunicationStatus_AddNew", nameParameter, statusParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_OrderCommunicationStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_OrderCommunicationStatus_Delete", original_StatusParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_OrderCommunicationStatus_Select_All_Result>
            Public_OrderCommunicationStatus_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_OrderCommunicationStatus_Select_All_Result>(
                        "Public_OrderCommunicationStatus_Select_All");
        }

        public virtual ObjectResult<Public_OrderCommunicationStatus_Select_Single_Result>
            Public_OrderCommunicationStatus_Select_Single(string original_Status, Nullable<System.Guid> gUID)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_OrderCommunicationStatus_Select_Single_Result>(
                        "Public_OrderCommunicationStatus_Select_Single", original_StatusParameter, gUIDParameter);
        }

        public virtual int Public_OrderCommunicationStatus_Update(string name, string status, string original_Name,
            string original_Status, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_OrderCommunicationStatus_Update", nameParameter, statusParameter, original_NameParameter,
                original_StatusParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_OrderLine_AddNew(string account, Nullable<short> aDeliveryPacket,
            Nullable<short> allowDiscount, Nullable<short> allowDuty, Nullable<short> allowFinalDiscount, string batchNo,
            string costCenter, Nullable<double> costPrice, string customsNo, Nullable<double> deliver,
            Nullable<System.DateTime> delivery, string department, string description, Nullable<double> discount,
            string employee, string externalNo, Nullable<short> fixedLine, string item, Nullable<int> jobNo,
            string journal, Nullable<int> journalLineNo, Nullable<short> lineNo, string location, string optional1,
            string optional2, Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> ordered, string orderNo,
            string parameter1, string parameter2, Nullable<double> price, string project, string purpose,
            Nullable<double> quantityPrColi, string refPurchaseNo, string remarksAfter, string remarksBefore,
            Nullable<bool> selected, string tax, string unit, Nullable<double> volume, Nullable<double> weight,
            Nullable<double> priceIncl, Nullable<short> attachedItemsLevel, string sp_select,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowDutyParameter = allowDuty.HasValue
                ? new ObjectParameter("AllowDuty", allowDuty)
                : new ObjectParameter("AllowDuty", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var deliverParameter = deliver.HasValue
                ? new ObjectParameter("Deliver", deliver)
                : new ObjectParameter("Deliver", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var discountParameter = discount.HasValue
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(double));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var externalNoParameter = externalNo != null
                ? new ObjectParameter("ExternalNo", externalNo)
                : new ObjectParameter("ExternalNo", typeof(string));

            var fixedLineParameter = fixedLine.HasValue
                ? new ObjectParameter("FixedLine", fixedLine)
                : new ObjectParameter("FixedLine", typeof(short));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var jobNoParameter = jobNo.HasValue
                ? new ObjectParameter("JobNo", jobNo)
                : new ObjectParameter("JobNo", typeof(int));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var journalLineNoParameter = journalLineNo.HasValue
                ? new ObjectParameter("JournalLineNo", journalLineNo)
                : new ObjectParameter("JournalLineNo", typeof(int));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var refPurchaseNoParameter = refPurchaseNo != null
                ? new ObjectParameter("RefPurchaseNo", refPurchaseNo)
                : new ObjectParameter("RefPurchaseNo", typeof(string));

            var remarksAfterParameter = remarksAfter != null
                ? new ObjectParameter("RemarksAfter", remarksAfter)
                : new ObjectParameter("RemarksAfter", typeof(string));

            var remarksBeforeParameter = remarksBefore != null
                ? new ObjectParameter("RemarksBefore", remarksBefore)
                : new ObjectParameter("RemarksBefore", typeof(string));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var attachedItemsLevelParameter = attachedItemsLevel.HasValue
                ? new ObjectParameter("AttachedItemsLevel", attachedItemsLevel)
                : new ObjectParameter("AttachedItemsLevel", typeof(short));

            var sp_selectParameter = sp_select != null
                ? new ObjectParameter("sp_select", sp_select)
                : new ObjectParameter("sp_select", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderLine_AddNew",
                accountParameter, aDeliveryPacketParameter, allowDiscountParameter, allowDutyParameter,
                allowFinalDiscountParameter, batchNoParameter, costCenterParameter, costPriceParameter,
                customsNoParameter, deliverParameter, deliveryParameter, departmentParameter, descriptionParameter,
                discountParameter, employeeParameter, externalNoParameter, fixedLineParameter, itemParameter,
                jobNoParameter, journalParameter, journalLineNoParameter, lineNoParameter, locationParameter,
                optional1Parameter, optional2Parameter, optionalDate1Parameter, optionalDate2Parameter,
                optionalNumber1Parameter, optionalNumber2Parameter, orderedParameter, orderNoParameter,
                parameter1Parameter, parameter2Parameter, priceParameter, projectParameter, purposeParameter,
                quantityPrColiParameter, refPurchaseNoParameter, remarksAfterParameter, remarksBeforeParameter,
                selectedParameter, taxParameter, unitParameter, volumeParameter, weightParameter, priceInclParameter,
                attachedItemsLevelParameter, sp_selectParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_OrderLine_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderLine_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_OrderLine_Select_All_Result> Public_OrderLine_Select_All(
            string original_OrderNo)
        {
            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderLine_Select_All_Result>(
                    "Public_OrderLine_Select_All", original_OrderNoParameter);
        }

        public virtual ObjectResult<Public_OrderLine_Select_Single_Result> Public_OrderLine_Select_Single(
            Nullable<int> original_RecordID, Nullable<int> decimals, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderLine_Select_Single_Result>(
                    "Public_OrderLine_Select_Single", original_RecordIDParameter, decimalsParameter, gUIDParameter);
        }

        public virtual int Public_OrderLine_Update(string account, Nullable<short> aDeliveryPacket,
            Nullable<short> allowDiscount, Nullable<short> allowDuty, Nullable<short> allowFinalDiscount, string batchNo,
            string costCenter, Nullable<double> costPrice, string customsNo, Nullable<double> deliver,
            Nullable<System.DateTime> delivery, string department, string description, Nullable<double> discount,
            string employee, string externalNo, Nullable<short> fixedLine, string item, Nullable<int> jobNo,
            string location, string optional1, string optional2, Nullable<System.DateTime> optionalDate1,
            Nullable<System.DateTime> optionalDate2, Nullable<double> optionalNumber1, Nullable<double> optionalNumber2,
            Nullable<double> ordered, string parameter1, string parameter2, Nullable<double> price, string project,
            string purpose, Nullable<double> quantityPrColi, string refPurchaseNo, string remarksAfter,
            string remarksBefore, Nullable<bool> selected, string tax, string unit, Nullable<double> volume,
            Nullable<double> weight, Nullable<double> priceIncl, string original_Account,
            Nullable<short> original_ADeliveryPacket, Nullable<short> original_AllowDiscount,
            Nullable<short> original_AllowDuty, Nullable<short> original_AllowFinalDiscount, string original_BatchNo,
            string original_CostCenter, Nullable<double> original_CostPrice, string original_CustomsNo,
            Nullable<double> original_Deliver, Nullable<System.DateTime> original_Delivery, string original_Department,
            string original_Description, Nullable<double> original_Discount, string original_Employee,
            string original_ExternalNo, Nullable<short> original_FixedLine, string original_Item,
            Nullable<int> original_JobNo, string original_Location, string original_Optional1, string original_Optional2,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_Ordered, string original_Parameter1, string original_Parameter2,
            Nullable<double> original_Price, string original_Project, string original_Purpose,
            Nullable<double> original_QuantityPrColi, Nullable<int> original_RecordId, string original_RefPurchaseNo,
            string original_RemarksAfter, string original_RemarksBefore, Nullable<bool> original_Selected,
            string original_Tax, string original_Unit, Nullable<double> original_Volume,
            Nullable<double> original_Weight, Nullable<double> original_PriceIncl, string sp_select,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var aDeliveryPacketParameter = aDeliveryPacket.HasValue
                ? new ObjectParameter("ADeliveryPacket", aDeliveryPacket)
                : new ObjectParameter("ADeliveryPacket", typeof(short));

            var allowDiscountParameter = allowDiscount.HasValue
                ? new ObjectParameter("AllowDiscount", allowDiscount)
                : new ObjectParameter("AllowDiscount", typeof(short));

            var allowDutyParameter = allowDuty.HasValue
                ? new ObjectParameter("AllowDuty", allowDuty)
                : new ObjectParameter("AllowDuty", typeof(short));

            var allowFinalDiscountParameter = allowFinalDiscount.HasValue
                ? new ObjectParameter("AllowFinalDiscount", allowFinalDiscount)
                : new ObjectParameter("AllowFinalDiscount", typeof(short));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var deliverParameter = deliver.HasValue
                ? new ObjectParameter("Deliver", deliver)
                : new ObjectParameter("Deliver", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var discountParameter = discount.HasValue
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(double));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var externalNoParameter = externalNo != null
                ? new ObjectParameter("ExternalNo", externalNo)
                : new ObjectParameter("ExternalNo", typeof(string));

            var fixedLineParameter = fixedLine.HasValue
                ? new ObjectParameter("FixedLine", fixedLine)
                : new ObjectParameter("FixedLine", typeof(short));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var jobNoParameter = jobNo.HasValue
                ? new ObjectParameter("JobNo", jobNo)
                : new ObjectParameter("JobNo", typeof(int));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityPrColiParameter = quantityPrColi.HasValue
                ? new ObjectParameter("QuantityPrColi", quantityPrColi)
                : new ObjectParameter("QuantityPrColi", typeof(double));

            var refPurchaseNoParameter = refPurchaseNo != null
                ? new ObjectParameter("RefPurchaseNo", refPurchaseNo)
                : new ObjectParameter("RefPurchaseNo", typeof(string));

            var remarksAfterParameter = remarksAfter != null
                ? new ObjectParameter("RemarksAfter", remarksAfter)
                : new ObjectParameter("RemarksAfter", typeof(string));

            var remarksBeforeParameter = remarksBefore != null
                ? new ObjectParameter("RemarksBefore", remarksBefore)
                : new ObjectParameter("RemarksBefore", typeof(string));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var priceInclParameter = priceIncl.HasValue
                ? new ObjectParameter("PriceIncl", priceIncl)
                : new ObjectParameter("PriceIncl", typeof(double));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowDutyParameter = original_AllowDuty.HasValue
                ? new ObjectParameter("Original_AllowDuty", original_AllowDuty)
                : new ObjectParameter("Original_AllowDuty", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DeliverParameter = original_Deliver.HasValue
                ? new ObjectParameter("Original_Deliver", original_Deliver)
                : new ObjectParameter("Original_Deliver", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DiscountParameter = original_Discount.HasValue
                ? new ObjectParameter("Original_Discount", original_Discount)
                : new ObjectParameter("Original_Discount", typeof(double));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ExternalNoParameter = original_ExternalNo != null
                ? new ObjectParameter("Original_ExternalNo", original_ExternalNo)
                : new ObjectParameter("Original_ExternalNo", typeof(string));

            var original_FixedLineParameter = original_FixedLine.HasValue
                ? new ObjectParameter("Original_FixedLine", original_FixedLine)
                : new ObjectParameter("Original_FixedLine", typeof(short));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_JobNoParameter = original_JobNo.HasValue
                ? new ObjectParameter("Original_JobNo", original_JobNo)
                : new ObjectParameter("Original_JobNo", typeof(int));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RefPurchaseNoParameter = original_RefPurchaseNo != null
                ? new ObjectParameter("Original_RefPurchaseNo", original_RefPurchaseNo)
                : new ObjectParameter("Original_RefPurchaseNo", typeof(string));

            var original_RemarksAfterParameter = original_RemarksAfter != null
                ? new ObjectParameter("Original_RemarksAfter", original_RemarksAfter)
                : new ObjectParameter("Original_RemarksAfter", typeof(string));

            var original_RemarksBeforeParameter = original_RemarksBefore != null
                ? new ObjectParameter("Original_RemarksBefore", original_RemarksBefore)
                : new ObjectParameter("Original_RemarksBefore", typeof(string));

            var original_SelectedParameter = original_Selected.HasValue
                ? new ObjectParameter("Original_Selected", original_Selected)
                : new ObjectParameter("Original_Selected", typeof(bool));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(double));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(double));

            var original_PriceInclParameter = original_PriceIncl.HasValue
                ? new ObjectParameter("Original_PriceIncl", original_PriceIncl)
                : new ObjectParameter("Original_PriceIncl", typeof(double));

            var sp_selectParameter = sp_select != null
                ? new ObjectParameter("sp_select", sp_select)
                : new ObjectParameter("sp_select", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderLine_Update",
                accountParameter, aDeliveryPacketParameter, allowDiscountParameter, allowDutyParameter,
                allowFinalDiscountParameter, batchNoParameter, costCenterParameter, costPriceParameter,
                customsNoParameter, deliverParameter, deliveryParameter, departmentParameter, descriptionParameter,
                discountParameter, employeeParameter, externalNoParameter, fixedLineParameter, itemParameter,
                jobNoParameter, locationParameter, optional1Parameter, optional2Parameter, optionalDate1Parameter,
                optionalDate2Parameter, optionalNumber1Parameter, optionalNumber2Parameter, orderedParameter,
                parameter1Parameter, parameter2Parameter, priceParameter, projectParameter, purposeParameter,
                quantityPrColiParameter, refPurchaseNoParameter, remarksAfterParameter, remarksBeforeParameter,
                selectedParameter, taxParameter, unitParameter, volumeParameter, weightParameter, priceInclParameter,
                original_AccountParameter, original_ADeliveryPacketParameter, original_AllowDiscountParameter,
                original_AllowDutyParameter, original_AllowFinalDiscountParameter, original_BatchNoParameter,
                original_CostCenterParameter, original_CostPriceParameter, original_CustomsNoParameter,
                original_DeliverParameter, original_DeliveryParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DiscountParameter, original_EmployeeParameter,
                original_ExternalNoParameter, original_FixedLineParameter, original_ItemParameter,
                original_JobNoParameter, original_LocationParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_OptionalDate1Parameter, original_OptionalDate2Parameter,
                original_OptionalNumber1Parameter, original_OptionalNumber2Parameter, original_OrderedParameter,
                original_Parameter1Parameter, original_Parameter2Parameter, original_PriceParameter,
                original_ProjectParameter, original_PurposeParameter, original_QuantityPrColiParameter,
                original_RecordIdParameter, original_RefPurchaseNoParameter, original_RemarksAfterParameter,
                original_RemarksBeforeParameter, original_SelectedParameter, original_TaxParameter,
                original_UnitParameter, original_VolumeParameter, original_WeightParameter, original_PriceInclParameter,
                sp_selectParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_Orders_AddNew_Result> Public_Orders_AddNew(string address1, string address2,
            string address3, string agent, Nullable<short> allocated, Nullable<byte> calculationOfCargo,
            string cashDiscount, string category, string city, string cityName, string contact, string costCenter,
            string country, string currency, string customer, string delivery, Nullable<System.DateTime> deliveryDate,
            Nullable<int> deliveryWeek, string department, Nullable<short> eECCountry, Nullable<byte> eECTransCode,
            string eDILocationNr, string eMail, Nullable<double> endDisc, Nullable<double> endDiscIncl,
            Nullable<double> endDiscPct, Nullable<double> excise, Nullable<double> exciseBase, string giro,
            string internalRemarks, Nullable<byte> isLiableToPayTax, Nullable<bool> keepOrder,
            string lEANCustomersReference, string lEANOrderIdent, string lEANShipReference, Nullable<bool> lEANTest,
            string language, string name, string mobile, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            string orderCategory, string orderCommunication, string orderCommunicationStatus, string orderCustomer,
            string orderCustomerAddress1, string orderCustomerAddress2, string orderCustomerAddress3,
            string orderCustomerCity, string orderCustomerCityName, string orderCustomerContact,
            string orderCustomerCountry, string orderCustomerEMail, string orderCustomerName,
            string orderCustomerPostalCode, Nullable<System.DateTime> orderDate, Nullable<short> orderMerging,
            string orderNo, string orderText, Nullable<short> orderType, string ourRef, string payment,
            string postalCode, string priceList, string project, string purpose, Nullable<double> rate, string recvNo,
            string remarks, string reports, Nullable<double> roundedAmount, string salesRep, string ship1, string ship2,
            string ship3, string ship4, string ship5, string ship6, string ship7, string shipCityName,
            Nullable<System.DateTime> shipDate, string shipEDILocationNr, string shipEMail, string shipPostalCode,
            string shipTo, string status, string subDescription, Nullable<System.DateTime> subEndDate,
            string subIntervals, Nullable<System.DateTime> subNextDate, string tax, string taxNo,
            Nullable<double> vatFee, Nullable<double> vatFeeBase, Nullable<double> vatFreeFee,
            Nullable<double> vatFreeFeeBase, string yourRef, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allocatedParameter = allocated.HasValue
                ? new ObjectParameter("Allocated", allocated)
                : new ObjectParameter("Allocated", typeof(short));

            var calculationOfCargoParameter = calculationOfCargo.HasValue
                ? new ObjectParameter("CalculationOfCargo", calculationOfCargo)
                : new ObjectParameter("CalculationOfCargo", typeof(byte));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var cityNameParameter = cityName != null
                ? new ObjectParameter("CityName", cityName)
                : new ObjectParameter("CityName", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var deliveryDateParameter = deliveryDate.HasValue
                ? new ObjectParameter("DeliveryDate", deliveryDate)
                : new ObjectParameter("DeliveryDate", typeof(System.DateTime));

            var deliveryWeekParameter = deliveryWeek.HasValue
                ? new ObjectParameter("DeliveryWeek", deliveryWeek)
                : new ObjectParameter("DeliveryWeek", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eMailParameter = eMail != null
                ? new ObjectParameter("EMail", eMail)
                : new ObjectParameter("EMail", typeof(string));

            var endDiscParameter = endDisc.HasValue
                ? new ObjectParameter("EndDisc", endDisc)
                : new ObjectParameter("EndDisc", typeof(double));

            var endDiscInclParameter = endDiscIncl.HasValue
                ? new ObjectParameter("EndDiscIncl", endDiscIncl)
                : new ObjectParameter("EndDiscIncl", typeof(double));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var exciseParameter = excise.HasValue
                ? new ObjectParameter("Excise", excise)
                : new ObjectParameter("Excise", typeof(double));

            var exciseBaseParameter = exciseBase.HasValue
                ? new ObjectParameter("ExciseBase", exciseBase)
                : new ObjectParameter("ExciseBase", typeof(double));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var keepOrderParameter = keepOrder.HasValue
                ? new ObjectParameter("KeepOrder", keepOrder)
                : new ObjectParameter("KeepOrder", typeof(bool));

            var lEANCustomersReferenceParameter = lEANCustomersReference != null
                ? new ObjectParameter("LEANCustomersReference", lEANCustomersReference)
                : new ObjectParameter("LEANCustomersReference", typeof(string));

            var lEANOrderIdentParameter = lEANOrderIdent != null
                ? new ObjectParameter("LEANOrderIdent", lEANOrderIdent)
                : new ObjectParameter("LEANOrderIdent", typeof(string));

            var lEANShipReferenceParameter = lEANShipReference != null
                ? new ObjectParameter("LEANShipReference", lEANShipReference)
                : new ObjectParameter("LEANShipReference", typeof(string));

            var lEANTestParameter = lEANTest.HasValue
                ? new ObjectParameter("LEANTest", lEANTest)
                : new ObjectParameter("LEANTest", typeof(bool));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderCategoryParameter = orderCategory != null
                ? new ObjectParameter("OrderCategory", orderCategory)
                : new ObjectParameter("OrderCategory", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var orderCommunicationStatusParameter = orderCommunicationStatus != null
                ? new ObjectParameter("OrderCommunicationStatus", orderCommunicationStatus)
                : new ObjectParameter("OrderCommunicationStatus", typeof(string));

            var orderCustomerParameter = orderCustomer != null
                ? new ObjectParameter("OrderCustomer", orderCustomer)
                : new ObjectParameter("OrderCustomer", typeof(string));

            var orderCustomerAddress1Parameter = orderCustomerAddress1 != null
                ? new ObjectParameter("OrderCustomerAddress1", orderCustomerAddress1)
                : new ObjectParameter("OrderCustomerAddress1", typeof(string));

            var orderCustomerAddress2Parameter = orderCustomerAddress2 != null
                ? new ObjectParameter("OrderCustomerAddress2", orderCustomerAddress2)
                : new ObjectParameter("OrderCustomerAddress2", typeof(string));

            var orderCustomerAddress3Parameter = orderCustomerAddress3 != null
                ? new ObjectParameter("OrderCustomerAddress3", orderCustomerAddress3)
                : new ObjectParameter("OrderCustomerAddress3", typeof(string));

            var orderCustomerCityParameter = orderCustomerCity != null
                ? new ObjectParameter("OrderCustomerCity", orderCustomerCity)
                : new ObjectParameter("OrderCustomerCity", typeof(string));

            var orderCustomerCityNameParameter = orderCustomerCityName != null
                ? new ObjectParameter("OrderCustomerCityName", orderCustomerCityName)
                : new ObjectParameter("OrderCustomerCityName", typeof(string));

            var orderCustomerContactParameter = orderCustomerContact != null
                ? new ObjectParameter("OrderCustomerContact", orderCustomerContact)
                : new ObjectParameter("OrderCustomerContact", typeof(string));

            var orderCustomerCountryParameter = orderCustomerCountry != null
                ? new ObjectParameter("OrderCustomerCountry", orderCustomerCountry)
                : new ObjectParameter("OrderCustomerCountry", typeof(string));

            var orderCustomerEMailParameter = orderCustomerEMail != null
                ? new ObjectParameter("OrderCustomerEMail", orderCustomerEMail)
                : new ObjectParameter("OrderCustomerEMail", typeof(string));

            var orderCustomerNameParameter = orderCustomerName != null
                ? new ObjectParameter("OrderCustomerName", orderCustomerName)
                : new ObjectParameter("OrderCustomerName", typeof(string));

            var orderCustomerPostalCodeParameter = orderCustomerPostalCode != null
                ? new ObjectParameter("OrderCustomerPostalCode", orderCustomerPostalCode)
                : new ObjectParameter("OrderCustomerPostalCode", typeof(string));

            var orderDateParameter = orderDate.HasValue
                ? new ObjectParameter("OrderDate", orderDate)
                : new ObjectParameter("OrderDate", typeof(System.DateTime));

            var orderMergingParameter = orderMerging.HasValue
                ? new ObjectParameter("OrderMerging", orderMerging)
                : new ObjectParameter("OrderMerging", typeof(short));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var orderTextParameter = orderText != null
                ? new ObjectParameter("OrderText", orderText)
                : new ObjectParameter("OrderText", typeof(string));

            var orderTypeParameter = orderType.HasValue
                ? new ObjectParameter("OrderType", orderType)
                : new ObjectParameter("OrderType", typeof(short));

            var ourRefParameter = ourRef != null
                ? new ObjectParameter("OurRef", ourRef)
                : new ObjectParameter("OurRef", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var roundedAmountParameter = roundedAmount.HasValue
                ? new ObjectParameter("RoundedAmount", roundedAmount)
                : new ObjectParameter("RoundedAmount", typeof(double));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipDateParameter = shipDate.HasValue
                ? new ObjectParameter("ShipDate", shipDate)
                : new ObjectParameter("ShipDate", typeof(System.DateTime));

            var shipEDILocationNrParameter = shipEDILocationNr != null
                ? new ObjectParameter("ShipEDILocationNr", shipEDILocationNr)
                : new ObjectParameter("ShipEDILocationNr", typeof(string));

            var shipEMailParameter = shipEMail != null
                ? new ObjectParameter("ShipEMail", shipEMail)
                : new ObjectParameter("ShipEMail", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var subDescriptionParameter = subDescription != null
                ? new ObjectParameter("SubDescription", subDescription)
                : new ObjectParameter("SubDescription", typeof(string));

            var subEndDateParameter = subEndDate.HasValue
                ? new ObjectParameter("SubEndDate", subEndDate)
                : new ObjectParameter("SubEndDate", typeof(System.DateTime));

            var subIntervalsParameter = subIntervals != null
                ? new ObjectParameter("SubIntervals", subIntervals)
                : new ObjectParameter("SubIntervals", typeof(string));

            var subNextDateParameter = subNextDate.HasValue
                ? new ObjectParameter("SubNextDate", subNextDate)
                : new ObjectParameter("SubNextDate", typeof(System.DateTime));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var vatFeeParameter = vatFee.HasValue
                ? new ObjectParameter("VatFee", vatFee)
                : new ObjectParameter("VatFee", typeof(double));

            var vatFeeBaseParameter = vatFeeBase.HasValue
                ? new ObjectParameter("VatFeeBase", vatFeeBase)
                : new ObjectParameter("VatFeeBase", typeof(double));

            var vatFreeFeeParameter = vatFreeFee.HasValue
                ? new ObjectParameter("VatFreeFee", vatFreeFee)
                : new ObjectParameter("VatFreeFee", typeof(double));

            var vatFreeFeeBaseParameter = vatFreeFeeBase.HasValue
                ? new ObjectParameter("VatFreeFeeBase", vatFreeFeeBase)
                : new ObjectParameter("VatFreeFeeBase", typeof(double));

            var yourRefParameter = yourRef != null
                ? new ObjectParameter("YourRef", yourRef)
                : new ObjectParameter("YourRef", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders_AddNew_Result>(
                    "Public_Orders_AddNew", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    allocatedParameter, calculationOfCargoParameter, cashDiscountParameter, categoryParameter,
                    cityParameter, cityNameParameter, contactParameter, costCenterParameter, countryParameter,
                    currencyParameter, customerParameter, deliveryParameter, deliveryDateParameter,
                    deliveryWeekParameter, departmentParameter, eECCountryParameter, eECTransCodeParameter,
                    eDILocationNrParameter, eMailParameter, endDiscParameter, endDiscInclParameter, endDiscPctParameter,
                    exciseParameter, exciseBaseParameter, giroParameter, internalRemarksParameter,
                    isLiableToPayTaxParameter, keepOrderParameter, lEANCustomersReferenceParameter,
                    lEANOrderIdentParameter, lEANShipReferenceParameter, lEANTestParameter, languageParameter,
                    nameParameter, mobileParameter, optional1Parameter, optional2Parameter, optional3Parameter,
                    optional4Parameter, optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter,
                    optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                    optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                    optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                    optionalText7Parameter, optionalText8Parameter, orderCategoryParameter, orderCommunicationParameter,
                    orderCommunicationStatusParameter, orderCustomerParameter, orderCustomerAddress1Parameter,
                    orderCustomerAddress2Parameter, orderCustomerAddress3Parameter, orderCustomerCityParameter,
                    orderCustomerCityNameParameter, orderCustomerContactParameter, orderCustomerCountryParameter,
                    orderCustomerEMailParameter, orderCustomerNameParameter, orderCustomerPostalCodeParameter,
                    orderDateParameter, orderMergingParameter, orderNoParameter, orderTextParameter, orderTypeParameter,
                    ourRefParameter, paymentParameter, postalCodeParameter, priceListParameter, projectParameter,
                    purposeParameter, rateParameter, recvNoParameter, remarksParameter, reportsParameter,
                    roundedAmountParameter, salesRepParameter, ship1Parameter, ship2Parameter, ship3Parameter,
                    ship4Parameter, ship5Parameter, ship6Parameter, ship7Parameter, shipCityNameParameter,
                    shipDateParameter, shipEDILocationNrParameter, shipEMailParameter, shipPostalCodeParameter,
                    shipToParameter, statusParameter, subDescriptionParameter, subEndDateParameter,
                    subIntervalsParameter, subNextDateParameter, taxParameter, taxNoParameter, vatFeeParameter,
                    vatFeeBaseParameter, vatFreeFeeParameter, vatFreeFeeBaseParameter, yourRefParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Orders_Delete(string original_OrderNo, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Orders_Delete",
                original_OrderNoParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Orders_Select_All_Result> Public_Orders_Select_All(Nullable<bool> openOrders)
        {
            var openOrdersParameter = openOrders.HasValue
                ? new ObjectParameter("OpenOrders", openOrders)
                : new ObjectParameter("OpenOrders", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders_Select_All_Result>(
                    "Public_Orders_Select_All", openOrdersParameter);
        }

        public virtual ObjectResult<Public_Orders_Select_Single_Result> Public_Orders_Select_Single(
            string original_OrderNo, Nullable<double> original_Trail, Nullable<System.Guid> gUID)
        {
            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders_Select_Single_Result>(
                    "Public_Orders_Select_Single", original_OrderNoParameter, original_TrailParameter, gUIDParameter);
        }

        public virtual int Public_Orders_Update(string address1, string address2, string address3, string agent,
            Nullable<short> allocated, Nullable<byte> calculationOfCargo, string cashDiscount, string category,
            string city, string cityName, string contact, string costCenter, string country, string currency,
            string customer, string delivery, Nullable<System.DateTime> deliveryDate, Nullable<int> deliveryWeek,
            string department, Nullable<short> eECCountry, Nullable<byte> eECTransCode, string eDILocationNr,
            string eMail, Nullable<double> endDisc, Nullable<double> endDiscIncl, Nullable<double> endDiscPct,
            Nullable<double> excise, Nullable<double> exciseBase, string giro, string internalRemarks,
            Nullable<byte> isLiableToPayTax, Nullable<bool> keepOrder, string lEANCustomersReference,
            string lEANOrderIdent, string lEANShipReference, Nullable<bool> lEANTest, string language, string name,
            Nullable<short> optional1, Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4,
            Nullable<short> optional5, Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string orderCategory, string orderCommunication,
            string orderCommunicationStatus, string orderCustomer, string orderCustomerAddress1,
            string orderCustomerAddress2, string orderCustomerAddress3, string orderCustomerCity,
            string orderCustomerCityName, string orderCustomerContact, string orderCustomerCountry,
            string orderCustomerEMail, string orderCustomerName, string orderCustomerPostalCode,
            Nullable<System.DateTime> orderDate, Nullable<short> orderMerging, string orderNo, string orderText,
            Nullable<short> orderType, string ourRef, string payment, string postalCode, string priceList,
            string project, string purpose, Nullable<double> rate, string recvNo, string remarks, string reports,
            Nullable<double> roundedAmount, string salesRep, string ship1, string ship2, string ship3, string ship4,
            string ship5, string ship6, string ship7, string shipCityName, Nullable<System.DateTime> shipDate,
            string shipEDILocationNr, string shipEMail, string shipPostalCode, string shipTo, string status,
            string subDescription, Nullable<System.DateTime> subEndDate, string subIntervals,
            Nullable<System.DateTime> subNextDate, string tax, string taxNo, Nullable<double> vatFee,
            Nullable<double> vatFeeBase, Nullable<double> vatFreeFee, Nullable<double> vatFreeFeeBase, string yourRef,
            string original_Address1, string original_Address2, string original_Address3, string original_Agent,
            Nullable<short> original_Allocated, Nullable<byte> original_CalculationOfCargo, string original_CashDiscount,
            string original_Category, string original_City, string original_CityName, string original_Contact,
            string original_CostCenter, string original_Country, string original_Currency, string original_Customer,
            string original_Delivery, Nullable<System.DateTime> original_DeliveryDate,
            Nullable<int> original_DeliveryWeek, string original_Department, Nullable<short> original_EECCountry,
            Nullable<byte> original_EECTransCode, string original_EDILocationNr, string original_EMail,
            Nullable<double> original_EndDisc, Nullable<double> original_EndDiscIncl,
            Nullable<double> original_EndDiscPct, Nullable<double> original_Excise, Nullable<double> original_ExciseBase,
            string original_Giro, string original_InternalRemarks, Nullable<byte> original_IsLiableToPayTax,
            Nullable<bool> original_KeepOrder, string original_LEANCustomersReference, string original_LEANOrderIdent,
            string original_LEANShipReference, Nullable<bool> original_LEANTest, string original_Language,
            string original_Name, Nullable<short> original_Optional1, Nullable<short> original_Optional2,
            Nullable<short> original_Optional3, Nullable<short> original_Optional4, Nullable<short> original_Optional5,
            Nullable<short> original_Optional6, Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OrderCategory,
            string original_OrderCommunication, string original_OrderCommunicationStatus, string original_OrderCustomer,
            string original_OrderCustomerAddress1, string original_OrderCustomerAddress2,
            string original_OrderCustomerAddress3, string original_OrderCustomerCity,
            string original_OrderCustomerCityName, string original_OrderCustomerContact,
            string original_OrderCustomerCountry, string original_OrderCustomerEMail, string original_OrderCustomerName,
            string original_OrderCustomerPostalCode, Nullable<System.DateTime> original_OrderDate,
            Nullable<short> original_OrderMerging, string original_OrderNo, string original_OrderText,
            Nullable<short> original_OrderType, string original_OurRef, string original_Payment,
            string original_PostalCode, string original_PriceList, string original_Project, string original_Purpose,
            Nullable<double> original_Rate, string original_RecvNo, string original_Remarks, string original_Reports,
            Nullable<double> original_RoundedAmount, string original_SalesRep, string original_Ship1,
            string original_Ship2, string original_Ship3, string original_Ship4, string original_Ship5,
            string original_Ship6, string original_Ship7, string original_ShipCityName,
            Nullable<System.DateTime> original_ShipDate, string original_ShipEDILocationNr, string original_ShipEMail,
            string original_ShipPostalCode, string original_ShipTo, string original_Status,
            string original_SubDescription, Nullable<System.DateTime> original_SubEndDate, string original_SubIntervals,
            Nullable<System.DateTime> original_SubNextDate, string original_Tax, string original_TaxNo,
            Nullable<double> original_VatFee, Nullable<double> original_VatFeeBase, Nullable<double> original_VatFreeFee,
            Nullable<double> original_VatFreeFeeBase, string original_YourRef, Nullable<bool> updateChangedInLines,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allocatedParameter = allocated.HasValue
                ? new ObjectParameter("Allocated", allocated)
                : new ObjectParameter("Allocated", typeof(short));

            var calculationOfCargoParameter = calculationOfCargo.HasValue
                ? new ObjectParameter("CalculationOfCargo", calculationOfCargo)
                : new ObjectParameter("CalculationOfCargo", typeof(byte));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var cityNameParameter = cityName != null
                ? new ObjectParameter("CityName", cityName)
                : new ObjectParameter("CityName", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var deliveryDateParameter = deliveryDate.HasValue
                ? new ObjectParameter("DeliveryDate", deliveryDate)
                : new ObjectParameter("DeliveryDate", typeof(System.DateTime));

            var deliveryWeekParameter = deliveryWeek.HasValue
                ? new ObjectParameter("DeliveryWeek", deliveryWeek)
                : new ObjectParameter("DeliveryWeek", typeof(int));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eMailParameter = eMail != null
                ? new ObjectParameter("EMail", eMail)
                : new ObjectParameter("EMail", typeof(string));

            var endDiscParameter = endDisc.HasValue
                ? new ObjectParameter("EndDisc", endDisc)
                : new ObjectParameter("EndDisc", typeof(double));

            var endDiscInclParameter = endDiscIncl.HasValue
                ? new ObjectParameter("EndDiscIncl", endDiscIncl)
                : new ObjectParameter("EndDiscIncl", typeof(double));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var exciseParameter = excise.HasValue
                ? new ObjectParameter("Excise", excise)
                : new ObjectParameter("Excise", typeof(double));

            var exciseBaseParameter = exciseBase.HasValue
                ? new ObjectParameter("ExciseBase", exciseBase)
                : new ObjectParameter("ExciseBase", typeof(double));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var keepOrderParameter = keepOrder.HasValue
                ? new ObjectParameter("KeepOrder", keepOrder)
                : new ObjectParameter("KeepOrder", typeof(bool));

            var lEANCustomersReferenceParameter = lEANCustomersReference != null
                ? new ObjectParameter("LEANCustomersReference", lEANCustomersReference)
                : new ObjectParameter("LEANCustomersReference", typeof(string));

            var lEANOrderIdentParameter = lEANOrderIdent != null
                ? new ObjectParameter("LEANOrderIdent", lEANOrderIdent)
                : new ObjectParameter("LEANOrderIdent", typeof(string));

            var lEANShipReferenceParameter = lEANShipReference != null
                ? new ObjectParameter("LEANShipReference", lEANShipReference)
                : new ObjectParameter("LEANShipReference", typeof(string));

            var lEANTestParameter = lEANTest.HasValue
                ? new ObjectParameter("LEANTest", lEANTest)
                : new ObjectParameter("LEANTest", typeof(bool));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderCategoryParameter = orderCategory != null
                ? new ObjectParameter("OrderCategory", orderCategory)
                : new ObjectParameter("OrderCategory", typeof(string));

            var orderCommunicationParameter = orderCommunication != null
                ? new ObjectParameter("OrderCommunication", orderCommunication)
                : new ObjectParameter("OrderCommunication", typeof(string));

            var orderCommunicationStatusParameter = orderCommunicationStatus != null
                ? new ObjectParameter("OrderCommunicationStatus", orderCommunicationStatus)
                : new ObjectParameter("OrderCommunicationStatus", typeof(string));

            var orderCustomerParameter = orderCustomer != null
                ? new ObjectParameter("OrderCustomer", orderCustomer)
                : new ObjectParameter("OrderCustomer", typeof(string));

            var orderCustomerAddress1Parameter = orderCustomerAddress1 != null
                ? new ObjectParameter("OrderCustomerAddress1", orderCustomerAddress1)
                : new ObjectParameter("OrderCustomerAddress1", typeof(string));

            var orderCustomerAddress2Parameter = orderCustomerAddress2 != null
                ? new ObjectParameter("OrderCustomerAddress2", orderCustomerAddress2)
                : new ObjectParameter("OrderCustomerAddress2", typeof(string));

            var orderCustomerAddress3Parameter = orderCustomerAddress3 != null
                ? new ObjectParameter("OrderCustomerAddress3", orderCustomerAddress3)
                : new ObjectParameter("OrderCustomerAddress3", typeof(string));

            var orderCustomerCityParameter = orderCustomerCity != null
                ? new ObjectParameter("OrderCustomerCity", orderCustomerCity)
                : new ObjectParameter("OrderCustomerCity", typeof(string));

            var orderCustomerCityNameParameter = orderCustomerCityName != null
                ? new ObjectParameter("OrderCustomerCityName", orderCustomerCityName)
                : new ObjectParameter("OrderCustomerCityName", typeof(string));

            var orderCustomerContactParameter = orderCustomerContact != null
                ? new ObjectParameter("OrderCustomerContact", orderCustomerContact)
                : new ObjectParameter("OrderCustomerContact", typeof(string));

            var orderCustomerCountryParameter = orderCustomerCountry != null
                ? new ObjectParameter("OrderCustomerCountry", orderCustomerCountry)
                : new ObjectParameter("OrderCustomerCountry", typeof(string));

            var orderCustomerEMailParameter = orderCustomerEMail != null
                ? new ObjectParameter("OrderCustomerEMail", orderCustomerEMail)
                : new ObjectParameter("OrderCustomerEMail", typeof(string));

            var orderCustomerNameParameter = orderCustomerName != null
                ? new ObjectParameter("OrderCustomerName", orderCustomerName)
                : new ObjectParameter("OrderCustomerName", typeof(string));

            var orderCustomerPostalCodeParameter = orderCustomerPostalCode != null
                ? new ObjectParameter("OrderCustomerPostalCode", orderCustomerPostalCode)
                : new ObjectParameter("OrderCustomerPostalCode", typeof(string));

            var orderDateParameter = orderDate.HasValue
                ? new ObjectParameter("OrderDate", orderDate)
                : new ObjectParameter("OrderDate", typeof(System.DateTime));

            var orderMergingParameter = orderMerging.HasValue
                ? new ObjectParameter("OrderMerging", orderMerging)
                : new ObjectParameter("OrderMerging", typeof(short));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var orderTextParameter = orderText != null
                ? new ObjectParameter("OrderText", orderText)
                : new ObjectParameter("OrderText", typeof(string));

            var orderTypeParameter = orderType.HasValue
                ? new ObjectParameter("OrderType", orderType)
                : new ObjectParameter("OrderType", typeof(short));

            var ourRefParameter = ourRef != null
                ? new ObjectParameter("OurRef", ourRef)
                : new ObjectParameter("OurRef", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var roundedAmountParameter = roundedAmount.HasValue
                ? new ObjectParameter("RoundedAmount", roundedAmount)
                : new ObjectParameter("RoundedAmount", typeof(double));

            var salesRepParameter = salesRep != null
                ? new ObjectParameter("SalesRep", salesRep)
                : new ObjectParameter("SalesRep", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipDateParameter = shipDate.HasValue
                ? new ObjectParameter("ShipDate", shipDate)
                : new ObjectParameter("ShipDate", typeof(System.DateTime));

            var shipEDILocationNrParameter = shipEDILocationNr != null
                ? new ObjectParameter("ShipEDILocationNr", shipEDILocationNr)
                : new ObjectParameter("ShipEDILocationNr", typeof(string));

            var shipEMailParameter = shipEMail != null
                ? new ObjectParameter("ShipEMail", shipEMail)
                : new ObjectParameter("ShipEMail", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var subDescriptionParameter = subDescription != null
                ? new ObjectParameter("SubDescription", subDescription)
                : new ObjectParameter("SubDescription", typeof(string));

            var subEndDateParameter = subEndDate.HasValue
                ? new ObjectParameter("SubEndDate", subEndDate)
                : new ObjectParameter("SubEndDate", typeof(System.DateTime));

            var subIntervalsParameter = subIntervals != null
                ? new ObjectParameter("SubIntervals", subIntervals)
                : new ObjectParameter("SubIntervals", typeof(string));

            var subNextDateParameter = subNextDate.HasValue
                ? new ObjectParameter("SubNextDate", subNextDate)
                : new ObjectParameter("SubNextDate", typeof(System.DateTime));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var vatFeeParameter = vatFee.HasValue
                ? new ObjectParameter("VatFee", vatFee)
                : new ObjectParameter("VatFee", typeof(double));

            var vatFeeBaseParameter = vatFeeBase.HasValue
                ? new ObjectParameter("VatFeeBase", vatFeeBase)
                : new ObjectParameter("VatFeeBase", typeof(double));

            var vatFreeFeeParameter = vatFreeFee.HasValue
                ? new ObjectParameter("VatFreeFee", vatFreeFee)
                : new ObjectParameter("VatFreeFee", typeof(double));

            var vatFreeFeeBaseParameter = vatFreeFeeBase.HasValue
                ? new ObjectParameter("VatFreeFeeBase", vatFreeFeeBase)
                : new ObjectParameter("VatFreeFeeBase", typeof(double));

            var yourRefParameter = yourRef != null
                ? new ObjectParameter("YourRef", yourRef)
                : new ObjectParameter("YourRef", typeof(string));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllocatedParameter = original_Allocated.HasValue
                ? new ObjectParameter("Original_Allocated", original_Allocated)
                : new ObjectParameter("Original_Allocated", typeof(short));

            var original_CalculationOfCargoParameter = original_CalculationOfCargo.HasValue
                ? new ObjectParameter("Original_CalculationOfCargo", original_CalculationOfCargo)
                : new ObjectParameter("Original_CalculationOfCargo", typeof(byte));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CityNameParameter = original_CityName != null
                ? new ObjectParameter("Original_CityName", original_CityName)
                : new ObjectParameter("Original_CityName", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DeliveryDateParameter = original_DeliveryDate.HasValue
                ? new ObjectParameter("Original_DeliveryDate", original_DeliveryDate)
                : new ObjectParameter("Original_DeliveryDate", typeof(System.DateTime));

            var original_DeliveryWeekParameter = original_DeliveryWeek.HasValue
                ? new ObjectParameter("Original_DeliveryWeek", original_DeliveryWeek)
                : new ObjectParameter("Original_DeliveryWeek", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EMailParameter = original_EMail != null
                ? new ObjectParameter("Original_EMail", original_EMail)
                : new ObjectParameter("Original_EMail", typeof(string));

            var original_EndDiscParameter = original_EndDisc.HasValue
                ? new ObjectParameter("Original_EndDisc", original_EndDisc)
                : new ObjectParameter("Original_EndDisc", typeof(double));

            var original_EndDiscInclParameter = original_EndDiscIncl.HasValue
                ? new ObjectParameter("Original_EndDiscIncl", original_EndDiscIncl)
                : new ObjectParameter("Original_EndDiscIncl", typeof(double));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExciseParameter = original_Excise.HasValue
                ? new ObjectParameter("Original_Excise", original_Excise)
                : new ObjectParameter("Original_Excise", typeof(double));

            var original_ExciseBaseParameter = original_ExciseBase.HasValue
                ? new ObjectParameter("Original_ExciseBase", original_ExciseBase)
                : new ObjectParameter("Original_ExciseBase", typeof(double));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KeepOrderParameter = original_KeepOrder.HasValue
                ? new ObjectParameter("Original_KeepOrder", original_KeepOrder)
                : new ObjectParameter("Original_KeepOrder", typeof(bool));

            var original_LEANCustomersReferenceParameter = original_LEANCustomersReference != null
                ? new ObjectParameter("Original_LEANCustomersReference", original_LEANCustomersReference)
                : new ObjectParameter("Original_LEANCustomersReference", typeof(string));

            var original_LEANOrderIdentParameter = original_LEANOrderIdent != null
                ? new ObjectParameter("Original_LEANOrderIdent", original_LEANOrderIdent)
                : new ObjectParameter("Original_LEANOrderIdent", typeof(string));

            var original_LEANShipReferenceParameter = original_LEANShipReference != null
                ? new ObjectParameter("Original_LEANShipReference", original_LEANShipReference)
                : new ObjectParameter("Original_LEANShipReference", typeof(string));

            var original_LEANTestParameter = original_LEANTest.HasValue
                ? new ObjectParameter("Original_LEANTest", original_LEANTest)
                : new ObjectParameter("Original_LEANTest", typeof(bool));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderCategoryParameter = original_OrderCategory != null
                ? new ObjectParameter("Original_OrderCategory", original_OrderCategory)
                : new ObjectParameter("Original_OrderCategory", typeof(string));

            var original_OrderCommunicationParameter = original_OrderCommunication != null
                ? new ObjectParameter("Original_OrderCommunication", original_OrderCommunication)
                : new ObjectParameter("Original_OrderCommunication", typeof(string));

            var original_OrderCommunicationStatusParameter = original_OrderCommunicationStatus != null
                ? new ObjectParameter("Original_OrderCommunicationStatus", original_OrderCommunicationStatus)
                : new ObjectParameter("Original_OrderCommunicationStatus", typeof(string));

            var original_OrderCustomerParameter = original_OrderCustomer != null
                ? new ObjectParameter("Original_OrderCustomer", original_OrderCustomer)
                : new ObjectParameter("Original_OrderCustomer", typeof(string));

            var original_OrderCustomerAddress1Parameter = original_OrderCustomerAddress1 != null
                ? new ObjectParameter("Original_OrderCustomerAddress1", original_OrderCustomerAddress1)
                : new ObjectParameter("Original_OrderCustomerAddress1", typeof(string));

            var original_OrderCustomerAddress2Parameter = original_OrderCustomerAddress2 != null
                ? new ObjectParameter("Original_OrderCustomerAddress2", original_OrderCustomerAddress2)
                : new ObjectParameter("Original_OrderCustomerAddress2", typeof(string));

            var original_OrderCustomerAddress3Parameter = original_OrderCustomerAddress3 != null
                ? new ObjectParameter("Original_OrderCustomerAddress3", original_OrderCustomerAddress3)
                : new ObjectParameter("Original_OrderCustomerAddress3", typeof(string));

            var original_OrderCustomerCityParameter = original_OrderCustomerCity != null
                ? new ObjectParameter("Original_OrderCustomerCity", original_OrderCustomerCity)
                : new ObjectParameter("Original_OrderCustomerCity", typeof(string));

            var original_OrderCustomerCityNameParameter = original_OrderCustomerCityName != null
                ? new ObjectParameter("Original_OrderCustomerCityName", original_OrderCustomerCityName)
                : new ObjectParameter("Original_OrderCustomerCityName", typeof(string));

            var original_OrderCustomerContactParameter = original_OrderCustomerContact != null
                ? new ObjectParameter("Original_OrderCustomerContact", original_OrderCustomerContact)
                : new ObjectParameter("Original_OrderCustomerContact", typeof(string));

            var original_OrderCustomerCountryParameter = original_OrderCustomerCountry != null
                ? new ObjectParameter("Original_OrderCustomerCountry", original_OrderCustomerCountry)
                : new ObjectParameter("Original_OrderCustomerCountry", typeof(string));

            var original_OrderCustomerEMailParameter = original_OrderCustomerEMail != null
                ? new ObjectParameter("Original_OrderCustomerEMail", original_OrderCustomerEMail)
                : new ObjectParameter("Original_OrderCustomerEMail", typeof(string));

            var original_OrderCustomerNameParameter = original_OrderCustomerName != null
                ? new ObjectParameter("Original_OrderCustomerName", original_OrderCustomerName)
                : new ObjectParameter("Original_OrderCustomerName", typeof(string));

            var original_OrderCustomerPostalCodeParameter = original_OrderCustomerPostalCode != null
                ? new ObjectParameter("Original_OrderCustomerPostalCode", original_OrderCustomerPostalCode)
                : new ObjectParameter("Original_OrderCustomerPostalCode", typeof(string));

            var original_OrderDateParameter = original_OrderDate.HasValue
                ? new ObjectParameter("Original_OrderDate", original_OrderDate)
                : new ObjectParameter("Original_OrderDate", typeof(System.DateTime));

            var original_OrderMergingParameter = original_OrderMerging.HasValue
                ? new ObjectParameter("Original_OrderMerging", original_OrderMerging)
                : new ObjectParameter("Original_OrderMerging", typeof(short));

            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var original_OrderTextParameter = original_OrderText != null
                ? new ObjectParameter("Original_OrderText", original_OrderText)
                : new ObjectParameter("Original_OrderText", typeof(string));

            var original_OrderTypeParameter = original_OrderType.HasValue
                ? new ObjectParameter("Original_OrderType", original_OrderType)
                : new ObjectParameter("Original_OrderType", typeof(short));

            var original_OurRefParameter = original_OurRef != null
                ? new ObjectParameter("Original_OurRef", original_OurRef)
                : new ObjectParameter("Original_OurRef", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_RoundedAmountParameter = original_RoundedAmount.HasValue
                ? new ObjectParameter("Original_RoundedAmount", original_RoundedAmount)
                : new ObjectParameter("Original_RoundedAmount", typeof(double));

            var original_SalesRepParameter = original_SalesRep != null
                ? new ObjectParameter("Original_SalesRep", original_SalesRep)
                : new ObjectParameter("Original_SalesRep", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship4Parameter = original_Ship4 != null
                ? new ObjectParameter("Original_Ship4", original_Ship4)
                : new ObjectParameter("Original_Ship4", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipDateParameter = original_ShipDate.HasValue
                ? new ObjectParameter("Original_ShipDate", original_ShipDate)
                : new ObjectParameter("Original_ShipDate", typeof(System.DateTime));

            var original_ShipEDILocationNrParameter = original_ShipEDILocationNr != null
                ? new ObjectParameter("Original_ShipEDILocationNr", original_ShipEDILocationNr)
                : new ObjectParameter("Original_ShipEDILocationNr", typeof(string));

            var original_ShipEMailParameter = original_ShipEMail != null
                ? new ObjectParameter("Original_ShipEMail", original_ShipEMail)
                : new ObjectParameter("Original_ShipEMail", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_SubDescriptionParameter = original_SubDescription != null
                ? new ObjectParameter("Original_SubDescription", original_SubDescription)
                : new ObjectParameter("Original_SubDescription", typeof(string));

            var original_SubEndDateParameter = original_SubEndDate.HasValue
                ? new ObjectParameter("Original_SubEndDate", original_SubEndDate)
                : new ObjectParameter("Original_SubEndDate", typeof(System.DateTime));

            var original_SubIntervalsParameter = original_SubIntervals != null
                ? new ObjectParameter("Original_SubIntervals", original_SubIntervals)
                : new ObjectParameter("Original_SubIntervals", typeof(string));

            var original_SubNextDateParameter = original_SubNextDate.HasValue
                ? new ObjectParameter("Original_SubNextDate", original_SubNextDate)
                : new ObjectParameter("Original_SubNextDate", typeof(System.DateTime));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var original_VatFeeParameter = original_VatFee.HasValue
                ? new ObjectParameter("Original_VatFee", original_VatFee)
                : new ObjectParameter("Original_VatFee", typeof(double));

            var original_VatFeeBaseParameter = original_VatFeeBase.HasValue
                ? new ObjectParameter("Original_VatFeeBase", original_VatFeeBase)
                : new ObjectParameter("Original_VatFeeBase", typeof(double));

            var original_VatFreeFeeParameter = original_VatFreeFee.HasValue
                ? new ObjectParameter("Original_VatFreeFee", original_VatFreeFee)
                : new ObjectParameter("Original_VatFreeFee", typeof(double));

            var original_VatFreeFeeBaseParameter = original_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Original_VatFreeFeeBase", original_VatFreeFeeBase)
                : new ObjectParameter("Original_VatFreeFeeBase", typeof(double));

            var original_YourRefParameter = original_YourRef != null
                ? new ObjectParameter("Original_YourRef", original_YourRef)
                : new ObjectParameter("Original_YourRef", typeof(string));

            var updateChangedInLinesParameter = updateChangedInLines.HasValue
                ? new ObjectParameter("UpdateChangedInLines", updateChangedInLines)
                : new ObjectParameter("UpdateChangedInLines", typeof(bool));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Orders_Update",
                address1Parameter, address2Parameter, address3Parameter, agentParameter, allocatedParameter,
                calculationOfCargoParameter, cashDiscountParameter, categoryParameter, cityParameter, cityNameParameter,
                contactParameter, costCenterParameter, countryParameter, currencyParameter, customerParameter,
                deliveryParameter, deliveryDateParameter, deliveryWeekParameter, departmentParameter,
                eECCountryParameter, eECTransCodeParameter, eDILocationNrParameter, eMailParameter, endDiscParameter,
                endDiscInclParameter, endDiscPctParameter, exciseParameter, exciseBaseParameter, giroParameter,
                internalRemarksParameter, isLiableToPayTaxParameter, keepOrderParameter, lEANCustomersReferenceParameter,
                lEANOrderIdentParameter, lEANShipReferenceParameter, lEANTestParameter, languageParameter, nameParameter,
                optional1Parameter, optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter,
                optional6Parameter, optional7Parameter, optional8Parameter, optionalNumber1Parameter,
                optionalNumber2Parameter, optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, orderCategoryParameter,
                orderCommunicationParameter, orderCommunicationStatusParameter, orderCustomerParameter,
                orderCustomerAddress1Parameter, orderCustomerAddress2Parameter, orderCustomerAddress3Parameter,
                orderCustomerCityParameter, orderCustomerCityNameParameter, orderCustomerContactParameter,
                orderCustomerCountryParameter, orderCustomerEMailParameter, orderCustomerNameParameter,
                orderCustomerPostalCodeParameter, orderDateParameter, orderMergingParameter, orderNoParameter,
                orderTextParameter, orderTypeParameter, ourRefParameter, paymentParameter, postalCodeParameter,
                priceListParameter, projectParameter, purposeParameter, rateParameter, recvNoParameter, remarksParameter,
                reportsParameter, roundedAmountParameter, salesRepParameter, ship1Parameter, ship2Parameter,
                ship3Parameter, ship4Parameter, ship5Parameter, ship6Parameter, ship7Parameter, shipCityNameParameter,
                shipDateParameter, shipEDILocationNrParameter, shipEMailParameter, shipPostalCodeParameter,
                shipToParameter, statusParameter, subDescriptionParameter, subEndDateParameter, subIntervalsParameter,
                subNextDateParameter, taxParameter, taxNoParameter, vatFeeParameter, vatFeeBaseParameter,
                vatFreeFeeParameter, vatFreeFeeBaseParameter, yourRefParameter, original_Address1Parameter,
                original_Address2Parameter, original_Address3Parameter, original_AgentParameter,
                original_AllocatedParameter, original_CalculationOfCargoParameter, original_CashDiscountParameter,
                original_CategoryParameter, original_CityParameter, original_CityNameParameter,
                original_ContactParameter, original_CostCenterParameter, original_CountryParameter,
                original_CurrencyParameter, original_CustomerParameter, original_DeliveryParameter,
                original_DeliveryDateParameter, original_DeliveryWeekParameter, original_DepartmentParameter,
                original_EECCountryParameter, original_EECTransCodeParameter, original_EDILocationNrParameter,
                original_EMailParameter, original_EndDiscParameter, original_EndDiscInclParameter,
                original_EndDiscPctParameter, original_ExciseParameter, original_ExciseBaseParameter,
                original_GiroParameter, original_InternalRemarksParameter, original_IsLiableToPayTaxParameter,
                original_KeepOrderParameter, original_LEANCustomersReferenceParameter, original_LEANOrderIdentParameter,
                original_LEANShipReferenceParameter, original_LEANTestParameter, original_LanguageParameter,
                original_NameParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_Optional3Parameter, original_Optional4Parameter, original_Optional5Parameter,
                original_Optional6Parameter, original_Optional7Parameter, original_Optional8Parameter,
                original_OptionalNumber1Parameter, original_OptionalNumber2Parameter, original_OptionalNumber3Parameter,
                original_OptionalNumber4Parameter, original_OptionalNumber5Parameter, original_OptionalNumber6Parameter,
                original_OptionalNumber7Parameter, original_OptionalNumber8Parameter, original_OptionalText1Parameter,
                original_OptionalText2Parameter, original_OptionalText3Parameter, original_OptionalText4Parameter,
                original_OptionalText5Parameter, original_OptionalText6Parameter, original_OptionalText7Parameter,
                original_OptionalText8Parameter, original_OrderCategoryParameter, original_OrderCommunicationParameter,
                original_OrderCommunicationStatusParameter, original_OrderCustomerParameter,
                original_OrderCustomerAddress1Parameter, original_OrderCustomerAddress2Parameter,
                original_OrderCustomerAddress3Parameter, original_OrderCustomerCityParameter,
                original_OrderCustomerCityNameParameter, original_OrderCustomerContactParameter,
                original_OrderCustomerCountryParameter, original_OrderCustomerEMailParameter,
                original_OrderCustomerNameParameter, original_OrderCustomerPostalCodeParameter,
                original_OrderDateParameter, original_OrderMergingParameter, original_OrderNoParameter,
                original_OrderTextParameter, original_OrderTypeParameter, original_OurRefParameter,
                original_PaymentParameter, original_PostalCodeParameter, original_PriceListParameter,
                original_ProjectParameter, original_PurposeParameter, original_RateParameter, original_RecvNoParameter,
                original_RemarksParameter, original_ReportsParameter, original_RoundedAmountParameter,
                original_SalesRepParameter, original_Ship1Parameter, original_Ship2Parameter, original_Ship3Parameter,
                original_Ship4Parameter, original_Ship5Parameter, original_Ship6Parameter, original_Ship7Parameter,
                original_ShipCityNameParameter, original_ShipDateParameter, original_ShipEDILocationNrParameter,
                original_ShipEMailParameter, original_ShipPostalCodeParameter, original_ShipToParameter,
                original_StatusParameter, original_SubDescriptionParameter, original_SubEndDateParameter,
                original_SubIntervalsParameter, original_SubNextDateParameter, original_TaxParameter,
                original_TaxNoParameter, original_VatFeeParameter, original_VatFeeBaseParameter,
                original_VatFreeFeeParameter, original_VatFreeFeeBaseParameter, original_YourRefParameter,
                updateChangedInLinesParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_Orders2_AddNew_Result> Public_Orders2_AddNew(Nullable<System.Guid> linkGUID,
            string orderNo, Nullable<bool> wPA_Activated, Nullable<System.DateTime> wPA_EndDate,
            Nullable<System.DateTime> wPA_LastSend, Nullable<short> wPA_LastStatus, Nullable<byte> wPA_Prioritet,
            Nullable<System.DateTime> wPA_StartDate, Nullable<short> wPA_Status, Nullable<bool> wPA_Type,
            Nullable<long> wPA_WorkCard, string wPA_Employee, string wPA_Description, string wPA_CRMInfo1,
            string wPA_CRMInfo2, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var linkGUIDParameter = linkGUID.HasValue
                ? new ObjectParameter("LinkGUID", linkGUID)
                : new ObjectParameter("LinkGUID", typeof(System.Guid));

            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var wPA_ActivatedParameter = wPA_Activated.HasValue
                ? new ObjectParameter("WPA_Activated", wPA_Activated)
                : new ObjectParameter("WPA_Activated", typeof(bool));

            var wPA_EndDateParameter = wPA_EndDate.HasValue
                ? new ObjectParameter("WPA_EndDate", wPA_EndDate)
                : new ObjectParameter("WPA_EndDate", typeof(System.DateTime));

            var wPA_LastSendParameter = wPA_LastSend.HasValue
                ? new ObjectParameter("WPA_LastSend", wPA_LastSend)
                : new ObjectParameter("WPA_LastSend", typeof(System.DateTime));

            var wPA_LastStatusParameter = wPA_LastStatus.HasValue
                ? new ObjectParameter("WPA_LastStatus", wPA_LastStatus)
                : new ObjectParameter("WPA_LastStatus", typeof(short));

            var wPA_PrioritetParameter = wPA_Prioritet.HasValue
                ? new ObjectParameter("WPA_Prioritet", wPA_Prioritet)
                : new ObjectParameter("WPA_Prioritet", typeof(byte));

            var wPA_StartDateParameter = wPA_StartDate.HasValue
                ? new ObjectParameter("WPA_StartDate", wPA_StartDate)
                : new ObjectParameter("WPA_StartDate", typeof(System.DateTime));

            var wPA_StatusParameter = wPA_Status.HasValue
                ? new ObjectParameter("WPA_Status", wPA_Status)
                : new ObjectParameter("WPA_Status", typeof(short));

            var wPA_TypeParameter = wPA_Type.HasValue
                ? new ObjectParameter("WPA_Type", wPA_Type)
                : new ObjectParameter("WPA_Type", typeof(bool));

            var wPA_WorkCardParameter = wPA_WorkCard.HasValue
                ? new ObjectParameter("WPA_WorkCard", wPA_WorkCard)
                : new ObjectParameter("WPA_WorkCard", typeof(long));

            var wPA_EmployeeParameter = wPA_Employee != null
                ? new ObjectParameter("WPA_Employee", wPA_Employee)
                : new ObjectParameter("WPA_Employee", typeof(string));

            var wPA_DescriptionParameter = wPA_Description != null
                ? new ObjectParameter("WPA_Description", wPA_Description)
                : new ObjectParameter("WPA_Description", typeof(string));

            var wPA_CRMInfo1Parameter = wPA_CRMInfo1 != null
                ? new ObjectParameter("WPA_CRMInfo1", wPA_CRMInfo1)
                : new ObjectParameter("WPA_CRMInfo1", typeof(string));

            var wPA_CRMInfo2Parameter = wPA_CRMInfo2 != null
                ? new ObjectParameter("WPA_CRMInfo2", wPA_CRMInfo2)
                : new ObjectParameter("WPA_CRMInfo2", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders2_AddNew_Result>(
                    "Public_Orders2_AddNew", linkGUIDParameter, orderNoParameter, wPA_ActivatedParameter,
                    wPA_EndDateParameter, wPA_LastSendParameter, wPA_LastStatusParameter, wPA_PrioritetParameter,
                    wPA_StartDateParameter, wPA_StatusParameter, wPA_TypeParameter, wPA_WorkCardParameter,
                    wPA_EmployeeParameter, wPA_DescriptionParameter, wPA_CRMInfo1Parameter, wPA_CRMInfo2Parameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Orders2_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Orders2_Delete", gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Orders2_Select_All_Result> Public_Orders2_Select_All(string orderNo)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders2_Select_All_Result>(
                    "Public_Orders2_Select_All", orderNoParameter);
        }

        public virtual ObjectResult<Public_Orders2_Select_Single_Result> Public_Orders2_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders2_Select_Single_Result>(
                    "Public_Orders2_Select_Single", gUIDParameter);
        }

        public virtual ObjectResult<Public_Orders2_Update_Result> Public_Orders2_Update(Nullable<bool> wPA_Activated,
            Nullable<System.DateTime> wPA_EndDate, Nullable<System.DateTime> wPA_LastSend,
            Nullable<short> wPA_LastStatus, Nullable<byte> wPA_Prioritet, Nullable<System.DateTime> wPA_StartDate,
            Nullable<short> wPA_Status, Nullable<bool> wPA_Type, string wPA_Description, string wPA_CRMInfo1,
            string wPA_CRMInfo2, Nullable<System.Guid> original_LinkGUID, Nullable<bool> original_WPA_Activated,
            Nullable<System.DateTime> original_WPA_EndDate, Nullable<System.DateTime> original_WPA_LastSend,
            Nullable<short> original_WPA_LastStatus, Nullable<byte> original_WPA_Prioritet,
            Nullable<System.DateTime> original_WPA_StartDate, Nullable<short> original_WPA_Status,
            Nullable<bool> original_WPA_Type, string original_WPA_Description, string original_WPA_CRMInfo1,
            string original_WPA_CRMInfo2, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var wPA_ActivatedParameter = wPA_Activated.HasValue
                ? new ObjectParameter("WPA_Activated", wPA_Activated)
                : new ObjectParameter("WPA_Activated", typeof(bool));

            var wPA_EndDateParameter = wPA_EndDate.HasValue
                ? new ObjectParameter("WPA_EndDate", wPA_EndDate)
                : new ObjectParameter("WPA_EndDate", typeof(System.DateTime));

            var wPA_LastSendParameter = wPA_LastSend.HasValue
                ? new ObjectParameter("WPA_LastSend", wPA_LastSend)
                : new ObjectParameter("WPA_LastSend", typeof(System.DateTime));

            var wPA_LastStatusParameter = wPA_LastStatus.HasValue
                ? new ObjectParameter("WPA_LastStatus", wPA_LastStatus)
                : new ObjectParameter("WPA_LastStatus", typeof(short));

            var wPA_PrioritetParameter = wPA_Prioritet.HasValue
                ? new ObjectParameter("WPA_Prioritet", wPA_Prioritet)
                : new ObjectParameter("WPA_Prioritet", typeof(byte));

            var wPA_StartDateParameter = wPA_StartDate.HasValue
                ? new ObjectParameter("WPA_StartDate", wPA_StartDate)
                : new ObjectParameter("WPA_StartDate", typeof(System.DateTime));

            var wPA_StatusParameter = wPA_Status.HasValue
                ? new ObjectParameter("WPA_Status", wPA_Status)
                : new ObjectParameter("WPA_Status", typeof(short));

            var wPA_TypeParameter = wPA_Type.HasValue
                ? new ObjectParameter("WPA_Type", wPA_Type)
                : new ObjectParameter("WPA_Type", typeof(bool));

            var wPA_DescriptionParameter = wPA_Description != null
                ? new ObjectParameter("WPA_Description", wPA_Description)
                : new ObjectParameter("WPA_Description", typeof(string));

            var wPA_CRMInfo1Parameter = wPA_CRMInfo1 != null
                ? new ObjectParameter("WPA_CRMInfo1", wPA_CRMInfo1)
                : new ObjectParameter("WPA_CRMInfo1", typeof(string));

            var wPA_CRMInfo2Parameter = wPA_CRMInfo2 != null
                ? new ObjectParameter("WPA_CRMInfo2", wPA_CRMInfo2)
                : new ObjectParameter("WPA_CRMInfo2", typeof(string));

            var original_LinkGUIDParameter = original_LinkGUID.HasValue
                ? new ObjectParameter("Original_LinkGUID", original_LinkGUID)
                : new ObjectParameter("Original_LinkGUID", typeof(System.Guid));

            var original_WPA_ActivatedParameter = original_WPA_Activated.HasValue
                ? new ObjectParameter("Original_WPA_Activated", original_WPA_Activated)
                : new ObjectParameter("Original_WPA_Activated", typeof(bool));

            var original_WPA_EndDateParameter = original_WPA_EndDate.HasValue
                ? new ObjectParameter("Original_WPA_EndDate", original_WPA_EndDate)
                : new ObjectParameter("Original_WPA_EndDate", typeof(System.DateTime));

            var original_WPA_LastSendParameter = original_WPA_LastSend.HasValue
                ? new ObjectParameter("Original_WPA_LastSend", original_WPA_LastSend)
                : new ObjectParameter("Original_WPA_LastSend", typeof(System.DateTime));

            var original_WPA_LastStatusParameter = original_WPA_LastStatus.HasValue
                ? new ObjectParameter("Original_WPA_LastStatus", original_WPA_LastStatus)
                : new ObjectParameter("Original_WPA_LastStatus", typeof(short));

            var original_WPA_PrioritetParameter = original_WPA_Prioritet.HasValue
                ? new ObjectParameter("Original_WPA_Prioritet", original_WPA_Prioritet)
                : new ObjectParameter("Original_WPA_Prioritet", typeof(byte));

            var original_WPA_StartDateParameter = original_WPA_StartDate.HasValue
                ? new ObjectParameter("Original_WPA_StartDate", original_WPA_StartDate)
                : new ObjectParameter("Original_WPA_StartDate", typeof(System.DateTime));

            var original_WPA_StatusParameter = original_WPA_Status.HasValue
                ? new ObjectParameter("Original_WPA_Status", original_WPA_Status)
                : new ObjectParameter("Original_WPA_Status", typeof(short));

            var original_WPA_TypeParameter = original_WPA_Type.HasValue
                ? new ObjectParameter("Original_WPA_Type", original_WPA_Type)
                : new ObjectParameter("Original_WPA_Type", typeof(bool));

            var original_WPA_DescriptionParameter = original_WPA_Description != null
                ? new ObjectParameter("Original_WPA_Description", original_WPA_Description)
                : new ObjectParameter("Original_WPA_Description", typeof(string));

            var original_WPA_CRMInfo1Parameter = original_WPA_CRMInfo1 != null
                ? new ObjectParameter("Original_WPA_CRMInfo1", original_WPA_CRMInfo1)
                : new ObjectParameter("Original_WPA_CRMInfo1", typeof(string));

            var original_WPA_CRMInfo2Parameter = original_WPA_CRMInfo2 != null
                ? new ObjectParameter("Original_WPA_CRMInfo2", original_WPA_CRMInfo2)
                : new ObjectParameter("Original_WPA_CRMInfo2", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Orders2_Update_Result>(
                    "Public_Orders2_Update", wPA_ActivatedParameter, wPA_EndDateParameter, wPA_LastSendParameter,
                    wPA_LastStatusParameter, wPA_PrioritetParameter, wPA_StartDateParameter, wPA_StatusParameter,
                    wPA_TypeParameter, wPA_DescriptionParameter, wPA_CRMInfo1Parameter, wPA_CRMInfo2Parameter,
                    original_LinkGUIDParameter, original_WPA_ActivatedParameter, original_WPA_EndDateParameter,
                    original_WPA_LastSendParameter, original_WPA_LastStatusParameter, original_WPA_PrioritetParameter,
                    original_WPA_StartDateParameter, original_WPA_StatusParameter, original_WPA_TypeParameter,
                    original_WPA_DescriptionParameter, original_WPA_CRMInfo1Parameter, original_WPA_CRMInfo2Parameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_OrderStatus_AddNew_Result> Public_OrderStatus_AddNew(string description,
            Nullable<short> needSerialNo, string remarks, Nullable<bool> showInStatus, string status,
            Nullable<short> totalAmountView, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var needSerialNoParameter = needSerialNo.HasValue
                ? new ObjectParameter("NeedSerialNo", needSerialNo)
                : new ObjectParameter("NeedSerialNo", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInStatusParameter = showInStatus.HasValue
                ? new ObjectParameter("ShowInStatus", showInStatus)
                : new ObjectParameter("ShowInStatus", typeof(bool));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var totalAmountViewParameter = totalAmountView.HasValue
                ? new ObjectParameter("TotalAmountView", totalAmountView)
                : new ObjectParameter("TotalAmountView", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderStatus_AddNew_Result>(
                    "Public_OrderStatus_AddNew", descriptionParameter, needSerialNoParameter, remarksParameter,
                    showInStatusParameter, statusParameter, totalAmountViewParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_OrderStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_OrderStatus_Delete",
                original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_OrderStatus_Select_All_Result> Public_OrderStatus_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderStatus_Select_All_Result>(
                    "Public_OrderStatus_Select_All");
        }

        public virtual ObjectResult<Public_OrderStatus_Select_Single_Result> Public_OrderStatus_Select_Single(
            string original_Status, Nullable<System.Guid> gUID)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderStatus_Select_Single_Result>(
                    "Public_OrderStatus_Select_Single", original_StatusParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_OrderStatus_Update_Result> Public_OrderStatus_Update(string description,
            Nullable<short> needSerialNo, string remarks, Nullable<bool> showInStatus, Nullable<short> totalAmountView,
            string original_Description, Nullable<short> original_NeedSerialNo, string original_Remarks,
            Nullable<bool> original_ShowInStatus, string original_Status, Nullable<short> original_TotalAmountView,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var needSerialNoParameter = needSerialNo.HasValue
                ? new ObjectParameter("NeedSerialNo", needSerialNo)
                : new ObjectParameter("NeedSerialNo", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInStatusParameter = showInStatus.HasValue
                ? new ObjectParameter("ShowInStatus", showInStatus)
                : new ObjectParameter("ShowInStatus", typeof(bool));

            var totalAmountViewParameter = totalAmountView.HasValue
                ? new ObjectParameter("TotalAmountView", totalAmountView)
                : new ObjectParameter("TotalAmountView", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_NeedSerialNoParameter = original_NeedSerialNo.HasValue
                ? new ObjectParameter("Original_NeedSerialNo", original_NeedSerialNo)
                : new ObjectParameter("Original_NeedSerialNo", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInStatusParameter = original_ShowInStatus.HasValue
                ? new ObjectParameter("Original_ShowInStatus", original_ShowInStatus)
                : new ObjectParameter("Original_ShowInStatus", typeof(bool));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_TotalAmountViewParameter = original_TotalAmountView.HasValue
                ? new ObjectParameter("Original_TotalAmountView", original_TotalAmountView)
                : new ObjectParameter("Original_TotalAmountView", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_OrderStatus_Update_Result>(
                    "Public_OrderStatus_Update", descriptionParameter, needSerialNoParameter, remarksParameter,
                    showInStatusParameter, totalAmountViewParameter, original_DescriptionParameter,
                    original_NeedSerialNoParameter, original_RemarksParameter, original_ShowInStatusParameter,
                    original_StatusParameter, original_TotalAmountViewParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Payment_AddNew(Nullable<short> days, string description, string payment,
            string remarks, Nullable<short> type, string standard_Payment, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var standard_PaymentParameter = standard_Payment != null
                ? new ObjectParameter("Standard_Payment", standard_Payment)
                : new ObjectParameter("Standard_Payment", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Payment_AddNew", daysParameter,
                descriptionParameter, paymentParameter, remarksParameter, typeParameter, standard_PaymentParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Payment_Delete(string original_Payment, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Payment_Delete",
                original_PaymentParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Payment_Select_All_Result> Public_Payment_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Payment_Select_All_Result>(
                    "Public_Payment_Select_All");
        }

        public virtual ObjectResult<Public_Payment_Select_Single_Result> Public_Payment_Select_Single(
            string original_Payment, Nullable<System.Guid> gUID)
        {
            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Payment_Select_Single_Result>(
                    "Public_Payment_Select_Single", original_PaymentParameter, gUIDParameter);
        }

        public virtual int Public_Payment_Update(Nullable<short> days, string description, string remarks,
            Nullable<short> type, Nullable<short> original_Days, string original_Description, string original_Payment,
            string original_Remarks, Nullable<short> original_Type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Payment_Update", daysParameter,
                descriptionParameter, remarksParameter, typeParameter, original_DaysParameter,
                original_DescriptionParameter, original_PaymentParameter, original_RemarksParameter,
                original_TypeParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_PostNr_AddNew_Result> Public_PostNr_AddNew(string postDistrikt, string postNr,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var postDistriktParameter = postDistrikt != null
                ? new ObjectParameter("PostDistrikt", postDistrikt)
                : new ObjectParameter("PostDistrikt", typeof(string));

            var postNrParameter = postNr != null
                ? new ObjectParameter("PostNr", postNr)
                : new ObjectParameter("PostNr", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PostNr_AddNew_Result>(
                    "Public_PostNr_AddNew", postDistriktParameter, postNrParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_PostNr_Delete(string original_PostNr, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PostNrParameter = original_PostNr != null
                ? new ObjectParameter("Original_PostNr", original_PostNr)
                : new ObjectParameter("Original_PostNr", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PostNr_Delete",
                original_PostNrParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PostNr_Select_All_Result> Public_PostNr_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PostNr_Select_All_Result>(
                    "Public_PostNr_Select_All");
        }

        public virtual ObjectResult<Public_PostNr_Select_Single_Result> Public_PostNr_Select_Single(
            string original_PostNr, Nullable<System.Guid> gUID)
        {
            var original_PostNrParameter = original_PostNr != null
                ? new ObjectParameter("Original_PostNr", original_PostNr)
                : new ObjectParameter("Original_PostNr", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PostNr_Select_Single_Result>(
                    "Public_PostNr_Select_Single", original_PostNrParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_PostNr_Update_Result> Public_PostNr_Update(string postDistrikt,
            string original_PostDistrikt, string original_PostNr, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var postDistriktParameter = postDistrikt != null
                ? new ObjectParameter("PostDistrikt", postDistrikt)
                : new ObjectParameter("PostDistrikt", typeof(string));

            var original_PostDistriktParameter = original_PostDistrikt != null
                ? new ObjectParameter("Original_PostDistrikt", original_PostDistrikt)
                : new ObjectParameter("Original_PostDistrikt", typeof(string));

            var original_PostNrParameter = original_PostNr != null
                ? new ObjectParameter("Original_PostNr", original_PostNr)
                : new ObjectParameter("Original_PostNr", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PostNr_Update_Result>(
                    "Public_PostNr_Update", postDistriktParameter, original_PostDistriktParameter,
                    original_PostNrParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual ObjectResult<Public_Project_AddNew_Result> Public_Project_AddNew(string address1, string address2,
            string address3, Nullable<bool> allowActivating, Nullable<byte> blocked, string city, string contact,
            string country, string customer, string customerName, string customerProjectNo,
            Nullable<System.DateTime> endDate, string fax, Nullable<double> fixedPrice, string grouping,
            Nullable<short> includeSubProject, string invoiceToCustomer, string invoiceToCustomerName, string mobile,
            string name, string notat, Nullable<short> optional1, Nullable<short> optional2, Nullable<short> optional3,
            Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6, Nullable<short> optional7,
            Nullable<short> optional8, Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<System.DateTime> optionalDate3, Nullable<System.DateTime> optionalDate4,
            Nullable<System.DateTime> optionalDate5, Nullable<System.DateTime> optionalDate6,
            Nullable<System.DateTime> optionalDate7, Nullable<System.DateTime> optionalDate8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string ourRef, string phone, string postalCode, string priceList,
            string project, Nullable<System.DateTime> projectEndDate, Nullable<System.DateTime> projectStartDate,
            string projectStatus1, string projectStatus2, string recvNo, string remarks, string responsible,
            string ship1, string ship2, string ship3, string ship5, string ship6, string ship7, string shipCityName,
            string shipPostalCode, string shipTo, Nullable<System.DateTime> startDate, string yourRef,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var allowActivatingParameter = allowActivating.HasValue
                ? new ObjectParameter("AllowActivating", allowActivating)
                : new ObjectParameter("AllowActivating", typeof(bool));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(byte));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var customerNameParameter = customerName != null
                ? new ObjectParameter("CustomerName", customerName)
                : new ObjectParameter("CustomerName", typeof(string));

            var customerProjectNoParameter = customerProjectNo != null
                ? new ObjectParameter("CustomerProjectNo", customerProjectNo)
                : new ObjectParameter("CustomerProjectNo", typeof(string));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fixedPriceParameter = fixedPrice.HasValue
                ? new ObjectParameter("FixedPrice", fixedPrice)
                : new ObjectParameter("FixedPrice", typeof(double));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var includeSubProjectParameter = includeSubProject.HasValue
                ? new ObjectParameter("IncludeSubProject", includeSubProject)
                : new ObjectParameter("IncludeSubProject", typeof(short));

            var invoiceToCustomerParameter = invoiceToCustomer != null
                ? new ObjectParameter("InvoiceToCustomer", invoiceToCustomer)
                : new ObjectParameter("InvoiceToCustomer", typeof(string));

            var invoiceToCustomerNameParameter = invoiceToCustomerName != null
                ? new ObjectParameter("InvoiceToCustomerName", invoiceToCustomerName)
                : new ObjectParameter("InvoiceToCustomerName", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var notatParameter = notat != null
                ? new ObjectParameter("Notat", notat)
                : new ObjectParameter("Notat", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalDate3Parameter = optionalDate3.HasValue
                ? new ObjectParameter("OptionalDate3", optionalDate3)
                : new ObjectParameter("OptionalDate3", typeof(System.DateTime));

            var optionalDate4Parameter = optionalDate4.HasValue
                ? new ObjectParameter("OptionalDate4", optionalDate4)
                : new ObjectParameter("OptionalDate4", typeof(System.DateTime));

            var optionalDate5Parameter = optionalDate5.HasValue
                ? new ObjectParameter("OptionalDate5", optionalDate5)
                : new ObjectParameter("OptionalDate5", typeof(System.DateTime));

            var optionalDate6Parameter = optionalDate6.HasValue
                ? new ObjectParameter("OptionalDate6", optionalDate6)
                : new ObjectParameter("OptionalDate6", typeof(System.DateTime));

            var optionalDate7Parameter = optionalDate7.HasValue
                ? new ObjectParameter("OptionalDate7", optionalDate7)
                : new ObjectParameter("OptionalDate7", typeof(System.DateTime));

            var optionalDate8Parameter = optionalDate8.HasValue
                ? new ObjectParameter("OptionalDate8", optionalDate8)
                : new ObjectParameter("OptionalDate8", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var ourRefParameter = ourRef != null
                ? new ObjectParameter("OurRef", ourRef)
                : new ObjectParameter("OurRef", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var projectEndDateParameter = projectEndDate.HasValue
                ? new ObjectParameter("ProjectEndDate", projectEndDate)
                : new ObjectParameter("ProjectEndDate", typeof(System.DateTime));

            var projectStartDateParameter = projectStartDate.HasValue
                ? new ObjectParameter("ProjectStartDate", projectStartDate)
                : new ObjectParameter("ProjectStartDate", typeof(System.DateTime));

            var projectStatus1Parameter = projectStatus1 != null
                ? new ObjectParameter("ProjectStatus1", projectStatus1)
                : new ObjectParameter("ProjectStatus1", typeof(string));

            var projectStatus2Parameter = projectStatus2 != null
                ? new ObjectParameter("ProjectStatus2", projectStatus2)
                : new ObjectParameter("ProjectStatus2", typeof(string));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var responsibleParameter = responsible != null
                ? new ObjectParameter("Responsible", responsible)
                : new ObjectParameter("Responsible", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var yourRefParameter = yourRef != null
                ? new ObjectParameter("YourRef", yourRef)
                : new ObjectParameter("YourRef", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Project_AddNew_Result>(
                    "Public_Project_AddNew", address1Parameter, address2Parameter, address3Parameter,
                    allowActivatingParameter, blockedParameter, cityParameter, contactParameter, countryParameter,
                    customerParameter, customerNameParameter, customerProjectNoParameter, endDateParameter, faxParameter,
                    fixedPriceParameter, groupingParameter, includeSubProjectParameter, invoiceToCustomerParameter,
                    invoiceToCustomerNameParameter, mobileParameter, nameParameter, notatParameter, optional1Parameter,
                    optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter, optional6Parameter,
                    optional7Parameter, optional8Parameter, optionalDate1Parameter, optionalDate2Parameter,
                    optionalDate3Parameter, optionalDate4Parameter, optionalDate5Parameter, optionalDate6Parameter,
                    optionalDate7Parameter, optionalDate8Parameter, optionalNumber1Parameter, optionalNumber2Parameter,
                    optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                    optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                    optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                    optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, ourRefParameter,
                    phoneParameter, postalCodeParameter, priceListParameter, projectParameter, projectEndDateParameter,
                    projectStartDateParameter, projectStatus1Parameter, projectStatus2Parameter, recvNoParameter,
                    remarksParameter, responsibleParameter, ship1Parameter, ship2Parameter, ship3Parameter,
                    ship5Parameter, ship6Parameter, ship7Parameter, shipCityNameParameter, shipPostalCodeParameter,
                    shipToParameter, startDateParameter, yourRefParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Project_Delete(string original_Project, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Project_Delete",
                original_ProjectParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Project_Select_All_Result> Public_Project_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Project_Select_All_Result>(
                    "Public_Project_Select_All");
        }

        public virtual ObjectResult<Public_Project_Select_Single_Result> Public_Project_Select_Single(
            string original_Project, Nullable<System.Guid> gUID)
        {
            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Project_Select_Single_Result>(
                    "Public_Project_Select_Single", original_ProjectParameter, gUIDParameter);
        }

        public virtual int Public_Project_Update(string address1, string address2, string address3,
            Nullable<bool> allowActivating, Nullable<byte> blocked, string city, string contact, string country,
            string customer, string customerName, string customerProjectNo, Nullable<System.DateTime> endDate,
            string fax, Nullable<double> fixedPrice, string grouping, Nullable<short> includeSubProject,
            string invoiceToCustomer, string invoiceToCustomerName, string mobile, string name, string notat,
            Nullable<short> optional1, Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4,
            Nullable<short> optional5, Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<System.DateTime> optionalDate3, Nullable<System.DateTime> optionalDate4,
            Nullable<System.DateTime> optionalDate5, Nullable<System.DateTime> optionalDate6,
            Nullable<System.DateTime> optionalDate7, Nullable<System.DateTime> optionalDate8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, string ourRef, string phone, string postalCode, string priceList,
            Nullable<System.DateTime> projectEndDate, Nullable<System.DateTime> projectStartDate, string projectStatus1,
            string projectStatus2, string recvNo, string remarks, string responsible, string ship1, string ship2,
            string ship3, string ship5, string ship6, string ship7, string shipCityName, string shipPostalCode,
            string shipTo, Nullable<System.DateTime> startDate, string yourRef, string original_Address1,
            string original_Address2, string original_Address3, Nullable<bool> original_AllowActivating,
            Nullable<byte> original_Blocked, string original_City, string original_Contact, string original_Country,
            string original_Customer, string original_CustomerName, string original_CustomerProjectNo,
            Nullable<System.DateTime> original_EndDate, string original_Fax, Nullable<double> original_FixedPrice,
            string original_Grouping, Nullable<short> original_IncludeSubProject, string original_InvoiceToCustomer,
            string original_InvoiceToCustomerName, string original_Mobile, string original_Name, string original_Notat,
            Nullable<short> original_Optional1, Nullable<short> original_Optional2, Nullable<short> original_Optional3,
            Nullable<short> original_Optional4, Nullable<short> original_Optional5, Nullable<short> original_Optional6,
            Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<System.DateTime> original_OptionalDate3, Nullable<System.DateTime> original_OptionalDate4,
            Nullable<System.DateTime> original_OptionalDate5, Nullable<System.DateTime> original_OptionalDate6,
            Nullable<System.DateTime> original_OptionalDate7, Nullable<System.DateTime> original_OptionalDate8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OurRef, string original_Phone,
            string original_PostalCode, string original_PriceList, string original_Project,
            Nullable<System.DateTime> original_ProjectEndDate, Nullable<System.DateTime> original_ProjectStartDate,
            string original_ProjectStatus1, string original_ProjectStatus2, string original_RecvNo,
            string original_Remarks, string original_Responsible, string original_Ship1, string original_Ship2,
            string original_Ship3, string original_Ship5, string original_Ship6, string original_Ship7,
            string original_ShipCityName, string original_ShipPostalCode, string original_ShipTo,
            Nullable<System.DateTime> original_StartDate, string original_YourRef, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var allowActivatingParameter = allowActivating.HasValue
                ? new ObjectParameter("AllowActivating", allowActivating)
                : new ObjectParameter("AllowActivating", typeof(bool));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(byte));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var customerNameParameter = customerName != null
                ? new ObjectParameter("CustomerName", customerName)
                : new ObjectParameter("CustomerName", typeof(string));

            var customerProjectNoParameter = customerProjectNo != null
                ? new ObjectParameter("CustomerProjectNo", customerProjectNo)
                : new ObjectParameter("CustomerProjectNo", typeof(string));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fixedPriceParameter = fixedPrice.HasValue
                ? new ObjectParameter("FixedPrice", fixedPrice)
                : new ObjectParameter("FixedPrice", typeof(double));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var includeSubProjectParameter = includeSubProject.HasValue
                ? new ObjectParameter("IncludeSubProject", includeSubProject)
                : new ObjectParameter("IncludeSubProject", typeof(short));

            var invoiceToCustomerParameter = invoiceToCustomer != null
                ? new ObjectParameter("InvoiceToCustomer", invoiceToCustomer)
                : new ObjectParameter("InvoiceToCustomer", typeof(string));

            var invoiceToCustomerNameParameter = invoiceToCustomerName != null
                ? new ObjectParameter("InvoiceToCustomerName", invoiceToCustomerName)
                : new ObjectParameter("InvoiceToCustomerName", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var notatParameter = notat != null
                ? new ObjectParameter("Notat", notat)
                : new ObjectParameter("Notat", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalDate3Parameter = optionalDate3.HasValue
                ? new ObjectParameter("OptionalDate3", optionalDate3)
                : new ObjectParameter("OptionalDate3", typeof(System.DateTime));

            var optionalDate4Parameter = optionalDate4.HasValue
                ? new ObjectParameter("OptionalDate4", optionalDate4)
                : new ObjectParameter("OptionalDate4", typeof(System.DateTime));

            var optionalDate5Parameter = optionalDate5.HasValue
                ? new ObjectParameter("OptionalDate5", optionalDate5)
                : new ObjectParameter("OptionalDate5", typeof(System.DateTime));

            var optionalDate6Parameter = optionalDate6.HasValue
                ? new ObjectParameter("OptionalDate6", optionalDate6)
                : new ObjectParameter("OptionalDate6", typeof(System.DateTime));

            var optionalDate7Parameter = optionalDate7.HasValue
                ? new ObjectParameter("OptionalDate7", optionalDate7)
                : new ObjectParameter("OptionalDate7", typeof(System.DateTime));

            var optionalDate8Parameter = optionalDate8.HasValue
                ? new ObjectParameter("OptionalDate8", optionalDate8)
                : new ObjectParameter("OptionalDate8", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var ourRefParameter = ourRef != null
                ? new ObjectParameter("OurRef", ourRef)
                : new ObjectParameter("OurRef", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectEndDateParameter = projectEndDate.HasValue
                ? new ObjectParameter("ProjectEndDate", projectEndDate)
                : new ObjectParameter("ProjectEndDate", typeof(System.DateTime));

            var projectStartDateParameter = projectStartDate.HasValue
                ? new ObjectParameter("ProjectStartDate", projectStartDate)
                : new ObjectParameter("ProjectStartDate", typeof(System.DateTime));

            var projectStatus1Parameter = projectStatus1 != null
                ? new ObjectParameter("ProjectStatus1", projectStatus1)
                : new ObjectParameter("ProjectStatus1", typeof(string));

            var projectStatus2Parameter = projectStatus2 != null
                ? new ObjectParameter("ProjectStatus2", projectStatus2)
                : new ObjectParameter("ProjectStatus2", typeof(string));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var responsibleParameter = responsible != null
                ? new ObjectParameter("Responsible", responsible)
                : new ObjectParameter("Responsible", typeof(string));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var yourRefParameter = yourRef != null
                ? new ObjectParameter("YourRef", yourRef)
                : new ObjectParameter("YourRef", typeof(string));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AllowActivatingParameter = original_AllowActivating.HasValue
                ? new ObjectParameter("Original_AllowActivating", original_AllowActivating)
                : new ObjectParameter("Original_AllowActivating", typeof(bool));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(byte));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_CustomerNameParameter = original_CustomerName != null
                ? new ObjectParameter("Original_CustomerName", original_CustomerName)
                : new ObjectParameter("Original_CustomerName", typeof(string));

            var original_CustomerProjectNoParameter = original_CustomerProjectNo != null
                ? new ObjectParameter("Original_CustomerProjectNo", original_CustomerProjectNo)
                : new ObjectParameter("Original_CustomerProjectNo", typeof(string));

            var original_EndDateParameter = original_EndDate.HasValue
                ? new ObjectParameter("Original_EndDate", original_EndDate)
                : new ObjectParameter("Original_EndDate", typeof(System.DateTime));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FixedPriceParameter = original_FixedPrice.HasValue
                ? new ObjectParameter("Original_FixedPrice", original_FixedPrice)
                : new ObjectParameter("Original_FixedPrice", typeof(double));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_IncludeSubProjectParameter = original_IncludeSubProject.HasValue
                ? new ObjectParameter("Original_IncludeSubProject", original_IncludeSubProject)
                : new ObjectParameter("Original_IncludeSubProject", typeof(short));

            var original_InvoiceToCustomerParameter = original_InvoiceToCustomer != null
                ? new ObjectParameter("Original_InvoiceToCustomer", original_InvoiceToCustomer)
                : new ObjectParameter("Original_InvoiceToCustomer", typeof(string));

            var original_InvoiceToCustomerNameParameter = original_InvoiceToCustomerName != null
                ? new ObjectParameter("Original_InvoiceToCustomerName", original_InvoiceToCustomerName)
                : new ObjectParameter("Original_InvoiceToCustomerName", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_NotatParameter = original_Notat != null
                ? new ObjectParameter("Original_Notat", original_Notat)
                : new ObjectParameter("Original_Notat", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalDate3Parameter = original_OptionalDate3.HasValue
                ? new ObjectParameter("Original_OptionalDate3", original_OptionalDate3)
                : new ObjectParameter("Original_OptionalDate3", typeof(System.DateTime));

            var original_OptionalDate4Parameter = original_OptionalDate4.HasValue
                ? new ObjectParameter("Original_OptionalDate4", original_OptionalDate4)
                : new ObjectParameter("Original_OptionalDate4", typeof(System.DateTime));

            var original_OptionalDate5Parameter = original_OptionalDate5.HasValue
                ? new ObjectParameter("Original_OptionalDate5", original_OptionalDate5)
                : new ObjectParameter("Original_OptionalDate5", typeof(System.DateTime));

            var original_OptionalDate6Parameter = original_OptionalDate6.HasValue
                ? new ObjectParameter("Original_OptionalDate6", original_OptionalDate6)
                : new ObjectParameter("Original_OptionalDate6", typeof(System.DateTime));

            var original_OptionalDate7Parameter = original_OptionalDate7.HasValue
                ? new ObjectParameter("Original_OptionalDate7", original_OptionalDate7)
                : new ObjectParameter("Original_OptionalDate7", typeof(System.DateTime));

            var original_OptionalDate8Parameter = original_OptionalDate8.HasValue
                ? new ObjectParameter("Original_OptionalDate8", original_OptionalDate8)
                : new ObjectParameter("Original_OptionalDate8", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OurRefParameter = original_OurRef != null
                ? new ObjectParameter("Original_OurRef", original_OurRef)
                : new ObjectParameter("Original_OurRef", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProjectEndDateParameter = original_ProjectEndDate.HasValue
                ? new ObjectParameter("Original_ProjectEndDate", original_ProjectEndDate)
                : new ObjectParameter("Original_ProjectEndDate", typeof(System.DateTime));

            var original_ProjectStartDateParameter = original_ProjectStartDate.HasValue
                ? new ObjectParameter("Original_ProjectStartDate", original_ProjectStartDate)
                : new ObjectParameter("Original_ProjectStartDate", typeof(System.DateTime));

            var original_ProjectStatus1Parameter = original_ProjectStatus1 != null
                ? new ObjectParameter("Original_ProjectStatus1", original_ProjectStatus1)
                : new ObjectParameter("Original_ProjectStatus1", typeof(string));

            var original_ProjectStatus2Parameter = original_ProjectStatus2 != null
                ? new ObjectParameter("Original_ProjectStatus2", original_ProjectStatus2)
                : new ObjectParameter("Original_ProjectStatus2", typeof(string));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ResponsibleParameter = original_Responsible != null
                ? new ObjectParameter("Original_Responsible", original_Responsible)
                : new ObjectParameter("Original_Responsible", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_YourRefParameter = original_YourRef != null
                ? new ObjectParameter("Original_YourRef", original_YourRef)
                : new ObjectParameter("Original_YourRef", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Project_Update",
                address1Parameter, address2Parameter, address3Parameter, allowActivatingParameter, blockedParameter,
                cityParameter, contactParameter, countryParameter, customerParameter, customerNameParameter,
                customerProjectNoParameter, endDateParameter, faxParameter, fixedPriceParameter, groupingParameter,
                includeSubProjectParameter, invoiceToCustomerParameter, invoiceToCustomerNameParameter, mobileParameter,
                nameParameter, notatParameter, optional1Parameter, optional2Parameter, optional3Parameter,
                optional4Parameter, optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                optionalDate1Parameter, optionalDate2Parameter, optionalDate3Parameter, optionalDate4Parameter,
                optionalDate5Parameter, optionalDate6Parameter, optionalDate7Parameter, optionalDate8Parameter,
                optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter, optionalNumber4Parameter,
                optionalNumber5Parameter, optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter,
                optionalText1Parameter, optionalText2Parameter, optionalText3Parameter, optionalText4Parameter,
                optionalText5Parameter, optionalText6Parameter, optionalText7Parameter, optionalText8Parameter,
                ourRefParameter, phoneParameter, postalCodeParameter, priceListParameter, projectEndDateParameter,
                projectStartDateParameter, projectStatus1Parameter, projectStatus2Parameter, recvNoParameter,
                remarksParameter, responsibleParameter, ship1Parameter, ship2Parameter, ship3Parameter, ship5Parameter,
                ship6Parameter, ship7Parameter, shipCityNameParameter, shipPostalCodeParameter, shipToParameter,
                startDateParameter, yourRefParameter, original_Address1Parameter, original_Address2Parameter,
                original_Address3Parameter, original_AllowActivatingParameter, original_BlockedParameter,
                original_CityParameter, original_ContactParameter, original_CountryParameter, original_CustomerParameter,
                original_CustomerNameParameter, original_CustomerProjectNoParameter, original_EndDateParameter,
                original_FaxParameter, original_FixedPriceParameter, original_GroupingParameter,
                original_IncludeSubProjectParameter, original_InvoiceToCustomerParameter,
                original_InvoiceToCustomerNameParameter, original_MobileParameter, original_NameParameter,
                original_NotatParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_Optional3Parameter, original_Optional4Parameter, original_Optional5Parameter,
                original_Optional6Parameter, original_Optional7Parameter, original_Optional8Parameter,
                original_OptionalDate1Parameter, original_OptionalDate2Parameter, original_OptionalDate3Parameter,
                original_OptionalDate4Parameter, original_OptionalDate5Parameter, original_OptionalDate6Parameter,
                original_OptionalDate7Parameter, original_OptionalDate8Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                original_OptionalNumber5Parameter, original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                original_OurRefParameter, original_PhoneParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_ProjectEndDateParameter,
                original_ProjectStartDateParameter, original_ProjectStatus1Parameter, original_ProjectStatus2Parameter,
                original_RecvNoParameter, original_RemarksParameter, original_ResponsibleParameter,
                original_Ship1Parameter, original_Ship2Parameter, original_Ship3Parameter, original_Ship5Parameter,
                original_Ship6Parameter, original_Ship7Parameter, original_ShipCityNameParameter,
                original_ShipPostalCodeParameter, original_ShipToParameter, original_StartDateParameter,
                original_YourRefParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_ProjectLines_AddNew_Result> Public_ProjectLines_AddNew(string account,
            string costCenter, Nullable<double> costPrice, Nullable<System.DateTime> date, string department,
            string description, string employee, Nullable<System.DateTime> endDate, Nullable<bool> invoiceAble,
            string item, string optional1, string optional2, string project, string purPose, Nullable<double> quantity,
            string remarks, Nullable<double> salesPrice, Nullable<System.DateTime> startDate, Nullable<double> usedTime,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var invoiceAbleParameter = invoiceAble.HasValue
                ? new ObjectParameter("InvoiceAble", invoiceAble)
                : new ObjectParameter("InvoiceAble", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purPoseParameter = purPose != null
                ? new ObjectParameter("PurPose", purPose)
                : new ObjectParameter("PurPose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var usedTimeParameter = usedTime.HasValue
                ? new ObjectParameter("UsedTime", usedTime)
                : new ObjectParameter("UsedTime", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ProjectLines_AddNew_Result>(
                    "Public_ProjectLines_AddNew", accountParameter, costCenterParameter, costPriceParameter,
                    dateParameter, departmentParameter, descriptionParameter, employeeParameter, endDateParameter,
                    invoiceAbleParameter, itemParameter, optional1Parameter, optional2Parameter, projectParameter,
                    purPoseParameter, quantityParameter, remarksParameter, salesPriceParameter, startDateParameter,
                    usedTimeParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_ProjectLines_Delete(Nullable<decimal> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(decimal));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_ProjectLines_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_ProjectLines_Select_All_Result> Public_ProjectLines_Select_All(string project)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ProjectLines_Select_All_Result>(
                    "Public_ProjectLines_Select_All", projectParameter);
        }

        public virtual ObjectResult<Public_ProjectLines_Select_Single_Result> Public_ProjectLines_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ProjectLines_Select_Single_Result>(
                    "Public_ProjectLines_Select_Single", gUIDParameter);
        }

        public virtual ObjectResult<Public_ProjectLines_Update_Result> Public_ProjectLines_Update(string account,
            string costCenter, Nullable<double> costPrice, Nullable<System.DateTime> date, string department,
            string description, string employee, Nullable<System.DateTime> endDate, Nullable<bool> invoiceAble,
            string item, string optional1, string optional2, string purPose, Nullable<double> quantity, string remarks,
            Nullable<double> salesPrice, Nullable<System.DateTime> startDate, Nullable<double> usedTime,
            string original_Account, string original_CostCenter, Nullable<double> original_CostPrice,
            Nullable<System.DateTime> original_Date, string original_Department, string original_Description,
            string original_Employee, Nullable<System.DateTime> original_EndDate, Nullable<bool> original_InvoiceAble,
            string original_Item, string original_Optional1, string original_Optional2, string original_PurPose,
            Nullable<double> original_Quantity, Nullable<decimal> original_RecordID, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<System.DateTime> original_StartDate,
            Nullable<double> original_UsedTime, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPriceParameter = costPrice.HasValue
                ? new ObjectParameter("CostPrice", costPrice)
                : new ObjectParameter("CostPrice", typeof(double));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var endDateParameter = endDate.HasValue
                ? new ObjectParameter("EndDate", endDate)
                : new ObjectParameter("EndDate", typeof(System.DateTime));

            var invoiceAbleParameter = invoiceAble.HasValue
                ? new ObjectParameter("InvoiceAble", invoiceAble)
                : new ObjectParameter("InvoiceAble", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var purPoseParameter = purPose != null
                ? new ObjectParameter("PurPose", purPose)
                : new ObjectParameter("PurPose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var salesPriceParameter = salesPrice.HasValue
                ? new ObjectParameter("SalesPrice", salesPrice)
                : new ObjectParameter("SalesPrice", typeof(double));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var usedTimeParameter = usedTime.HasValue
                ? new ObjectParameter("UsedTime", usedTime)
                : new ObjectParameter("UsedTime", typeof(double));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_EndDateParameter = original_EndDate.HasValue
                ? new ObjectParameter("Original_EndDate", original_EndDate)
                : new ObjectParameter("Original_EndDate", typeof(System.DateTime));

            var original_InvoiceAbleParameter = original_InvoiceAble.HasValue
                ? new ObjectParameter("Original_InvoiceAble", original_InvoiceAble)
                : new ObjectParameter("Original_InvoiceAble", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_PurPoseParameter = original_PurPose != null
                ? new ObjectParameter("Original_PurPose", original_PurPose)
                : new ObjectParameter("Original_PurPose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(decimal));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_UsedTimeParameter = original_UsedTime.HasValue
                ? new ObjectParameter("Original_UsedTime", original_UsedTime)
                : new ObjectParameter("Original_UsedTime", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_ProjectLines_Update_Result>(
                    "Public_ProjectLines_Update", accountParameter, costCenterParameter, costPriceParameter,
                    dateParameter, departmentParameter, descriptionParameter, employeeParameter, endDateParameter,
                    invoiceAbleParameter, itemParameter, optional1Parameter, optional2Parameter, purPoseParameter,
                    quantityParameter, remarksParameter, salesPriceParameter, startDateParameter, usedTimeParameter,
                    original_AccountParameter, original_CostCenterParameter, original_CostPriceParameter,
                    original_DateParameter, original_DepartmentParameter, original_DescriptionParameter,
                    original_EmployeeParameter, original_EndDateParameter, original_InvoiceAbleParameter,
                    original_ItemParameter, original_Optional1Parameter, original_Optional2Parameter,
                    original_PurPoseParameter, original_QuantityParameter, original_RecordIDParameter,
                    original_RemarksParameter, original_SalesPriceParameter, original_StartDateParameter,
                    original_UsedTimeParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_PurchaseCommunication_AddNew(string communication, string name,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var communicationParameter = communication != null
                ? new ObjectParameter("Communication", communication)
                : new ObjectParameter("Communication", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseCommunication_AddNew",
                communicationParameter, nameParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_PurchaseCommunication_Delete(string original_Communication, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseCommunication_Delete",
                original_CommunicationParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PurchaseCommunication_Select_All_Result>
            Public_PurchaseCommunication_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_PurchaseCommunication_Select_All_Result>(
                        "Public_PurchaseCommunication_Select_All");
        }

        public virtual ObjectResult<Public_PurchaseCommunication_Select_Single_Result>
            Public_PurchaseCommunication_Select_Single(string original_Communication, Nullable<System.Guid> gUID)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_PurchaseCommunication_Select_Single_Result>(
                        "Public_PurchaseCommunication_Select_Single", original_CommunicationParameter, gUIDParameter);
        }

        public virtual int Public_PurchaseCommunication_Update(string communication, string name,
            string original_Communication, string original_Name, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var communicationParameter = communication != null
                ? new ObjectParameter("Communication", communication)
                : new ObjectParameter("Communication", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseCommunication_Update",
                communicationParameter, nameParameter, original_CommunicationParameter, original_NameParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_PurchaseCommunicationStatus_AddNew(string name, string status,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_PurchaseCommunicationStatus_AddNew", nameParameter, statusParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_PurchaseCommunicationStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_PurchaseCommunicationStatus_Delete", original_StatusParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PurchaseCommunicationStatus_Select_All_Result>
            Public_PurchaseCommunicationStatus_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_PurchaseCommunicationStatus_Select_All_Result>(
                        "Public_PurchaseCommunicationStatus_Select_All");
        }

        public virtual ObjectResult<Public_PurchaseCommunicationStatus_Select_Single_Result>
            Public_PurchaseCommunicationStatus_Select_Single(string original_Status, Nullable<System.Guid> gUID)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_PurchaseCommunicationStatus_Select_Single_Result>(
                        "Public_PurchaseCommunicationStatus_Select_Single", original_StatusParameter, gUIDParameter);
        }

        public virtual int Public_PurchaseCommunicationStatus_Update(string name, string status, string original_Name,
            string original_Status, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_PurchaseCommunicationStatus_Update", nameParameter, statusParameter, original_NameParameter,
                    original_StatusParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_PurchaseLine_AddNew(string account, Nullable<short> allowDuty, string batchNo,
            string costCenter, string customsNo, Nullable<double> deliver, Nullable<System.DateTime> delivery,
            string department, string description, Nullable<double> discount, string employee, string externalNo,
            string item, Nullable<short> lineNo, string location, Nullable<double> newSalesPrice, string optional1,
            string optional2, Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> ordered,
            string parameter1, string parameter2, Nullable<double> price, string project, string purchaseNo,
            string purpose, string refOrderNo, string remarksAfter, string remarksBefore, Nullable<bool> selected,
            string tax, string unit, Nullable<double> volume, Nullable<double> weight, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var allowDutyParameter = allowDuty.HasValue
                ? new ObjectParameter("AllowDuty", allowDuty)
                : new ObjectParameter("AllowDuty", typeof(short));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var deliverParameter = deliver.HasValue
                ? new ObjectParameter("Deliver", deliver)
                : new ObjectParameter("Deliver", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var discountParameter = discount.HasValue
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(double));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var externalNoParameter = externalNo != null
                ? new ObjectParameter("ExternalNo", externalNo)
                : new ObjectParameter("ExternalNo", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var newSalesPriceParameter = newSalesPrice.HasValue
                ? new ObjectParameter("NewSalesPrice", newSalesPrice)
                : new ObjectParameter("NewSalesPrice", typeof(double));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var refOrderNoParameter = refOrderNo != null
                ? new ObjectParameter("RefOrderNo", refOrderNo)
                : new ObjectParameter("RefOrderNo", typeof(string));

            var remarksAfterParameter = remarksAfter != null
                ? new ObjectParameter("RemarksAfter", remarksAfter)
                : new ObjectParameter("RemarksAfter", typeof(string));

            var remarksBeforeParameter = remarksBefore != null
                ? new ObjectParameter("RemarksBefore", remarksBefore)
                : new ObjectParameter("RemarksBefore", typeof(string));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseLine_AddNew",
                accountParameter, allowDutyParameter, batchNoParameter, costCenterParameter, customsNoParameter,
                deliverParameter, deliveryParameter, departmentParameter, descriptionParameter, discountParameter,
                employeeParameter, externalNoParameter, itemParameter, lineNoParameter, locationParameter,
                newSalesPriceParameter, optional1Parameter, optional2Parameter, optionalDate1Parameter,
                optionalDate2Parameter, optionalNumber1Parameter, optionalNumber2Parameter, orderedParameter,
                parameter1Parameter, parameter2Parameter, priceParameter, projectParameter, purchaseNoParameter,
                purposeParameter, refOrderNoParameter, remarksAfterParameter, remarksBeforeParameter, selectedParameter,
                taxParameter, unitParameter, volumeParameter, weightParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_PurchaseLine_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseLine_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PurchaseLine_Select_All_Result> Public_PurchaseLine_Select_All(
            string original_PurchaseNo)
        {
            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseLine_Select_All_Result>(
                    "Public_PurchaseLine_Select_All", original_PurchaseNoParameter);
        }

        public virtual ObjectResult<Public_PurchaseLine_Select_Single_Result> Public_PurchaseLine_Select_Single(
            Nullable<int> original_RecordID, Nullable<int> decimals, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var decimalsParameter = decimals.HasValue
                ? new ObjectParameter("Decimals", decimals)
                : new ObjectParameter("Decimals", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseLine_Select_Single_Result>(
                    "Public_PurchaseLine_Select_Single", original_RecordIDParameter, decimalsParameter, gUIDParameter);
        }

        public virtual int Public_PurchaseLine_Update(string account, Nullable<short> allowDuty, string batchNo,
            string costCenter, string customsNo, Nullable<double> deliver, Nullable<System.DateTime> delivery,
            string department, string description, Nullable<double> discount, string employee, string externalNo,
            string item, string location, Nullable<double> newSalesPrice, string optional1, string optional2,
            Nullable<System.DateTime> optionalDate1, Nullable<System.DateTime> optionalDate2,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> ordered,
            string parameter1, string parameter2, Nullable<double> price, string project, string purpose,
            string refOrderNo, string remarksAfter, string remarksBefore, Nullable<bool> selected, string tax,
            string unit, Nullable<double> volume, Nullable<double> weight, string original_Account,
            Nullable<short> original_AllowDuty, string original_BatchNo, string original_CostCenter,
            string original_CustomsNo, Nullable<double> original_Deliver, Nullable<System.DateTime> original_Delivery,
            string original_Department, string original_Description, Nullable<double> original_Discount,
            string original_Employee, string original_ExternalNo, string original_Item, string original_Location,
            Nullable<double> original_NewSalesPrice, string original_Optional1, string original_Optional2,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_Ordered, string original_Parameter1, string original_Parameter2,
            Nullable<double> original_Price, string original_Project, string original_Purpose,
            Nullable<int> original_RecordId, string original_RefOrderNo, string original_RemarksAfter,
            string original_RemarksBefore, Nullable<bool> original_Selected, string original_Tax, string original_Unit,
            Nullable<double> original_Volume, Nullable<double> original_Weight, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var allowDutyParameter = allowDuty.HasValue
                ? new ObjectParameter("AllowDuty", allowDuty)
                : new ObjectParameter("AllowDuty", typeof(short));

            var batchNoParameter = batchNo != null
                ? new ObjectParameter("BatchNo", batchNo)
                : new ObjectParameter("BatchNo", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var customsNoParameter = customsNo != null
                ? new ObjectParameter("CustomsNo", customsNo)
                : new ObjectParameter("CustomsNo", typeof(string));

            var deliverParameter = deliver.HasValue
                ? new ObjectParameter("Deliver", deliver)
                : new ObjectParameter("Deliver", typeof(double));

            var deliveryParameter = delivery.HasValue
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var discountParameter = discount.HasValue
                ? new ObjectParameter("Discount", discount)
                : new ObjectParameter("Discount", typeof(double));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var externalNoParameter = externalNo != null
                ? new ObjectParameter("ExternalNo", externalNo)
                : new ObjectParameter("ExternalNo", typeof(string));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var locationParameter = location != null
                ? new ObjectParameter("Location", location)
                : new ObjectParameter("Location", typeof(string));

            var newSalesPriceParameter = newSalesPrice.HasValue
                ? new ObjectParameter("NewSalesPrice", newSalesPrice)
                : new ObjectParameter("NewSalesPrice", typeof(double));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var optionalDate1Parameter = optionalDate1.HasValue
                ? new ObjectParameter("OptionalDate1", optionalDate1)
                : new ObjectParameter("OptionalDate1", typeof(System.DateTime));

            var optionalDate2Parameter = optionalDate2.HasValue
                ? new ObjectParameter("OptionalDate2", optionalDate2)
                : new ObjectParameter("OptionalDate2", typeof(System.DateTime));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(double));

            var parameter1Parameter = parameter1 != null
                ? new ObjectParameter("Parameter1", parameter1)
                : new ObjectParameter("Parameter1", typeof(string));

            var parameter2Parameter = parameter2 != null
                ? new ObjectParameter("Parameter2", parameter2)
                : new ObjectParameter("Parameter2", typeof(string));

            var priceParameter = price.HasValue
                ? new ObjectParameter("Price", price)
                : new ObjectParameter("Price", typeof(double));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var refOrderNoParameter = refOrderNo != null
                ? new ObjectParameter("RefOrderNo", refOrderNo)
                : new ObjectParameter("RefOrderNo", typeof(string));

            var remarksAfterParameter = remarksAfter != null
                ? new ObjectParameter("RemarksAfter", remarksAfter)
                : new ObjectParameter("RemarksAfter", typeof(string));

            var remarksBeforeParameter = remarksBefore != null
                ? new ObjectParameter("RemarksBefore", remarksBefore)
                : new ObjectParameter("RemarksBefore", typeof(string));

            var selectedParameter = selected.HasValue
                ? new ObjectParameter("Selected", selected)
                : new ObjectParameter("Selected", typeof(bool));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var volumeParameter = volume.HasValue
                ? new ObjectParameter("Volume", volume)
                : new ObjectParameter("Volume", typeof(double));

            var weightParameter = weight.HasValue
                ? new ObjectParameter("Weight", weight)
                : new ObjectParameter("Weight", typeof(double));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AllowDutyParameter = original_AllowDuty.HasValue
                ? new ObjectParameter("Original_AllowDuty", original_AllowDuty)
                : new ObjectParameter("Original_AllowDuty", typeof(short));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DeliverParameter = original_Deliver.HasValue
                ? new ObjectParameter("Original_Deliver", original_Deliver)
                : new ObjectParameter("Original_Deliver", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DiscountParameter = original_Discount.HasValue
                ? new ObjectParameter("Original_Discount", original_Discount)
                : new ObjectParameter("Original_Discount", typeof(double));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ExternalNoParameter = original_ExternalNo != null
                ? new ObjectParameter("Original_ExternalNo", original_ExternalNo)
                : new ObjectParameter("Original_ExternalNo", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_NewSalesPriceParameter = original_NewSalesPrice.HasValue
                ? new ObjectParameter("Original_NewSalesPrice", original_NewSalesPrice)
                : new ObjectParameter("Original_NewSalesPrice", typeof(double));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RefOrderNoParameter = original_RefOrderNo != null
                ? new ObjectParameter("Original_RefOrderNo", original_RefOrderNo)
                : new ObjectParameter("Original_RefOrderNo", typeof(string));

            var original_RemarksAfterParameter = original_RemarksAfter != null
                ? new ObjectParameter("Original_RemarksAfter", original_RemarksAfter)
                : new ObjectParameter("Original_RemarksAfter", typeof(string));

            var original_RemarksBeforeParameter = original_RemarksBefore != null
                ? new ObjectParameter("Original_RemarksBefore", original_RemarksBefore)
                : new ObjectParameter("Original_RemarksBefore", typeof(string));

            var original_SelectedParameter = original_Selected.HasValue
                ? new ObjectParameter("Original_Selected", original_Selected)
                : new ObjectParameter("Original_Selected", typeof(bool));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(double));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseLine_Update",
                accountParameter, allowDutyParameter, batchNoParameter, costCenterParameter, customsNoParameter,
                deliverParameter, deliveryParameter, departmentParameter, descriptionParameter, discountParameter,
                employeeParameter, externalNoParameter, itemParameter, locationParameter, newSalesPriceParameter,
                optional1Parameter, optional2Parameter, optionalDate1Parameter, optionalDate2Parameter,
                optionalNumber1Parameter, optionalNumber2Parameter, orderedParameter, parameter1Parameter,
                parameter2Parameter, priceParameter, projectParameter, purposeParameter, refOrderNoParameter,
                remarksAfterParameter, remarksBeforeParameter, selectedParameter, taxParameter, unitParameter,
                volumeParameter, weightParameter, original_AccountParameter, original_AllowDutyParameter,
                original_BatchNoParameter, original_CostCenterParameter, original_CustomsNoParameter,
                original_DeliverParameter, original_DeliveryParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DiscountParameter, original_EmployeeParameter,
                original_ExternalNoParameter, original_ItemParameter, original_LocationParameter,
                original_NewSalesPriceParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_OptionalDate1Parameter, original_OptionalDate2Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OrderedParameter, original_Parameter1Parameter,
                original_Parameter2Parameter, original_PriceParameter, original_ProjectParameter,
                original_PurposeParameter, original_RecordIdParameter, original_RefOrderNoParameter,
                original_RemarksAfterParameter, original_RemarksBeforeParameter, original_SelectedParameter,
                original_TaxParameter, original_UnitParameter, original_VolumeParameter, original_WeightParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Purchases_AddNew_Result> Public_Purchases_AddNew(string address1,
            string address2, string address3, string agent, Nullable<bool> approvedBy1, Nullable<bool> approvedBy2,
            Nullable<bool> approvedBy3, string betalingsID, string buyer, string cashDiscount, string category,
            string city, string cityName, string contact, string costCenter, Nullable<double> costPercent,
            Nullable<byte> costPercentDistribution, string costPercentPurchases, string country, string currency,
            string delivery, Nullable<System.DateTime> deliveryDate, Nullable<short> deliveryWeek, string department,
            Nullable<System.DateTime> due, string eDILocationNr, Nullable<short> eECCountry, Nullable<byte> eECTransCode,
            Nullable<double> endDisc, Nullable<double> endDiscPct, Nullable<double> excise, Nullable<double> exciseBase,
            string internalRemarks, Nullable<System.DateTime> invoiceDate, string invoiceNo,
            Nullable<byte> isLiableToPayTax, string kortArt, string language, string lEANCustomersReference,
            string lEANShipReference, Nullable<bool> lEANTest, string name, Nullable<short> optional1,
            Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5,
            Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, Nullable<short> ordered, string ourAccount, string payment,
            string postalCode, string priceList, string project, string purchaseCommunication,
            string purchaseCommunicationStatus, Nullable<System.DateTime> purchaseDate, string purchaseNo,
            string purchaseText, string purpose, Nullable<double> rate, string recvNo, string remarks, string reports,
            Nullable<double> roundedAmount, string ship1, string ship2, string ship3, string ship4, string ship5,
            string ship6, string ship7, string shipCityName, string shipFrom, string shipPostalCode, string shipTo,
            string status, string supplier, string tax, string taxNo, Nullable<double> vatFee,
            Nullable<double> vatFeeBase, Nullable<double> vatFreeFee, Nullable<double> vatFreeFeeBase, string warehouse,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var approvedBy1Parameter = approvedBy1.HasValue
                ? new ObjectParameter("ApprovedBy1", approvedBy1)
                : new ObjectParameter("ApprovedBy1", typeof(bool));

            var approvedBy2Parameter = approvedBy2.HasValue
                ? new ObjectParameter("ApprovedBy2", approvedBy2)
                : new ObjectParameter("ApprovedBy2", typeof(bool));

            var approvedBy3Parameter = approvedBy3.HasValue
                ? new ObjectParameter("ApprovedBy3", approvedBy3)
                : new ObjectParameter("ApprovedBy3", typeof(bool));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var buyerParameter = buyer != null
                ? new ObjectParameter("Buyer", buyer)
                : new ObjectParameter("Buyer", typeof(string));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var cityNameParameter = cityName != null
                ? new ObjectParameter("CityName", cityName)
                : new ObjectParameter("CityName", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPercentParameter = costPercent.HasValue
                ? new ObjectParameter("CostPercent", costPercent)
                : new ObjectParameter("CostPercent", typeof(double));

            var costPercentDistributionParameter = costPercentDistribution.HasValue
                ? new ObjectParameter("CostPercentDistribution", costPercentDistribution)
                : new ObjectParameter("CostPercentDistribution", typeof(byte));

            var costPercentPurchasesParameter = costPercentPurchases != null
                ? new ObjectParameter("CostPercentPurchases", costPercentPurchases)
                : new ObjectParameter("CostPercentPurchases", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var deliveryDateParameter = deliveryDate.HasValue
                ? new ObjectParameter("DeliveryDate", deliveryDate)
                : new ObjectParameter("DeliveryDate", typeof(System.DateTime));

            var deliveryWeekParameter = deliveryWeek.HasValue
                ? new ObjectParameter("DeliveryWeek", deliveryWeek)
                : new ObjectParameter("DeliveryWeek", typeof(short));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var endDiscParameter = endDisc.HasValue
                ? new ObjectParameter("EndDisc", endDisc)
                : new ObjectParameter("EndDisc", typeof(double));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var exciseParameter = excise.HasValue
                ? new ObjectParameter("Excise", excise)
                : new ObjectParameter("Excise", typeof(double));

            var exciseBaseParameter = exciseBase.HasValue
                ? new ObjectParameter("ExciseBase", exciseBase)
                : new ObjectParameter("ExciseBase", typeof(double));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var invoiceDateParameter = invoiceDate.HasValue
                ? new ObjectParameter("InvoiceDate", invoiceDate)
                : new ObjectParameter("InvoiceDate", typeof(System.DateTime));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var lEANCustomersReferenceParameter = lEANCustomersReference != null
                ? new ObjectParameter("LEANCustomersReference", lEANCustomersReference)
                : new ObjectParameter("LEANCustomersReference", typeof(string));

            var lEANShipReferenceParameter = lEANShipReference != null
                ? new ObjectParameter("LEANShipReference", lEANShipReference)
                : new ObjectParameter("LEANShipReference", typeof(string));

            var lEANTestParameter = lEANTest.HasValue
                ? new ObjectParameter("LEANTest", lEANTest)
                : new ObjectParameter("LEANTest", typeof(bool));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(short));

            var ourAccountParameter = ourAccount != null
                ? new ObjectParameter("OurAccount", ourAccount)
                : new ObjectParameter("OurAccount", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purchaseCommunicationStatusParameter = purchaseCommunicationStatus != null
                ? new ObjectParameter("PurchaseCommunicationStatus", purchaseCommunicationStatus)
                : new ObjectParameter("PurchaseCommunicationStatus", typeof(string));

            var purchaseDateParameter = purchaseDate.HasValue
                ? new ObjectParameter("PurchaseDate", purchaseDate)
                : new ObjectParameter("PurchaseDate", typeof(System.DateTime));

            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var purchaseTextParameter = purchaseText != null
                ? new ObjectParameter("PurchaseText", purchaseText)
                : new ObjectParameter("PurchaseText", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var roundedAmountParameter = roundedAmount.HasValue
                ? new ObjectParameter("RoundedAmount", roundedAmount)
                : new ObjectParameter("RoundedAmount", typeof(double));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipFromParameter = shipFrom != null
                ? new ObjectParameter("ShipFrom", shipFrom)
                : new ObjectParameter("ShipFrom", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var vatFeeParameter = vatFee.HasValue
                ? new ObjectParameter("VatFee", vatFee)
                : new ObjectParameter("VatFee", typeof(double));

            var vatFeeBaseParameter = vatFeeBase.HasValue
                ? new ObjectParameter("VatFeeBase", vatFeeBase)
                : new ObjectParameter("VatFeeBase", typeof(double));

            var vatFreeFeeParameter = vatFreeFee.HasValue
                ? new ObjectParameter("VatFreeFee", vatFreeFee)
                : new ObjectParameter("VatFreeFee", typeof(double));

            var vatFreeFeeBaseParameter = vatFreeFeeBase.HasValue
                ? new ObjectParameter("VatFreeFeeBase", vatFreeFeeBase)
                : new ObjectParameter("VatFreeFeeBase", typeof(double));

            var warehouseParameter = warehouse != null
                ? new ObjectParameter("Warehouse", warehouse)
                : new ObjectParameter("Warehouse", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purchases_AddNew_Result>(
                    "Public_Purchases_AddNew", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    approvedBy1Parameter, approvedBy2Parameter, approvedBy3Parameter, betalingsIDParameter,
                    buyerParameter, cashDiscountParameter, categoryParameter, cityParameter, cityNameParameter,
                    contactParameter, costCenterParameter, costPercentParameter, costPercentDistributionParameter,
                    costPercentPurchasesParameter, countryParameter, currencyParameter, deliveryParameter,
                    deliveryDateParameter, deliveryWeekParameter, departmentParameter, dueParameter,
                    eDILocationNrParameter, eECCountryParameter, eECTransCodeParameter, endDiscParameter,
                    endDiscPctParameter, exciseParameter, exciseBaseParameter, internalRemarksParameter,
                    invoiceDateParameter, invoiceNoParameter, isLiableToPayTaxParameter, kortArtParameter,
                    languageParameter, lEANCustomersReferenceParameter, lEANShipReferenceParameter, lEANTestParameter,
                    nameParameter, optional1Parameter, optional2Parameter, optional3Parameter, optional4Parameter,
                    optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter,
                    optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                    optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                    optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                    optionalText7Parameter, optionalText8Parameter, orderedParameter, ourAccountParameter,
                    paymentParameter, postalCodeParameter, priceListParameter, projectParameter,
                    purchaseCommunicationParameter, purchaseCommunicationStatusParameter, purchaseDateParameter,
                    purchaseNoParameter, purchaseTextParameter, purposeParameter, rateParameter, recvNoParameter,
                    remarksParameter, reportsParameter, roundedAmountParameter, ship1Parameter, ship2Parameter,
                    ship3Parameter, ship4Parameter, ship5Parameter, ship6Parameter, ship7Parameter,
                    shipCityNameParameter, shipFromParameter, shipPostalCodeParameter, shipToParameter, statusParameter,
                    supplierParameter, taxParameter, taxNoParameter, vatFeeParameter, vatFeeBaseParameter,
                    vatFreeFeeParameter, vatFreeFeeBaseParameter, warehouseParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Purchases_Delete(string original_PurchaseNo, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Purchases_Delete",
                original_PurchaseNoParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Purchases_Select_All_Result> Public_Purchases_Select_All(
            Nullable<bool> openPurchases)
        {
            var openPurchasesParameter = openPurchases.HasValue
                ? new ObjectParameter("OpenPurchases", openPurchases)
                : new ObjectParameter("OpenPurchases", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purchases_Select_All_Result>(
                    "Public_Purchases_Select_All", openPurchasesParameter);
        }

        public virtual ObjectResult<Public_Purchases_Select_Single_Result> Public_Purchases_Select_Single(
            string original_PurchaseNo, Nullable<double> original_Trail, Nullable<System.Guid> gUID)
        {
            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purchases_Select_Single_Result>(
                    "Public_Purchases_Select_Single", original_PurchaseNoParameter, original_TrailParameter,
                    gUIDParameter);
        }

        public virtual int Public_Purchases_Update(string address1, string address2, string address3, string agent,
            Nullable<bool> approvedBy1, Nullable<bool> approvedBy2, Nullable<bool> approvedBy3, string betalingsID,
            string buyer, string cashDiscount, string category, string city, string cityName, string contact,
            string costCenter, Nullable<double> costPercent, Nullable<byte> costPercentDistribution,
            string costPercentPurchases, string country, string currency, string delivery,
            Nullable<System.DateTime> deliveryDate, Nullable<short> deliveryWeek, string department,
            Nullable<System.DateTime> due, string eDILocationNr, Nullable<short> eECCountry, Nullable<byte> eECTransCode,
            Nullable<double> endDisc, Nullable<double> endDiscPct, Nullable<double> excise, Nullable<double> exciseBase,
            string internalRemarks, Nullable<System.DateTime> invoiceDate, string invoiceNo,
            Nullable<byte> isLiableToPayTax, string kortArt, string language, string lEANCustomersReference,
            string lEANShipReference, Nullable<bool> lEANTest, string name, Nullable<short> optional1,
            Nullable<short> optional2, Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5,
            Nullable<short> optional6, Nullable<short> optional7, Nullable<short> optional8,
            Nullable<double> optionalNumber1, Nullable<double> optionalNumber2, Nullable<double> optionalNumber3,
            Nullable<double> optionalNumber4, Nullable<double> optionalNumber5, Nullable<double> optionalNumber6,
            Nullable<double> optionalNumber7, Nullable<double> optionalNumber8, string optionalText1,
            string optionalText2, string optionalText3, string optionalText4, string optionalText5, string optionalText6,
            string optionalText7, string optionalText8, Nullable<short> ordered, string ourAccount, string payment,
            string postalCode, string priceList, string project, string purchaseCommunication,
            string purchaseCommunicationStatus, Nullable<System.DateTime> purchaseDate, string purchaseText,
            string purpose, Nullable<double> rate, string recvNo, string remarks, string reports,
            Nullable<double> roundedAmount, string ship1, string ship2, string ship3, string ship4, string ship5,
            string ship6, string ship7, string shipCityName, string shipFrom, string shipPostalCode, string shipTo,
            string status, string supplier, string tax, string taxNo, Nullable<double> vatFee,
            Nullable<double> vatFeeBase, Nullable<double> vatFreeFee, Nullable<double> vatFreeFeeBase, string warehouse,
            string original_Address1, string original_Address2, string original_Address3, string original_Agent,
            Nullable<bool> original_ApprovedBy1, Nullable<bool> original_ApprovedBy2,
            Nullable<bool> original_ApprovedBy3, string original_BetalingsID, string original_Buyer,
            string original_CashDiscount, string original_Category, string original_City, string original_CityName,
            string original_Contact, string original_CostCenter, Nullable<double> original_CostPercent,
            Nullable<byte> original_CostPercentDistribution, string original_CostPercentPurchases,
            string original_Country, string original_Currency, string original_Delivery,
            Nullable<System.DateTime> original_DeliveryDate, Nullable<short> original_DeliveryWeek,
            string original_Department, Nullable<System.DateTime> original_Due, string original_EDILocationNr,
            Nullable<short> original_EECCountry, Nullable<byte> original_EECTransCode, Nullable<double> original_EndDisc,
            Nullable<double> original_EndDiscPct, Nullable<double> original_Excise, Nullable<double> original_ExciseBase,
            string original_InternalRemarks, Nullable<System.DateTime> original_InvoiceDate, string original_InvoiceNo,
            Nullable<byte> original_IsLiableToPayTax, string original_KortArt, string original_Language,
            string original_LEANCustomersReference, string original_LEANShipReference, Nullable<bool> original_LEANTest,
            string original_Name, Nullable<short> original_Optional1, Nullable<short> original_Optional2,
            Nullable<short> original_Optional3, Nullable<short> original_Optional4, Nullable<short> original_Optional5,
            Nullable<short> original_Optional6, Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, Nullable<short> original_Ordered,
            string original_OurAccount, string original_Payment, string original_PostalCode, string original_PriceList,
            string original_Project, string original_PurchaseCommunication, string original_PurchaseCommunicationStatus,
            Nullable<System.DateTime> original_PurchaseDate, string original_PurchaseNo, string original_PurchaseText,
            string original_Purpose, Nullable<double> original_Rate, string original_RecvNo, string original_Remarks,
            string original_Reports, Nullable<double> original_RoundedAmount, string original_Ship1,
            string original_Ship2, string original_Ship3, string original_Ship4, string original_Ship5,
            string original_Ship6, string original_Ship7, string original_ShipCityName, string original_ShipFrom,
            string original_ShipPostalCode, string original_ShipTo, string original_Status, string original_Supplier,
            string original_Tax, string original_TaxNo, Nullable<double> original_VatFee,
            Nullable<double> original_VatFeeBase, Nullable<double> original_VatFreeFee,
            Nullable<double> original_VatFreeFeeBase, string original_Warehouse, Nullable<bool> updateChangedInLines,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var approvedBy1Parameter = approvedBy1.HasValue
                ? new ObjectParameter("ApprovedBy1", approvedBy1)
                : new ObjectParameter("ApprovedBy1", typeof(bool));

            var approvedBy2Parameter = approvedBy2.HasValue
                ? new ObjectParameter("ApprovedBy2", approvedBy2)
                : new ObjectParameter("ApprovedBy2", typeof(bool));

            var approvedBy3Parameter = approvedBy3.HasValue
                ? new ObjectParameter("ApprovedBy3", approvedBy3)
                : new ObjectParameter("ApprovedBy3", typeof(bool));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var buyerParameter = buyer != null
                ? new ObjectParameter("Buyer", buyer)
                : new ObjectParameter("Buyer", typeof(string));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var cityNameParameter = cityName != null
                ? new ObjectParameter("CityName", cityName)
                : new ObjectParameter("CityName", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var costPercentParameter = costPercent.HasValue
                ? new ObjectParameter("CostPercent", costPercent)
                : new ObjectParameter("CostPercent", typeof(double));

            var costPercentDistributionParameter = costPercentDistribution.HasValue
                ? new ObjectParameter("CostPercentDistribution", costPercentDistribution)
                : new ObjectParameter("CostPercentDistribution", typeof(byte));

            var costPercentPurchasesParameter = costPercentPurchases != null
                ? new ObjectParameter("CostPercentPurchases", costPercentPurchases)
                : new ObjectParameter("CostPercentPurchases", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var deliveryDateParameter = deliveryDate.HasValue
                ? new ObjectParameter("DeliveryDate", deliveryDate)
                : new ObjectParameter("DeliveryDate", typeof(System.DateTime));

            var deliveryWeekParameter = deliveryWeek.HasValue
                ? new ObjectParameter("DeliveryWeek", deliveryWeek)
                : new ObjectParameter("DeliveryWeek", typeof(short));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var endDiscParameter = endDisc.HasValue
                ? new ObjectParameter("EndDisc", endDisc)
                : new ObjectParameter("EndDisc", typeof(double));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var exciseParameter = excise.HasValue
                ? new ObjectParameter("Excise", excise)
                : new ObjectParameter("Excise", typeof(double));

            var exciseBaseParameter = exciseBase.HasValue
                ? new ObjectParameter("ExciseBase", exciseBase)
                : new ObjectParameter("ExciseBase", typeof(double));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var invoiceDateParameter = invoiceDate.HasValue
                ? new ObjectParameter("InvoiceDate", invoiceDate)
                : new ObjectParameter("InvoiceDate", typeof(System.DateTime));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var lEANCustomersReferenceParameter = lEANCustomersReference != null
                ? new ObjectParameter("LEANCustomersReference", lEANCustomersReference)
                : new ObjectParameter("LEANCustomersReference", typeof(string));

            var lEANShipReferenceParameter = lEANShipReference != null
                ? new ObjectParameter("LEANShipReference", lEANShipReference)
                : new ObjectParameter("LEANShipReference", typeof(string));

            var lEANTestParameter = lEANTest.HasValue
                ? new ObjectParameter("LEANTest", lEANTest)
                : new ObjectParameter("LEANTest", typeof(bool));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(short));

            var ourAccountParameter = ourAccount != null
                ? new ObjectParameter("OurAccount", ourAccount)
                : new ObjectParameter("OurAccount", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purchaseCommunicationStatusParameter = purchaseCommunicationStatus != null
                ? new ObjectParameter("PurchaseCommunicationStatus", purchaseCommunicationStatus)
                : new ObjectParameter("PurchaseCommunicationStatus", typeof(string));

            var purchaseDateParameter = purchaseDate.HasValue
                ? new ObjectParameter("PurchaseDate", purchaseDate)
                : new ObjectParameter("PurchaseDate", typeof(System.DateTime));

            var purchaseTextParameter = purchaseText != null
                ? new ObjectParameter("PurchaseText", purchaseText)
                : new ObjectParameter("PurchaseText", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var recvNoParameter = recvNo != null
                ? new ObjectParameter("RecvNo", recvNo)
                : new ObjectParameter("RecvNo", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var roundedAmountParameter = roundedAmount.HasValue
                ? new ObjectParameter("RoundedAmount", roundedAmount)
                : new ObjectParameter("RoundedAmount", typeof(double));

            var ship1Parameter = ship1 != null
                ? new ObjectParameter("Ship1", ship1)
                : new ObjectParameter("Ship1", typeof(string));

            var ship2Parameter = ship2 != null
                ? new ObjectParameter("Ship2", ship2)
                : new ObjectParameter("Ship2", typeof(string));

            var ship3Parameter = ship3 != null
                ? new ObjectParameter("Ship3", ship3)
                : new ObjectParameter("Ship3", typeof(string));

            var ship4Parameter = ship4 != null
                ? new ObjectParameter("Ship4", ship4)
                : new ObjectParameter("Ship4", typeof(string));

            var ship5Parameter = ship5 != null
                ? new ObjectParameter("Ship5", ship5)
                : new ObjectParameter("Ship5", typeof(string));

            var ship6Parameter = ship6 != null
                ? new ObjectParameter("Ship6", ship6)
                : new ObjectParameter("Ship6", typeof(string));

            var ship7Parameter = ship7 != null
                ? new ObjectParameter("Ship7", ship7)
                : new ObjectParameter("Ship7", typeof(string));

            var shipCityNameParameter = shipCityName != null
                ? new ObjectParameter("ShipCityName", shipCityName)
                : new ObjectParameter("ShipCityName", typeof(string));

            var shipFromParameter = shipFrom != null
                ? new ObjectParameter("ShipFrom", shipFrom)
                : new ObjectParameter("ShipFrom", typeof(string));

            var shipPostalCodeParameter = shipPostalCode != null
                ? new ObjectParameter("ShipPostalCode", shipPostalCode)
                : new ObjectParameter("ShipPostalCode", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var vatFeeParameter = vatFee.HasValue
                ? new ObjectParameter("VatFee", vatFee)
                : new ObjectParameter("VatFee", typeof(double));

            var vatFeeBaseParameter = vatFeeBase.HasValue
                ? new ObjectParameter("VatFeeBase", vatFeeBase)
                : new ObjectParameter("VatFeeBase", typeof(double));

            var vatFreeFeeParameter = vatFreeFee.HasValue
                ? new ObjectParameter("VatFreeFee", vatFreeFee)
                : new ObjectParameter("VatFreeFee", typeof(double));

            var vatFreeFeeBaseParameter = vatFreeFeeBase.HasValue
                ? new ObjectParameter("VatFreeFeeBase", vatFreeFeeBase)
                : new ObjectParameter("VatFreeFeeBase", typeof(double));

            var warehouseParameter = warehouse != null
                ? new ObjectParameter("Warehouse", warehouse)
                : new ObjectParameter("Warehouse", typeof(string));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_ApprovedBy1Parameter = original_ApprovedBy1.HasValue
                ? new ObjectParameter("Original_ApprovedBy1", original_ApprovedBy1)
                : new ObjectParameter("Original_ApprovedBy1", typeof(bool));

            var original_ApprovedBy2Parameter = original_ApprovedBy2.HasValue
                ? new ObjectParameter("Original_ApprovedBy2", original_ApprovedBy2)
                : new ObjectParameter("Original_ApprovedBy2", typeof(bool));

            var original_ApprovedBy3Parameter = original_ApprovedBy3.HasValue
                ? new ObjectParameter("Original_ApprovedBy3", original_ApprovedBy3)
                : new ObjectParameter("Original_ApprovedBy3", typeof(bool));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_BuyerParameter = original_Buyer != null
                ? new ObjectParameter("Original_Buyer", original_Buyer)
                : new ObjectParameter("Original_Buyer", typeof(string));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CityNameParameter = original_CityName != null
                ? new ObjectParameter("Original_CityName", original_CityName)
                : new ObjectParameter("Original_CityName", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPercentParameter = original_CostPercent.HasValue
                ? new ObjectParameter("Original_CostPercent", original_CostPercent)
                : new ObjectParameter("Original_CostPercent", typeof(double));

            var original_CostPercentDistributionParameter = original_CostPercentDistribution.HasValue
                ? new ObjectParameter("Original_CostPercentDistribution", original_CostPercentDistribution)
                : new ObjectParameter("Original_CostPercentDistribution", typeof(byte));

            var original_CostPercentPurchasesParameter = original_CostPercentPurchases != null
                ? new ObjectParameter("Original_CostPercentPurchases", original_CostPercentPurchases)
                : new ObjectParameter("Original_CostPercentPurchases", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DeliveryDateParameter = original_DeliveryDate.HasValue
                ? new ObjectParameter("Original_DeliveryDate", original_DeliveryDate)
                : new ObjectParameter("Original_DeliveryDate", typeof(System.DateTime));

            var original_DeliveryWeekParameter = original_DeliveryWeek.HasValue
                ? new ObjectParameter("Original_DeliveryWeek", original_DeliveryWeek)
                : new ObjectParameter("Original_DeliveryWeek", typeof(short));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EndDiscParameter = original_EndDisc.HasValue
                ? new ObjectParameter("Original_EndDisc", original_EndDisc)
                : new ObjectParameter("Original_EndDisc", typeof(double));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExciseParameter = original_Excise.HasValue
                ? new ObjectParameter("Original_Excise", original_Excise)
                : new ObjectParameter("Original_Excise", typeof(double));

            var original_ExciseBaseParameter = original_ExciseBase.HasValue
                ? new ObjectParameter("Original_ExciseBase", original_ExciseBase)
                : new ObjectParameter("Original_ExciseBase", typeof(double));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InvoiceDateParameter = original_InvoiceDate.HasValue
                ? new ObjectParameter("Original_InvoiceDate", original_InvoiceDate)
                : new ObjectParameter("Original_InvoiceDate", typeof(System.DateTime));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_LEANCustomersReferenceParameter = original_LEANCustomersReference != null
                ? new ObjectParameter("Original_LEANCustomersReference", original_LEANCustomersReference)
                : new ObjectParameter("Original_LEANCustomersReference", typeof(string));

            var original_LEANShipReferenceParameter = original_LEANShipReference != null
                ? new ObjectParameter("Original_LEANShipReference", original_LEANShipReference)
                : new ObjectParameter("Original_LEANShipReference", typeof(string));

            var original_LEANTestParameter = original_LEANTest.HasValue
                ? new ObjectParameter("Original_LEANTest", original_LEANTest)
                : new ObjectParameter("Original_LEANTest", typeof(bool));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(short));

            var original_OurAccountParameter = original_OurAccount != null
                ? new ObjectParameter("Original_OurAccount", original_OurAccount)
                : new ObjectParameter("Original_OurAccount", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurchaseCommunicationParameter = original_PurchaseCommunication != null
                ? new ObjectParameter("Original_PurchaseCommunication", original_PurchaseCommunication)
                : new ObjectParameter("Original_PurchaseCommunication", typeof(string));

            var original_PurchaseCommunicationStatusParameter = original_PurchaseCommunicationStatus != null
                ? new ObjectParameter("Original_PurchaseCommunicationStatus", original_PurchaseCommunicationStatus)
                : new ObjectParameter("Original_PurchaseCommunicationStatus", typeof(string));

            var original_PurchaseDateParameter = original_PurchaseDate.HasValue
                ? new ObjectParameter("Original_PurchaseDate", original_PurchaseDate)
                : new ObjectParameter("Original_PurchaseDate", typeof(System.DateTime));

            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var original_PurchaseTextParameter = original_PurchaseText != null
                ? new ObjectParameter("Original_PurchaseText", original_PurchaseText)
                : new ObjectParameter("Original_PurchaseText", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_RoundedAmountParameter = original_RoundedAmount.HasValue
                ? new ObjectParameter("Original_RoundedAmount", original_RoundedAmount)
                : new ObjectParameter("Original_RoundedAmount", typeof(double));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship4Parameter = original_Ship4 != null
                ? new ObjectParameter("Original_Ship4", original_Ship4)
                : new ObjectParameter("Original_Ship4", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipFromParameter = original_ShipFrom != null
                ? new ObjectParameter("Original_ShipFrom", original_ShipFrom)
                : new ObjectParameter("Original_ShipFrom", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var original_VatFeeParameter = original_VatFee.HasValue
                ? new ObjectParameter("Original_VatFee", original_VatFee)
                : new ObjectParameter("Original_VatFee", typeof(double));

            var original_VatFeeBaseParameter = original_VatFeeBase.HasValue
                ? new ObjectParameter("Original_VatFeeBase", original_VatFeeBase)
                : new ObjectParameter("Original_VatFeeBase", typeof(double));

            var original_VatFreeFeeParameter = original_VatFreeFee.HasValue
                ? new ObjectParameter("Original_VatFreeFee", original_VatFreeFee)
                : new ObjectParameter("Original_VatFreeFee", typeof(double));

            var original_VatFreeFeeBaseParameter = original_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Original_VatFreeFeeBase", original_VatFreeFeeBase)
                : new ObjectParameter("Original_VatFreeFeeBase", typeof(double));

            var original_WarehouseParameter = original_Warehouse != null
                ? new ObjectParameter("Original_Warehouse", original_Warehouse)
                : new ObjectParameter("Original_Warehouse", typeof(string));

            var updateChangedInLinesParameter = updateChangedInLines.HasValue
                ? new ObjectParameter("UpdateChangedInLines", updateChangedInLines)
                : new ObjectParameter("UpdateChangedInLines", typeof(bool));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Purchases_Update",
                address1Parameter, address2Parameter, address3Parameter, agentParameter, approvedBy1Parameter,
                approvedBy2Parameter, approvedBy3Parameter, betalingsIDParameter, buyerParameter, cashDiscountParameter,
                categoryParameter, cityParameter, cityNameParameter, contactParameter, costCenterParameter,
                costPercentParameter, costPercentDistributionParameter, costPercentPurchasesParameter, countryParameter,
                currencyParameter, deliveryParameter, deliveryDateParameter, deliveryWeekParameter, departmentParameter,
                dueParameter, eDILocationNrParameter, eECCountryParameter, eECTransCodeParameter, endDiscParameter,
                endDiscPctParameter, exciseParameter, exciseBaseParameter, internalRemarksParameter,
                invoiceDateParameter, invoiceNoParameter, isLiableToPayTaxParameter, kortArtParameter, languageParameter,
                lEANCustomersReferenceParameter, lEANShipReferenceParameter, lEANTestParameter, nameParameter,
                optional1Parameter, optional2Parameter, optional3Parameter, optional4Parameter, optional5Parameter,
                optional6Parameter, optional7Parameter, optional8Parameter, optionalNumber1Parameter,
                optionalNumber2Parameter, optionalNumber3Parameter, optionalNumber4Parameter, optionalNumber5Parameter,
                optionalNumber6Parameter, optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter,
                optionalText2Parameter, optionalText3Parameter, optionalText4Parameter, optionalText5Parameter,
                optionalText6Parameter, optionalText7Parameter, optionalText8Parameter, orderedParameter,
                ourAccountParameter, paymentParameter, postalCodeParameter, priceListParameter, projectParameter,
                purchaseCommunicationParameter, purchaseCommunicationStatusParameter, purchaseDateParameter,
                purchaseTextParameter, purposeParameter, rateParameter, recvNoParameter, remarksParameter,
                reportsParameter, roundedAmountParameter, ship1Parameter, ship2Parameter, ship3Parameter, ship4Parameter,
                ship5Parameter, ship6Parameter, ship7Parameter, shipCityNameParameter, shipFromParameter,
                shipPostalCodeParameter, shipToParameter, statusParameter, supplierParameter, taxParameter,
                taxNoParameter, vatFeeParameter, vatFeeBaseParameter, vatFreeFeeParameter, vatFreeFeeBaseParameter,
                warehouseParameter, original_Address1Parameter, original_Address2Parameter, original_Address3Parameter,
                original_AgentParameter, original_ApprovedBy1Parameter, original_ApprovedBy2Parameter,
                original_ApprovedBy3Parameter, original_BetalingsIDParameter, original_BuyerParameter,
                original_CashDiscountParameter, original_CategoryParameter, original_CityParameter,
                original_CityNameParameter, original_ContactParameter, original_CostCenterParameter,
                original_CostPercentParameter, original_CostPercentDistributionParameter,
                original_CostPercentPurchasesParameter, original_CountryParameter, original_CurrencyParameter,
                original_DeliveryParameter, original_DeliveryDateParameter, original_DeliveryWeekParameter,
                original_DepartmentParameter, original_DueParameter, original_EDILocationNrParameter,
                original_EECCountryParameter, original_EECTransCodeParameter, original_EndDiscParameter,
                original_EndDiscPctParameter, original_ExciseParameter, original_ExciseBaseParameter,
                original_InternalRemarksParameter, original_InvoiceDateParameter, original_InvoiceNoParameter,
                original_IsLiableToPayTaxParameter, original_KortArtParameter, original_LanguageParameter,
                original_LEANCustomersReferenceParameter, original_LEANShipReferenceParameter,
                original_LEANTestParameter, original_NameParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_Optional3Parameter, original_Optional4Parameter,
                original_Optional5Parameter, original_Optional6Parameter, original_Optional7Parameter,
                original_Optional8Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OptionalNumber3Parameter, original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                original_OptionalNumber6Parameter, original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                original_OptionalText7Parameter, original_OptionalText8Parameter, original_OrderedParameter,
                original_OurAccountParameter, original_PaymentParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_PurchaseCommunicationParameter,
                original_PurchaseCommunicationStatusParameter, original_PurchaseDateParameter,
                original_PurchaseNoParameter, original_PurchaseTextParameter, original_PurposeParameter,
                original_RateParameter, original_RecvNoParameter, original_RemarksParameter, original_ReportsParameter,
                original_RoundedAmountParameter, original_Ship1Parameter, original_Ship2Parameter,
                original_Ship3Parameter, original_Ship4Parameter, original_Ship5Parameter, original_Ship6Parameter,
                original_Ship7Parameter, original_ShipCityNameParameter, original_ShipFromParameter,
                original_ShipPostalCodeParameter, original_ShipToParameter, original_StatusParameter,
                original_SupplierParameter, original_TaxParameter, original_TaxNoParameter, original_VatFeeParameter,
                original_VatFeeBaseParameter, original_VatFreeFeeParameter, original_VatFreeFeeBaseParameter,
                original_WarehouseParameter, updateChangedInLinesParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PurchaseStatus_AddNew_Result> Public_PurchaseStatus_AddNew(
            string description, Nullable<short> needSerialNo, string remarks, Nullable<bool> showInStatus, string status,
            Nullable<short> totalAmountView, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var needSerialNoParameter = needSerialNo.HasValue
                ? new ObjectParameter("NeedSerialNo", needSerialNo)
                : new ObjectParameter("NeedSerialNo", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInStatusParameter = showInStatus.HasValue
                ? new ObjectParameter("ShowInStatus", showInStatus)
                : new ObjectParameter("ShowInStatus", typeof(bool));

            var statusParameter = status != null
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(string));

            var totalAmountViewParameter = totalAmountView.HasValue
                ? new ObjectParameter("TotalAmountView", totalAmountView)
                : new ObjectParameter("TotalAmountView", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseStatus_AddNew_Result>(
                    "Public_PurchaseStatus_AddNew", descriptionParameter, needSerialNoParameter, remarksParameter,
                    showInStatusParameter, statusParameter, totalAmountViewParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_PurchaseStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_PurchaseStatus_Delete",
                original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_PurchaseStatus_Select_All_Result> Public_PurchaseStatus_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseStatus_Select_All_Result>(
                    "Public_PurchaseStatus_Select_All");
        }

        public virtual ObjectResult<Public_PurchaseStatus_Select_Single_Result> Public_PurchaseStatus_Select_Single(
            string original_Status, Nullable<System.Guid> gUID)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseStatus_Select_Single_Result>
                    ("Public_PurchaseStatus_Select_Single", original_StatusParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_PurchaseStatus_Update_Result> Public_PurchaseStatus_Update(
            string description, Nullable<short> needSerialNo, string remarks, Nullable<bool> showInStatus,
            Nullable<short> totalAmountView, string original_Description, Nullable<short> original_NeedSerialNo,
            string original_Remarks, Nullable<bool> original_ShowInStatus, string original_Status,
            Nullable<short> original_TotalAmountView, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var needSerialNoParameter = needSerialNo.HasValue
                ? new ObjectParameter("NeedSerialNo", needSerialNo)
                : new ObjectParameter("NeedSerialNo", typeof(short));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInStatusParameter = showInStatus.HasValue
                ? new ObjectParameter("ShowInStatus", showInStatus)
                : new ObjectParameter("ShowInStatus", typeof(bool));

            var totalAmountViewParameter = totalAmountView.HasValue
                ? new ObjectParameter("TotalAmountView", totalAmountView)
                : new ObjectParameter("TotalAmountView", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_NeedSerialNoParameter = original_NeedSerialNo.HasValue
                ? new ObjectParameter("Original_NeedSerialNo", original_NeedSerialNo)
                : new ObjectParameter("Original_NeedSerialNo", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInStatusParameter = original_ShowInStatus.HasValue
                ? new ObjectParameter("Original_ShowInStatus", original_ShowInStatus)
                : new ObjectParameter("Original_ShowInStatus", typeof(bool));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_TotalAmountViewParameter = original_TotalAmountView.HasValue
                ? new ObjectParameter("Original_TotalAmountView", original_TotalAmountView)
                : new ObjectParameter("Original_TotalAmountView", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_PurchaseStatus_Update_Result>(
                    "Public_PurchaseStatus_Update", descriptionParameter, needSerialNoParameter, remarksParameter,
                    showInStatusParameter, totalAmountViewParameter, original_DescriptionParameter,
                    original_NeedSerialNoParameter, original_RemarksParameter, original_ShowInStatusParameter,
                    original_StatusParameter, original_TotalAmountViewParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Nullable<int>> Public_Purpose_AddNew(string name, string purpose, string remarks,
            string standard_Purpose, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var standard_PurposeParameter = standard_Purpose != null
                ? new ObjectParameter("Standard_Purpose", standard_Purpose)
                : new ObjectParameter("Standard_Purpose", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>("Public_Purpose_AddNew",
                nameParameter, purposeParameter, remarksParameter, standard_PurposeParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Purpose_Delete(string original_Purpose, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Purpose_Delete",
                original_PurposeParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Purpose_Select_All_Result> Public_Purpose_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purpose_Select_All_Result>(
                    "Public_Purpose_Select_All");
        }

        public virtual ObjectResult<Public_Purpose_Select_Single_Result> Public_Purpose_Select_Single(
            string original_Purpose, Nullable<System.Guid> gUID)
        {
            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purpose_Select_Single_Result>(
                    "Public_Purpose_Select_Single", original_PurposeParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Purpose_Update_Result> Public_Purpose_Update(string name, string remarks,
            string original_Name, string original_Purpose, string original_Remarks, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Purpose_Update_Result>(
                    "Public_Purpose_Update", nameParameter, remarksParameter, original_NameParameter,
                    original_PurposeParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Source_AddNew_Result> Public_Source_AddNew(Nullable<byte> dBAutoNo,
            string description, string remarks, string source, Nullable<short> tabTo, Nullable<short> taxCode,
            Nullable<short> type, string voucher, string standard_Source, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var dBAutoNoParameter = dBAutoNo.HasValue
                ? new ObjectParameter("DBAutoNo", dBAutoNo)
                : new ObjectParameter("DBAutoNo", typeof(byte));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var tabToParameter = tabTo.HasValue
                ? new ObjectParameter("TabTo", tabTo)
                : new ObjectParameter("TabTo", typeof(short));

            var taxCodeParameter = taxCode.HasValue
                ? new ObjectParameter("TaxCode", taxCode)
                : new ObjectParameter("TaxCode", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var standard_SourceParameter = standard_Source != null
                ? new ObjectParameter("Standard_Source", standard_Source)
                : new ObjectParameter("Standard_Source", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Source_AddNew_Result>(
                    "Public_Source_AddNew", dBAutoNoParameter, descriptionParameter, remarksParameter, sourceParameter,
                    tabToParameter, taxCodeParameter, typeParameter, voucherParameter, standard_SourceParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Source_Delete(string original_Source, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Source_Delete",
                original_SourceParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Source_Select_All_Result> Public_Source_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Source_Select_All_Result>(
                    "Public_Source_Select_All");
        }

        public virtual ObjectResult<Public_Source_Select_Single_Result> Public_Source_Select_Single(
            string original_Source, Nullable<System.Guid> gUID)
        {
            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Source_Select_Single_Result>(
                    "Public_Source_Select_Single", original_SourceParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Source_Update_Result> Public_Source_Update(Nullable<byte> dBAutoNo,
            string description, string remarks, Nullable<short> tabTo, Nullable<short> taxCode, Nullable<short> type,
            string voucher, Nullable<byte> original_DBAutoNo, string original_Description, string original_Remarks,
            string original_Source, Nullable<short> original_TabTo, Nullable<short> original_TaxCode,
            Nullable<short> original_Type, string original_Voucher, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var dBAutoNoParameter = dBAutoNo.HasValue
                ? new ObjectParameter("DBAutoNo", dBAutoNo)
                : new ObjectParameter("DBAutoNo", typeof(byte));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var tabToParameter = tabTo.HasValue
                ? new ObjectParameter("TabTo", tabTo)
                : new ObjectParameter("TabTo", typeof(short));

            var taxCodeParameter = taxCode.HasValue
                ? new ObjectParameter("TaxCode", taxCode)
                : new ObjectParameter("TaxCode", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var original_DBAutoNoParameter = original_DBAutoNo.HasValue
                ? new ObjectParameter("Original_DBAutoNo", original_DBAutoNo)
                : new ObjectParameter("Original_DBAutoNo", typeof(byte));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_TabToParameter = original_TabTo.HasValue
                ? new ObjectParameter("Original_TabTo", original_TabTo)
                : new ObjectParameter("Original_TabTo", typeof(short));

            var original_TaxCodeParameter = original_TaxCode.HasValue
                ? new ObjectParameter("Original_TaxCode", original_TaxCode)
                : new ObjectParameter("Original_TaxCode", typeof(short));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Source_Update_Result>(
                    "Public_Source_Update", dBAutoNoParameter, descriptionParameter, remarksParameter, tabToParameter,
                    taxCodeParameter, typeParameter, voucherParameter, original_DBAutoNoParameter,
                    original_DescriptionParameter, original_RemarksParameter, original_SourceParameter,
                    original_TabToParameter, original_TaxCodeParameter, original_TypeParameter,
                    original_VoucherParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual ObjectResult<Public_Standards_Select_All_Result> Public_Standards_Select_All(Nullable<byte> tP)
        {
            var tPParameter = tP.HasValue
                ? new ObjectParameter("TP", tP)
                : new ObjectParameter("TP", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Standards_Select_All_Result>(
                    "Public_Standards_Select_All", tPParameter);
        }

        public virtual ObjectResult<Public_Standards_Select_Single_Result> Public_Standards_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Standards_Select_Single_Result>(
                    "Public_Standards_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_SupplierCategory_AddNew_Result> Public_SupplierCategory_AddNew(string name,
            string remarks, string supplierCat, string standard_SupplierCat, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var supplierCatParameter = supplierCat != null
                ? new ObjectParameter("SupplierCat", supplierCat)
                : new ObjectParameter("SupplierCat", typeof(string));

            var standard_SupplierCatParameter = standard_SupplierCat != null
                ? new ObjectParameter("Standard_SupplierCat", standard_SupplierCat)
                : new ObjectParameter("Standard_SupplierCat", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_SupplierCategory_AddNew_Result>(
                    "Public_SupplierCategory_AddNew", nameParameter, remarksParameter, supplierCatParameter,
                    standard_SupplierCatParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_SupplierCategory_Delete(string original_SupplierCat, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SupplierCatParameter = original_SupplierCat != null
                ? new ObjectParameter("Original_SupplierCat", original_SupplierCat)
                : new ObjectParameter("Original_SupplierCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_SupplierCategory_Delete",
                original_SupplierCatParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_SupplierCategory_Select_All_Result> Public_SupplierCategory_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_SupplierCategory_Select_All_Result>(
                    "Public_SupplierCategory_Select_All");
        }

        public virtual ObjectResult<Public_SupplierCategory_Select_Single_Result> Public_SupplierCategory_Select_Single(
            string original_SupplierCat, Nullable<System.Guid> gUID)
        {
            var original_SupplierCatParameter = original_SupplierCat != null
                ? new ObjectParameter("Original_SupplierCat", original_SupplierCat)
                : new ObjectParameter("Original_SupplierCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_SupplierCategory_Select_Single_Result>(
                        "Public_SupplierCategory_Select_Single", original_SupplierCatParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_SupplierCategory_Update_Result> Public_SupplierCategory_Update(string name,
            string remarks, string original_Name, string original_Remarks, string original_SupplierCat,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SupplierCatParameter = original_SupplierCat != null
                ? new ObjectParameter("Original_SupplierCat", original_SupplierCat)
                : new ObjectParameter("Original_SupplierCat", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_SupplierCategory_Update_Result>(
                    "Public_SupplierCategory_Update", nameParameter, remarksParameter, original_NameParameter,
                    original_RemarksParameter, original_SupplierCatParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_SupplierContacts_AddNew(string address1, string address2, string city, string country,
            string directPhone, string email, string fax, string interNet, string localNumber, string mobile,
            string name, string phone, string postalCode, string supplier, string title, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var directPhoneParameter = directPhone != null
                ? new ObjectParameter("DirectPhone", directPhone)
                : new ObjectParameter("DirectPhone", typeof(string));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var localNumberParameter = localNumber != null
                ? new ObjectParameter("LocalNumber", localNumber)
                : new ObjectParameter("LocalNumber", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_SupplierContacts_AddNew",
                address1Parameter, address2Parameter, cityParameter, countryParameter, directPhoneParameter,
                emailParameter, faxParameter, interNetParameter, localNumberParameter, mobileParameter, nameParameter,
                phoneParameter, postalCodeParameter, supplierParameter, titleParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_SupplierContacts_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_SupplierContacts_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_SupplierContacts_Select_All_Result> Public_SupplierContacts_Select_All(
            string supplier)
        {
            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_SupplierContacts_Select_All_Result>(
                    "Public_SupplierContacts_Select_All", supplierParameter);
        }

        public virtual ObjectResult<Public_SupplierContacts_Select_Single_Result> Public_SupplierContacts_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Public_SupplierContacts_Select_Single_Result>(
                        "Public_SupplierContacts_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual int Public_SupplierContacts_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter city, ObjectParameter country, ObjectParameter directPhone, ObjectParameter email,
            ObjectParameter fax, ObjectParameter interNet, ObjectParameter localNumber, ObjectParameter mobile,
            ObjectParameter name, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter supplier,
            ObjectParameter title, string original_Address1, string original_Address2, string original_City,
            string original_Country, string original_DirectPhone, string original_Email, string original_Fax,
            string original_InterNet, string original_LocalNumber, string original_Mobile, string original_Name,
            string original_Phone, string original_PostalCode, Nullable<int> original_RecordID, string original_Supplier,
            string original_Title, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_DirectPhoneParameter = original_DirectPhone != null
                ? new ObjectParameter("Original_DirectPhone", original_DirectPhone)
                : new ObjectParameter("Original_DirectPhone", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_LocalNumberParameter = original_LocalNumber != null
                ? new ObjectParameter("Original_LocalNumber", original_LocalNumber)
                : new ObjectParameter("Original_LocalNumber", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_SupplierContacts_Update",
                address1, address2, city, country, directPhone, email, fax, interNet, localNumber, mobile, name, phone,
                postalCode, supplier, title, original_Address1Parameter, original_Address2Parameter,
                original_CityParameter, original_CountryParameter, original_DirectPhoneParameter,
                original_EmailParameter, original_FaxParameter, original_InterNetParameter,
                original_LocalNumberParameter, original_MobileParameter, original_NameParameter, original_PhoneParameter,
                original_PostalCodeParameter, original_RecordIDParameter, original_SupplierParameter,
                original_TitleParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_Suppliers_AddNew_Result> Public_Suppliers_AddNew(string address1,
            string address2, string address3, string agent, string allowInBank, string bank, string bankName,
            Nullable<short> blocked, string buyer, string cashDiscount, string category, string city, string contact,
            string costCenter, string country, string countryCode, Nullable<double> creditLimit, string currency,
            string delivery, string department, string eDILocationNr, Nullable<short> eECCountry,
            Nullable<byte> eECTransCode, string email, Nullable<double> endDiscPct,
            Nullable<bool> excludeFromPaymentProcedures, string fax, string fIKNumber, string giro, string grouping,
            string iBAN, string internalRemarks, string interNet, Nullable<byte> isLiableToPayTax, string kortArt,
            string language, string mobile, string name, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            Nullable<short> ordered, string ourAccount, string payment, string payTo, string phone, string postalCode,
            string priceList, string project, string purchaseCommunication, string purpose, string remarks,
            string reports, string supplier, string tax, string taxNo, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allowInBankParameter = allowInBank != null
                ? new ObjectParameter("AllowInBank", allowInBank)
                : new ObjectParameter("AllowInBank", typeof(string));

            var bankParameter = bank != null
                ? new ObjectParameter("Bank", bank)
                : new ObjectParameter("Bank", typeof(string));

            var bankNameParameter = bankName != null
                ? new ObjectParameter("BankName", bankName)
                : new ObjectParameter("BankName", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var buyerParameter = buyer != null
                ? new ObjectParameter("Buyer", buyer)
                : new ObjectParameter("Buyer", typeof(string));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var countryCodeParameter = countryCode != null
                ? new ObjectParameter("CountryCode", countryCode)
                : new ObjectParameter("CountryCode", typeof(string));

            var creditLimitParameter = creditLimit.HasValue
                ? new ObjectParameter("CreditLimit", creditLimit)
                : new ObjectParameter("CreditLimit", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var excludeFromPaymentProceduresParameter = excludeFromPaymentProcedures.HasValue
                ? new ObjectParameter("ExcludeFromPaymentProcedures", excludeFromPaymentProcedures)
                : new ObjectParameter("ExcludeFromPaymentProcedures", typeof(bool));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fIKNumberParameter = fIKNumber != null
                ? new ObjectParameter("FIKNumber", fIKNumber)
                : new ObjectParameter("FIKNumber", typeof(string));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var iBANParameter = iBAN != null
                ? new ObjectParameter("IBAN", iBAN)
                : new ObjectParameter("IBAN", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(short));

            var ourAccountParameter = ourAccount != null
                ? new ObjectParameter("OurAccount", ourAccount)
                : new ObjectParameter("OurAccount", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var payToParameter = payTo != null
                ? new ObjectParameter("PayTo", payTo)
                : new ObjectParameter("PayTo", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Suppliers_AddNew_Result>(
                    "Public_Suppliers_AddNew", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    allowInBankParameter, bankParameter, bankNameParameter, blockedParameter, buyerParameter,
                    cashDiscountParameter, categoryParameter, cityParameter, contactParameter, costCenterParameter,
                    countryParameter, countryCodeParameter, creditLimitParameter, currencyParameter, deliveryParameter,
                    departmentParameter, eDILocationNrParameter, eECCountryParameter, eECTransCodeParameter,
                    emailParameter, endDiscPctParameter, excludeFromPaymentProceduresParameter, faxParameter,
                    fIKNumberParameter, giroParameter, groupingParameter, iBANParameter, internalRemarksParameter,
                    interNetParameter, isLiableToPayTaxParameter, kortArtParameter, languageParameter, mobileParameter,
                    nameParameter, optional1Parameter, optional2Parameter, optional3Parameter, optional4Parameter,
                    optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter,
                    optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                    optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                    optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                    optionalText7Parameter, optionalText8Parameter, orderedParameter, ourAccountParameter,
                    paymentParameter, payToParameter, phoneParameter, postalCodeParameter, priceListParameter,
                    projectParameter, purchaseCommunicationParameter, purposeParameter, remarksParameter,
                    reportsParameter, supplierParameter, taxParameter, taxNoParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Suppliers_Delete(string original_Supplier, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Suppliers_Delete",
                original_SupplierParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Suppliers_Select_All_Result> Public_Suppliers_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Suppliers_Select_All_Result>(
                    "Public_Suppliers_Select_All");
        }

        public virtual ObjectResult<Public_Suppliers_Select_Single_Result> Public_Suppliers_Select_Single(
            string original_Supplier, Nullable<System.Guid> gUID)
        {
            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Suppliers_Select_Single_Result>(
                    "Public_Suppliers_Select_Single", original_SupplierParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Suppliers_Update_Result> Public_Suppliers_Update(string address1,
            string address2, string address3, string agent, string allowInBank, string bank, string bankName,
            Nullable<short> blocked, string buyer, string cashDiscount, string category, string city, string contact,
            string costCenter, string country, string countryCode, Nullable<double> creditLimit, string currency,
            string delivery, string department, string eDILocationNr, Nullable<short> eECCountry,
            Nullable<byte> eECTransCode, string email, Nullable<double> endDiscPct,
            Nullable<bool> excludeFromPaymentProcedures, string fax, string fIKNumber, string giro, string grouping,
            string iBAN, string internalRemarks, string interNet, Nullable<byte> isLiableToPayTax, string kortArt,
            string language, string mobile, string name, Nullable<short> optional1, Nullable<short> optional2,
            Nullable<short> optional3, Nullable<short> optional4, Nullable<short> optional5, Nullable<short> optional6,
            Nullable<short> optional7, Nullable<short> optional8, Nullable<double> optionalNumber1,
            Nullable<double> optionalNumber2, Nullable<double> optionalNumber3, Nullable<double> optionalNumber4,
            Nullable<double> optionalNumber5, Nullable<double> optionalNumber6, Nullable<double> optionalNumber7,
            Nullable<double> optionalNumber8, string optionalText1, string optionalText2, string optionalText3,
            string optionalText4, string optionalText5, string optionalText6, string optionalText7, string optionalText8,
            Nullable<short> ordered, string ourAccount, string payment, string payTo, string phone, string postalCode,
            string priceList, string project, string purchaseCommunication, string purpose, string remarks,
            string reports, string tax, string taxNo, string original_Address1, string original_Address2,
            string original_Address3, string original_Agent, string original_AllowInBank, string original_Bank,
            string original_BankName, Nullable<short> original_Blocked, string original_Buyer,
            string original_CashDiscount, string original_Category, string original_City, string original_Contact,
            string original_CostCenter, string original_Country, string original_CountryCode,
            Nullable<double> original_CreditLimit, string original_Currency, string original_Delivery,
            string original_Department, string original_EDILocationNr, Nullable<short> original_EECCountry,
            Nullable<byte> original_EECTransCode, string original_Email, Nullable<double> original_EndDiscPct,
            Nullable<bool> original_ExcludeFromPaymentProcedures, string original_Fax, string original_FIKNumber,
            string original_Giro, string original_Grouping, string original_IBAN, string original_InternalRemarks,
            string original_InterNet, Nullable<byte> original_IsLiableToPayTax, string original_KortArt,
            string original_Language, string original_Mobile, string original_Name, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            Nullable<short> original_Ordered, string original_OurAccount, string original_Payment, string original_PayTo,
            string original_Phone, string original_PostalCode, string original_PriceList, string original_Project,
            string original_PurchaseCommunication, string original_Purpose, string original_Remarks,
            string original_Reports, string original_Supplier, string original_Tax, string original_TaxNo,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var address1Parameter = address1 != null
                ? new ObjectParameter("Address1", address1)
                : new ObjectParameter("Address1", typeof(string));

            var address2Parameter = address2 != null
                ? new ObjectParameter("Address2", address2)
                : new ObjectParameter("Address2", typeof(string));

            var address3Parameter = address3 != null
                ? new ObjectParameter("Address3", address3)
                : new ObjectParameter("Address3", typeof(string));

            var agentParameter = agent != null
                ? new ObjectParameter("Agent", agent)
                : new ObjectParameter("Agent", typeof(string));

            var allowInBankParameter = allowInBank != null
                ? new ObjectParameter("AllowInBank", allowInBank)
                : new ObjectParameter("AllowInBank", typeof(string));

            var bankParameter = bank != null
                ? new ObjectParameter("Bank", bank)
                : new ObjectParameter("Bank", typeof(string));

            var bankNameParameter = bankName != null
                ? new ObjectParameter("BankName", bankName)
                : new ObjectParameter("BankName", typeof(string));

            var blockedParameter = blocked.HasValue
                ? new ObjectParameter("Blocked", blocked)
                : new ObjectParameter("Blocked", typeof(short));

            var buyerParameter = buyer != null
                ? new ObjectParameter("Buyer", buyer)
                : new ObjectParameter("Buyer", typeof(string));

            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var categoryParameter = category != null
                ? new ObjectParameter("Category", category)
                : new ObjectParameter("Category", typeof(string));

            var cityParameter = city != null
                ? new ObjectParameter("City", city)
                : new ObjectParameter("City", typeof(string));

            var contactParameter = contact != null
                ? new ObjectParameter("Contact", contact)
                : new ObjectParameter("Contact", typeof(string));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var countryParameter = country != null
                ? new ObjectParameter("Country", country)
                : new ObjectParameter("Country", typeof(string));

            var countryCodeParameter = countryCode != null
                ? new ObjectParameter("CountryCode", countryCode)
                : new ObjectParameter("CountryCode", typeof(string));

            var creditLimitParameter = creditLimit.HasValue
                ? new ObjectParameter("CreditLimit", creditLimit)
                : new ObjectParameter("CreditLimit", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var deliveryParameter = delivery != null
                ? new ObjectParameter("Delivery", delivery)
                : new ObjectParameter("Delivery", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var eDILocationNrParameter = eDILocationNr != null
                ? new ObjectParameter("EDILocationNr", eDILocationNr)
                : new ObjectParameter("EDILocationNr", typeof(string));

            var eECCountryParameter = eECCountry.HasValue
                ? new ObjectParameter("EECCountry", eECCountry)
                : new ObjectParameter("EECCountry", typeof(short));

            var eECTransCodeParameter = eECTransCode.HasValue
                ? new ObjectParameter("EECTransCode", eECTransCode)
                : new ObjectParameter("EECTransCode", typeof(byte));

            var emailParameter = email != null
                ? new ObjectParameter("Email", email)
                : new ObjectParameter("Email", typeof(string));

            var endDiscPctParameter = endDiscPct.HasValue
                ? new ObjectParameter("EndDiscPct", endDiscPct)
                : new ObjectParameter("EndDiscPct", typeof(double));

            var excludeFromPaymentProceduresParameter = excludeFromPaymentProcedures.HasValue
                ? new ObjectParameter("ExcludeFromPaymentProcedures", excludeFromPaymentProcedures)
                : new ObjectParameter("ExcludeFromPaymentProcedures", typeof(bool));

            var faxParameter = fax != null
                ? new ObjectParameter("Fax", fax)
                : new ObjectParameter("Fax", typeof(string));

            var fIKNumberParameter = fIKNumber != null
                ? new ObjectParameter("FIKNumber", fIKNumber)
                : new ObjectParameter("FIKNumber", typeof(string));

            var giroParameter = giro != null
                ? new ObjectParameter("Giro", giro)
                : new ObjectParameter("Giro", typeof(string));

            var groupingParameter = grouping != null
                ? new ObjectParameter("Grouping", grouping)
                : new ObjectParameter("Grouping", typeof(string));

            var iBANParameter = iBAN != null
                ? new ObjectParameter("IBAN", iBAN)
                : new ObjectParameter("IBAN", typeof(string));

            var internalRemarksParameter = internalRemarks != null
                ? new ObjectParameter("InternalRemarks", internalRemarks)
                : new ObjectParameter("InternalRemarks", typeof(string));

            var interNetParameter = interNet != null
                ? new ObjectParameter("InterNet", interNet)
                : new ObjectParameter("InterNet", typeof(string));

            var isLiableToPayTaxParameter = isLiableToPayTax.HasValue
                ? new ObjectParameter("IsLiableToPayTax", isLiableToPayTax)
                : new ObjectParameter("IsLiableToPayTax", typeof(byte));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var languageParameter = language != null
                ? new ObjectParameter("Language", language)
                : new ObjectParameter("Language", typeof(string));

            var mobileParameter = mobile != null
                ? new ObjectParameter("Mobile", mobile)
                : new ObjectParameter("Mobile", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var optional1Parameter = optional1.HasValue
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(short));

            var optional2Parameter = optional2.HasValue
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(short));

            var optional3Parameter = optional3.HasValue
                ? new ObjectParameter("Optional3", optional3)
                : new ObjectParameter("Optional3", typeof(short));

            var optional4Parameter = optional4.HasValue
                ? new ObjectParameter("Optional4", optional4)
                : new ObjectParameter("Optional4", typeof(short));

            var optional5Parameter = optional5.HasValue
                ? new ObjectParameter("Optional5", optional5)
                : new ObjectParameter("Optional5", typeof(short));

            var optional6Parameter = optional6.HasValue
                ? new ObjectParameter("Optional6", optional6)
                : new ObjectParameter("Optional6", typeof(short));

            var optional7Parameter = optional7.HasValue
                ? new ObjectParameter("Optional7", optional7)
                : new ObjectParameter("Optional7", typeof(short));

            var optional8Parameter = optional8.HasValue
                ? new ObjectParameter("Optional8", optional8)
                : new ObjectParameter("Optional8", typeof(short));

            var optionalNumber1Parameter = optionalNumber1.HasValue
                ? new ObjectParameter("OptionalNumber1", optionalNumber1)
                : new ObjectParameter("OptionalNumber1", typeof(double));

            var optionalNumber2Parameter = optionalNumber2.HasValue
                ? new ObjectParameter("OptionalNumber2", optionalNumber2)
                : new ObjectParameter("OptionalNumber2", typeof(double));

            var optionalNumber3Parameter = optionalNumber3.HasValue
                ? new ObjectParameter("OptionalNumber3", optionalNumber3)
                : new ObjectParameter("OptionalNumber3", typeof(double));

            var optionalNumber4Parameter = optionalNumber4.HasValue
                ? new ObjectParameter("OptionalNumber4", optionalNumber4)
                : new ObjectParameter("OptionalNumber4", typeof(double));

            var optionalNumber5Parameter = optionalNumber5.HasValue
                ? new ObjectParameter("OptionalNumber5", optionalNumber5)
                : new ObjectParameter("OptionalNumber5", typeof(double));

            var optionalNumber6Parameter = optionalNumber6.HasValue
                ? new ObjectParameter("OptionalNumber6", optionalNumber6)
                : new ObjectParameter("OptionalNumber6", typeof(double));

            var optionalNumber7Parameter = optionalNumber7.HasValue
                ? new ObjectParameter("OptionalNumber7", optionalNumber7)
                : new ObjectParameter("OptionalNumber7", typeof(double));

            var optionalNumber8Parameter = optionalNumber8.HasValue
                ? new ObjectParameter("OptionalNumber8", optionalNumber8)
                : new ObjectParameter("OptionalNumber8", typeof(double));

            var optionalText1Parameter = optionalText1 != null
                ? new ObjectParameter("OptionalText1", optionalText1)
                : new ObjectParameter("OptionalText1", typeof(string));

            var optionalText2Parameter = optionalText2 != null
                ? new ObjectParameter("OptionalText2", optionalText2)
                : new ObjectParameter("OptionalText2", typeof(string));

            var optionalText3Parameter = optionalText3 != null
                ? new ObjectParameter("OptionalText3", optionalText3)
                : new ObjectParameter("OptionalText3", typeof(string));

            var optionalText4Parameter = optionalText4 != null
                ? new ObjectParameter("OptionalText4", optionalText4)
                : new ObjectParameter("OptionalText4", typeof(string));

            var optionalText5Parameter = optionalText5 != null
                ? new ObjectParameter("OptionalText5", optionalText5)
                : new ObjectParameter("OptionalText5", typeof(string));

            var optionalText6Parameter = optionalText6 != null
                ? new ObjectParameter("OptionalText6", optionalText6)
                : new ObjectParameter("OptionalText6", typeof(string));

            var optionalText7Parameter = optionalText7 != null
                ? new ObjectParameter("OptionalText7", optionalText7)
                : new ObjectParameter("OptionalText7", typeof(string));

            var optionalText8Parameter = optionalText8 != null
                ? new ObjectParameter("OptionalText8", optionalText8)
                : new ObjectParameter("OptionalText8", typeof(string));

            var orderedParameter = ordered.HasValue
                ? new ObjectParameter("Ordered", ordered)
                : new ObjectParameter("Ordered", typeof(short));

            var ourAccountParameter = ourAccount != null
                ? new ObjectParameter("OurAccount", ourAccount)
                : new ObjectParameter("OurAccount", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var payToParameter = payTo != null
                ? new ObjectParameter("PayTo", payTo)
                : new ObjectParameter("PayTo", typeof(string));

            var phoneParameter = phone != null
                ? new ObjectParameter("Phone", phone)
                : new ObjectParameter("Phone", typeof(string));

            var postalCodeParameter = postalCode != null
                ? new ObjectParameter("PostalCode", postalCode)
                : new ObjectParameter("PostalCode", typeof(string));

            var priceListParameter = priceList != null
                ? new ObjectParameter("PriceList", priceList)
                : new ObjectParameter("PriceList", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purchaseCommunicationParameter = purchaseCommunication != null
                ? new ObjectParameter("PurchaseCommunication", purchaseCommunication)
                : new ObjectParameter("PurchaseCommunication", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var reportsParameter = reports != null
                ? new ObjectParameter("Reports", reports)
                : new ObjectParameter("Reports", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxNoParameter = taxNo != null
                ? new ObjectParameter("TaxNo", taxNo)
                : new ObjectParameter("TaxNo", typeof(string));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllowInBankParameter = original_AllowInBank != null
                ? new ObjectParameter("Original_AllowInBank", original_AllowInBank)
                : new ObjectParameter("Original_AllowInBank", typeof(string));

            var original_BankParameter = original_Bank != null
                ? new ObjectParameter("Original_Bank", original_Bank)
                : new ObjectParameter("Original_Bank", typeof(string));

            var original_BankNameParameter = original_BankName != null
                ? new ObjectParameter("Original_BankName", original_BankName)
                : new ObjectParameter("Original_BankName", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_BuyerParameter = original_Buyer != null
                ? new ObjectParameter("Original_Buyer", original_Buyer)
                : new ObjectParameter("Original_Buyer", typeof(string));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CountryCodeParameter = original_CountryCode != null
                ? new ObjectParameter("Original_CountryCode", original_CountryCode)
                : new ObjectParameter("Original_CountryCode", typeof(string));

            var original_CreditLimitParameter = original_CreditLimit.HasValue
                ? new ObjectParameter("Original_CreditLimit", original_CreditLimit)
                : new ObjectParameter("Original_CreditLimit", typeof(double));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExcludeFromPaymentProceduresParameter = original_ExcludeFromPaymentProcedures.HasValue
                ? new ObjectParameter("Original_ExcludeFromPaymentProcedures", original_ExcludeFromPaymentProcedures)
                : new ObjectParameter("Original_ExcludeFromPaymentProcedures", typeof(bool));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FIKNumberParameter = original_FIKNumber != null
                ? new ObjectParameter("Original_FIKNumber", original_FIKNumber)
                : new ObjectParameter("Original_FIKNumber", typeof(string));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_IBANParameter = original_IBAN != null
                ? new ObjectParameter("Original_IBAN", original_IBAN)
                : new ObjectParameter("Original_IBAN", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(short));

            var original_OurAccountParameter = original_OurAccount != null
                ? new ObjectParameter("Original_OurAccount", original_OurAccount)
                : new ObjectParameter("Original_OurAccount", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PayToParameter = original_PayTo != null
                ? new ObjectParameter("Original_PayTo", original_PayTo)
                : new ObjectParameter("Original_PayTo", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurchaseCommunicationParameter = original_PurchaseCommunication != null
                ? new ObjectParameter("Original_PurchaseCommunication", original_PurchaseCommunication)
                : new ObjectParameter("Original_PurchaseCommunication", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Suppliers_Update_Result>(
                    "Public_Suppliers_Update", address1Parameter, address2Parameter, address3Parameter, agentParameter,
                    allowInBankParameter, bankParameter, bankNameParameter, blockedParameter, buyerParameter,
                    cashDiscountParameter, categoryParameter, cityParameter, contactParameter, costCenterParameter,
                    countryParameter, countryCodeParameter, creditLimitParameter, currencyParameter, deliveryParameter,
                    departmentParameter, eDILocationNrParameter, eECCountryParameter, eECTransCodeParameter,
                    emailParameter, endDiscPctParameter, excludeFromPaymentProceduresParameter, faxParameter,
                    fIKNumberParameter, giroParameter, groupingParameter, iBANParameter, internalRemarksParameter,
                    interNetParameter, isLiableToPayTaxParameter, kortArtParameter, languageParameter, mobileParameter,
                    nameParameter, optional1Parameter, optional2Parameter, optional3Parameter, optional4Parameter,
                    optional5Parameter, optional6Parameter, optional7Parameter, optional8Parameter,
                    optionalNumber1Parameter, optionalNumber2Parameter, optionalNumber3Parameter,
                    optionalNumber4Parameter, optionalNumber5Parameter, optionalNumber6Parameter,
                    optionalNumber7Parameter, optionalNumber8Parameter, optionalText1Parameter, optionalText2Parameter,
                    optionalText3Parameter, optionalText4Parameter, optionalText5Parameter, optionalText6Parameter,
                    optionalText7Parameter, optionalText8Parameter, orderedParameter, ourAccountParameter,
                    paymentParameter, payToParameter, phoneParameter, postalCodeParameter, priceListParameter,
                    projectParameter, purchaseCommunicationParameter, purposeParameter, remarksParameter,
                    reportsParameter, taxParameter, taxNoParameter, original_Address1Parameter,
                    original_Address2Parameter, original_Address3Parameter, original_AgentParameter,
                    original_AllowInBankParameter, original_BankParameter, original_BankNameParameter,
                    original_BlockedParameter, original_BuyerParameter, original_CashDiscountParameter,
                    original_CategoryParameter, original_CityParameter, original_ContactParameter,
                    original_CostCenterParameter, original_CountryParameter, original_CountryCodeParameter,
                    original_CreditLimitParameter, original_CurrencyParameter, original_DeliveryParameter,
                    original_DepartmentParameter, original_EDILocationNrParameter, original_EECCountryParameter,
                    original_EECTransCodeParameter, original_EmailParameter, original_EndDiscPctParameter,
                    original_ExcludeFromPaymentProceduresParameter, original_FaxParameter, original_FIKNumberParameter,
                    original_GiroParameter, original_GroupingParameter, original_IBANParameter,
                    original_InternalRemarksParameter, original_InterNetParameter, original_IsLiableToPayTaxParameter,
                    original_KortArtParameter, original_LanguageParameter, original_MobileParameter,
                    original_NameParameter, original_Optional1Parameter, original_Optional2Parameter,
                    original_Optional3Parameter, original_Optional4Parameter, original_Optional5Parameter,
                    original_Optional6Parameter, original_Optional7Parameter, original_Optional8Parameter,
                    original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                    original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                    original_OptionalNumber5Parameter, original_OptionalNumber6Parameter,
                    original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                    original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                    original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                    original_OptionalText7Parameter, original_OptionalText8Parameter, original_OrderedParameter,
                    original_OurAccountParameter, original_PaymentParameter, original_PayToParameter,
                    original_PhoneParameter, original_PostalCodeParameter, original_PriceListParameter,
                    original_ProjectParameter, original_PurchaseCommunicationParameter, original_PurposeParameter,
                    original_RemarksParameter, original_ReportsParameter, original_SupplierParameter,
                    original_TaxParameter, original_TaxNoParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Tax_AddNew_Result> Public_Tax_AddNew(string aquisition, string balance,
            string expenses, string name, Nullable<double> rate, Nullable<double> ratio, string remarks,
            Nullable<short> returnCode, string tax, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var aquisitionParameter = aquisition != null
                ? new ObjectParameter("Aquisition", aquisition)
                : new ObjectParameter("Aquisition", typeof(string));

            var balanceParameter = balance != null
                ? new ObjectParameter("Balance", balance)
                : new ObjectParameter("Balance", typeof(string));

            var expensesParameter = expenses != null
                ? new ObjectParameter("Expenses", expenses)
                : new ObjectParameter("Expenses", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var ratioParameter = ratio.HasValue
                ? new ObjectParameter("Ratio", ratio)
                : new ObjectParameter("Ratio", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var returnCodeParameter = returnCode.HasValue
                ? new ObjectParameter("ReturnCode", returnCode)
                : new ObjectParameter("ReturnCode", typeof(short));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Tax_AddNew_Result>(
                    "Public_Tax_AddNew", aquisitionParameter, balanceParameter, expensesParameter, nameParameter,
                    rateParameter, ratioParameter, remarksParameter, returnCodeParameter, taxParameter,
                    returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Tax_Delete(string original_Tax, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Tax_Delete",
                original_TaxParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Tax_Select_All_Result> Public_Tax_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Tax_Select_All_Result>(
                    "Public_Tax_Select_All");
        }

        public virtual ObjectResult<Public_Tax_Select_Single_Result> Public_Tax_Select_Single(string original_Tax,
            Nullable<System.Guid> gUID)
        {
            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Tax_Select_Single_Result>(
                    "Public_Tax_Select_Single", original_TaxParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Tax_Update_Result> Public_Tax_Update(string aquisition, string balance,
            string expenses, string name, Nullable<double> rate, Nullable<double> ratio, string remarks,
            Nullable<short> returnCode, string tax, string original_Aquisition, string original_Balance,
            string original_Expenses, string original_Name, Nullable<double> original_Rate,
            Nullable<double> original_Ratio, string original_Remarks, Nullable<short> original_ReturnCode,
            string original_Tax, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var aquisitionParameter = aquisition != null
                ? new ObjectParameter("Aquisition", aquisition)
                : new ObjectParameter("Aquisition", typeof(string));

            var balanceParameter = balance != null
                ? new ObjectParameter("Balance", balance)
                : new ObjectParameter("Balance", typeof(string));

            var expensesParameter = expenses != null
                ? new ObjectParameter("Expenses", expenses)
                : new ObjectParameter("Expenses", typeof(string));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var ratioParameter = ratio.HasValue
                ? new ObjectParameter("Ratio", ratio)
                : new ObjectParameter("Ratio", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var returnCodeParameter = returnCode.HasValue
                ? new ObjectParameter("ReturnCode", returnCode)
                : new ObjectParameter("ReturnCode", typeof(short));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var original_AquisitionParameter = original_Aquisition != null
                ? new ObjectParameter("Original_Aquisition", original_Aquisition)
                : new ObjectParameter("Original_Aquisition", typeof(string));

            var original_BalanceParameter = original_Balance != null
                ? new ObjectParameter("Original_Balance", original_Balance)
                : new ObjectParameter("Original_Balance", typeof(string));

            var original_ExpensesParameter = original_Expenses != null
                ? new ObjectParameter("Original_Expenses", original_Expenses)
                : new ObjectParameter("Original_Expenses", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RatioParameter = original_Ratio.HasValue
                ? new ObjectParameter("Original_Ratio", original_Ratio)
                : new ObjectParameter("Original_Ratio", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReturnCodeParameter = original_ReturnCode.HasValue
                ? new ObjectParameter("Original_ReturnCode", original_ReturnCode)
                : new ObjectParameter("Original_ReturnCode", typeof(short));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Tax_Update_Result>(
                    "Public_Tax_Update", aquisitionParameter, balanceParameter, expensesParameter, nameParameter,
                    rateParameter, ratioParameter, remarksParameter, returnCodeParameter, taxParameter,
                    original_AquisitionParameter, original_BalanceParameter, original_ExpensesParameter,
                    original_NameParameter, original_RateParameter, original_RatioParameter, original_RemarksParameter,
                    original_ReturnCodeParameter, original_TaxParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_TimeHeaderLine_AddNew_Result> Public_TimeHeaderLine_AddNew(string costCenter,
            string department, string employee, string project, string purpose, Nullable<System.DateTime> startDate,
            string description_Monday, Nullable<System.DateTime> fromTime_Monday, Nullable<double> quantity_Monday,
            Nullable<System.DateTime> toTime_Monday, string description_Tuesday,
            Nullable<System.DateTime> fromTime_Tuesday, Nullable<double> quantity_Tuesday,
            Nullable<System.DateTime> toTime_Tuesday, string description_Wednesday,
            Nullable<System.DateTime> fromTime_Wednesday, Nullable<double> quantity_Wednesday,
            Nullable<System.DateTime> toTime_Wednesday, string description_Thursday,
            Nullable<System.DateTime> fromTime_Thursday, Nullable<double> quantity_Thursday,
            Nullable<System.DateTime> toTime_Thursday, string description_Friday,
            Nullable<System.DateTime> fromTime_Friday, Nullable<double> quantity_Friday,
            Nullable<System.DateTime> toTime_Friday, string description_Saturday,
            Nullable<System.DateTime> fromTime_Saturday, Nullable<double> quantity_Saturday,
            Nullable<System.DateTime> toTime_Saturday, string description_Sunday,
            Nullable<System.DateTime> fromTime_Sunday, Nullable<double> quantity_Sunday,
            Nullable<System.DateTime> toTime_Sunday, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var description_MondayParameter = description_Monday != null
                ? new ObjectParameter("Description_Monday", description_Monday)
                : new ObjectParameter("Description_Monday", typeof(string));

            var fromTime_MondayParameter = fromTime_Monday.HasValue
                ? new ObjectParameter("FromTime_Monday", fromTime_Monday)
                : new ObjectParameter("FromTime_Monday", typeof(System.DateTime));

            var quantity_MondayParameter = quantity_Monday.HasValue
                ? new ObjectParameter("Quantity_Monday", quantity_Monday)
                : new ObjectParameter("Quantity_Monday", typeof(double));

            var toTime_MondayParameter = toTime_Monday.HasValue
                ? new ObjectParameter("ToTime_Monday", toTime_Monday)
                : new ObjectParameter("ToTime_Monday", typeof(System.DateTime));

            var description_TuesdayParameter = description_Tuesday != null
                ? new ObjectParameter("Description_Tuesday", description_Tuesday)
                : new ObjectParameter("Description_Tuesday", typeof(string));

            var fromTime_TuesdayParameter = fromTime_Tuesday.HasValue
                ? new ObjectParameter("FromTime_Tuesday", fromTime_Tuesday)
                : new ObjectParameter("FromTime_Tuesday", typeof(System.DateTime));

            var quantity_TuesdayParameter = quantity_Tuesday.HasValue
                ? new ObjectParameter("Quantity_Tuesday", quantity_Tuesday)
                : new ObjectParameter("Quantity_Tuesday", typeof(double));

            var toTime_TuesdayParameter = toTime_Tuesday.HasValue
                ? new ObjectParameter("ToTime_Tuesday", toTime_Tuesday)
                : new ObjectParameter("ToTime_Tuesday", typeof(System.DateTime));

            var description_WednesdayParameter = description_Wednesday != null
                ? new ObjectParameter("Description_Wednesday", description_Wednesday)
                : new ObjectParameter("Description_Wednesday", typeof(string));

            var fromTime_WednesdayParameter = fromTime_Wednesday.HasValue
                ? new ObjectParameter("FromTime_Wednesday", fromTime_Wednesday)
                : new ObjectParameter("FromTime_Wednesday", typeof(System.DateTime));

            var quantity_WednesdayParameter = quantity_Wednesday.HasValue
                ? new ObjectParameter("Quantity_Wednesday", quantity_Wednesday)
                : new ObjectParameter("Quantity_Wednesday", typeof(double));

            var toTime_WednesdayParameter = toTime_Wednesday.HasValue
                ? new ObjectParameter("ToTime_Wednesday", toTime_Wednesday)
                : new ObjectParameter("ToTime_Wednesday", typeof(System.DateTime));

            var description_ThursdayParameter = description_Thursday != null
                ? new ObjectParameter("Description_Thursday", description_Thursday)
                : new ObjectParameter("Description_Thursday", typeof(string));

            var fromTime_ThursdayParameter = fromTime_Thursday.HasValue
                ? new ObjectParameter("FromTime_Thursday", fromTime_Thursday)
                : new ObjectParameter("FromTime_Thursday", typeof(System.DateTime));

            var quantity_ThursdayParameter = quantity_Thursday.HasValue
                ? new ObjectParameter("Quantity_Thursday", quantity_Thursday)
                : new ObjectParameter("Quantity_Thursday", typeof(double));

            var toTime_ThursdayParameter = toTime_Thursday.HasValue
                ? new ObjectParameter("ToTime_Thursday", toTime_Thursday)
                : new ObjectParameter("ToTime_Thursday", typeof(System.DateTime));

            var description_FridayParameter = description_Friday != null
                ? new ObjectParameter("Description_Friday", description_Friday)
                : new ObjectParameter("Description_Friday", typeof(string));

            var fromTime_FridayParameter = fromTime_Friday.HasValue
                ? new ObjectParameter("FromTime_Friday", fromTime_Friday)
                : new ObjectParameter("FromTime_Friday", typeof(System.DateTime));

            var quantity_FridayParameter = quantity_Friday.HasValue
                ? new ObjectParameter("Quantity_Friday", quantity_Friday)
                : new ObjectParameter("Quantity_Friday", typeof(double));

            var toTime_FridayParameter = toTime_Friday.HasValue
                ? new ObjectParameter("ToTime_Friday", toTime_Friday)
                : new ObjectParameter("ToTime_Friday", typeof(System.DateTime));

            var description_SaturdayParameter = description_Saturday != null
                ? new ObjectParameter("Description_Saturday", description_Saturday)
                : new ObjectParameter("Description_Saturday", typeof(string));

            var fromTime_SaturdayParameter = fromTime_Saturday.HasValue
                ? new ObjectParameter("FromTime_Saturday", fromTime_Saturday)
                : new ObjectParameter("FromTime_Saturday", typeof(System.DateTime));

            var quantity_SaturdayParameter = quantity_Saturday.HasValue
                ? new ObjectParameter("Quantity_Saturday", quantity_Saturday)
                : new ObjectParameter("Quantity_Saturday", typeof(double));

            var toTime_SaturdayParameter = toTime_Saturday.HasValue
                ? new ObjectParameter("ToTime_Saturday", toTime_Saturday)
                : new ObjectParameter("ToTime_Saturday", typeof(System.DateTime));

            var description_SundayParameter = description_Sunday != null
                ? new ObjectParameter("Description_Sunday", description_Sunday)
                : new ObjectParameter("Description_Sunday", typeof(string));

            var fromTime_SundayParameter = fromTime_Sunday.HasValue
                ? new ObjectParameter("FromTime_Sunday", fromTime_Sunday)
                : new ObjectParameter("FromTime_Sunday", typeof(System.DateTime));

            var quantity_SundayParameter = quantity_Sunday.HasValue
                ? new ObjectParameter("Quantity_Sunday", quantity_Sunday)
                : new ObjectParameter("Quantity_Sunday", typeof(double));

            var toTime_SundayParameter = toTime_Sunday.HasValue
                ? new ObjectParameter("ToTime_Sunday", toTime_Sunday)
                : new ObjectParameter("ToTime_Sunday", typeof(System.DateTime));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeHeaderLine_AddNew_Result>(
                    "Public_TimeHeaderLine_AddNew", costCenterParameter, departmentParameter, employeeParameter,
                    projectParameter, purposeParameter, startDateParameter, description_MondayParameter,
                    fromTime_MondayParameter, quantity_MondayParameter, toTime_MondayParameter,
                    description_TuesdayParameter, fromTime_TuesdayParameter, quantity_TuesdayParameter,
                    toTime_TuesdayParameter, description_WednesdayParameter, fromTime_WednesdayParameter,
                    quantity_WednesdayParameter, toTime_WednesdayParameter, description_ThursdayParameter,
                    fromTime_ThursdayParameter, quantity_ThursdayParameter, toTime_ThursdayParameter,
                    description_FridayParameter, fromTime_FridayParameter, quantity_FridayParameter,
                    toTime_FridayParameter, description_SaturdayParameter, fromTime_SaturdayParameter,
                    quantity_SaturdayParameter, toTime_SaturdayParameter, description_SundayParameter,
                    fromTime_SundayParameter, quantity_SundayParameter, toTime_SundayParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_TimeHeaderLine_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TimeHeaderLine_Delete",
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_TimeHeaderLine_Select_All_Result> Public_TimeHeaderLine_Select_All(
            string employee, Nullable<System.DateTime> startDate)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeHeaderLine_Select_All_Result>(
                    "Public_TimeHeaderLine_Select_All", employeeParameter, startDateParameter);
        }

        public virtual ObjectResult<Public_TimeHeaderLine_Select_Single_Result> Public_TimeHeaderLine_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeHeaderLine_Select_Single_Result>
                    ("Public_TimeHeaderLine_Select_Single", gUIDParameter);
        }

        public virtual ObjectResult<Public_TimeHeaderLine_Update_Result> Public_TimeHeaderLine_Update(string costCenter,
            string department, string employee, string project, string purpose, Nullable<System.DateTime> startDate,
            string description_Monday, Nullable<System.DateTime> fromTime_Monday, Nullable<double> quantity_Monday,
            Nullable<System.DateTime> toTime_Monday, string description_Tuesday,
            Nullable<System.DateTime> fromTime_Tuesday, Nullable<double> quantity_Tuesday,
            Nullable<System.DateTime> toTime_Tuesday, string description_Wednesday,
            Nullable<System.DateTime> fromTime_Wednesday, Nullable<double> quantity_Wednesday,
            Nullable<System.DateTime> toTime_Wednesday, string description_Thursday,
            Nullable<System.DateTime> fromTime_Thursday, Nullable<double> quantity_Thursday,
            Nullable<System.DateTime> toTime_Thursday, string description_Friday,
            Nullable<System.DateTime> fromTime_Friday, Nullable<double> quantity_Friday,
            Nullable<System.DateTime> toTime_Friday, string description_Saturday,
            Nullable<System.DateTime> fromTime_Saturday, Nullable<double> quantity_Saturday,
            Nullable<System.DateTime> toTime_Saturday, string description_Sunday,
            Nullable<System.DateTime> fromTime_Sunday, Nullable<double> quantity_Sunday,
            Nullable<System.DateTime> toTime_Sunday, string original_CostCenter, string original_Department,
            string original_Employee, string original_Project, string original_Purpose,
            Nullable<System.DateTime> original_StartDate, string original_Description_Monday,
            Nullable<System.DateTime> original_FromTime_Monday, Nullable<System.Guid> original_GUID_Monday,
            Nullable<double> original_Quantity_Monday, Nullable<System.DateTime> original_ToTime_Monday,
            string original_Description_Tuesday, Nullable<System.DateTime> original_FromTime_Tuesday,
            Nullable<System.Guid> original_GUID_Tuesday, Nullable<double> original_Quantity_Tuesday,
            Nullable<System.DateTime> original_ToTime_Tuesday, string original_Description_Wednesday,
            Nullable<System.DateTime> original_FromTime_Wednesday, Nullable<System.Guid> original_GUID_Wednesday,
            Nullable<double> original_Quantity_Wednesday, Nullable<System.DateTime> original_ToTime_Wednesday,
            string original_Description_Thursday, Nullable<System.DateTime> original_FromTime_Thursday,
            Nullable<System.Guid> original_GUID_Thursday, Nullable<double> original_Quantity_Thursday,
            Nullable<System.DateTime> original_ToTime_Thursday, string original_Description_Friday,
            Nullable<System.DateTime> original_FromTime_Friday, Nullable<System.Guid> original_GUID_Friday,
            Nullable<double> original_Quantity_Friday, Nullable<System.DateTime> original_ToTime_Friday,
            string original_Description_Saturday, Nullable<System.DateTime> original_FromTime_Saturday,
            Nullable<System.Guid> original_GUID_Saturday, Nullable<double> original_Quantity_Saturday,
            Nullable<System.DateTime> original_ToTime_Saturday, string original_Description_Sunday,
            Nullable<System.DateTime> original_FromTime_Sunday, Nullable<System.Guid> original_GUID_Sunday,
            Nullable<double> original_Quantity_Sunday, Nullable<System.DateTime> original_ToTime_Sunday,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var startDateParameter = startDate.HasValue
                ? new ObjectParameter("StartDate", startDate)
                : new ObjectParameter("StartDate", typeof(System.DateTime));

            var description_MondayParameter = description_Monday != null
                ? new ObjectParameter("Description_Monday", description_Monday)
                : new ObjectParameter("Description_Monday", typeof(string));

            var fromTime_MondayParameter = fromTime_Monday.HasValue
                ? new ObjectParameter("FromTime_Monday", fromTime_Monday)
                : new ObjectParameter("FromTime_Monday", typeof(System.DateTime));

            var quantity_MondayParameter = quantity_Monday.HasValue
                ? new ObjectParameter("Quantity_Monday", quantity_Monday)
                : new ObjectParameter("Quantity_Monday", typeof(double));

            var toTime_MondayParameter = toTime_Monday.HasValue
                ? new ObjectParameter("ToTime_Monday", toTime_Monday)
                : new ObjectParameter("ToTime_Monday", typeof(System.DateTime));

            var description_TuesdayParameter = description_Tuesday != null
                ? new ObjectParameter("Description_Tuesday", description_Tuesday)
                : new ObjectParameter("Description_Tuesday", typeof(string));

            var fromTime_TuesdayParameter = fromTime_Tuesday.HasValue
                ? new ObjectParameter("FromTime_Tuesday", fromTime_Tuesday)
                : new ObjectParameter("FromTime_Tuesday", typeof(System.DateTime));

            var quantity_TuesdayParameter = quantity_Tuesday.HasValue
                ? new ObjectParameter("Quantity_Tuesday", quantity_Tuesday)
                : new ObjectParameter("Quantity_Tuesday", typeof(double));

            var toTime_TuesdayParameter = toTime_Tuesday.HasValue
                ? new ObjectParameter("ToTime_Tuesday", toTime_Tuesday)
                : new ObjectParameter("ToTime_Tuesday", typeof(System.DateTime));

            var description_WednesdayParameter = description_Wednesday != null
                ? new ObjectParameter("Description_Wednesday", description_Wednesday)
                : new ObjectParameter("Description_Wednesday", typeof(string));

            var fromTime_WednesdayParameter = fromTime_Wednesday.HasValue
                ? new ObjectParameter("FromTime_Wednesday", fromTime_Wednesday)
                : new ObjectParameter("FromTime_Wednesday", typeof(System.DateTime));

            var quantity_WednesdayParameter = quantity_Wednesday.HasValue
                ? new ObjectParameter("Quantity_Wednesday", quantity_Wednesday)
                : new ObjectParameter("Quantity_Wednesday", typeof(double));

            var toTime_WednesdayParameter = toTime_Wednesday.HasValue
                ? new ObjectParameter("ToTime_Wednesday", toTime_Wednesday)
                : new ObjectParameter("ToTime_Wednesday", typeof(System.DateTime));

            var description_ThursdayParameter = description_Thursday != null
                ? new ObjectParameter("Description_Thursday", description_Thursday)
                : new ObjectParameter("Description_Thursday", typeof(string));

            var fromTime_ThursdayParameter = fromTime_Thursday.HasValue
                ? new ObjectParameter("FromTime_Thursday", fromTime_Thursday)
                : new ObjectParameter("FromTime_Thursday", typeof(System.DateTime));

            var quantity_ThursdayParameter = quantity_Thursday.HasValue
                ? new ObjectParameter("Quantity_Thursday", quantity_Thursday)
                : new ObjectParameter("Quantity_Thursday", typeof(double));

            var toTime_ThursdayParameter = toTime_Thursday.HasValue
                ? new ObjectParameter("ToTime_Thursday", toTime_Thursday)
                : new ObjectParameter("ToTime_Thursday", typeof(System.DateTime));

            var description_FridayParameter = description_Friday != null
                ? new ObjectParameter("Description_Friday", description_Friday)
                : new ObjectParameter("Description_Friday", typeof(string));

            var fromTime_FridayParameter = fromTime_Friday.HasValue
                ? new ObjectParameter("FromTime_Friday", fromTime_Friday)
                : new ObjectParameter("FromTime_Friday", typeof(System.DateTime));

            var quantity_FridayParameter = quantity_Friday.HasValue
                ? new ObjectParameter("Quantity_Friday", quantity_Friday)
                : new ObjectParameter("Quantity_Friday", typeof(double));

            var toTime_FridayParameter = toTime_Friday.HasValue
                ? new ObjectParameter("ToTime_Friday", toTime_Friday)
                : new ObjectParameter("ToTime_Friday", typeof(System.DateTime));

            var description_SaturdayParameter = description_Saturday != null
                ? new ObjectParameter("Description_Saturday", description_Saturday)
                : new ObjectParameter("Description_Saturday", typeof(string));

            var fromTime_SaturdayParameter = fromTime_Saturday.HasValue
                ? new ObjectParameter("FromTime_Saturday", fromTime_Saturday)
                : new ObjectParameter("FromTime_Saturday", typeof(System.DateTime));

            var quantity_SaturdayParameter = quantity_Saturday.HasValue
                ? new ObjectParameter("Quantity_Saturday", quantity_Saturday)
                : new ObjectParameter("Quantity_Saturday", typeof(double));

            var toTime_SaturdayParameter = toTime_Saturday.HasValue
                ? new ObjectParameter("ToTime_Saturday", toTime_Saturday)
                : new ObjectParameter("ToTime_Saturday", typeof(System.DateTime));

            var description_SundayParameter = description_Sunday != null
                ? new ObjectParameter("Description_Sunday", description_Sunday)
                : new ObjectParameter("Description_Sunday", typeof(string));

            var fromTime_SundayParameter = fromTime_Sunday.HasValue
                ? new ObjectParameter("FromTime_Sunday", fromTime_Sunday)
                : new ObjectParameter("FromTime_Sunday", typeof(System.DateTime));

            var quantity_SundayParameter = quantity_Sunday.HasValue
                ? new ObjectParameter("Quantity_Sunday", quantity_Sunday)
                : new ObjectParameter("Quantity_Sunday", typeof(double));

            var toTime_SundayParameter = toTime_Sunday.HasValue
                ? new ObjectParameter("ToTime_Sunday", toTime_Sunday)
                : new ObjectParameter("ToTime_Sunday", typeof(System.DateTime));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_Description_MondayParameter = original_Description_Monday != null
                ? new ObjectParameter("Original_Description_Monday", original_Description_Monday)
                : new ObjectParameter("Original_Description_Monday", typeof(string));

            var original_FromTime_MondayParameter = original_FromTime_Monday.HasValue
                ? new ObjectParameter("Original_FromTime_Monday", original_FromTime_Monday)
                : new ObjectParameter("Original_FromTime_Monday", typeof(System.DateTime));

            var original_GUID_MondayParameter = original_GUID_Monday.HasValue
                ? new ObjectParameter("Original_GUID_Monday", original_GUID_Monday)
                : new ObjectParameter("Original_GUID_Monday", typeof(System.Guid));

            var original_Quantity_MondayParameter = original_Quantity_Monday.HasValue
                ? new ObjectParameter("Original_Quantity_Monday", original_Quantity_Monday)
                : new ObjectParameter("Original_Quantity_Monday", typeof(double));

            var original_ToTime_MondayParameter = original_ToTime_Monday.HasValue
                ? new ObjectParameter("Original_ToTime_Monday", original_ToTime_Monday)
                : new ObjectParameter("Original_ToTime_Monday", typeof(System.DateTime));

            var original_Description_TuesdayParameter = original_Description_Tuesday != null
                ? new ObjectParameter("Original_Description_Tuesday", original_Description_Tuesday)
                : new ObjectParameter("Original_Description_Tuesday", typeof(string));

            var original_FromTime_TuesdayParameter = original_FromTime_Tuesday.HasValue
                ? new ObjectParameter("Original_FromTime_Tuesday", original_FromTime_Tuesday)
                : new ObjectParameter("Original_FromTime_Tuesday", typeof(System.DateTime));

            var original_GUID_TuesdayParameter = original_GUID_Tuesday.HasValue
                ? new ObjectParameter("Original_GUID_Tuesday", original_GUID_Tuesday)
                : new ObjectParameter("Original_GUID_Tuesday", typeof(System.Guid));

            var original_Quantity_TuesdayParameter = original_Quantity_Tuesday.HasValue
                ? new ObjectParameter("Original_Quantity_Tuesday", original_Quantity_Tuesday)
                : new ObjectParameter("Original_Quantity_Tuesday", typeof(double));

            var original_ToTime_TuesdayParameter = original_ToTime_Tuesday.HasValue
                ? new ObjectParameter("Original_ToTime_Tuesday", original_ToTime_Tuesday)
                : new ObjectParameter("Original_ToTime_Tuesday", typeof(System.DateTime));

            var original_Description_WednesdayParameter = original_Description_Wednesday != null
                ? new ObjectParameter("Original_Description_Wednesday", original_Description_Wednesday)
                : new ObjectParameter("Original_Description_Wednesday", typeof(string));

            var original_FromTime_WednesdayParameter = original_FromTime_Wednesday.HasValue
                ? new ObjectParameter("Original_FromTime_Wednesday", original_FromTime_Wednesday)
                : new ObjectParameter("Original_FromTime_Wednesday", typeof(System.DateTime));

            var original_GUID_WednesdayParameter = original_GUID_Wednesday.HasValue
                ? new ObjectParameter("Original_GUID_Wednesday", original_GUID_Wednesday)
                : new ObjectParameter("Original_GUID_Wednesday", typeof(System.Guid));

            var original_Quantity_WednesdayParameter = original_Quantity_Wednesday.HasValue
                ? new ObjectParameter("Original_Quantity_Wednesday", original_Quantity_Wednesday)
                : new ObjectParameter("Original_Quantity_Wednesday", typeof(double));

            var original_ToTime_WednesdayParameter = original_ToTime_Wednesday.HasValue
                ? new ObjectParameter("Original_ToTime_Wednesday", original_ToTime_Wednesday)
                : new ObjectParameter("Original_ToTime_Wednesday", typeof(System.DateTime));

            var original_Description_ThursdayParameter = original_Description_Thursday != null
                ? new ObjectParameter("Original_Description_Thursday", original_Description_Thursday)
                : new ObjectParameter("Original_Description_Thursday", typeof(string));

            var original_FromTime_ThursdayParameter = original_FromTime_Thursday.HasValue
                ? new ObjectParameter("Original_FromTime_Thursday", original_FromTime_Thursday)
                : new ObjectParameter("Original_FromTime_Thursday", typeof(System.DateTime));

            var original_GUID_ThursdayParameter = original_GUID_Thursday.HasValue
                ? new ObjectParameter("Original_GUID_Thursday", original_GUID_Thursday)
                : new ObjectParameter("Original_GUID_Thursday", typeof(System.Guid));

            var original_Quantity_ThursdayParameter = original_Quantity_Thursday.HasValue
                ? new ObjectParameter("Original_Quantity_Thursday", original_Quantity_Thursday)
                : new ObjectParameter("Original_Quantity_Thursday", typeof(double));

            var original_ToTime_ThursdayParameter = original_ToTime_Thursday.HasValue
                ? new ObjectParameter("Original_ToTime_Thursday", original_ToTime_Thursday)
                : new ObjectParameter("Original_ToTime_Thursday", typeof(System.DateTime));

            var original_Description_FridayParameter = original_Description_Friday != null
                ? new ObjectParameter("Original_Description_Friday", original_Description_Friday)
                : new ObjectParameter("Original_Description_Friday", typeof(string));

            var original_FromTime_FridayParameter = original_FromTime_Friday.HasValue
                ? new ObjectParameter("Original_FromTime_Friday", original_FromTime_Friday)
                : new ObjectParameter("Original_FromTime_Friday", typeof(System.DateTime));

            var original_GUID_FridayParameter = original_GUID_Friday.HasValue
                ? new ObjectParameter("Original_GUID_Friday", original_GUID_Friday)
                : new ObjectParameter("Original_GUID_Friday", typeof(System.Guid));

            var original_Quantity_FridayParameter = original_Quantity_Friday.HasValue
                ? new ObjectParameter("Original_Quantity_Friday", original_Quantity_Friday)
                : new ObjectParameter("Original_Quantity_Friday", typeof(double));

            var original_ToTime_FridayParameter = original_ToTime_Friday.HasValue
                ? new ObjectParameter("Original_ToTime_Friday", original_ToTime_Friday)
                : new ObjectParameter("Original_ToTime_Friday", typeof(System.DateTime));

            var original_Description_SaturdayParameter = original_Description_Saturday != null
                ? new ObjectParameter("Original_Description_Saturday", original_Description_Saturday)
                : new ObjectParameter("Original_Description_Saturday", typeof(string));

            var original_FromTime_SaturdayParameter = original_FromTime_Saturday.HasValue
                ? new ObjectParameter("Original_FromTime_Saturday", original_FromTime_Saturday)
                : new ObjectParameter("Original_FromTime_Saturday", typeof(System.DateTime));

            var original_GUID_SaturdayParameter = original_GUID_Saturday.HasValue
                ? new ObjectParameter("Original_GUID_Saturday", original_GUID_Saturday)
                : new ObjectParameter("Original_GUID_Saturday", typeof(System.Guid));

            var original_Quantity_SaturdayParameter = original_Quantity_Saturday.HasValue
                ? new ObjectParameter("Original_Quantity_Saturday", original_Quantity_Saturday)
                : new ObjectParameter("Original_Quantity_Saturday", typeof(double));

            var original_ToTime_SaturdayParameter = original_ToTime_Saturday.HasValue
                ? new ObjectParameter("Original_ToTime_Saturday", original_ToTime_Saturday)
                : new ObjectParameter("Original_ToTime_Saturday", typeof(System.DateTime));

            var original_Description_SundayParameter = original_Description_Sunday != null
                ? new ObjectParameter("Original_Description_Sunday", original_Description_Sunday)
                : new ObjectParameter("Original_Description_Sunday", typeof(string));

            var original_FromTime_SundayParameter = original_FromTime_Sunday.HasValue
                ? new ObjectParameter("Original_FromTime_Sunday", original_FromTime_Sunday)
                : new ObjectParameter("Original_FromTime_Sunday", typeof(System.DateTime));

            var original_GUID_SundayParameter = original_GUID_Sunday.HasValue
                ? new ObjectParameter("Original_GUID_Sunday", original_GUID_Sunday)
                : new ObjectParameter("Original_GUID_Sunday", typeof(System.Guid));

            var original_Quantity_SundayParameter = original_Quantity_Sunday.HasValue
                ? new ObjectParameter("Original_Quantity_Sunday", original_Quantity_Sunday)
                : new ObjectParameter("Original_Quantity_Sunday", typeof(double));

            var original_ToTime_SundayParameter = original_ToTime_Sunday.HasValue
                ? new ObjectParameter("Original_ToTime_Sunday", original_ToTime_Sunday)
                : new ObjectParameter("Original_ToTime_Sunday", typeof(System.DateTime));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeHeaderLine_Update_Result>(
                    "Public_TimeHeaderLine_Update", costCenterParameter, departmentParameter, employeeParameter,
                    projectParameter, purposeParameter, startDateParameter, description_MondayParameter,
                    fromTime_MondayParameter, quantity_MondayParameter, toTime_MondayParameter,
                    description_TuesdayParameter, fromTime_TuesdayParameter, quantity_TuesdayParameter,
                    toTime_TuesdayParameter, description_WednesdayParameter, fromTime_WednesdayParameter,
                    quantity_WednesdayParameter, toTime_WednesdayParameter, description_ThursdayParameter,
                    fromTime_ThursdayParameter, quantity_ThursdayParameter, toTime_ThursdayParameter,
                    description_FridayParameter, fromTime_FridayParameter, quantity_FridayParameter,
                    toTime_FridayParameter, description_SaturdayParameter, fromTime_SaturdayParameter,
                    quantity_SaturdayParameter, toTime_SaturdayParameter, description_SundayParameter,
                    fromTime_SundayParameter, quantity_SundayParameter, toTime_SundayParameter,
                    original_CostCenterParameter, original_DepartmentParameter, original_EmployeeParameter,
                    original_ProjectParameter, original_PurposeParameter, original_StartDateParameter,
                    original_Description_MondayParameter, original_FromTime_MondayParameter,
                    original_GUID_MondayParameter, original_Quantity_MondayParameter, original_ToTime_MondayParameter,
                    original_Description_TuesdayParameter, original_FromTime_TuesdayParameter,
                    original_GUID_TuesdayParameter, original_Quantity_TuesdayParameter, original_ToTime_TuesdayParameter,
                    original_Description_WednesdayParameter, original_FromTime_WednesdayParameter,
                    original_GUID_WednesdayParameter, original_Quantity_WednesdayParameter,
                    original_ToTime_WednesdayParameter, original_Description_ThursdayParameter,
                    original_FromTime_ThursdayParameter, original_GUID_ThursdayParameter,
                    original_Quantity_ThursdayParameter, original_ToTime_ThursdayParameter,
                    original_Description_FridayParameter, original_FromTime_FridayParameter,
                    original_GUID_FridayParameter, original_Quantity_FridayParameter, original_ToTime_FridayParameter,
                    original_Description_SaturdayParameter, original_FromTime_SaturdayParameter,
                    original_GUID_SaturdayParameter, original_Quantity_SaturdayParameter,
                    original_ToTime_SaturdayParameter, original_Description_SundayParameter,
                    original_FromTime_SundayParameter, original_GUID_SundayParameter, original_Quantity_SundayParameter,
                    original_ToTime_SundayParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual ObjectResult<Public_TimeItems_AddNew_Result> Public_TimeItems_AddNew(string description,
            Nullable<System.Guid> gUID_TimeLine, Nullable<bool> invoiceAble, string item, Nullable<double> quantity,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var gUID_TimeLineParameter = gUID_TimeLine.HasValue
                ? new ObjectParameter("GUID_TimeLine", gUID_TimeLine)
                : new ObjectParameter("GUID_TimeLine", typeof(System.Guid));

            var invoiceAbleParameter = invoiceAble.HasValue
                ? new ObjectParameter("InvoiceAble", invoiceAble)
                : new ObjectParameter("InvoiceAble", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeItems_AddNew_Result>(
                    "Public_TimeItems_AddNew", descriptionParameter, gUID_TimeLineParameter, invoiceAbleParameter,
                    itemParameter, quantityParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_TimeItems_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TimeItems_Delete", gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_TimeItems_Select_All_Result> Public_TimeItems_Select_All(
            Nullable<System.Guid> gUID_TimeLine)
        {
            var gUID_TimeLineParameter = gUID_TimeLine.HasValue
                ? new ObjectParameter("GUID_TimeLine", gUID_TimeLine)
                : new ObjectParameter("GUID_TimeLine", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeItems_Select_All_Result>(
                    "Public_TimeItems_Select_All", gUID_TimeLineParameter);
        }

        public virtual ObjectResult<Public_TimeItems_Select_Single_Result> Public_TimeItems_Select_Single(
            Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeItems_Select_Single_Result>(
                    "Public_TimeItems_Select_Single", gUIDParameter);
        }

        public virtual ObjectResult<Public_TimeItems_Update_Result> Public_TimeItems_Update(string description,
            Nullable<bool> invoiceAble, string item, Nullable<double> quantity, string original_Description,
            Nullable<bool> original_InvoiceAble, string original_Item, Nullable<double> original_Quantity,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var invoiceAbleParameter = invoiceAble.HasValue
                ? new ObjectParameter("InvoiceAble", invoiceAble)
                : new ObjectParameter("InvoiceAble", typeof(bool));

            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InvoiceAbleParameter = original_InvoiceAble.HasValue
                ? new ObjectParameter("Original_InvoiceAble", original_InvoiceAble)
                : new ObjectParameter("Original_InvoiceAble", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TimeItems_Update_Result>(
                    "Public_TimeItems_Update", descriptionParameter, invoiceAbleParameter, itemParameter,
                    quantityParameter, original_DescriptionParameter, original_InvoiceAbleParameter,
                    original_ItemParameter, original_QuantityParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_TimeLine_AddNew(string description, Nullable<System.DateTime> fromTime,
            Nullable<System.Guid> gUID_TimeHeaderLine, Nullable<double> quantity, Nullable<System.DateTime> toTime,
            Nullable<byte> weekDay, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var fromTimeParameter = fromTime.HasValue
                ? new ObjectParameter("FromTime", fromTime)
                : new ObjectParameter("FromTime", typeof(System.DateTime));

            var gUID_TimeHeaderLineParameter = gUID_TimeHeaderLine.HasValue
                ? new ObjectParameter("GUID_TimeHeaderLine", gUID_TimeHeaderLine)
                : new ObjectParameter("GUID_TimeHeaderLine", typeof(System.Guid));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var toTimeParameter = toTime.HasValue
                ? new ObjectParameter("ToTime", toTime)
                : new ObjectParameter("ToTime", typeof(System.DateTime));

            var weekDayParameter = weekDay.HasValue
                ? new ObjectParameter("WeekDay", weekDay)
                : new ObjectParameter("WeekDay", typeof(byte));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TimeLine_AddNew",
                descriptionParameter, fromTimeParameter, gUID_TimeHeaderLineParameter, quantityParameter,
                toTimeParameter, weekDayParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_TimeLine_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TimeLine_Delete", gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_TimeLine_Update(string description, Nullable<System.DateTime> fromTime,
            Nullable<double> quantity, Nullable<System.DateTime> toTime, string original_Description,
            Nullable<System.DateTime> original_FromTime, Nullable<double> original_Quantity,
            Nullable<System.DateTime> original_ToTime, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var fromTimeParameter = fromTime.HasValue
                ? new ObjectParameter("FromTime", fromTime)
                : new ObjectParameter("FromTime", typeof(System.DateTime));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var toTimeParameter = toTime.HasValue
                ? new ObjectParameter("ToTime", toTime)
                : new ObjectParameter("ToTime", typeof(System.DateTime));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_FromTimeParameter = original_FromTime.HasValue
                ? new ObjectParameter("Original_FromTime", original_FromTime)
                : new ObjectParameter("Original_FromTime", typeof(System.DateTime));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_ToTimeParameter = original_ToTime.HasValue
                ? new ObjectParameter("Original_ToTime", original_ToTime)
                : new ObjectParameter("Original_ToTime", typeof(System.DateTime));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TimeLine_Update",
                descriptionParameter, fromTimeParameter, quantityParameter, toTimeParameter,
                original_DescriptionParameter, original_FromTimeParameter, original_QuantityParameter,
                original_ToTimeParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_Titles_AddNew_Result> Public_Titles_AddNew(string title,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Titles_AddNew_Result>(
                    "Public_Titles_AddNew", titleParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int Public_Titles_Delete(string original_Title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Titles_Delete",
                original_TitleParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Titles_Select_All_Result> Public_Titles_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Titles_Select_All_Result>(
                    "Public_Titles_Select_All");
        }

        public virtual ObjectResult<Public_Titles_Select_Single_Result> Public_Titles_Select_Single(
            string original_Title, Nullable<System.Guid> gUID)
        {
            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Titles_Select_Single_Result>(
                    "Public_Titles_Select_Single", original_TitleParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Titles_Update_Result> Public_Titles_Update(string original_Title,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Titles_Update_Result>(
                    "Public_Titles_Update", original_TitleParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Transactions_AddNew(string account, Nullable<double> amount,
            Nullable<double> amountBase, Nullable<short> approved, string betalingsID,
            Nullable<double> cashDiscountAmount, Nullable<System.DateTime> cashDiscountDue, Nullable<short> closed,
            Nullable<byte> code, string costCenter, string currency, string customer, Nullable<System.DateTime> date,
            string department, string description, Nullable<System.DateTime> due, string dutyCode, string employee,
            Nullable<byte> info, Nullable<short> interestCarrier, string invoiceNo, string kortArt,
            Nullable<double> open, Nullable<double> openBase, Nullable<short> opening, string optional1,
            string optional2, Nullable<System.DateTime> originalDue, string project, string purpose,
            Nullable<double> quantity, Nullable<double> rate, string remarks, string setOff, string shipTo,
            string source, string supplier, string tax, Nullable<double> taxAmount, Nullable<double> trail,
            Nullable<bool> useCashDiscount, string voucher, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var amountBaseParameter = amountBase.HasValue
                ? new ObjectParameter("AmountBase", amountBase)
                : new ObjectParameter("AmountBase", typeof(double));

            var approvedParameter = approved.HasValue
                ? new ObjectParameter("Approved", approved)
                : new ObjectParameter("Approved", typeof(short));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var cashDiscountDueParameter = cashDiscountDue.HasValue
                ? new ObjectParameter("CashDiscountDue", cashDiscountDue)
                : new ObjectParameter("CashDiscountDue", typeof(System.DateTime));

            var closedParameter = closed.HasValue
                ? new ObjectParameter("Closed", closed)
                : new ObjectParameter("Closed", typeof(short));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var dutyCodeParameter = dutyCode != null
                ? new ObjectParameter("DutyCode", dutyCode)
                : new ObjectParameter("DutyCode", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(byte));

            var interestCarrierParameter = interestCarrier.HasValue
                ? new ObjectParameter("InterestCarrier", interestCarrier)
                : new ObjectParameter("InterestCarrier", typeof(short));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var openParameter = open.HasValue
                ? new ObjectParameter("Open", open)
                : new ObjectParameter("Open", typeof(double));

            var openBaseParameter = openBase.HasValue
                ? new ObjectParameter("OpenBase", openBase)
                : new ObjectParameter("OpenBase", typeof(double));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var originalDueParameter = originalDue.HasValue
                ? new ObjectParameter("OriginalDue", originalDue)
                : new ObjectParameter("OriginalDue", typeof(System.DateTime));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxAmountParameter = taxAmount.HasValue
                ? new ObjectParameter("TaxAmount", taxAmount)
                : new ObjectParameter("TaxAmount", typeof(double));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var useCashDiscountParameter = useCashDiscount.HasValue
                ? new ObjectParameter("UseCashDiscount", useCashDiscount)
                : new ObjectParameter("UseCashDiscount", typeof(bool));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Transactions_AddNew",
                accountParameter, amountParameter, amountBaseParameter, approvedParameter, betalingsIDParameter,
                cashDiscountAmountParameter, cashDiscountDueParameter, closedParameter, codeParameter,
                costCenterParameter, currencyParameter, customerParameter, dateParameter, departmentParameter,
                descriptionParameter, dueParameter, dutyCodeParameter, employeeParameter, infoParameter,
                interestCarrierParameter, invoiceNoParameter, kortArtParameter, openParameter, openBaseParameter,
                openingParameter, optional1Parameter, optional2Parameter, originalDueParameter, projectParameter,
                purposeParameter, quantityParameter, rateParameter, remarksParameter, setOffParameter, shipToParameter,
                sourceParameter, supplierParameter, taxParameter, taxAmountParameter, trailParameter,
                useCashDiscountParameter, voucherParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_Transactions_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Transactions_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Transactions_Select_All_Result> Public_Transactions_Select_All(
            string account, string customer, string supplier, Nullable<double> trail)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Transactions_Select_All_Result>(
                    "Public_Transactions_Select_All", accountParameter, customerParameter, supplierParameter,
                    trailParameter);
        }

        public virtual ObjectResult<Public_Transactions_Select_Single_Result> Public_Transactions_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Transactions_Select_Single_Result>(
                    "Public_Transactions_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual int Public_Transactions_Update(string account, Nullable<double> amount,
            Nullable<double> amountBase, Nullable<short> approved, string betalingsID,
            Nullable<double> cashDiscountAmount, Nullable<System.DateTime> cashDiscountDue, Nullable<short> closed,
            Nullable<byte> code, string costCenter, string currency, string customer, Nullable<System.DateTime> date,
            string department, string description, Nullable<System.DateTime> due, string dutyCode, string employee,
            Nullable<bool> endorsed, Nullable<double> endorsedAmount, string endorsedBy,
            Nullable<System.DateTime> endorsedDate, Nullable<byte> info, Nullable<short> interestCarrier,
            string invoiceNo, string kortArt, Nullable<double> open, Nullable<double> openBase, Nullable<short> opening,
            string optional1, string optional2, Nullable<System.DateTime> originalDue, string project, string purpose,
            Nullable<double> quantity, Nullable<double> rate, string remarks, string setOff, string shipTo,
            string source, string supplier, string tax, Nullable<double> taxAmount, Nullable<double> trail,
            Nullable<bool> useCashDiscount, string voucher, string original_Account, Nullable<double> original_Amount,
            Nullable<double> original_AmountBase, Nullable<short> original_Approved, string original_BetalingsID,
            Nullable<double> original_CashDiscountAmount, Nullable<System.DateTime> original_CashDiscountDue,
            Nullable<short> original_Closed, Nullable<byte> original_Code, string original_CostCenter,
            string original_Currency, string original_Customer, Nullable<System.DateTime> original_Date,
            string original_Department, string original_Description, Nullable<System.DateTime> original_Due,
            string original_DutyCode, string original_Employee, Nullable<bool> original_Endorsed,
            Nullable<double> original_EndorsedAmount, string original_EndorsedBy,
            Nullable<System.DateTime> original_EndorsedDate, Nullable<byte> original_Info,
            Nullable<short> original_InterestCarrier, string original_InvoiceNo, string original_KortArt,
            Nullable<double> original_Open, Nullable<double> original_OpenBase, Nullable<short> original_Opening,
            string original_Optional1, string original_Optional2, Nullable<System.DateTime> original_OriginalDue,
            string original_Project, string original_Purpose, Nullable<double> original_Quantity,
            Nullable<double> original_Rate, Nullable<int> original_RecordId, string original_Remarks,
            string original_SetOff, string original_ShipTo, string original_Source, string original_Supplier,
            string original_Tax, Nullable<double> original_TaxAmount, Nullable<double> original_Trail,
            Nullable<bool> original_UseCashDiscount, string original_Voucher, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var amountBaseParameter = amountBase.HasValue
                ? new ObjectParameter("AmountBase", amountBase)
                : new ObjectParameter("AmountBase", typeof(double));

            var approvedParameter = approved.HasValue
                ? new ObjectParameter("Approved", approved)
                : new ObjectParameter("Approved", typeof(short));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var cashDiscountDueParameter = cashDiscountDue.HasValue
                ? new ObjectParameter("CashDiscountDue", cashDiscountDue)
                : new ObjectParameter("CashDiscountDue", typeof(System.DateTime));

            var closedParameter = closed.HasValue
                ? new ObjectParameter("Closed", closed)
                : new ObjectParameter("Closed", typeof(short));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var dutyCodeParameter = dutyCode != null
                ? new ObjectParameter("DutyCode", dutyCode)
                : new ObjectParameter("DutyCode", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var endorsedParameter = endorsed.HasValue
                ? new ObjectParameter("Endorsed", endorsed)
                : new ObjectParameter("Endorsed", typeof(bool));

            var endorsedAmountParameter = endorsedAmount.HasValue
                ? new ObjectParameter("EndorsedAmount", endorsedAmount)
                : new ObjectParameter("EndorsedAmount", typeof(double));

            var endorsedByParameter = endorsedBy != null
                ? new ObjectParameter("EndorsedBy", endorsedBy)
                : new ObjectParameter("EndorsedBy", typeof(string));

            var endorsedDateParameter = endorsedDate.HasValue
                ? new ObjectParameter("EndorsedDate", endorsedDate)
                : new ObjectParameter("EndorsedDate", typeof(System.DateTime));

            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(byte));

            var interestCarrierParameter = interestCarrier.HasValue
                ? new ObjectParameter("InterestCarrier", interestCarrier)
                : new ObjectParameter("InterestCarrier", typeof(short));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var openParameter = open.HasValue
                ? new ObjectParameter("Open", open)
                : new ObjectParameter("Open", typeof(double));

            var openBaseParameter = openBase.HasValue
                ? new ObjectParameter("OpenBase", openBase)
                : new ObjectParameter("OpenBase", typeof(double));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var originalDueParameter = originalDue.HasValue
                ? new ObjectParameter("OriginalDue", originalDue)
                : new ObjectParameter("OriginalDue", typeof(System.DateTime));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxAmountParameter = taxAmount.HasValue
                ? new ObjectParameter("TaxAmount", taxAmount)
                : new ObjectParameter("TaxAmount", typeof(double));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var useCashDiscountParameter = useCashDiscount.HasValue
                ? new ObjectParameter("UseCashDiscount", useCashDiscount)
                : new ObjectParameter("UseCashDiscount", typeof(bool));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountParameter = original_Amount.HasValue
                ? new ObjectParameter("Original_Amount", original_Amount)
                : new ObjectParameter("Original_Amount", typeof(double));

            var original_AmountBaseParameter = original_AmountBase.HasValue
                ? new ObjectParameter("Original_AmountBase", original_AmountBase)
                : new ObjectParameter("Original_AmountBase", typeof(double));

            var original_ApprovedParameter = original_Approved.HasValue
                ? new ObjectParameter("Original_Approved", original_Approved)
                : new ObjectParameter("Original_Approved", typeof(short));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_CashDiscountAmountParameter = original_CashDiscountAmount.HasValue
                ? new ObjectParameter("Original_CashDiscountAmount", original_CashDiscountAmount)
                : new ObjectParameter("Original_CashDiscountAmount", typeof(double));

            var original_CashDiscountDueParameter = original_CashDiscountDue.HasValue
                ? new ObjectParameter("Original_CashDiscountDue", original_CashDiscountDue)
                : new ObjectParameter("Original_CashDiscountDue", typeof(System.DateTime));

            var original_ClosedParameter = original_Closed.HasValue
                ? new ObjectParameter("Original_Closed", original_Closed)
                : new ObjectParameter("Original_Closed", typeof(short));

            var original_CodeParameter = original_Code.HasValue
                ? new ObjectParameter("Original_Code", original_Code)
                : new ObjectParameter("Original_Code", typeof(byte));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_DutyCodeParameter = original_DutyCode != null
                ? new ObjectParameter("Original_DutyCode", original_DutyCode)
                : new ObjectParameter("Original_DutyCode", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_EndorsedParameter = original_Endorsed.HasValue
                ? new ObjectParameter("Original_Endorsed", original_Endorsed)
                : new ObjectParameter("Original_Endorsed", typeof(bool));

            var original_EndorsedAmountParameter = original_EndorsedAmount.HasValue
                ? new ObjectParameter("Original_EndorsedAmount", original_EndorsedAmount)
                : new ObjectParameter("Original_EndorsedAmount", typeof(double));

            var original_EndorsedByParameter = original_EndorsedBy != null
                ? new ObjectParameter("Original_EndorsedBy", original_EndorsedBy)
                : new ObjectParameter("Original_EndorsedBy", typeof(string));

            var original_EndorsedDateParameter = original_EndorsedDate.HasValue
                ? new ObjectParameter("Original_EndorsedDate", original_EndorsedDate)
                : new ObjectParameter("Original_EndorsedDate", typeof(System.DateTime));

            var original_InfoParameter = original_Info.HasValue
                ? new ObjectParameter("Original_Info", original_Info)
                : new ObjectParameter("Original_Info", typeof(byte));

            var original_InterestCarrierParameter = original_InterestCarrier.HasValue
                ? new ObjectParameter("Original_InterestCarrier", original_InterestCarrier)
                : new ObjectParameter("Original_InterestCarrier", typeof(short));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_OpenParameter = original_Open.HasValue
                ? new ObjectParameter("Original_Open", original_Open)
                : new ObjectParameter("Original_Open", typeof(double));

            var original_OpenBaseParameter = original_OpenBase.HasValue
                ? new ObjectParameter("Original_OpenBase", original_OpenBase)
                : new ObjectParameter("Original_OpenBase", typeof(double));

            var original_OpeningParameter = original_Opening.HasValue
                ? new ObjectParameter("Original_Opening", original_Opening)
                : new ObjectParameter("Original_Opening", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OriginalDueParameter = original_OriginalDue.HasValue
                ? new ObjectParameter("Original_OriginalDue", original_OriginalDue)
                : new ObjectParameter("Original_OriginalDue", typeof(System.DateTime));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxAmountParameter = original_TaxAmount.HasValue
                ? new ObjectParameter("Original_TaxAmount", original_TaxAmount)
                : new ObjectParameter("Original_TaxAmount", typeof(double));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var original_UseCashDiscountParameter = original_UseCashDiscount.HasValue
                ? new ObjectParameter("Original_UseCashDiscount", original_UseCashDiscount)
                : new ObjectParameter("Original_UseCashDiscount", typeof(bool));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Transactions_Update",
                accountParameter, amountParameter, amountBaseParameter, approvedParameter, betalingsIDParameter,
                cashDiscountAmountParameter, cashDiscountDueParameter, closedParameter, codeParameter,
                costCenterParameter, currencyParameter, customerParameter, dateParameter, departmentParameter,
                descriptionParameter, dueParameter, dutyCodeParameter, employeeParameter, endorsedParameter,
                endorsedAmountParameter, endorsedByParameter, endorsedDateParameter, infoParameter,
                interestCarrierParameter, invoiceNoParameter, kortArtParameter, openParameter, openBaseParameter,
                openingParameter, optional1Parameter, optional2Parameter, originalDueParameter, projectParameter,
                purposeParameter, quantityParameter, rateParameter, remarksParameter, setOffParameter, shipToParameter,
                sourceParameter, supplierParameter, taxParameter, taxAmountParameter, trailParameter,
                useCashDiscountParameter, voucherParameter, original_AccountParameter, original_AmountParameter,
                original_AmountBaseParameter, original_ApprovedParameter, original_BetalingsIDParameter,
                original_CashDiscountAmountParameter, original_CashDiscountDueParameter, original_ClosedParameter,
                original_CodeParameter, original_CostCenterParameter, original_CurrencyParameter,
                original_CustomerParameter, original_DateParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DueParameter, original_DutyCodeParameter,
                original_EmployeeParameter, original_EndorsedParameter, original_EndorsedAmountParameter,
                original_EndorsedByParameter, original_EndorsedDateParameter, original_InfoParameter,
                original_InterestCarrierParameter, original_InvoiceNoParameter, original_KortArtParameter,
                original_OpenParameter, original_OpenBaseParameter, original_OpeningParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_OriginalDueParameter,
                original_ProjectParameter, original_PurposeParameter, original_QuantityParameter, original_RateParameter,
                original_RecordIdParameter, original_RemarksParameter, original_SetOffParameter,
                original_ShipToParameter, original_SourceParameter, original_SupplierParameter, original_TaxParameter,
                original_TaxAmountParameter, original_TrailParameter, original_UseCashDiscountParameter,
                original_VoucherParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual ObjectResult<Public_TransEntry_AddNew_Result> Public_TransEntry_AddNew(string account,
            Nullable<double> amount, string betalingsID, Nullable<double> cashDiscountAmount, Nullable<byte> code,
            string costCenter, string currency, string customer, Nullable<System.DateTime> date, string department,
            string description, Nullable<System.DateTime> due, string employee, string invoiceNo, string journal,
            string kortArt, Nullable<short> lineNo, Nullable<short> opening, string optional1, string optional2,
            string project, string purpose, Nullable<double> quantity, Nullable<double> rate, string remarks,
            string setOff, string source, string supplier, string tax, string voucher, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TransEntry_AddNew_Result>(
                    "Public_TransEntry_AddNew", accountParameter, amountParameter, betalingsIDParameter,
                    cashDiscountAmountParameter, codeParameter, costCenterParameter, currencyParameter,
                    customerParameter, dateParameter, departmentParameter, descriptionParameter, dueParameter,
                    employeeParameter, invoiceNoParameter, journalParameter, kortArtParameter, lineNoParameter,
                    openingParameter, optional1Parameter, optional2Parameter, projectParameter, purposeParameter,
                    quantityParameter, rateParameter, remarksParameter, setOffParameter, sourceParameter,
                    supplierParameter, taxParameter, voucherParameter, returnNoRowsParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_TransEntry_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_TransEntry_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_TransEntry_Select_All_Result> Public_TransEntry_Select_All(string journal)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TransEntry_Select_All_Result>(
                    "Public_TransEntry_Select_All", journalParameter);
        }

        public virtual ObjectResult<Public_TransEntry_Select_Single_Result> Public_TransEntry_Select_Single(
            Nullable<int> original_RecordID, Nullable<System.Guid> gUID)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TransEntry_Select_Single_Result>(
                    "Public_TransEntry_Select_Single", original_RecordIDParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_TransEntry_Update_Result> Public_TransEntry_Update(string account,
            Nullable<double> amount, string betalingsID, Nullable<double> cashDiscountAmount, Nullable<byte> code,
            string costCenter, string currency, string customer, Nullable<System.DateTime> date, string department,
            string description, Nullable<System.DateTime> due, string employee, string invoiceNo, string journal,
            string kortArt, Nullable<short> lineNo, Nullable<short> opening, string optional1, string optional2,
            string project, string purpose, Nullable<double> quantity, Nullable<double> rate, string remarks,
            string setOff, string source, string supplier, string tax, string voucher, string original_Account,
            Nullable<double> original_Amount, string original_BetalingsID, Nullable<double> original_CashDiscountAmount,
            Nullable<byte> original_Code, string original_CostCenter, string original_Currency, string original_Customer,
            Nullable<System.DateTime> original_Date, string original_Department, string original_Description,
            Nullable<System.DateTime> original_Due, string original_Employee, string original_InvoiceNo,
            string original_Journal, string original_KortArt, Nullable<short> original_LineNo,
            Nullable<short> original_Opening, string original_Optional1, string original_Optional2,
            string original_Project, string original_Purpose, Nullable<double> original_Quantity,
            Nullable<double> original_Rate, Nullable<int> original_RecordId, string original_Remarks,
            string original_SetOff, string original_Source, string original_Supplier, string original_Tax,
            string original_Voucher, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var lineNoParameter = lineNo.HasValue
                ? new ObjectParameter("LineNo", lineNo)
                : new ObjectParameter("LineNo", typeof(short));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountParameter = original_Amount.HasValue
                ? new ObjectParameter("Original_Amount", original_Amount)
                : new ObjectParameter("Original_Amount", typeof(double));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_CashDiscountAmountParameter = original_CashDiscountAmount.HasValue
                ? new ObjectParameter("Original_CashDiscountAmount", original_CashDiscountAmount)
                : new ObjectParameter("Original_CashDiscountAmount", typeof(double));

            var original_CodeParameter = original_Code.HasValue
                ? new ObjectParameter("Original_Code", original_Code)
                : new ObjectParameter("Original_Code", typeof(byte));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LineNoParameter = original_LineNo.HasValue
                ? new ObjectParameter("Original_LineNo", original_LineNo)
                : new ObjectParameter("Original_LineNo", typeof(short));

            var original_OpeningParameter = original_Opening.HasValue
                ? new ObjectParameter("Original_Opening", original_Opening)
                : new ObjectParameter("Original_Opening", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_TransEntry_Update_Result>(
                    "Public_TransEntry_Update", accountParameter, amountParameter, betalingsIDParameter,
                    cashDiscountAmountParameter, codeParameter, costCenterParameter, currencyParameter,
                    customerParameter, dateParameter, departmentParameter, descriptionParameter, dueParameter,
                    employeeParameter, invoiceNoParameter, journalParameter, kortArtParameter, lineNoParameter,
                    openingParameter, optional1Parameter, optional2Parameter, projectParameter, purposeParameter,
                    quantityParameter, rateParameter, remarksParameter, setOffParameter, sourceParameter,
                    supplierParameter, taxParameter, voucherParameter, original_AccountParameter,
                    original_AmountParameter, original_BetalingsIDParameter, original_CashDiscountAmountParameter,
                    original_CodeParameter, original_CostCenterParameter, original_CurrencyParameter,
                    original_CustomerParameter, original_DateParameter, original_DepartmentParameter,
                    original_DescriptionParameter, original_DueParameter, original_EmployeeParameter,
                    original_InvoiceNoParameter, original_JournalParameter, original_KortArtParameter,
                    original_LineNoParameter, original_OpeningParameter, original_Optional1Parameter,
                    original_Optional2Parameter, original_ProjectParameter, original_PurposeParameter,
                    original_QuantityParameter, original_RateParameter, original_RecordIdParameter,
                    original_RemarksParameter, original_SetOffParameter, original_SourceParameter,
                    original_SupplierParameter, original_TaxParameter, original_VoucherParameter, returnNoRowsParameter,
                    gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Unit_AddNew(string baseUnit, Nullable<double> conversion, string name, string remarks,
            string unit, string standard_Unit, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var baseUnitParameter = baseUnit != null
                ? new ObjectParameter("BaseUnit", baseUnit)
                : new ObjectParameter("BaseUnit", typeof(string));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var standard_UnitParameter = standard_Unit != null
                ? new ObjectParameter("Standard_Unit", standard_Unit)
                : new ObjectParameter("Standard_Unit", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Unit_AddNew", baseUnitParameter,
                conversionParameter, nameParameter, remarksParameter, unitParameter, standard_UnitParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Unit_Delete(string original_Unit, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Unit_Delete",
                original_UnitParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Unit_Select_All_Result> Public_Unit_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Unit_Select_All_Result>(
                    "Public_Unit_Select_All");
        }

        public virtual ObjectResult<Public_Unit_Select_Single_Result> Public_Unit_Select_Single(string original_Unit,
            Nullable<System.Guid> gUID)
        {
            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Unit_Select_Single_Result>(
                    "Public_Unit_Select_Single", original_UnitParameter, gUIDParameter);
        }

        public virtual int Public_Unit_Update(string baseUnit, Nullable<double> conversion, string name, string remarks,
            string original_BaseUnit, Nullable<double> original_Conversion, string original_Name,
            string original_Remarks, string original_Unit, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var baseUnitParameter = baseUnit != null
                ? new ObjectParameter("BaseUnit", baseUnit)
                : new ObjectParameter("BaseUnit", typeof(string));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_BaseUnitParameter = original_BaseUnit != null
                ? new ObjectParameter("Original_BaseUnit", original_BaseUnit)
                : new ObjectParameter("Original_BaseUnit", typeof(string));

            var original_ConversionParameter = original_Conversion.HasValue
                ? new ObjectParameter("Original_Conversion", original_Conversion)
                : new ObjectParameter("Original_Conversion", typeof(double));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Unit_Update", baseUnitParameter,
                conversionParameter, nameParameter, remarksParameter, original_BaseUnitParameter,
                original_ConversionParameter, original_NameParameter, original_RemarksParameter, original_UnitParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Accounts_AddNew(string account, ObjectParameter account2, ObjectParameter blocked,
            ObjectParameter consolidate, ObjectParameter costCenter, ObjectParameter currency,
            ObjectParameter defaultText, ObjectParameter department, ObjectParameter name, ObjectParameter name2,
            ObjectParameter pageBreakBefore, ObjectParameter project, ObjectParameter purpose, ObjectParameter remarks,
            ObjectParameter reportCode1, ObjectParameter reportCode2, ObjectParameter reportCode3,
            ObjectParameter reportCode4, ObjectParameter setOff, ObjectParameter statementPageBreakBefore,
            ObjectParameter tabTo, ObjectParameter tax, ObjectParameter totalAfter, ObjectParameter type,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Accounts_AddNew",
                accountParameter, account2, blocked, consolidate, costCenter, currency, defaultText, department, name,
                name2, pageBreakBefore, project, purpose, remarks, reportCode1, reportCode2, reportCode3, reportCode4,
                setOff, statementPageBreakBefore, tabTo, tax, totalAfter, type, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Accounts_Delete(string original_Account, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Accounts_Delete",
                original_AccountParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Accounts_Update(ObjectParameter account2, ObjectParameter blocked,
            ObjectParameter consolidate, ObjectParameter costCenter, ObjectParameter currency,
            ObjectParameter defaultText, ObjectParameter department, ObjectParameter name, ObjectParameter name2,
            ObjectParameter pageBreakBefore, ObjectParameter project, ObjectParameter purpose, ObjectParameter remarks,
            ObjectParameter reportCode1, ObjectParameter reportCode2, ObjectParameter reportCode3,
            ObjectParameter reportCode4, ObjectParameter setOff, ObjectParameter statementPageBreakBefore,
            ObjectParameter tabTo, ObjectParameter tax, ObjectParameter totalAfter, ObjectParameter type,
            string original_Account, string original_Account2, Nullable<short> original_Blocked,
            string original_Consolidate, string original_CostCenter, string original_Currency,
            string original_DefaultText, string original_Department, string original_Name, string original_Name2,
            Nullable<bool> original_PageBreakBefore, string original_Project, string original_Purpose,
            string original_Remarks, string original_ReportCode1, string original_ReportCode2,
            string original_ReportCode3, string original_ReportCode4, string original_SetOff,
            Nullable<bool> original_StatementPageBreakBefore, Nullable<short> original_TabTo, string original_Tax,
            Nullable<bool> original_TotalAfter, Nullable<byte> original_Type, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_Account2Parameter = original_Account2 != null
                ? new ObjectParameter("Original_Account2", original_Account2)
                : new ObjectParameter("Original_Account2", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_ConsolidateParameter = original_Consolidate != null
                ? new ObjectParameter("Original_Consolidate", original_Consolidate)
                : new ObjectParameter("Original_Consolidate", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DefaultTextParameter = original_DefaultText != null
                ? new ObjectParameter("Original_DefaultText", original_DefaultText)
                : new ObjectParameter("Original_DefaultText", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Name2Parameter = original_Name2 != null
                ? new ObjectParameter("Original_Name2", original_Name2)
                : new ObjectParameter("Original_Name2", typeof(string));

            var original_PageBreakBeforeParameter = original_PageBreakBefore.HasValue
                ? new ObjectParameter("Original_PageBreakBefore", original_PageBreakBefore)
                : new ObjectParameter("Original_PageBreakBefore", typeof(bool));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportCode1Parameter = original_ReportCode1 != null
                ? new ObjectParameter("Original_ReportCode1", original_ReportCode1)
                : new ObjectParameter("Original_ReportCode1", typeof(string));

            var original_ReportCode2Parameter = original_ReportCode2 != null
                ? new ObjectParameter("Original_ReportCode2", original_ReportCode2)
                : new ObjectParameter("Original_ReportCode2", typeof(string));

            var original_ReportCode3Parameter = original_ReportCode3 != null
                ? new ObjectParameter("Original_ReportCode3", original_ReportCode3)
                : new ObjectParameter("Original_ReportCode3", typeof(string));

            var original_ReportCode4Parameter = original_ReportCode4 != null
                ? new ObjectParameter("Original_ReportCode4", original_ReportCode4)
                : new ObjectParameter("Original_ReportCode4", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_StatementPageBreakBeforeParameter = original_StatementPageBreakBefore.HasValue
                ? new ObjectParameter("Original_StatementPageBreakBefore", original_StatementPageBreakBefore)
                : new ObjectParameter("Original_StatementPageBreakBefore", typeof(bool));

            var original_TabToParameter = original_TabTo.HasValue
                ? new ObjectParameter("Original_TabTo", original_TabTo)
                : new ObjectParameter("Original_TabTo", typeof(short));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TotalAfterParameter = original_TotalAfter.HasValue
                ? new ObjectParameter("Original_TotalAfter", original_TotalAfter)
                : new ObjectParameter("Original_TotalAfter", typeof(bool));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(byte));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Accounts_Update", account2,
                blocked, consolidate, costCenter, currency, defaultText, department, name, name2, pageBreakBefore,
                project, purpose, remarks, reportCode1, reportCode2, reportCode3, reportCode4, setOff,
                statementPageBreakBefore, tabTo, tax, totalAfter, type, original_AccountParameter,
                original_Account2Parameter, original_BlockedParameter, original_ConsolidateParameter,
                original_CostCenterParameter, original_CurrencyParameter, original_DefaultTextParameter,
                original_DepartmentParameter, original_NameParameter, original_Name2Parameter,
                original_PageBreakBeforeParameter, original_ProjectParameter, original_PurposeParameter,
                original_RemarksParameter, original_ReportCode1Parameter, original_ReportCode2Parameter,
                original_ReportCode3Parameter, original_ReportCode4Parameter, original_SetOffParameter,
                original_StatementPageBreakBeforeParameter, original_TabToParameter, original_TaxParameter,
                original_TotalAfterParameter, original_TypeParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_CashDiscount_AddNew(string cashDiscount, Nullable<short> cashDiscountInclFee,
            Nullable<short> cashDiscountInclTax, Nullable<double> cashDiscountPct, Nullable<short> days,
            string description, string remarks, Nullable<short> showInTP, Nullable<short> type,
            string standard_CashDiscount, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var cashDiscountParameter = cashDiscount != null
                ? new ObjectParameter("CashDiscount", cashDiscount)
                : new ObjectParameter("CashDiscount", typeof(string));

            var cashDiscountInclFeeParameter = cashDiscountInclFee.HasValue
                ? new ObjectParameter("CashDiscountInclFee", cashDiscountInclFee)
                : new ObjectParameter("CashDiscountInclFee", typeof(short));

            var cashDiscountInclTaxParameter = cashDiscountInclTax.HasValue
                ? new ObjectParameter("CashDiscountInclTax", cashDiscountInclTax)
                : new ObjectParameter("CashDiscountInclTax", typeof(short));

            var cashDiscountPctParameter = cashDiscountPct.HasValue
                ? new ObjectParameter("CashDiscountPct", cashDiscountPct)
                : new ObjectParameter("CashDiscountPct", typeof(double));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInTPParameter = showInTP.HasValue
                ? new ObjectParameter("ShowInTP", showInTP)
                : new ObjectParameter("ShowInTP", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var standard_CashDiscountParameter = standard_CashDiscount != null
                ? new ObjectParameter("Standard_CashDiscount", standard_CashDiscount)
                : new ObjectParameter("Standard_CashDiscount", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CashDiscount_AddNew",
                cashDiscountParameter, cashDiscountInclFeeParameter, cashDiscountInclTaxParameter,
                cashDiscountPctParameter, daysParameter, descriptionParameter, remarksParameter, showInTPParameter,
                typeParameter, standard_CashDiscountParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_CashDiscount_Delete(string original_CashDiscount, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CashDiscount_Delete",
                original_CashDiscountParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CashDiscount_Update(Nullable<short> cashDiscountInclFee,
            Nullable<short> cashDiscountInclTax, Nullable<double> cashDiscountPct, Nullable<short> days,
            string description, string remarks, Nullable<short> showInTP, Nullable<short> type,
            string original_CashDiscount, Nullable<short> original_CashDiscountInclFee,
            Nullable<short> original_CashDiscountInclTax, Nullable<double> original_CashDiscountPct,
            Nullable<short> original_Days, string original_Description, string original_Remarks,
            Nullable<short> original_ShowInTP, Nullable<short> original_Type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var cashDiscountInclFeeParameter = cashDiscountInclFee.HasValue
                ? new ObjectParameter("CashDiscountInclFee", cashDiscountInclFee)
                : new ObjectParameter("CashDiscountInclFee", typeof(short));

            var cashDiscountInclTaxParameter = cashDiscountInclTax.HasValue
                ? new ObjectParameter("CashDiscountInclTax", cashDiscountInclTax)
                : new ObjectParameter("CashDiscountInclTax", typeof(short));

            var cashDiscountPctParameter = cashDiscountPct.HasValue
                ? new ObjectParameter("CashDiscountPct", cashDiscountPct)
                : new ObjectParameter("CashDiscountPct", typeof(double));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var showInTPParameter = showInTP.HasValue
                ? new ObjectParameter("ShowInTP", showInTP)
                : new ObjectParameter("ShowInTP", typeof(short));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CashDiscountInclFeeParameter = original_CashDiscountInclFee.HasValue
                ? new ObjectParameter("Original_CashDiscountInclFee", original_CashDiscountInclFee)
                : new ObjectParameter("Original_CashDiscountInclFee", typeof(short));

            var original_CashDiscountInclTaxParameter = original_CashDiscountInclTax.HasValue
                ? new ObjectParameter("Original_CashDiscountInclTax", original_CashDiscountInclTax)
                : new ObjectParameter("Original_CashDiscountInclTax", typeof(short));

            var original_CashDiscountPctParameter = original_CashDiscountPct.HasValue
                ? new ObjectParameter("Original_CashDiscountPct", original_CashDiscountPct)
                : new ObjectParameter("Original_CashDiscountPct", typeof(double));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInTPParameter = original_ShowInTP.HasValue
                ? new ObjectParameter("Original_ShowInTP", original_ShowInTP)
                : new ObjectParameter("Original_ShowInTP", typeof(short));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CashDiscount_Update",
                cashDiscountInclFeeParameter, cashDiscountInclTaxParameter, cashDiscountPctParameter, daysParameter,
                descriptionParameter, remarksParameter, showInTPParameter, typeParameter, original_CashDiscountParameter,
                original_CashDiscountInclFeeParameter, original_CashDiscountInclTaxParameter,
                original_CashDiscountPctParameter, original_DaysParameter, original_DescriptionParameter,
                original_RemarksParameter, original_ShowInTPParameter, original_TypeParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CostCenter_AddNew(ObjectParameter avance, ObjectParameter costCenter,
            ObjectParameter costCenterType, ObjectParameter costCenterType2, ObjectParameter costPrice,
            ObjectParameter grouping, ObjectParameter name, ObjectParameter price, ObjectParameter projectLineState,
            ObjectParameter remarks, ObjectParameter sortOrder, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenter_AddNew", avance,
                costCenter, costCenterType, costCenterType2, costPrice, grouping, name, price, projectLineState, remarks,
                sortOrder, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CostCenter_Delete(string original_CostCenter, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenter_Delete",
                original_CostCenterParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CostCenter_Update(ObjectParameter avance, ObjectParameter costCenterType,
            ObjectParameter costCenterType2, ObjectParameter costPrice, ObjectParameter grouping, ObjectParameter name,
            ObjectParameter price, ObjectParameter projectLineState, ObjectParameter remarks, ObjectParameter sortOrder,
            Nullable<double> original_Avance, string original_CostCenter, Nullable<byte> original_CostCenterType,
            Nullable<byte> original_CostCenterType2, Nullable<double> original_CostPrice, string original_Grouping,
            string original_Name, Nullable<double> original_Price, Nullable<byte> original_ProjectLineState,
            string original_Remarks, Nullable<short> original_SortOrder, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostCenterTypeParameter = original_CostCenterType.HasValue
                ? new ObjectParameter("Original_CostCenterType", original_CostCenterType)
                : new ObjectParameter("Original_CostCenterType", typeof(byte));

            var original_CostCenterType2Parameter = original_CostCenterType2.HasValue
                ? new ObjectParameter("Original_CostCenterType2", original_CostCenterType2)
                : new ObjectParameter("Original_CostCenterType2", typeof(byte));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectLineStateParameter = original_ProjectLineState.HasValue
                ? new ObjectParameter("Original_ProjectLineState", original_ProjectLineState)
                : new ObjectParameter("Original_ProjectLineState", typeof(byte));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SortOrderParameter = original_SortOrder.HasValue
                ? new ObjectParameter("Original_SortOrder", original_SortOrder)
                : new ObjectParameter("Original_SortOrder", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenter_Update", avance,
                costCenterType, costCenterType2, costPrice, grouping, name, price, projectLineState, remarks, sortOrder,
                original_AvanceParameter, original_CostCenterParameter, original_CostCenterTypeParameter,
                original_CostCenterType2Parameter, original_CostPriceParameter, original_GroupingParameter,
                original_NameParameter, original_PriceParameter, original_ProjectLineStateParameter,
                original_RemarksParameter, original_SortOrderParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_CostCenterGroup_AddNew(ObjectParameter grouping, ObjectParameter name,
            ObjectParameter sortOrder, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenterGroup_AddNew",
                grouping, name, sortOrder, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CostCenterGroup_Delete(string original_Grouping, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenterGroup_Delete",
                original_GroupingParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CostCenterGroup_Update(ObjectParameter name, ObjectParameter sortOrder,
            string original_Grouping, string original_Name, Nullable<byte> original_SortOrder,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_SortOrderParameter = original_SortOrder.HasValue
                ? new ObjectParameter("Original_SortOrder", original_SortOrder)
                : new ObjectParameter("Original_SortOrder", typeof(byte));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CostCenterGroup_Update",
                name, sortOrder, original_GroupingParameter, original_NameParameter, original_SortOrderParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Currency_AddNew(ObjectParameter account, string currency,
            ObjectParameter iSOCurrency, ObjectParameter name, ObjectParameter remarks, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Currency_AddNew", account,
                currencyParameter, iSOCurrency, name, remarks, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Currency_Delete(string original_Currency, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Currency_Delete",
                original_CurrencyParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Currency_Update(ObjectParameter account, ObjectParameter iSOCurrency,
            ObjectParameter name, ObjectParameter remarks, string original_Account, string original_Currency,
            string original_ISOCurrency, string original_Name, string original_Remarks, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_ISOCurrencyParameter = original_ISOCurrency != null
                ? new ObjectParameter("Original_ISOCurrency", original_ISOCurrency)
                : new ObjectParameter("Original_ISOCurrency", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Currency_Update", account,
                iSOCurrency, name, remarks, original_AccountParameter, original_CurrencyParameter,
                original_ISOCurrencyParameter, original_NameParameter, original_RemarksParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CustomerCategory_AddNew(ObjectParameter customerCat, ObjectParameter name,
            ObjectParameter remarks, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerCategory_AddNew",
                customerCat, name, remarks, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CustomerCategory_Delete(string original_CustomerCat, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CustomerCatParameter = original_CustomerCat != null
                ? new ObjectParameter("Original_CustomerCat", original_CustomerCat)
                : new ObjectParameter("Original_CustomerCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerCategory_Delete",
                original_CustomerCatParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CustomerCategory_Update(ObjectParameter name, ObjectParameter remarks,
            string original_CustomerCat, string original_Name, string original_Remarks, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CustomerCatParameter = original_CustomerCat != null
                ? new ObjectParameter("Original_CustomerCat", original_CustomerCat)
                : new ObjectParameter("Original_CustomerCat", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerCategory_Update",
                name, remarks, original_CustomerCatParameter, original_NameParameter, original_RemarksParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CustomerContacts_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter city, ObjectParameter country, ObjectParameter customer, ObjectParameter directPhone,
            ObjectParameter email, ObjectParameter fax, ObjectParameter interNet, ObjectParameter localNumber,
            ObjectParameter loginName, ObjectParameter loginPassWord, ObjectParameter mobile, ObjectParameter name,
            ObjectParameter phone, ObjectParameter postalCode, ObjectParameter title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerContacts_AddNew",
                address1, address2, city, country, customer, directPhone, email, fax, interNet, localNumber, loginName,
                loginPassWord, mobile, name, phone, postalCode, title, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_CustomerContacts_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerContacts_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_CustomerContacts_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter city, ObjectParameter country, ObjectParameter customer, ObjectParameter directPhone,
            ObjectParameter email, ObjectParameter fax, ObjectParameter interNet, ObjectParameter localNumber,
            ObjectParameter loginName, ObjectParameter loginPassWord, ObjectParameter mobile, ObjectParameter name,
            ObjectParameter phone, ObjectParameter postalCode, ObjectParameter title, string original_Address1,
            string original_Address2, string original_City, string original_Country, string original_Customer,
            string original_DirectPhone, string original_Email, string original_Fax, string original_InterNet,
            string original_LocalNumber, string original_LoginName, string original_LoginPassWord,
            string original_Mobile, string original_Name, string original_Phone, string original_PostalCode,
            Nullable<int> original_RecordID, string original_Title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DirectPhoneParameter = original_DirectPhone != null
                ? new ObjectParameter("Original_DirectPhone", original_DirectPhone)
                : new ObjectParameter("Original_DirectPhone", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_LocalNumberParameter = original_LocalNumber != null
                ? new ObjectParameter("Original_LocalNumber", original_LocalNumber)
                : new ObjectParameter("Original_LocalNumber", typeof(string));

            var original_LoginNameParameter = original_LoginName != null
                ? new ObjectParameter("Original_LoginName", original_LoginName)
                : new ObjectParameter("Original_LoginName", typeof(string));

            var original_LoginPassWordParameter = original_LoginPassWord != null
                ? new ObjectParameter("Original_LoginPassWord", original_LoginPassWord)
                : new ObjectParameter("Original_LoginPassWord", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerContacts_Update",
                address1, address2, city, country, customer, directPhone, email, fax, interNet, localNumber, loginName,
                loginPassWord, mobile, name, phone, postalCode, title, original_Address1Parameter,
                original_Address2Parameter, original_CityParameter, original_CountryParameter,
                original_CustomerParameter, original_DirectPhoneParameter, original_EmailParameter,
                original_FaxParameter, original_InterNetParameter, original_LocalNumberParameter,
                original_LoginNameParameter, original_LoginPassWordParameter, original_MobileParameter,
                original_NameParameter, original_PhoneParameter, original_PostalCodeParameter,
                original_RecordIDParameter, original_TitleParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_CustomerLog_AddNew()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerLog_AddNew");
        }

        public virtual int Public_User_CustomerLog_Delete()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerLog_Delete");
        }

        public virtual int Public_User_CustomerLog_Update()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_CustomerLog_Update");
        }

        public virtual int Public_User_Customers_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allocate, ObjectParameter allowStatement,
            ObjectParameter bank, ObjectParameter blocked, ObjectParameter cashDiscount, ObjectParameter category,
            ObjectParameter city, ObjectParameter contact, ObjectParameter costCenter, ObjectParameter country,
            ObjectParameter countryCode, ObjectParameter cPR, ObjectParameter creditLimit, ObjectParameter currency,
            string customer, ObjectParameter delivery, ObjectParameter department, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter eDILocationNr, ObjectParameter email,
            ObjectParameter endDiscPct, ObjectParameter factoringState, ObjectParameter factoringGroup,
            ObjectParameter fax, ObjectParameter fIKNo, ObjectParameter giro, ObjectParameter grouping,
            ObjectParameter interest, ObjectParameter internalRemarks, ObjectParameter interNet,
            ObjectParameter invoiceTo, ObjectParameter isLiableToPayTax, ObjectParameter language,
            ObjectParameter loginName, ObjectParameter loginPassWord, ObjectParameter mobile, ObjectParameter name,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalDate3,
            ObjectParameter optionalDate4, ObjectParameter optionalDate5, ObjectParameter optionalDate6,
            ObjectParameter optionalDate7, ObjectParameter optionalDate8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter orderCommunication, ObjectParameter orderMerging, ObjectParameter payment,
            ObjectParameter pBSAgrementNo, ObjectParameter pBSGruppeNo, ObjectParameter pBSStartDate,
            ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter remarks, ObjectParameter reports, ObjectParameter salesRep,
            ObjectParameter ship1, ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5,
            ObjectParameter ship6, ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter tax, ObjectParameter taxNo, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Customers_AddNew", address1,
                address2, address3, agent, allocate, allowStatement, bank, blocked, cashDiscount, category, city,
                contact, costCenter, country, countryCode, cPR, creditLimit, currency, customerParameter, delivery,
                department, eECCountry, eECTransCode, eDILocationNr, email, endDiscPct, factoringState, factoringGroup,
                fax, fIKNo, giro, grouping, interest, internalRemarks, interNet, invoiceTo, isLiableToPayTax, language,
                loginName, loginPassWord, mobile, name, optional1, optional2, optional3, optional4, optional5, optional6,
                optional7, optional8, optionalDate1, optionalDate2, optionalDate3, optionalDate4, optionalDate5,
                optionalDate6, optionalDate7, optionalDate8, optionalNumber1, optionalNumber2, optionalNumber3,
                optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7, optionalNumber8, optionalText1,
                optionalText2, optionalText3, optionalText4, optionalText5, optionalText6, optionalText7, optionalText8,
                orderCommunication, orderMerging, payment, pBSAgrementNo, pBSGruppeNo, pBSStartDate, phone, postalCode,
                priceList, project, purpose, remarks, reports, salesRep, ship1, ship2, ship3, ship5, ship6, ship7,
                shipCityName, shipPostalCode, shipTo, tax, taxNo, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Customers_Delete(string original_Customer, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Customers_Delete",
                original_CustomerParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Customers_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allocate, ObjectParameter allowStatement,
            ObjectParameter bank, ObjectParameter blocked, ObjectParameter cashDiscount, ObjectParameter category,
            ObjectParameter city, ObjectParameter contact, ObjectParameter costCenter, ObjectParameter country,
            ObjectParameter countryCode, ObjectParameter cPR, ObjectParameter creditLimit, ObjectParameter currency,
            ObjectParameter delivery, ObjectParameter department, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter eDILocationNr, ObjectParameter email,
            ObjectParameter endDiscPct, ObjectParameter factoringState, ObjectParameter factoringGroup,
            ObjectParameter fax, ObjectParameter fIKNo, ObjectParameter giro, ObjectParameter grouping,
            ObjectParameter interest, ObjectParameter internalRemarks, ObjectParameter interNet,
            ObjectParameter invoiceTo, ObjectParameter isLiableToPayTax, ObjectParameter language,
            ObjectParameter loginName, ObjectParameter loginPassWord, ObjectParameter mobile, ObjectParameter name,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalDate3,
            ObjectParameter optionalDate4, ObjectParameter optionalDate5, ObjectParameter optionalDate6,
            ObjectParameter optionalDate7, ObjectParameter optionalDate8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter orderCommunication, ObjectParameter orderMerging, ObjectParameter payment,
            ObjectParameter pBSAgrementNo, ObjectParameter pBSGruppeNo, ObjectParameter pBSStartDate,
            ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter remarks, ObjectParameter reports, ObjectParameter salesRep,
            ObjectParameter ship1, ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5,
            ObjectParameter ship6, ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter tax, ObjectParameter taxNo, string original_Address1,
            string original_Address2, string original_Address3, string original_Agent, Nullable<short> original_Allocate,
            Nullable<byte> original_AllowStatement, string original_Bank, Nullable<short> original_Blocked,
            string original_CashDiscount, string original_Category, string original_City, string original_Contact,
            string original_CostCenter, string original_Country, string original_CountryCode, string original_CPR,
            Nullable<double> original_CreditLimit, string original_Currency, string original_Customer,
            string original_Delivery, string original_Department, Nullable<short> original_EECCountry,
            Nullable<byte> original_EECTransCode, string original_EDILocationNr, string original_Email,
            Nullable<double> original_EndDiscPct, Nullable<byte> original_FactoringState, string original_FactoringGroup,
            string original_Fax, string original_FIKNo, string original_Giro, string original_Grouping,
            string original_Interest, string original_InternalRemarks, string original_InterNet,
            string original_InvoiceTo, Nullable<byte> original_IsLiableToPayTax, string original_Language,
            string original_LoginName, string original_LoginPassWord, string original_Mobile, string original_Name,
            Nullable<short> original_Optional1, Nullable<short> original_Optional2, Nullable<short> original_Optional3,
            Nullable<short> original_Optional4, Nullable<short> original_Optional5, Nullable<short> original_Optional6,
            Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<System.DateTime> original_OptionalDate3, Nullable<System.DateTime> original_OptionalDate4,
            Nullable<System.DateTime> original_OptionalDate5, Nullable<System.DateTime> original_OptionalDate6,
            Nullable<System.DateTime> original_OptionalDate7, Nullable<System.DateTime> original_OptionalDate8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OrderCommunication,
            Nullable<short> original_OrderMerging, string original_Payment, Nullable<long> original_PBSAgrementNo,
            Nullable<long> original_PBSGruppeNo, Nullable<System.DateTime> original_PBSStartDate, string original_Phone,
            string original_PostalCode, string original_PriceList, string original_Project, string original_Purpose,
            string original_Remarks, string original_Reports, string original_SalesRep, string original_Ship1,
            string original_Ship2, string original_Ship3, string original_Ship5, string original_Ship6,
            string original_Ship7, string original_ShipCityName, string original_ShipPostalCode, string original_ShipTo,
            string original_Tax, string original_TaxNo, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllocateParameter = original_Allocate.HasValue
                ? new ObjectParameter("Original_Allocate", original_Allocate)
                : new ObjectParameter("Original_Allocate", typeof(short));

            var original_AllowStatementParameter = original_AllowStatement.HasValue
                ? new ObjectParameter("Original_AllowStatement", original_AllowStatement)
                : new ObjectParameter("Original_AllowStatement", typeof(byte));

            var original_BankParameter = original_Bank != null
                ? new ObjectParameter("Original_Bank", original_Bank)
                : new ObjectParameter("Original_Bank", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CountryCodeParameter = original_CountryCode != null
                ? new ObjectParameter("Original_CountryCode", original_CountryCode)
                : new ObjectParameter("Original_CountryCode", typeof(string));

            var original_CPRParameter = original_CPR != null
                ? new ObjectParameter("Original_CPR", original_CPR)
                : new ObjectParameter("Original_CPR", typeof(string));

            var original_CreditLimitParameter = original_CreditLimit.HasValue
                ? new ObjectParameter("Original_CreditLimit", original_CreditLimit)
                : new ObjectParameter("Original_CreditLimit", typeof(double));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_FactoringStateParameter = original_FactoringState.HasValue
                ? new ObjectParameter("Original_FactoringState", original_FactoringState)
                : new ObjectParameter("Original_FactoringState", typeof(byte));

            var original_FactoringGroupParameter = original_FactoringGroup != null
                ? new ObjectParameter("Original_FactoringGroup", original_FactoringGroup)
                : new ObjectParameter("Original_FactoringGroup", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FIKNoParameter = original_FIKNo != null
                ? new ObjectParameter("Original_FIKNo", original_FIKNo)
                : new ObjectParameter("Original_FIKNo", typeof(string));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_InvoiceToParameter = original_InvoiceTo != null
                ? new ObjectParameter("Original_InvoiceTo", original_InvoiceTo)
                : new ObjectParameter("Original_InvoiceTo", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_LoginNameParameter = original_LoginName != null
                ? new ObjectParameter("Original_LoginName", original_LoginName)
                : new ObjectParameter("Original_LoginName", typeof(string));

            var original_LoginPassWordParameter = original_LoginPassWord != null
                ? new ObjectParameter("Original_LoginPassWord", original_LoginPassWord)
                : new ObjectParameter("Original_LoginPassWord", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalDate3Parameter = original_OptionalDate3.HasValue
                ? new ObjectParameter("Original_OptionalDate3", original_OptionalDate3)
                : new ObjectParameter("Original_OptionalDate3", typeof(System.DateTime));

            var original_OptionalDate4Parameter = original_OptionalDate4.HasValue
                ? new ObjectParameter("Original_OptionalDate4", original_OptionalDate4)
                : new ObjectParameter("Original_OptionalDate4", typeof(System.DateTime));

            var original_OptionalDate5Parameter = original_OptionalDate5.HasValue
                ? new ObjectParameter("Original_OptionalDate5", original_OptionalDate5)
                : new ObjectParameter("Original_OptionalDate5", typeof(System.DateTime));

            var original_OptionalDate6Parameter = original_OptionalDate6.HasValue
                ? new ObjectParameter("Original_OptionalDate6", original_OptionalDate6)
                : new ObjectParameter("Original_OptionalDate6", typeof(System.DateTime));

            var original_OptionalDate7Parameter = original_OptionalDate7.HasValue
                ? new ObjectParameter("Original_OptionalDate7", original_OptionalDate7)
                : new ObjectParameter("Original_OptionalDate7", typeof(System.DateTime));

            var original_OptionalDate8Parameter = original_OptionalDate8.HasValue
                ? new ObjectParameter("Original_OptionalDate8", original_OptionalDate8)
                : new ObjectParameter("Original_OptionalDate8", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderCommunicationParameter = original_OrderCommunication != null
                ? new ObjectParameter("Original_OrderCommunication", original_OrderCommunication)
                : new ObjectParameter("Original_OrderCommunication", typeof(string));

            var original_OrderMergingParameter = original_OrderMerging.HasValue
                ? new ObjectParameter("Original_OrderMerging", original_OrderMerging)
                : new ObjectParameter("Original_OrderMerging", typeof(short));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PBSAgrementNoParameter = original_PBSAgrementNo.HasValue
                ? new ObjectParameter("Original_PBSAgrementNo", original_PBSAgrementNo)
                : new ObjectParameter("Original_PBSAgrementNo", typeof(long));

            var original_PBSGruppeNoParameter = original_PBSGruppeNo.HasValue
                ? new ObjectParameter("Original_PBSGruppeNo", original_PBSGruppeNo)
                : new ObjectParameter("Original_PBSGruppeNo", typeof(long));

            var original_PBSStartDateParameter = original_PBSStartDate.HasValue
                ? new ObjectParameter("Original_PBSStartDate", original_PBSStartDate)
                : new ObjectParameter("Original_PBSStartDate", typeof(System.DateTime));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_SalesRepParameter = original_SalesRep != null
                ? new ObjectParameter("Original_SalesRep", original_SalesRep)
                : new ObjectParameter("Original_SalesRep", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Customers_Update", address1,
                address2, address3, agent, allocate, allowStatement, bank, blocked, cashDiscount, category, city,
                contact, costCenter, country, countryCode, cPR, creditLimit, currency, delivery, department, eECCountry,
                eECTransCode, eDILocationNr, email, endDiscPct, factoringState, factoringGroup, fax, fIKNo, giro,
                grouping, interest, internalRemarks, interNet, invoiceTo, isLiableToPayTax, language, loginName,
                loginPassWord, mobile, name, optional1, optional2, optional3, optional4, optional5, optional6, optional7,
                optional8, optionalDate1, optionalDate2, optionalDate3, optionalDate4, optionalDate5, optionalDate6,
                optionalDate7, optionalDate8, optionalNumber1, optionalNumber2, optionalNumber3, optionalNumber4,
                optionalNumber5, optionalNumber6, optionalNumber7, optionalNumber8, optionalText1, optionalText2,
                optionalText3, optionalText4, optionalText5, optionalText6, optionalText7, optionalText8,
                orderCommunication, orderMerging, payment, pBSAgrementNo, pBSGruppeNo, pBSStartDate, phone, postalCode,
                priceList, project, purpose, remarks, reports, salesRep, ship1, ship2, ship3, ship5, ship6, ship7,
                shipCityName, shipPostalCode, shipTo, tax, taxNo, original_Address1Parameter, original_Address2Parameter,
                original_Address3Parameter, original_AgentParameter, original_AllocateParameter,
                original_AllowStatementParameter, original_BankParameter, original_BlockedParameter,
                original_CashDiscountParameter, original_CategoryParameter, original_CityParameter,
                original_ContactParameter, original_CostCenterParameter, original_CountryParameter,
                original_CountryCodeParameter, original_CPRParameter, original_CreditLimitParameter,
                original_CurrencyParameter, original_CustomerParameter, original_DeliveryParameter,
                original_DepartmentParameter, original_EECCountryParameter, original_EECTransCodeParameter,
                original_EDILocationNrParameter, original_EmailParameter, original_EndDiscPctParameter,
                original_FactoringStateParameter, original_FactoringGroupParameter, original_FaxParameter,
                original_FIKNoParameter, original_GiroParameter, original_GroupingParameter, original_InterestParameter,
                original_InternalRemarksParameter, original_InterNetParameter, original_InvoiceToParameter,
                original_IsLiableToPayTaxParameter, original_LanguageParameter, original_LoginNameParameter,
                original_LoginPassWordParameter, original_MobileParameter, original_NameParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_OptionalDate1Parameter,
                original_OptionalDate2Parameter, original_OptionalDate3Parameter, original_OptionalDate4Parameter,
                original_OptionalDate5Parameter, original_OptionalDate6Parameter, original_OptionalDate7Parameter,
                original_OptionalDate8Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OptionalNumber3Parameter, original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                original_OptionalNumber6Parameter, original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                original_OptionalText7Parameter, original_OptionalText8Parameter, original_OrderCommunicationParameter,
                original_OrderMergingParameter, original_PaymentParameter, original_PBSAgrementNoParameter,
                original_PBSGruppeNoParameter, original_PBSStartDateParameter, original_PhoneParameter,
                original_PostalCodeParameter, original_PriceListParameter, original_ProjectParameter,
                original_PurposeParameter, original_RemarksParameter, original_ReportsParameter,
                original_SalesRepParameter, original_Ship1Parameter, original_Ship2Parameter, original_Ship3Parameter,
                original_Ship5Parameter, original_Ship6Parameter, original_Ship7Parameter,
                original_ShipCityNameParameter, original_ShipPostalCodeParameter, original_ShipToParameter,
                original_TaxParameter, original_TaxNoParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Delivery_AddNew(ObjectParameter aDeliveryPacket, ObjectParameter clientNo,
            ObjectParameter days, ObjectParameter delivery, ObjectParameter description, ObjectParameter packFilePath,
            ObjectParameter packFormat, ObjectParameter packNextFileNo, ObjectParameter packNextSerialNo,
            ObjectParameter packNoAmount, ObjectParameter remarks, ObjectParameter tax, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Delivery_AddNew",
                aDeliveryPacket, clientNo, days, delivery, description, packFilePath, packFormat, packNextFileNo,
                packNextSerialNo, packNoAmount, remarks, tax, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Delivery_Delete(string original_Delivery, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Delivery_Delete",
                original_DeliveryParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Delivery_Update(ObjectParameter aDeliveryPacket, ObjectParameter clientNo,
            ObjectParameter days, ObjectParameter description, ObjectParameter packFilePath, ObjectParameter packFormat,
            ObjectParameter packNextFileNo, ObjectParameter packNextSerialNo, ObjectParameter packNoAmount,
            ObjectParameter remarks, ObjectParameter tax, Nullable<byte> original_ADeliveryPacket,
            string original_ClientNo, Nullable<short> original_Days, string original_Delivery,
            string original_Description, string original_PackFilePath, string original_PackFormat,
            Nullable<int> original_PackNextFileNo, Nullable<int> original_PackNextSerialNo,
            Nullable<int> original_PackNoAmount, string original_Remarks, Nullable<short> original_Tax,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(byte));

            var original_ClientNoParameter = original_ClientNo != null
                ? new ObjectParameter("Original_ClientNo", original_ClientNo)
                : new ObjectParameter("Original_ClientNo", typeof(string));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_PackFilePathParameter = original_PackFilePath != null
                ? new ObjectParameter("Original_PackFilePath", original_PackFilePath)
                : new ObjectParameter("Original_PackFilePath", typeof(string));

            var original_PackFormatParameter = original_PackFormat != null
                ? new ObjectParameter("Original_PackFormat", original_PackFormat)
                : new ObjectParameter("Original_PackFormat", typeof(string));

            var original_PackNextFileNoParameter = original_PackNextFileNo.HasValue
                ? new ObjectParameter("Original_PackNextFileNo", original_PackNextFileNo)
                : new ObjectParameter("Original_PackNextFileNo", typeof(int));

            var original_PackNextSerialNoParameter = original_PackNextSerialNo.HasValue
                ? new ObjectParameter("Original_PackNextSerialNo", original_PackNextSerialNo)
                : new ObjectParameter("Original_PackNextSerialNo", typeof(int));

            var original_PackNoAmountParameter = original_PackNoAmount.HasValue
                ? new ObjectParameter("Original_PackNoAmount", original_PackNoAmount)
                : new ObjectParameter("Original_PackNoAmount", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_TaxParameter = original_Tax.HasValue
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Delivery_Update",
                aDeliveryPacket, clientNo, days, description, packFilePath, packFormat, packNextFileNo, packNextSerialNo,
                packNoAmount, remarks, tax, original_ADeliveryPacketParameter, original_ClientNoParameter,
                original_DaysParameter, original_DeliveryParameter, original_DescriptionParameter,
                original_PackFilePathParameter, original_PackFormatParameter, original_PackNextFileNoParameter,
                original_PackNextSerialNoParameter, original_PackNoAmountParameter, original_RemarksParameter,
                original_TaxParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Department_AddNew(ObjectParameter department, ObjectParameter name,
            ObjectParameter remarks, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Department_AddNew",
                department, name, remarks, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Department_Delete(string original_Department, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Department_Delete",
                original_DepartmentParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Department_Update(ObjectParameter name, ObjectParameter remarks,
            string original_Department, string original_Name, string original_Remarks, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Department_Update", name,
                remarks, original_DepartmentParameter, original_NameParameter, original_RemarksParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Employee_AddNew(ObjectParameter city, ObjectParameter country,
            ObjectParameter department, ObjectParameter email, string employee, ObjectParameter grouping,
            ObjectParameter handPhone, ObjectParameter homePhone, ObjectParameter location, ObjectParameter name,
            ObjectParameter normTime_Friday, ObjectParameter normTime_Monday, ObjectParameter normTime_Saturday,
            ObjectParameter normTime_Sunday, ObjectParameter normTime_Thursday, ObjectParameter normTime_Tuesday,
            ObjectParameter normTime_Wednesday, ObjectParameter pager, ObjectParameter passWord,
            ObjectParameter postalCode, ObjectParameter remarks, ObjectParameter street, ObjectParameter title,
            ObjectParameter userName, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Employee_AddNew", city,
                country, department, email, employeeParameter, grouping, handPhone, homePhone, location, name,
                normTime_Friday, normTime_Monday, normTime_Saturday, normTime_Sunday, normTime_Thursday,
                normTime_Tuesday, normTime_Wednesday, pager, passWord, postalCode, remarks, street, title, userName,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Employee_Delete(string original_Employee, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Employee_Delete",
                original_EmployeeParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Employee_Update(ObjectParameter city, ObjectParameter country,
            ObjectParameter department, ObjectParameter email, ObjectParameter grouping, ObjectParameter handPhone,
            ObjectParameter homePhone, ObjectParameter location, ObjectParameter name, ObjectParameter normTime_Friday,
            ObjectParameter normTime_Monday, ObjectParameter normTime_Saturday, ObjectParameter normTime_Sunday,
            ObjectParameter normTime_Thursday, ObjectParameter normTime_Tuesday, ObjectParameter normTime_Wednesday,
            ObjectParameter pager, ObjectParameter passWord, ObjectParameter postalCode, ObjectParameter remarks,
            ObjectParameter street, ObjectParameter title, ObjectParameter userName, string original_City,
            string original_Country, string original_Department, string original_Email, string original_Employee,
            string original_Grouping, string original_HandPhone, string original_HomePhone, string original_Location,
            string original_Name, Nullable<double> original_NormTime_Friday, Nullable<double> original_NormTime_Monday,
            Nullable<double> original_NormTime_Saturday, Nullable<double> original_NormTime_Sunday,
            Nullable<double> original_NormTime_Thursday, Nullable<double> original_NormTime_Tuesday,
            Nullable<double> original_NormTime_Wednesday, string original_Pager, string original_PassWord,
            string original_PostalCode, string original_Remarks, string original_Street, string original_Title,
            string original_UserName, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_HandPhoneParameter = original_HandPhone != null
                ? new ObjectParameter("Original_HandPhone", original_HandPhone)
                : new ObjectParameter("Original_HandPhone", typeof(string));

            var original_HomePhoneParameter = original_HomePhone != null
                ? new ObjectParameter("Original_HomePhone", original_HomePhone)
                : new ObjectParameter("Original_HomePhone", typeof(string));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_NormTime_FridayParameter = original_NormTime_Friday.HasValue
                ? new ObjectParameter("Original_NormTime_Friday", original_NormTime_Friday)
                : new ObjectParameter("Original_NormTime_Friday", typeof(double));

            var original_NormTime_MondayParameter = original_NormTime_Monday.HasValue
                ? new ObjectParameter("Original_NormTime_Monday", original_NormTime_Monday)
                : new ObjectParameter("Original_NormTime_Monday", typeof(double));

            var original_NormTime_SaturdayParameter = original_NormTime_Saturday.HasValue
                ? new ObjectParameter("Original_NormTime_Saturday", original_NormTime_Saturday)
                : new ObjectParameter("Original_NormTime_Saturday", typeof(double));

            var original_NormTime_SundayParameter = original_NormTime_Sunday.HasValue
                ? new ObjectParameter("Original_NormTime_Sunday", original_NormTime_Sunday)
                : new ObjectParameter("Original_NormTime_Sunday", typeof(double));

            var original_NormTime_ThursdayParameter = original_NormTime_Thursday.HasValue
                ? new ObjectParameter("Original_NormTime_Thursday", original_NormTime_Thursday)
                : new ObjectParameter("Original_NormTime_Thursday", typeof(double));

            var original_NormTime_TuesdayParameter = original_NormTime_Tuesday.HasValue
                ? new ObjectParameter("Original_NormTime_Tuesday", original_NormTime_Tuesday)
                : new ObjectParameter("Original_NormTime_Tuesday", typeof(double));

            var original_NormTime_WednesdayParameter = original_NormTime_Wednesday.HasValue
                ? new ObjectParameter("Original_NormTime_Wednesday", original_NormTime_Wednesday)
                : new ObjectParameter("Original_NormTime_Wednesday", typeof(double));

            var original_PagerParameter = original_Pager != null
                ? new ObjectParameter("Original_Pager", original_Pager)
                : new ObjectParameter("Original_Pager", typeof(string));

            var original_PassWordParameter = original_PassWord != null
                ? new ObjectParameter("Original_PassWord", original_PassWord)
                : new ObjectParameter("Original_PassWord", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_StreetParameter = original_Street != null
                ? new ObjectParameter("Original_Street", original_Street)
                : new ObjectParameter("Original_Street", typeof(string));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var original_UserNameParameter = original_UserName != null
                ? new ObjectParameter("Original_UserName", original_UserName)
                : new ObjectParameter("Original_UserName", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Employee_Update", city,
                country, department, email, grouping, handPhone, homePhone, location, name, normTime_Friday,
                normTime_Monday, normTime_Saturday, normTime_Sunday, normTime_Thursday, normTime_Tuesday,
                normTime_Wednesday, pager, passWord, postalCode, remarks, street, title, userName,
                original_CityParameter, original_CountryParameter, original_DepartmentParameter, original_EmailParameter,
                original_EmployeeParameter, original_GroupingParameter, original_HandPhoneParameter,
                original_HomePhoneParameter, original_LocationParameter, original_NameParameter,
                original_NormTime_FridayParameter, original_NormTime_MondayParameter,
                original_NormTime_SaturdayParameter, original_NormTime_SundayParameter,
                original_NormTime_ThursdayParameter, original_NormTime_TuesdayParameter,
                original_NormTime_WednesdayParameter, original_PagerParameter, original_PassWordParameter,
                original_PostalCodeParameter, original_RemarksParameter, original_StreetParameter,
                original_TitleParameter, original_UserNameParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_ExtraInventory_AddNew(ObjectParameter aDeliveryPacket,
            ObjectParameter allocateBOMItems, ObjectParameter allowDiscount, ObjectParameter allowFinalDiscount,
            ObjectParameter alternative, ObjectParameter avance, ObjectParameter avanceType, ObjectParameter blocked,
            ObjectParameter category, ObjectParameter costCenter, ObjectParameter costPrice,
            ObjectParameter costPriceAdjustment, ObjectParameter customerNo, ObjectParameter customsNo,
            ObjectParameter decimals, ObjectParameter defaultQuantity, ObjectParameter deliveryTime,
            ObjectParameter department, ObjectParameter description, ObjectParameter extra, ObjectParameter grouping,
            ObjectParameter internalNo, ObjectParameter internetGroup, string item, ObjectParameter itemAlternative,
            ObjectParameter itemEAN, ObjectParameter keepPriceOnOrdreRecalc, ObjectParameter lastCostPercentAmount,
            ObjectParameter location, ObjectParameter multiplaFaktor, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter picture, ObjectParameter picture2, ObjectParameter placement,
            ObjectParameter postServiceCostPrice, ObjectParameter priceIncl, ObjectParameter priceInclDuty,
            ObjectParameter project, ObjectParameter provisionGroup, ObjectParameter purpose,
            ObjectParameter quantityPrColi, ObjectParameter remarks, ObjectParameter salesPrice,
            ObjectParameter salesUnit, ObjectParameter serialTypeBuy, ObjectParameter serialTypeSale,
            ObjectParameter status, ObjectParameter supplierNo, ObjectParameter taxBuying, ObjectParameter taxSelling,
            ObjectParameter tracking, ObjectParameter unit, ObjectParameter uRL, ObjectParameter volume,
            ObjectParameter webUseOnWeb, ObjectParameter webHasNews, ObjectParameter webIsDiscount,
            ObjectParameter webAlt, ObjectParameter webMetaDescription, ObjectParameter webMetaTags,
            ObjectParameter webTitle, ObjectParameter weight, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ExtraInventory_AddNew",
                aDeliveryPacket, allocateBOMItems, allowDiscount, allowFinalDiscount, alternative, avance, avanceType,
                blocked, category, costCenter, costPrice, costPriceAdjustment, customerNo, customsNo, decimals,
                defaultQuantity, deliveryTime, department, description, extra, grouping, internalNo, internetGroup,
                itemParameter, itemAlternative, itemEAN, keepPriceOnOrdreRecalc, lastCostPercentAmount, location,
                multiplaFaktor, optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8,
                optionalNumber1, optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6,
                optionalNumber7, optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4,
                optionalText5, optionalText6, optionalText7, optionalText8, picture, picture2, placement,
                postServiceCostPrice, priceIncl, priceInclDuty, project, provisionGroup, purpose, quantityPrColi,
                remarks, salesPrice, salesUnit, serialTypeBuy, serialTypeSale, status, supplierNo, taxBuying, taxSelling,
                tracking, unit, uRL, volume, webUseOnWeb, webHasNews, webIsDiscount, webAlt, webMetaDescription,
                webMetaTags, webTitle, weight, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ExtraInventory_Delete(string original_Item, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ExtraInventory_Delete",
                original_ItemParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ExtraInventory_Update(ObjectParameter aDeliveryPacket,
            ObjectParameter allocateBOMItems, ObjectParameter allowDiscount, ObjectParameter allowFinalDiscount,
            ObjectParameter alternative, ObjectParameter avance, ObjectParameter avanceType, ObjectParameter blocked,
            ObjectParameter category, ObjectParameter costCenter, ObjectParameter costPrice,
            ObjectParameter costPriceAdjustment, ObjectParameter customerNo, ObjectParameter customsNo,
            ObjectParameter decimals, ObjectParameter defaultQuantity, ObjectParameter deliveryTime,
            ObjectParameter department, ObjectParameter description, ObjectParameter extra, ObjectParameter grouping,
            ObjectParameter internalNo, ObjectParameter internetGroup, ObjectParameter itemAlternative,
            ObjectParameter itemEAN, ObjectParameter keepPriceOnOrdreRecalc, ObjectParameter lastCostPercentAmount,
            ObjectParameter location, ObjectParameter multiplaFaktor, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter picture, ObjectParameter picture2, ObjectParameter placement,
            ObjectParameter postServiceCostPrice, ObjectParameter priceIncl, ObjectParameter priceInclDuty,
            ObjectParameter project, ObjectParameter provisionGroup, ObjectParameter purpose,
            ObjectParameter quantityPrColi, ObjectParameter remarks, ObjectParameter salesPrice,
            ObjectParameter salesUnit, ObjectParameter serialTypeBuy, ObjectParameter serialTypeSale,
            ObjectParameter status, ObjectParameter supplierNo, ObjectParameter taxBuying, ObjectParameter taxSelling,
            ObjectParameter tracking, ObjectParameter unit, ObjectParameter uRL, ObjectParameter volume,
            ObjectParameter webUseOnWeb, ObjectParameter webHasNews, ObjectParameter webIsDiscount,
            ObjectParameter webAlt, ObjectParameter webMetaDescription, ObjectParameter webMetaTags,
            ObjectParameter webTitle, ObjectParameter weight, Nullable<short> original_ADeliveryPacket,
            Nullable<short> original_AllocateBOMItems, Nullable<short> original_AllowDiscount,
            Nullable<short> original_AllowFinalDiscount, string original_Alternative, Nullable<double> original_Avance,
            Nullable<short> original_AvanceType, Nullable<short> original_Blocked, string original_Category,
            string original_CostCenter, Nullable<double> original_CostPrice, Nullable<byte> original_CostPriceAdjustment,
            string original_CustomerNo, string original_CustomsNo, Nullable<double> original_Decimals,
            Nullable<double> original_DefaultQuantity, Nullable<int> original_DeliveryTime, string original_Department,
            string original_Description, string original_Extra, string original_Grouping, string original_InternalNo,
            string original_InternetGroup, string original_Item, string original_ItemAlternative,
            string original_ItemEAN, Nullable<byte> original_KeepPriceOnOrdreRecalc,
            Nullable<double> original_LastCostPercentAmount, string original_Location,
            Nullable<double> original_MultiplaFaktor, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            string original_Picture, string original_Picture2, string original_Placement,
            Nullable<byte> original_PostServiceCostPrice, Nullable<double> original_PriceIncl,
            Nullable<short> original_PriceInclDuty, string original_Project, string original_ProvisionGroup,
            string original_Purpose, Nullable<double> original_QuantityPrColi, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<double> original_SalesUnit,
            Nullable<short> original_SerialTypeBuy, Nullable<short> original_SerialTypeSale,
            Nullable<short> original_Status, string original_SupplierNo, string original_TaxBuying,
            string original_TaxSelling, Nullable<short> original_Tracking, string original_Unit, string original_URL,
            Nullable<float> original_Volume, Nullable<byte> original_WebUseOnWeb, Nullable<byte> original_WebHasNews,
            Nullable<byte> original_WebIsDiscount, string original_WebAlt, string original_WebMetaDescription,
            string original_WebMetaTags, string original_WebTitle, Nullable<float> original_Weight,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllocateBOMItemsParameter = original_AllocateBOMItems.HasValue
                ? new ObjectParameter("Original_AllocateBOMItems", original_AllocateBOMItems)
                : new ObjectParameter("Original_AllocateBOMItems", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_AlternativeParameter = original_Alternative != null
                ? new ObjectParameter("Original_Alternative", original_Alternative)
                : new ObjectParameter("Original_Alternative", typeof(string));

            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_AvanceTypeParameter = original_AvanceType.HasValue
                ? new ObjectParameter("Original_AvanceType", original_AvanceType)
                : new ObjectParameter("Original_AvanceType", typeof(short));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CostPriceAdjustmentParameter = original_CostPriceAdjustment.HasValue
                ? new ObjectParameter("Original_CostPriceAdjustment", original_CostPriceAdjustment)
                : new ObjectParameter("Original_CostPriceAdjustment", typeof(byte));

            var original_CustomerNoParameter = original_CustomerNo != null
                ? new ObjectParameter("Original_CustomerNo", original_CustomerNo)
                : new ObjectParameter("Original_CustomerNo", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DecimalsParameter = original_Decimals.HasValue
                ? new ObjectParameter("Original_Decimals", original_Decimals)
                : new ObjectParameter("Original_Decimals", typeof(double));

            var original_DefaultQuantityParameter = original_DefaultQuantity.HasValue
                ? new ObjectParameter("Original_DefaultQuantity", original_DefaultQuantity)
                : new ObjectParameter("Original_DefaultQuantity", typeof(double));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ExtraParameter = original_Extra != null
                ? new ObjectParameter("Original_Extra", original_Extra)
                : new ObjectParameter("Original_Extra", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InternalNoParameter = original_InternalNo != null
                ? new ObjectParameter("Original_InternalNo", original_InternalNo)
                : new ObjectParameter("Original_InternalNo", typeof(string));

            var original_InternetGroupParameter = original_InternetGroup != null
                ? new ObjectParameter("Original_InternetGroup", original_InternetGroup)
                : new ObjectParameter("Original_InternetGroup", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_ItemAlternativeParameter = original_ItemAlternative != null
                ? new ObjectParameter("Original_ItemAlternative", original_ItemAlternative)
                : new ObjectParameter("Original_ItemAlternative", typeof(string));

            var original_ItemEANParameter = original_ItemEAN != null
                ? new ObjectParameter("Original_ItemEAN", original_ItemEAN)
                : new ObjectParameter("Original_ItemEAN", typeof(string));

            var original_KeepPriceOnOrdreRecalcParameter = original_KeepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("Original_KeepPriceOnOrdreRecalc", original_KeepPriceOnOrdreRecalc)
                : new ObjectParameter("Original_KeepPriceOnOrdreRecalc", typeof(byte));

            var original_LastCostPercentAmountParameter = original_LastCostPercentAmount.HasValue
                ? new ObjectParameter("Original_LastCostPercentAmount", original_LastCostPercentAmount)
                : new ObjectParameter("Original_LastCostPercentAmount", typeof(double));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_MultiplaFaktorParameter = original_MultiplaFaktor.HasValue
                ? new ObjectParameter("Original_MultiplaFaktor", original_MultiplaFaktor)
                : new ObjectParameter("Original_MultiplaFaktor", typeof(double));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_PictureParameter = original_Picture != null
                ? new ObjectParameter("Original_Picture", original_Picture)
                : new ObjectParameter("Original_Picture", typeof(string));

            var original_Picture2Parameter = original_Picture2 != null
                ? new ObjectParameter("Original_Picture2", original_Picture2)
                : new ObjectParameter("Original_Picture2", typeof(string));

            var original_PlacementParameter = original_Placement != null
                ? new ObjectParameter("Original_Placement", original_Placement)
                : new ObjectParameter("Original_Placement", typeof(string));

            var original_PostServiceCostPriceParameter = original_PostServiceCostPrice.HasValue
                ? new ObjectParameter("Original_PostServiceCostPrice", original_PostServiceCostPrice)
                : new ObjectParameter("Original_PostServiceCostPrice", typeof(byte));

            var original_PriceInclParameter = original_PriceIncl.HasValue
                ? new ObjectParameter("Original_PriceIncl", original_PriceIncl)
                : new ObjectParameter("Original_PriceIncl", typeof(double));

            var original_PriceInclDutyParameter = original_PriceInclDuty.HasValue
                ? new ObjectParameter("Original_PriceInclDuty", original_PriceInclDuty)
                : new ObjectParameter("Original_PriceInclDuty", typeof(short));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProvisionGroupParameter = original_ProvisionGroup != null
                ? new ObjectParameter("Original_ProvisionGroup", original_ProvisionGroup)
                : new ObjectParameter("Original_ProvisionGroup", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_SalesUnitParameter = original_SalesUnit.HasValue
                ? new ObjectParameter("Original_SalesUnit", original_SalesUnit)
                : new ObjectParameter("Original_SalesUnit", typeof(double));

            var original_SerialTypeBuyParameter = original_SerialTypeBuy.HasValue
                ? new ObjectParameter("Original_SerialTypeBuy", original_SerialTypeBuy)
                : new ObjectParameter("Original_SerialTypeBuy", typeof(short));

            var original_SerialTypeSaleParameter = original_SerialTypeSale.HasValue
                ? new ObjectParameter("Original_SerialTypeSale", original_SerialTypeSale)
                : new ObjectParameter("Original_SerialTypeSale", typeof(short));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_SupplierNoParameter = original_SupplierNo != null
                ? new ObjectParameter("Original_SupplierNo", original_SupplierNo)
                : new ObjectParameter("Original_SupplierNo", typeof(string));

            var original_TaxBuyingParameter = original_TaxBuying != null
                ? new ObjectParameter("Original_TaxBuying", original_TaxBuying)
                : new ObjectParameter("Original_TaxBuying", typeof(string));

            var original_TaxSellingParameter = original_TaxSelling != null
                ? new ObjectParameter("Original_TaxSelling", original_TaxSelling)
                : new ObjectParameter("Original_TaxSelling", typeof(string));

            var original_TrackingParameter = original_Tracking.HasValue
                ? new ObjectParameter("Original_Tracking", original_Tracking)
                : new ObjectParameter("Original_Tracking", typeof(short));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_URLParameter = original_URL != null
                ? new ObjectParameter("Original_URL", original_URL)
                : new ObjectParameter("Original_URL", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(float));

            var original_WebUseOnWebParameter = original_WebUseOnWeb.HasValue
                ? new ObjectParameter("Original_WebUseOnWeb", original_WebUseOnWeb)
                : new ObjectParameter("Original_WebUseOnWeb", typeof(byte));

            var original_WebHasNewsParameter = original_WebHasNews.HasValue
                ? new ObjectParameter("Original_WebHasNews", original_WebHasNews)
                : new ObjectParameter("Original_WebHasNews", typeof(byte));

            var original_WebIsDiscountParameter = original_WebIsDiscount.HasValue
                ? new ObjectParameter("Original_WebIsDiscount", original_WebIsDiscount)
                : new ObjectParameter("Original_WebIsDiscount", typeof(byte));

            var original_WebAltParameter = original_WebAlt != null
                ? new ObjectParameter("Original_WebAlt", original_WebAlt)
                : new ObjectParameter("Original_WebAlt", typeof(string));

            var original_WebMetaDescriptionParameter = original_WebMetaDescription != null
                ? new ObjectParameter("Original_WebMetaDescription", original_WebMetaDescription)
                : new ObjectParameter("Original_WebMetaDescription", typeof(string));

            var original_WebMetaTagsParameter = original_WebMetaTags != null
                ? new ObjectParameter("Original_WebMetaTags", original_WebMetaTags)
                : new ObjectParameter("Original_WebMetaTags", typeof(string));

            var original_WebTitleParameter = original_WebTitle != null
                ? new ObjectParameter("Original_WebTitle", original_WebTitle)
                : new ObjectParameter("Original_WebTitle", typeof(string));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(float));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ExtraInventory_Update",
                aDeliveryPacket, allocateBOMItems, allowDiscount, allowFinalDiscount, alternative, avance, avanceType,
                blocked, category, costCenter, costPrice, costPriceAdjustment, customerNo, customsNo, decimals,
                defaultQuantity, deliveryTime, department, description, extra, grouping, internalNo, internetGroup,
                itemAlternative, itemEAN, keepPriceOnOrdreRecalc, lastCostPercentAmount, location, multiplaFaktor,
                optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, picture, picture2, placement, postServiceCostPrice,
                priceIncl, priceInclDuty, project, provisionGroup, purpose, quantityPrColi, remarks, salesPrice,
                salesUnit, serialTypeBuy, serialTypeSale, status, supplierNo, taxBuying, taxSelling, tracking, unit, uRL,
                volume, webUseOnWeb, webHasNews, webIsDiscount, webAlt, webMetaDescription, webMetaTags, webTitle,
                weight, original_ADeliveryPacketParameter, original_AllocateBOMItemsParameter,
                original_AllowDiscountParameter, original_AllowFinalDiscountParameter, original_AlternativeParameter,
                original_AvanceParameter, original_AvanceTypeParameter, original_BlockedParameter,
                original_CategoryParameter, original_CostCenterParameter, original_CostPriceParameter,
                original_CostPriceAdjustmentParameter, original_CustomerNoParameter, original_CustomsNoParameter,
                original_DecimalsParameter, original_DefaultQuantityParameter, original_DeliveryTimeParameter,
                original_DepartmentParameter, original_DescriptionParameter, original_ExtraParameter,
                original_GroupingParameter, original_InternalNoParameter, original_InternetGroupParameter,
                original_ItemParameter, original_ItemAlternativeParameter, original_ItemEANParameter,
                original_KeepPriceOnOrdreRecalcParameter, original_LastCostPercentAmountParameter,
                original_LocationParameter, original_MultiplaFaktorParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_Optional3Parameter, original_Optional4Parameter,
                original_Optional5Parameter, original_Optional6Parameter, original_Optional7Parameter,
                original_Optional8Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OptionalNumber3Parameter, original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                original_OptionalNumber6Parameter, original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                original_OptionalText7Parameter, original_OptionalText8Parameter, original_PictureParameter,
                original_Picture2Parameter, original_PlacementParameter, original_PostServiceCostPriceParameter,
                original_PriceInclParameter, original_PriceInclDutyParameter, original_ProjectParameter,
                original_ProvisionGroupParameter, original_PurposeParameter, original_QuantityPrColiParameter,
                original_RemarksParameter, original_SalesPriceParameter, original_SalesUnitParameter,
                original_SerialTypeBuyParameter, original_SerialTypeSaleParameter, original_StatusParameter,
                original_SupplierNoParameter, original_TaxBuyingParameter, original_TaxSellingParameter,
                original_TrackingParameter, original_UnitParameter, original_URLParameter, original_VolumeParameter,
                original_WebUseOnWebParameter, original_WebHasNewsParameter, original_WebIsDiscountParameter,
                original_WebAltParameter, original_WebMetaDescriptionParameter, original_WebMetaTagsParameter,
                original_WebTitleParameter, original_WeightParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Interest_AddNew(string account, Nullable<double> amountDue,
            Nullable<double> charge, string chargeAccount, Nullable<short> chargeIsCarrier, Nullable<short> days,
            string description, string interest, Nullable<short> interestIsCarrier, Nullable<double> rate,
            string remarks, string standard_Interest, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountDueParameter = amountDue.HasValue
                ? new ObjectParameter("AmountDue", amountDue)
                : new ObjectParameter("AmountDue", typeof(double));

            var chargeParameter = charge.HasValue
                ? new ObjectParameter("Charge", charge)
                : new ObjectParameter("Charge", typeof(double));

            var chargeAccountParameter = chargeAccount != null
                ? new ObjectParameter("ChargeAccount", chargeAccount)
                : new ObjectParameter("ChargeAccount", typeof(string));

            var chargeIsCarrierParameter = chargeIsCarrier.HasValue
                ? new ObjectParameter("ChargeIsCarrier", chargeIsCarrier)
                : new ObjectParameter("ChargeIsCarrier", typeof(short));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var interestParameter = interest != null
                ? new ObjectParameter("Interest", interest)
                : new ObjectParameter("Interest", typeof(string));

            var interestIsCarrierParameter = interestIsCarrier.HasValue
                ? new ObjectParameter("InterestIsCarrier", interestIsCarrier)
                : new ObjectParameter("InterestIsCarrier", typeof(short));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var standard_InterestParameter = standard_Interest != null
                ? new ObjectParameter("Standard_Interest", standard_Interest)
                : new ObjectParameter("Standard_Interest", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Interest_AddNew",
                accountParameter, amountDueParameter, chargeParameter, chargeAccountParameter, chargeIsCarrierParameter,
                daysParameter, descriptionParameter, interestParameter, interestIsCarrierParameter, rateParameter,
                remarksParameter, standard_InterestParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Interest_Delete(string original_Interest, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Interest_Delete",
                original_InterestParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Interest_Update(string account, Nullable<double> amountDue,
            Nullable<double> charge, string chargeAccount, Nullable<short> chargeIsCarrier, Nullable<short> days,
            string description, Nullable<short> interestIsCarrier, Nullable<double> rate, string remarks,
            string original_Account, Nullable<double> original_AmountDue, Nullable<double> original_Charge,
            string original_ChargeAccount, Nullable<short> original_ChargeIsCarrier, Nullable<short> original_Days,
            string original_Description, string original_Interest, Nullable<short> original_InterestIsCarrier,
            Nullable<double> original_Rate, string original_Remarks, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountDueParameter = amountDue.HasValue
                ? new ObjectParameter("AmountDue", amountDue)
                : new ObjectParameter("AmountDue", typeof(double));

            var chargeParameter = charge.HasValue
                ? new ObjectParameter("Charge", charge)
                : new ObjectParameter("Charge", typeof(double));

            var chargeAccountParameter = chargeAccount != null
                ? new ObjectParameter("ChargeAccount", chargeAccount)
                : new ObjectParameter("ChargeAccount", typeof(string));

            var chargeIsCarrierParameter = chargeIsCarrier.HasValue
                ? new ObjectParameter("ChargeIsCarrier", chargeIsCarrier)
                : new ObjectParameter("ChargeIsCarrier", typeof(short));

            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var interestIsCarrierParameter = interestIsCarrier.HasValue
                ? new ObjectParameter("InterestIsCarrier", interestIsCarrier)
                : new ObjectParameter("InterestIsCarrier", typeof(short));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountDueParameter = original_AmountDue.HasValue
                ? new ObjectParameter("Original_AmountDue", original_AmountDue)
                : new ObjectParameter("Original_AmountDue", typeof(double));

            var original_ChargeParameter = original_Charge.HasValue
                ? new ObjectParameter("Original_Charge", original_Charge)
                : new ObjectParameter("Original_Charge", typeof(double));

            var original_ChargeAccountParameter = original_ChargeAccount != null
                ? new ObjectParameter("Original_ChargeAccount", original_ChargeAccount)
                : new ObjectParameter("Original_ChargeAccount", typeof(string));

            var original_ChargeIsCarrierParameter = original_ChargeIsCarrier.HasValue
                ? new ObjectParameter("Original_ChargeIsCarrier", original_ChargeIsCarrier)
                : new ObjectParameter("Original_ChargeIsCarrier", typeof(short));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InterestParameter = original_Interest != null
                ? new ObjectParameter("Original_Interest", original_Interest)
                : new ObjectParameter("Original_Interest", typeof(string));

            var original_InterestIsCarrierParameter = original_InterestIsCarrier.HasValue
                ? new ObjectParameter("Original_InterestIsCarrier", original_InterestIsCarrier)
                : new ObjectParameter("Original_InterestIsCarrier", typeof(short));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Interest_Update",
                accountParameter, amountDueParameter, chargeParameter, chargeAccountParameter, chargeIsCarrierParameter,
                daysParameter, descriptionParameter, interestIsCarrierParameter, rateParameter, remarksParameter,
                original_AccountParameter, original_AmountDueParameter, original_ChargeParameter,
                original_ChargeAccountParameter, original_ChargeIsCarrierParameter, original_DaysParameter,
                original_DescriptionParameter, original_InterestParameter, original_InterestIsCarrierParameter,
                original_RateParameter, original_RemarksParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_IntrastatLines_AddNew(ObjectParameter amount, ObjectParameter customer,
            ObjectParameter customsNo, ObjectParameter date, ObjectParameter description, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter item, ObjectParameter module, ObjectParameter quantity,
            ObjectParameter supplier, ObjectParameter type, ObjectParameter weight, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_IntrastatLines_AddNew",
                amount, customer, customsNo, date, description, eECCountry, eECTransCode, item, module, quantity,
                supplier, type, weight, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_IntrastatLines_Delete()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_IntrastatLines_Delete");
        }

        public virtual int Public_User_IntrastatLines_Update()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_IntrastatLines_Update");
        }

        public virtual int Public_User_Inventory_AddNew(ObjectParameter aDeliveryPacket,
            ObjectParameter allocateBOMItems, ObjectParameter allowDiscount, ObjectParameter allowFinalDiscount,
            ObjectParameter alternative, ObjectParameter avance, ObjectParameter avanceType, ObjectParameter blocked,
            ObjectParameter category, ObjectParameter costCenter, ObjectParameter costPrice,
            ObjectParameter costPriceAdjustment, ObjectParameter customerNo, ObjectParameter customsNo,
            ObjectParameter decimals, ObjectParameter defaultQuantity, ObjectParameter deliveryTime,
            ObjectParameter department, ObjectParameter description, ObjectParameter extra, ObjectParameter grouping,
            ObjectParameter internalNo, ObjectParameter internetGroup, string item, ObjectParameter itemAlternative,
            ObjectParameter itemEAN, ObjectParameter keepPriceOnOrdreRecalc, ObjectParameter lastCostPercentAmount,
            ObjectParameter location, ObjectParameter multiplaFaktor, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter picture, ObjectParameter picture2, ObjectParameter placement,
            ObjectParameter postServiceCostPrice, ObjectParameter priceIncl, ObjectParameter priceInclDuty,
            ObjectParameter project, ObjectParameter provisionGroup, ObjectParameter purpose,
            ObjectParameter quantityPrColi, ObjectParameter remarks, ObjectParameter salesPrice,
            ObjectParameter salesUnit, ObjectParameter serialTypeBuy, ObjectParameter serialTypeSale,
            ObjectParameter status, ObjectParameter supplierNo, ObjectParameter taxBuying, ObjectParameter taxSelling,
            ObjectParameter tracking, ObjectParameter unit, ObjectParameter uRL, ObjectParameter volume,
            ObjectParameter webUseOnWeb, ObjectParameter webHasNews, ObjectParameter webIsDiscount,
            ObjectParameter webAlt, ObjectParameter webMetaDescription, ObjectParameter webMetaTags,
            ObjectParameter webTitle, ObjectParameter weight, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var itemParameter = item != null
                ? new ObjectParameter("Item", item)
                : new ObjectParameter("Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Inventory_AddNew",
                aDeliveryPacket, allocateBOMItems, allowDiscount, allowFinalDiscount, alternative, avance, avanceType,
                blocked, category, costCenter, costPrice, costPriceAdjustment, customerNo, customsNo, decimals,
                defaultQuantity, deliveryTime, department, description, extra, grouping, internalNo, internetGroup,
                itemParameter, itemAlternative, itemEAN, keepPriceOnOrdreRecalc, lastCostPercentAmount, location,
                multiplaFaktor, optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8,
                optionalNumber1, optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6,
                optionalNumber7, optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4,
                optionalText5, optionalText6, optionalText7, optionalText8, picture, picture2, placement,
                postServiceCostPrice, priceIncl, priceInclDuty, project, provisionGroup, purpose, quantityPrColi,
                remarks, salesPrice, salesUnit, serialTypeBuy, serialTypeSale, status, supplierNo, taxBuying, taxSelling,
                tracking, unit, uRL, volume, webUseOnWeb, webHasNews, webIsDiscount, webAlt, webMetaDescription,
                webMetaTags, webTitle, weight, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Inventory_Delete(string original_Item, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Inventory_Delete",
                original_ItemParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Inventory_Update(ObjectParameter aDeliveryPacket,
            ObjectParameter allocateBOMItems, ObjectParameter allowDiscount, ObjectParameter allowFinalDiscount,
            ObjectParameter alternative, ObjectParameter avance, ObjectParameter avanceType, ObjectParameter blocked,
            ObjectParameter category, ObjectParameter costCenter, ObjectParameter costPrice,
            ObjectParameter costPriceAdjustment, ObjectParameter customerNo, ObjectParameter customsNo,
            ObjectParameter decimals, ObjectParameter defaultQuantity, ObjectParameter deliveryTime,
            ObjectParameter department, ObjectParameter description, ObjectParameter extra, ObjectParameter grouping,
            ObjectParameter internalNo, ObjectParameter internetGroup, ObjectParameter itemAlternative,
            ObjectParameter itemEAN, ObjectParameter keepPriceOnOrdreRecalc, ObjectParameter lastCostPercentAmount,
            ObjectParameter location, ObjectParameter multiplaFaktor, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter picture, ObjectParameter picture2, ObjectParameter placement,
            ObjectParameter postServiceCostPrice, ObjectParameter priceIncl, ObjectParameter priceInclDuty,
            ObjectParameter project, ObjectParameter provisionGroup, ObjectParameter purpose,
            ObjectParameter quantityPrColi, ObjectParameter remarks, ObjectParameter salesPrice,
            ObjectParameter salesUnit, ObjectParameter serialTypeBuy, ObjectParameter serialTypeSale,
            ObjectParameter status, ObjectParameter supplierNo, ObjectParameter taxBuying, ObjectParameter taxSelling,
            ObjectParameter tracking, ObjectParameter unit, ObjectParameter uRL, ObjectParameter volume,
            ObjectParameter webUseOnWeb, ObjectParameter webHasNews, ObjectParameter webIsDiscount,
            ObjectParameter webAlt, ObjectParameter webMetaDescription, ObjectParameter webMetaTags,
            ObjectParameter webTitle, ObjectParameter weight, Nullable<short> original_ADeliveryPacket,
            Nullable<short> original_AllocateBOMItems, Nullable<short> original_AllowDiscount,
            Nullable<short> original_AllowFinalDiscount, string original_Alternative, Nullable<double> original_Avance,
            Nullable<short> original_AvanceType, Nullable<short> original_Blocked, string original_Category,
            string original_CostCenter, Nullable<double> original_CostPrice, Nullable<byte> original_CostPriceAdjustment,
            string original_CustomerNo, string original_CustomsNo, Nullable<double> original_Decimals,
            Nullable<double> original_DefaultQuantity, Nullable<int> original_DeliveryTime, string original_Department,
            string original_Description, string original_Extra, string original_Grouping, string original_InternalNo,
            string original_InternetGroup, string original_Item, string original_ItemAlternative,
            string original_ItemEAN, Nullable<byte> original_KeepPriceOnOrdreRecalc,
            Nullable<double> original_LastCostPercentAmount, string original_Location,
            Nullable<double> original_MultiplaFaktor, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            string original_Picture, string original_Picture2, string original_Placement,
            Nullable<byte> original_PostServiceCostPrice, Nullable<double> original_PriceIncl,
            Nullable<short> original_PriceInclDuty, string original_Project, string original_ProvisionGroup,
            string original_Purpose, Nullable<double> original_QuantityPrColi, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<double> original_SalesUnit,
            Nullable<short> original_SerialTypeBuy, Nullable<short> original_SerialTypeSale,
            Nullable<short> original_Status, string original_SupplierNo, string original_TaxBuying,
            string original_TaxSelling, Nullable<short> original_Tracking, string original_Unit, string original_URL,
            Nullable<float> original_Volume, Nullable<byte> original_WebUseOnWeb, Nullable<byte> original_WebHasNews,
            Nullable<byte> original_WebIsDiscount, string original_WebAlt, string original_WebMetaDescription,
            string original_WebMetaTags, string original_WebTitle, Nullable<float> original_Weight,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllocateBOMItemsParameter = original_AllocateBOMItems.HasValue
                ? new ObjectParameter("Original_AllocateBOMItems", original_AllocateBOMItems)
                : new ObjectParameter("Original_AllocateBOMItems", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_AlternativeParameter = original_Alternative != null
                ? new ObjectParameter("Original_Alternative", original_Alternative)
                : new ObjectParameter("Original_Alternative", typeof(string));

            var original_AvanceParameter = original_Avance.HasValue
                ? new ObjectParameter("Original_Avance", original_Avance)
                : new ObjectParameter("Original_Avance", typeof(double));

            var original_AvanceTypeParameter = original_AvanceType.HasValue
                ? new ObjectParameter("Original_AvanceType", original_AvanceType)
                : new ObjectParameter("Original_AvanceType", typeof(short));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CostPriceAdjustmentParameter = original_CostPriceAdjustment.HasValue
                ? new ObjectParameter("Original_CostPriceAdjustment", original_CostPriceAdjustment)
                : new ObjectParameter("Original_CostPriceAdjustment", typeof(byte));

            var original_CustomerNoParameter = original_CustomerNo != null
                ? new ObjectParameter("Original_CustomerNo", original_CustomerNo)
                : new ObjectParameter("Original_CustomerNo", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DecimalsParameter = original_Decimals.HasValue
                ? new ObjectParameter("Original_Decimals", original_Decimals)
                : new ObjectParameter("Original_Decimals", typeof(double));

            var original_DefaultQuantityParameter = original_DefaultQuantity.HasValue
                ? new ObjectParameter("Original_DefaultQuantity", original_DefaultQuantity)
                : new ObjectParameter("Original_DefaultQuantity", typeof(double));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ExtraParameter = original_Extra != null
                ? new ObjectParameter("Original_Extra", original_Extra)
                : new ObjectParameter("Original_Extra", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_InternalNoParameter = original_InternalNo != null
                ? new ObjectParameter("Original_InternalNo", original_InternalNo)
                : new ObjectParameter("Original_InternalNo", typeof(string));

            var original_InternetGroupParameter = original_InternetGroup != null
                ? new ObjectParameter("Original_InternetGroup", original_InternetGroup)
                : new ObjectParameter("Original_InternetGroup", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_ItemAlternativeParameter = original_ItemAlternative != null
                ? new ObjectParameter("Original_ItemAlternative", original_ItemAlternative)
                : new ObjectParameter("Original_ItemAlternative", typeof(string));

            var original_ItemEANParameter = original_ItemEAN != null
                ? new ObjectParameter("Original_ItemEAN", original_ItemEAN)
                : new ObjectParameter("Original_ItemEAN", typeof(string));

            var original_KeepPriceOnOrdreRecalcParameter = original_KeepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("Original_KeepPriceOnOrdreRecalc", original_KeepPriceOnOrdreRecalc)
                : new ObjectParameter("Original_KeepPriceOnOrdreRecalc", typeof(byte));

            var original_LastCostPercentAmountParameter = original_LastCostPercentAmount.HasValue
                ? new ObjectParameter("Original_LastCostPercentAmount", original_LastCostPercentAmount)
                : new ObjectParameter("Original_LastCostPercentAmount", typeof(double));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_MultiplaFaktorParameter = original_MultiplaFaktor.HasValue
                ? new ObjectParameter("Original_MultiplaFaktor", original_MultiplaFaktor)
                : new ObjectParameter("Original_MultiplaFaktor", typeof(double));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_PictureParameter = original_Picture != null
                ? new ObjectParameter("Original_Picture", original_Picture)
                : new ObjectParameter("Original_Picture", typeof(string));

            var original_Picture2Parameter = original_Picture2 != null
                ? new ObjectParameter("Original_Picture2", original_Picture2)
                : new ObjectParameter("Original_Picture2", typeof(string));

            var original_PlacementParameter = original_Placement != null
                ? new ObjectParameter("Original_Placement", original_Placement)
                : new ObjectParameter("Original_Placement", typeof(string));

            var original_PostServiceCostPriceParameter = original_PostServiceCostPrice.HasValue
                ? new ObjectParameter("Original_PostServiceCostPrice", original_PostServiceCostPrice)
                : new ObjectParameter("Original_PostServiceCostPrice", typeof(byte));

            var original_PriceInclParameter = original_PriceIncl.HasValue
                ? new ObjectParameter("Original_PriceIncl", original_PriceIncl)
                : new ObjectParameter("Original_PriceIncl", typeof(double));

            var original_PriceInclDutyParameter = original_PriceInclDuty.HasValue
                ? new ObjectParameter("Original_PriceInclDuty", original_PriceInclDuty)
                : new ObjectParameter("Original_PriceInclDuty", typeof(short));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProvisionGroupParameter = original_ProvisionGroup != null
                ? new ObjectParameter("Original_ProvisionGroup", original_ProvisionGroup)
                : new ObjectParameter("Original_ProvisionGroup", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_SalesUnitParameter = original_SalesUnit.HasValue
                ? new ObjectParameter("Original_SalesUnit", original_SalesUnit)
                : new ObjectParameter("Original_SalesUnit", typeof(double));

            var original_SerialTypeBuyParameter = original_SerialTypeBuy.HasValue
                ? new ObjectParameter("Original_SerialTypeBuy", original_SerialTypeBuy)
                : new ObjectParameter("Original_SerialTypeBuy", typeof(short));

            var original_SerialTypeSaleParameter = original_SerialTypeSale.HasValue
                ? new ObjectParameter("Original_SerialTypeSale", original_SerialTypeSale)
                : new ObjectParameter("Original_SerialTypeSale", typeof(short));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_SupplierNoParameter = original_SupplierNo != null
                ? new ObjectParameter("Original_SupplierNo", original_SupplierNo)
                : new ObjectParameter("Original_SupplierNo", typeof(string));

            var original_TaxBuyingParameter = original_TaxBuying != null
                ? new ObjectParameter("Original_TaxBuying", original_TaxBuying)
                : new ObjectParameter("Original_TaxBuying", typeof(string));

            var original_TaxSellingParameter = original_TaxSelling != null
                ? new ObjectParameter("Original_TaxSelling", original_TaxSelling)
                : new ObjectParameter("Original_TaxSelling", typeof(string));

            var original_TrackingParameter = original_Tracking.HasValue
                ? new ObjectParameter("Original_Tracking", original_Tracking)
                : new ObjectParameter("Original_Tracking", typeof(short));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_URLParameter = original_URL != null
                ? new ObjectParameter("Original_URL", original_URL)
                : new ObjectParameter("Original_URL", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(float));

            var original_WebUseOnWebParameter = original_WebUseOnWeb.HasValue
                ? new ObjectParameter("Original_WebUseOnWeb", original_WebUseOnWeb)
                : new ObjectParameter("Original_WebUseOnWeb", typeof(byte));

            var original_WebHasNewsParameter = original_WebHasNews.HasValue
                ? new ObjectParameter("Original_WebHasNews", original_WebHasNews)
                : new ObjectParameter("Original_WebHasNews", typeof(byte));

            var original_WebIsDiscountParameter = original_WebIsDiscount.HasValue
                ? new ObjectParameter("Original_WebIsDiscount", original_WebIsDiscount)
                : new ObjectParameter("Original_WebIsDiscount", typeof(byte));

            var original_WebAltParameter = original_WebAlt != null
                ? new ObjectParameter("Original_WebAlt", original_WebAlt)
                : new ObjectParameter("Original_WebAlt", typeof(string));

            var original_WebMetaDescriptionParameter = original_WebMetaDescription != null
                ? new ObjectParameter("Original_WebMetaDescription", original_WebMetaDescription)
                : new ObjectParameter("Original_WebMetaDescription", typeof(string));

            var original_WebMetaTagsParameter = original_WebMetaTags != null
                ? new ObjectParameter("Original_WebMetaTags", original_WebMetaTags)
                : new ObjectParameter("Original_WebMetaTags", typeof(string));

            var original_WebTitleParameter = original_WebTitle != null
                ? new ObjectParameter("Original_WebTitle", original_WebTitle)
                : new ObjectParameter("Original_WebTitle", typeof(string));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(float));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Inventory_Update",
                aDeliveryPacket, allocateBOMItems, allowDiscount, allowFinalDiscount, alternative, avance, avanceType,
                blocked, category, costCenter, costPrice, costPriceAdjustment, customerNo, customsNo, decimals,
                defaultQuantity, deliveryTime, department, description, extra, grouping, internalNo, internetGroup,
                itemAlternative, itemEAN, keepPriceOnOrdreRecalc, lastCostPercentAmount, location, multiplaFaktor,
                optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, picture, picture2, placement, postServiceCostPrice,
                priceIncl, priceInclDuty, project, provisionGroup, purpose, quantityPrColi, remarks, salesPrice,
                salesUnit, serialTypeBuy, serialTypeSale, status, supplierNo, taxBuying, taxSelling, tracking, unit, uRL,
                volume, webUseOnWeb, webHasNews, webIsDiscount, webAlt, webMetaDescription, webMetaTags, webTitle,
                weight, original_ADeliveryPacketParameter, original_AllocateBOMItemsParameter,
                original_AllowDiscountParameter, original_AllowFinalDiscountParameter, original_AlternativeParameter,
                original_AvanceParameter, original_AvanceTypeParameter, original_BlockedParameter,
                original_CategoryParameter, original_CostCenterParameter, original_CostPriceParameter,
                original_CostPriceAdjustmentParameter, original_CustomerNoParameter, original_CustomsNoParameter,
                original_DecimalsParameter, original_DefaultQuantityParameter, original_DeliveryTimeParameter,
                original_DepartmentParameter, original_DescriptionParameter, original_ExtraParameter,
                original_GroupingParameter, original_InternalNoParameter, original_InternetGroupParameter,
                original_ItemParameter, original_ItemAlternativeParameter, original_ItemEANParameter,
                original_KeepPriceOnOrdreRecalcParameter, original_LastCostPercentAmountParameter,
                original_LocationParameter, original_MultiplaFaktorParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_Optional3Parameter, original_Optional4Parameter,
                original_Optional5Parameter, original_Optional6Parameter, original_Optional7Parameter,
                original_Optional8Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OptionalNumber3Parameter, original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                original_OptionalNumber6Parameter, original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                original_OptionalText7Parameter, original_OptionalText8Parameter, original_PictureParameter,
                original_Picture2Parameter, original_PlacementParameter, original_PostServiceCostPriceParameter,
                original_PriceInclParameter, original_PriceInclDutyParameter, original_ProjectParameter,
                original_ProvisionGroupParameter, original_PurposeParameter, original_QuantityPrColiParameter,
                original_RemarksParameter, original_SalesPriceParameter, original_SalesUnitParameter,
                original_SerialTypeBuyParameter, original_SerialTypeSaleParameter, original_StatusParameter,
                original_SupplierNoParameter, original_TaxBuyingParameter, original_TaxSellingParameter,
                original_TrackingParameter, original_UnitParameter, original_URLParameter, original_VolumeParameter,
                original_WebUseOnWebParameter, original_WebHasNewsParameter, original_WebIsDiscountParameter,
                original_WebAltParameter, original_WebMetaDescriptionParameter, original_WebMetaTagsParameter,
                original_WebTitleParameter, original_WeightParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_InventoryItemNo_AddNew(ObjectParameter cusSupItem, ObjectParameter customer,
            ObjectParameter deliveryTime, ObjectParameter description, ObjectParameter item, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter supplier, ObjectParameter tP, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InventoryItemNo_AddNew",
                cusSupItem, customer, deliveryTime, description, item, optional1, optional2, supplier, tP, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InventoryItemNo_Delete(Nullable<int> original_RecordID,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InventoryItemNo_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InventoryItemNo_Update(ObjectParameter cusSupItem, ObjectParameter customer,
            ObjectParameter deliveryTime, ObjectParameter description, ObjectParameter item, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter supplier, ObjectParameter tP, string original_CusSupItem,
            string original_Customer, Nullable<int> original_DeliveryTime, string original_Description,
            string original_Item, string original_Optional1, string original_Optional2, Nullable<int> original_RecordID,
            string original_Supplier, Nullable<byte> original_TP, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_CusSupItemParameter = original_CusSupItem != null
                ? new ObjectParameter("Original_CusSupItem", original_CusSupItem)
                : new ObjectParameter("Original_CusSupItem", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryTimeParameter = original_DeliveryTime.HasValue
                ? new ObjectParameter("Original_DeliveryTime", original_DeliveryTime)
                : new ObjectParameter("Original_DeliveryTime", typeof(int));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TPParameter = original_TP.HasValue
                ? new ObjectParameter("Original_TP", original_TP)
                : new ObjectParameter("Original_TP", typeof(byte));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InventoryItemNo_Update",
                cusSupItem, customer, deliveryTime, description, item, optional1, optional2, supplier, tP,
                original_CusSupItemParameter, original_CustomerParameter, original_DeliveryTimeParameter,
                original_DescriptionParameter, original_ItemParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_RecordIDParameter, original_SupplierParameter,
                original_TPParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InventoryWorksheet_AddNew(ObjectParameter account, ObjectParameter batchNo,
            ObjectParameter costCenter, ObjectParameter costPrice, ObjectParameter delivery, ObjectParameter department,
            ObjectParameter description, ObjectParameter employee, ObjectParameter item, ObjectParameter jobNo,
            ObjectParameter journal, ObjectParameter lineNo, ObjectParameter location, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optionalDate1, ObjectParameter optionalDate2,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter ordered,
            ObjectParameter parameter1, ObjectParameter parameter2, ObjectParameter price, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter remarksAfter, ObjectParameter remarksBefore, ObjectParameter unit,
            ObjectParameter volume, ObjectParameter voucher, ObjectParameter weight, Nullable<double> conversion,
            Nullable<double> multiplaFaktor, Nullable<double> quantity, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_InventoryWorksheet_AddNew", account, batchNo, costCenter, costPrice, delivery, department,
                description, employee, item, jobNo, journal, lineNo, location, optional1, optional2, optionalDate1,
                optionalDate2, optionalNumber1, optionalNumber2, ordered, parameter1, parameter2, price, project,
                purpose, remarksAfter, remarksBefore, unit, volume, voucher, weight, conversionParameter,
                multiplaFaktorParameter, quantityParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_InventoryWorksheet_Delete(Nullable<int> original_RecordID,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_InventoryWorksheet_Delete", original_RecordIDParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InventoryWorksheet_Update(ObjectParameter account, ObjectParameter batchNo,
            ObjectParameter costCenter, ObjectParameter costPrice, ObjectParameter delivery, ObjectParameter department,
            ObjectParameter description, ObjectParameter employee, ObjectParameter item, ObjectParameter jobNo,
            ObjectParameter lineNo, ObjectParameter location, ObjectParameter optional1, ObjectParameter optional2,
            ObjectParameter ordered, ObjectParameter parameter1, ObjectParameter parameter2, ObjectParameter price,
            ObjectParameter project, ObjectParameter purpose, ObjectParameter unit, ObjectParameter voucher,
            string original_Account, string original_BatchNo, string original_CostCenter,
            Nullable<double> original_CostPrice, Nullable<System.DateTime> original_Delivery, string original_Department,
            string original_Description, string original_Employee, string original_Item, Nullable<int> original_JobNo,
            string original_Journal, Nullable<short> original_LineNo, string original_Location,
            string original_Optional1, string original_Optional2, Nullable<double> original_Ordered,
            string original_Parameter1, string original_Parameter2, Nullable<double> original_Price,
            string original_Project, string original_Purpose, Nullable<int> original_RecordId, string original_Unit,
            string original_Voucher, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_JobNoParameter = original_JobNo.HasValue
                ? new ObjectParameter("Original_JobNo", original_JobNo)
                : new ObjectParameter("Original_JobNo", typeof(int));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_LineNoParameter = original_LineNo.HasValue
                ? new ObjectParameter("Original_LineNo", original_LineNo)
                : new ObjectParameter("Original_LineNo", typeof(short));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_InventoryWorksheet_Update", account, batchNo, costCenter, costPrice, delivery, department,
                description, employee, item, jobNo, lineNo, location, optional1, optional2, ordered, parameter1,
                parameter2, price, project, purpose, unit, voucher, original_AccountParameter, original_BatchNoParameter,
                original_CostCenterParameter, original_CostPriceParameter, original_DeliveryParameter,
                original_DepartmentParameter, original_DescriptionParameter, original_EmployeeParameter,
                original_ItemParameter, original_JobNoParameter, original_JournalParameter, original_LineNoParameter,
                original_LocationParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_OrderedParameter, original_Parameter1Parameter, original_Parameter2Parameter,
                original_PriceParameter, original_ProjectParameter, original_PurposeParameter,
                original_RecordIdParameter, original_UnitParameter, original_VoucherParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InvoiceText_AddNew(ObjectParameter active, ObjectParameter description,
            ObjectParameter inActive, ObjectParameter language, Nullable<int> recordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InvoiceText_AddNew", active,
                description, inActive, language, recordIDParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_InvoiceText_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InvoiceText_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_InvoiceText_Update(ObjectParameter active, ObjectParameter description,
            ObjectParameter inActive, Nullable<System.DateTime> original_Active, string original_Description,
            Nullable<System.DateTime> original_InActive, string original_Language, Nullable<int> original_RecordID,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_ActiveParameter = original_Active.HasValue
                ? new ObjectParameter("Original_Active", original_Active)
                : new ObjectParameter("Original_Active", typeof(System.DateTime));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InActiveParameter = original_InActive.HasValue
                ? new ObjectParameter("Original_InActive", original_InActive)
                : new ObjectParameter("Original_InActive", typeof(System.DateTime));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_InvoiceText_Update", active,
                description, inActive, original_ActiveParameter, original_DescriptionParameter,
                original_InActiveParameter, original_LanguageParameter, original_RecordIDParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNo_AddNew(ObjectParameter isDelivered, ObjectParameter item,
            ObjectParameter linkReceiptGUID, ObjectParameter linkTP, ObjectParameter optional1,
            ObjectParameter optional10, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optional9, ObjectParameter purchaseNo, ObjectParameter purLineRecordID,
            ObjectParameter remarks, ObjectParameter serialNo, ObjectParameter status, ObjectParameter statusTrail,
            ObjectParameter supplier, ObjectParameter tP, ObjectParameter trail, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNo_AddNew",
                isDelivered, item, linkReceiptGUID, linkTP, optional1, optional10, optional2, optional3, optional4,
                optional5, optional6, optional7, optional8, optional9, purchaseNo, purLineRecordID, remarks, serialNo,
                status, statusTrail, supplier, tP, trail, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNo_Delete(string original_Item, string original_SerialNo,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNo_Delete",
                original_ItemParameter, original_SerialNoParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNo_Update(ObjectParameter isDelivered, ObjectParameter linkReceiptGUID,
            ObjectParameter linkTP, ObjectParameter optional1, ObjectParameter optional10, ObjectParameter optional2,
            ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5, ObjectParameter optional6,
            ObjectParameter optional7, ObjectParameter optional8, ObjectParameter optional9, ObjectParameter purchaseNo,
            ObjectParameter purLineRecordID, ObjectParameter remarks, ObjectParameter status,
            ObjectParameter statusTrail, ObjectParameter supplier, ObjectParameter tP, ObjectParameter trail,
            Nullable<bool> original_IsDelivered, string original_Item, Nullable<System.Guid> original_LinkReceiptGUID,
            Nullable<short> original_LinkTP, string original_Optional1, string original_Optional10,
            string original_Optional2, string original_Optional3, string original_Optional4, string original_Optional5,
            string original_Optional6, string original_Optional7, string original_Optional8, string original_Optional9,
            string original_PurchaseNo, Nullable<int> original_PurLineRecordID, string original_Remarks,
            string original_SerialNo, Nullable<short> original_Status, Nullable<double> original_StatusTrail,
            string original_Supplier, Nullable<short> original_TP, Nullable<double> original_Trail,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_IsDeliveredParameter = original_IsDelivered.HasValue
                ? new ObjectParameter("Original_IsDelivered", original_IsDelivered)
                : new ObjectParameter("Original_IsDelivered", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_LinkReceiptGUIDParameter = original_LinkReceiptGUID.HasValue
                ? new ObjectParameter("Original_LinkReceiptGUID", original_LinkReceiptGUID)
                : new ObjectParameter("Original_LinkReceiptGUID", typeof(System.Guid));

            var original_LinkTPParameter = original_LinkTP.HasValue
                ? new ObjectParameter("Original_LinkTP", original_LinkTP)
                : new ObjectParameter("Original_LinkTP", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional10Parameter = original_Optional10 != null
                ? new ObjectParameter("Original_Optional10", original_Optional10)
                : new ObjectParameter("Original_Optional10", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_Optional3Parameter = original_Optional3 != null
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(string));

            var original_Optional4Parameter = original_Optional4 != null
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(string));

            var original_Optional5Parameter = original_Optional5 != null
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(string));

            var original_Optional6Parameter = original_Optional6 != null
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(string));

            var original_Optional7Parameter = original_Optional7 != null
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(string));

            var original_Optional8Parameter = original_Optional8 != null
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(string));

            var original_Optional9Parameter = original_Optional9 != null
                ? new ObjectParameter("Original_Optional9", original_Optional9)
                : new ObjectParameter("Original_Optional9", typeof(string));

            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var original_PurLineRecordIDParameter = original_PurLineRecordID.HasValue
                ? new ObjectParameter("Original_PurLineRecordID", original_PurLineRecordID)
                : new ObjectParameter("Original_PurLineRecordID", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var original_StatusParameter = original_Status.HasValue
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(short));

            var original_StatusTrailParameter = original_StatusTrail.HasValue
                ? new ObjectParameter("Original_StatusTrail", original_StatusTrail)
                : new ObjectParameter("Original_StatusTrail", typeof(double));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TPParameter = original_TP.HasValue
                ? new ObjectParameter("Original_TP", original_TP)
                : new ObjectParameter("Original_TP", typeof(short));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNo_Update",
                isDelivered, linkReceiptGUID, linkTP, optional1, optional10, optional2, optional3, optional4, optional5,
                optional6, optional7, optional8, optional9, purchaseNo, purLineRecordID, remarks, status, statusTrail,
                supplier, tP, trail, original_IsDeliveredParameter, original_ItemParameter,
                original_LinkReceiptGUIDParameter, original_LinkTPParameter, original_Optional1Parameter,
                original_Optional10Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_Optional9Parameter,
                original_PurchaseNoParameter, original_PurLineRecordIDParameter, original_RemarksParameter,
                original_SerialNoParameter, original_StatusParameter, original_StatusTrailParameter,
                original_SupplierParameter, original_TPParameter, original_TrailParameter, returnNoRowsParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNoSale_AddNew(ObjectParameter customer, ObjectParameter invoiceTP,
            ObjectParameter isDelivered, ObjectParameter item, ObjectParameter linkDeliveredGUID,
            ObjectParameter orderNo, ObjectParameter ordLineRecordID, ObjectParameter serialNo, ObjectParameter trail,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNoSale_AddNew",
                customer, invoiceTP, isDelivered, item, linkDeliveredGUID, orderNo, ordLineRecordID, serialNo, trail,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNoSale_Delete(string original_Item, string original_SerialNo,
            Nullable<short> original_InvoiceTP, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_SerialNoParameter = original_SerialNo != null
                ? new ObjectParameter("Original_SerialNo", original_SerialNo)
                : new ObjectParameter("Original_SerialNo", typeof(string));

            var original_InvoiceTPParameter = original_InvoiceTP.HasValue
                ? new ObjectParameter("Original_InvoiceTP", original_InvoiceTP)
                : new ObjectParameter("Original_InvoiceTP", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNoSale_Delete",
                original_ItemParameter, original_SerialNoParameter, original_InvoiceTPParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ItemSerialNoSale_Update(ObjectParameter customer, ObjectParameter isDelivered,
            ObjectParameter linkDeliveredGUID, ObjectParameter orderNo, ObjectParameter ordLineRecordID,
            ObjectParameter trail, ObjectParameter original_Customer, ObjectParameter original_InvoiceTP,
            ObjectParameter original_IsDelivered, ObjectParameter original_Item,
            ObjectParameter original_LinkDeliveredGUID, ObjectParameter original_OrderNo,
            ObjectParameter original_OrdLineRecordID, ObjectParameter original_SerialNo, ObjectParameter original_Trail,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ItemSerialNoSale_Update",
                customer, isDelivered, linkDeliveredGUID, orderNo, ordLineRecordID, trail, original_Customer,
                original_InvoiceTP, original_IsDelivered, original_Item, original_LinkDeliveredGUID, original_OrderNo,
                original_OrdLineRecordID, original_SerialNo, original_Trail, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Journal_AddNew(ObjectParameter account1, ObjectParameter account2,
            ObjectParameter account3, ObjectParameter account4, ObjectParameter account5, ObjectParameter defaultCode,
            ObjectParameter duplicateFields, ObjectParameter generateAmount, string journal, ObjectParameter journalType,
            ObjectParameter letter1, ObjectParameter letter2, ObjectParameter letter3, ObjectParameter letter4,
            ObjectParameter letter5, ObjectParameter lockedBy, ObjectParameter module, ObjectParameter multiCurrency,
            ObjectParameter newVoucherNo, ObjectParameter printed, ObjectParameter recurring, ObjectParameter remarks,
            ObjectParameter remove, ObjectParameter source, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var journalParameter = journal != null
                ? new ObjectParameter("Journal", journal)
                : new ObjectParameter("Journal", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Journal_AddNew", account1,
                account2, account3, account4, account5, defaultCode, duplicateFields, generateAmount, journalParameter,
                journalType, letter1, letter2, letter3, letter4, letter5, lockedBy, module, multiCurrency, newVoucherNo,
                printed, recurring, remarks, remove, source, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Journal_Delete(string original_Journal, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Journal_Delete",
                original_JournalParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Journal_Update(ObjectParameter account1, ObjectParameter account2,
            ObjectParameter account3, ObjectParameter account4, ObjectParameter account5, ObjectParameter defaultCode,
            ObjectParameter duplicateFields, ObjectParameter generateAmount, ObjectParameter journalType,
            ObjectParameter letter1, ObjectParameter letter2, ObjectParameter letter3, ObjectParameter letter4,
            ObjectParameter letter5, ObjectParameter lockedBy, ObjectParameter module, ObjectParameter multiCurrency,
            ObjectParameter newVoucherNo, ObjectParameter printed, ObjectParameter recurring, ObjectParameter remarks,
            ObjectParameter remove, ObjectParameter source, string original_Account1, string original_Account2,
            string original_Account3, string original_Account4, string original_Account5,
            Nullable<short> original_DefaultCode, Nullable<bool> original_DuplicateFields,
            Nullable<bool> original_GenerateAmount, string original_Journal, Nullable<short> original_JournalType,
            string original_Letter1, string original_Letter2, string original_Letter3, string original_Letter4,
            string original_Letter5, string original_LockedBy, Nullable<short> original_Module,
            Nullable<bool> original_MultiCurrency, Nullable<short> original_NewVoucherNo,
            Nullable<short> original_Printed, Nullable<short> original_Recurring, string original_Remarks,
            Nullable<short> original_Remove, string original_Source, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_Account1Parameter = original_Account1 != null
                ? new ObjectParameter("Original_Account1", original_Account1)
                : new ObjectParameter("Original_Account1", typeof(string));

            var original_Account2Parameter = original_Account2 != null
                ? new ObjectParameter("Original_Account2", original_Account2)
                : new ObjectParameter("Original_Account2", typeof(string));

            var original_Account3Parameter = original_Account3 != null
                ? new ObjectParameter("Original_Account3", original_Account3)
                : new ObjectParameter("Original_Account3", typeof(string));

            var original_Account4Parameter = original_Account4 != null
                ? new ObjectParameter("Original_Account4", original_Account4)
                : new ObjectParameter("Original_Account4", typeof(string));

            var original_Account5Parameter = original_Account5 != null
                ? new ObjectParameter("Original_Account5", original_Account5)
                : new ObjectParameter("Original_Account5", typeof(string));

            var original_DefaultCodeParameter = original_DefaultCode.HasValue
                ? new ObjectParameter("Original_DefaultCode", original_DefaultCode)
                : new ObjectParameter("Original_DefaultCode", typeof(short));

            var original_DuplicateFieldsParameter = original_DuplicateFields.HasValue
                ? new ObjectParameter("Original_DuplicateFields", original_DuplicateFields)
                : new ObjectParameter("Original_DuplicateFields", typeof(bool));

            var original_GenerateAmountParameter = original_GenerateAmount.HasValue
                ? new ObjectParameter("Original_GenerateAmount", original_GenerateAmount)
                : new ObjectParameter("Original_GenerateAmount", typeof(bool));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_JournalTypeParameter = original_JournalType.HasValue
                ? new ObjectParameter("Original_JournalType", original_JournalType)
                : new ObjectParameter("Original_JournalType", typeof(short));

            var original_Letter1Parameter = original_Letter1 != null
                ? new ObjectParameter("Original_Letter1", original_Letter1)
                : new ObjectParameter("Original_Letter1", typeof(string));

            var original_Letter2Parameter = original_Letter2 != null
                ? new ObjectParameter("Original_Letter2", original_Letter2)
                : new ObjectParameter("Original_Letter2", typeof(string));

            var original_Letter3Parameter = original_Letter3 != null
                ? new ObjectParameter("Original_Letter3", original_Letter3)
                : new ObjectParameter("Original_Letter3", typeof(string));

            var original_Letter4Parameter = original_Letter4 != null
                ? new ObjectParameter("Original_Letter4", original_Letter4)
                : new ObjectParameter("Original_Letter4", typeof(string));

            var original_Letter5Parameter = original_Letter5 != null
                ? new ObjectParameter("Original_Letter5", original_Letter5)
                : new ObjectParameter("Original_Letter5", typeof(string));

            var original_LockedByParameter = original_LockedBy != null
                ? new ObjectParameter("Original_LockedBy", original_LockedBy)
                : new ObjectParameter("Original_LockedBy", typeof(string));

            var original_ModuleParameter = original_Module.HasValue
                ? new ObjectParameter("Original_Module", original_Module)
                : new ObjectParameter("Original_Module", typeof(short));

            var original_MultiCurrencyParameter = original_MultiCurrency.HasValue
                ? new ObjectParameter("Original_MultiCurrency", original_MultiCurrency)
                : new ObjectParameter("Original_MultiCurrency", typeof(bool));

            var original_NewVoucherNoParameter = original_NewVoucherNo.HasValue
                ? new ObjectParameter("Original_NewVoucherNo", original_NewVoucherNo)
                : new ObjectParameter("Original_NewVoucherNo", typeof(short));

            var original_PrintedParameter = original_Printed.HasValue
                ? new ObjectParameter("Original_Printed", original_Printed)
                : new ObjectParameter("Original_Printed", typeof(short));

            var original_RecurringParameter = original_Recurring.HasValue
                ? new ObjectParameter("Original_Recurring", original_Recurring)
                : new ObjectParameter("Original_Recurring", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_RemoveParameter = original_Remove.HasValue
                ? new ObjectParameter("Original_Remove", original_Remove)
                : new ObjectParameter("Original_Remove", typeof(short));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Journal_Update", account1,
                account2, account3, account4, account5, defaultCode, duplicateFields, generateAmount, journalType,
                letter1, letter2, letter3, letter4, letter5, lockedBy, module, multiCurrency, newVoucherNo, printed,
                recurring, remarks, remove, source, original_Account1Parameter, original_Account2Parameter,
                original_Account3Parameter, original_Account4Parameter, original_Account5Parameter,
                original_DefaultCodeParameter, original_DuplicateFieldsParameter, original_GenerateAmountParameter,
                original_JournalParameter, original_JournalTypeParameter, original_Letter1Parameter,
                original_Letter2Parameter, original_Letter3Parameter, original_Letter4Parameter,
                original_Letter5Parameter, original_LockedByParameter, original_ModuleParameter,
                original_MultiCurrencyParameter, original_NewVoucherNoParameter, original_PrintedParameter,
                original_RecurringParameter, original_RemarksParameter, original_RemoveParameter,
                original_SourceParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunication_AddNew(ObjectParameter communication, string name,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_OrderCommunication_AddNew", communication, nameParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunication_Delete(string original_Communication,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_OrderCommunication_Delete", original_CommunicationParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunication_Update(ObjectParameter name, string original_Communication,
            string original_Name, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "Public_User_OrderCommunication_Update", name, original_CommunicationParameter, original_NameParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunicationStatus_AddNew(string name, ObjectParameter status,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_OrderCommunicationStatus_AddNew", nameParameter, status, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunicationStatus_Delete(string original_Status,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_OrderCommunicationStatus_Delete", original_StatusParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderCommunicationStatus_Update(ObjectParameter name, string original_Name,
            string original_Status, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_OrderCommunicationStatus_Update", name, original_NameParameter,
                    original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderLine_AddNew(ObjectParameter account, ObjectParameter aDeliveryPacket,
            ObjectParameter allowDiscount, ObjectParameter allowDuty, ObjectParameter allowFinalDiscount,
            ObjectParameter batchNo, ObjectParameter costCenter, ObjectParameter costPrice, ObjectParameter customsNo,
            ObjectParameter deliver, ObjectParameter delivery, ObjectParameter department, ObjectParameter description,
            ObjectParameter discount, ObjectParameter employee, ObjectParameter externalNo, ObjectParameter fixedLine,
            ObjectParameter item, ObjectParameter jobNo, ObjectParameter journal, ObjectParameter journalLineNo,
            ObjectParameter lineNo, ObjectParameter location, ObjectParameter optional1, ObjectParameter optional2,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter ordered, ObjectParameter orderNo,
            ObjectParameter parameter1, ObjectParameter parameter2, ObjectParameter price, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter quantityPrColi, ObjectParameter refPurchaseNo,
            ObjectParameter remarksAfter, ObjectParameter remarksBefore, ObjectParameter selected, ObjectParameter tax,
            ObjectParameter unit, ObjectParameter volume, ObjectParameter weight, Nullable<int> bOMLineID,
            Nullable<double> conversion, string currency, string customer, Nullable<double> dutyAmount,
            Nullable<double> dutyAmountBase, Nullable<int> masterID, Nullable<double> multiplaFaktor,
            Nullable<double> quantity, Nullable<double> rate, Nullable<short> status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var bOMLineIDParameter = bOMLineID.HasValue
                ? new ObjectParameter("BOMLineID", bOMLineID)
                : new ObjectParameter("BOMLineID", typeof(int));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dutyAmountParameter = dutyAmount.HasValue
                ? new ObjectParameter("DutyAmount", dutyAmount)
                : new ObjectParameter("DutyAmount", typeof(double));

            var dutyAmountBaseParameter = dutyAmountBase.HasValue
                ? new ObjectParameter("DutyAmountBase", dutyAmountBase)
                : new ObjectParameter("DutyAmountBase", typeof(double));

            var masterIDParameter = masterID.HasValue
                ? new ObjectParameter("MasterID", masterID)
                : new ObjectParameter("MasterID", typeof(int));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderLine_AddNew", account,
                aDeliveryPacket, allowDiscount, allowDuty, allowFinalDiscount, batchNo, costCenter, costPrice, customsNo,
                deliver, delivery, department, description, discount, employee, externalNo, fixedLine, item, jobNo,
                journal, journalLineNo, lineNo, location, optional1, optional2, optionalDate1, optionalDate2,
                optionalNumber1, optionalNumber2, ordered, orderNo, parameter1, parameter2, price, project, purpose,
                quantityPrColi, refPurchaseNo, remarksAfter, remarksBefore, selected, tax, unit, volume, weight,
                bOMLineIDParameter, conversionParameter, currencyParameter, customerParameter, dutyAmountParameter,
                dutyAmountBaseParameter, masterIDParameter, multiplaFaktorParameter, quantityParameter, rateParameter,
                statusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderLine_AfterUpdate(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderLine_AfterUpdate",
                recordIDParameter);
        }

        public virtual int Public_User_OrderLine_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderLine_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderLine_Update(ObjectParameter account, ObjectParameter aDeliveryPacket,
            ObjectParameter allowDiscount, ObjectParameter allowDuty, ObjectParameter allowFinalDiscount,
            ObjectParameter batchNo, ObjectParameter costCenter, ObjectParameter costPrice, ObjectParameter customsNo,
            ObjectParameter deliver, ObjectParameter delivery, ObjectParameter department, ObjectParameter description,
            ObjectParameter discount, ObjectParameter employee, ObjectParameter externalNo, ObjectParameter fixedLine,
            ObjectParameter item, ObjectParameter jobNo, ObjectParameter location, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optionalDate1, ObjectParameter optionalDate2,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter ordered,
            ObjectParameter parameter1, ObjectParameter parameter2, ObjectParameter price, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter quantityPrColi, ObjectParameter refPurchaseNo,
            ObjectParameter remarksAfter, ObjectParameter remarksBefore, ObjectParameter selected, ObjectParameter tax,
            ObjectParameter unit, ObjectParameter volume, ObjectParameter weight, string original_Account,
            Nullable<short> original_ADeliveryPacket, Nullable<short> original_AllowDiscount,
            Nullable<short> original_AllowDuty, Nullable<short> original_AllowFinalDiscount, string original_BatchNo,
            string original_CostCenter, Nullable<double> original_CostPrice, string original_CustomsNo,
            Nullable<double> original_Deliver, Nullable<System.DateTime> original_Delivery, string original_Department,
            string original_Description, Nullable<double> original_Discount, string original_Employee,
            string original_ExternalNo, Nullable<short> original_FixedLine, string original_Item,
            Nullable<int> original_JobNo, string original_Location, string original_Optional1, string original_Optional2,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_Ordered, string original_Parameter1, string original_Parameter2,
            Nullable<double> original_Price, string original_Project, string original_Purpose,
            Nullable<double> original_QuantityPrColi, Nullable<int> original_RecordId, string original_RefPurchaseNo,
            string original_RemarksAfter, string original_RemarksBefore, Nullable<bool> original_Selected,
            string original_Tax, string original_Unit, Nullable<double> original_Volume,
            Nullable<double> original_Weight, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_ADeliveryPacketParameter = original_ADeliveryPacket.HasValue
                ? new ObjectParameter("Original_ADeliveryPacket", original_ADeliveryPacket)
                : new ObjectParameter("Original_ADeliveryPacket", typeof(short));

            var original_AllowDiscountParameter = original_AllowDiscount.HasValue
                ? new ObjectParameter("Original_AllowDiscount", original_AllowDiscount)
                : new ObjectParameter("Original_AllowDiscount", typeof(short));

            var original_AllowDutyParameter = original_AllowDuty.HasValue
                ? new ObjectParameter("Original_AllowDuty", original_AllowDuty)
                : new ObjectParameter("Original_AllowDuty", typeof(short));

            var original_AllowFinalDiscountParameter = original_AllowFinalDiscount.HasValue
                ? new ObjectParameter("Original_AllowFinalDiscount", original_AllowFinalDiscount)
                : new ObjectParameter("Original_AllowFinalDiscount", typeof(short));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DeliverParameter = original_Deliver.HasValue
                ? new ObjectParameter("Original_Deliver", original_Deliver)
                : new ObjectParameter("Original_Deliver", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DiscountParameter = original_Discount.HasValue
                ? new ObjectParameter("Original_Discount", original_Discount)
                : new ObjectParameter("Original_Discount", typeof(double));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ExternalNoParameter = original_ExternalNo != null
                ? new ObjectParameter("Original_ExternalNo", original_ExternalNo)
                : new ObjectParameter("Original_ExternalNo", typeof(string));

            var original_FixedLineParameter = original_FixedLine.HasValue
                ? new ObjectParameter("Original_FixedLine", original_FixedLine)
                : new ObjectParameter("Original_FixedLine", typeof(short));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_JobNoParameter = original_JobNo.HasValue
                ? new ObjectParameter("Original_JobNo", original_JobNo)
                : new ObjectParameter("Original_JobNo", typeof(int));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityPrColiParameter = original_QuantityPrColi.HasValue
                ? new ObjectParameter("Original_QuantityPrColi", original_QuantityPrColi)
                : new ObjectParameter("Original_QuantityPrColi", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RefPurchaseNoParameter = original_RefPurchaseNo != null
                ? new ObjectParameter("Original_RefPurchaseNo", original_RefPurchaseNo)
                : new ObjectParameter("Original_RefPurchaseNo", typeof(string));

            var original_RemarksAfterParameter = original_RemarksAfter != null
                ? new ObjectParameter("Original_RemarksAfter", original_RemarksAfter)
                : new ObjectParameter("Original_RemarksAfter", typeof(string));

            var original_RemarksBeforeParameter = original_RemarksBefore != null
                ? new ObjectParameter("Original_RemarksBefore", original_RemarksBefore)
                : new ObjectParameter("Original_RemarksBefore", typeof(string));

            var original_SelectedParameter = original_Selected.HasValue
                ? new ObjectParameter("Original_Selected", original_Selected)
                : new ObjectParameter("Original_Selected", typeof(bool));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(double));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderLine_Update", account,
                aDeliveryPacket, allowDiscount, allowDuty, allowFinalDiscount, batchNo, costCenter, costPrice, customsNo,
                deliver, delivery, department, description, discount, employee, externalNo, fixedLine, item, jobNo,
                location, optional1, optional2, optionalDate1, optionalDate2, optionalNumber1, optionalNumber2, ordered,
                parameter1, parameter2, price, project, purpose, quantityPrColi, refPurchaseNo, remarksAfter,
                remarksBefore, selected, tax, unit, volume, weight, original_AccountParameter,
                original_ADeliveryPacketParameter, original_AllowDiscountParameter, original_AllowDutyParameter,
                original_AllowFinalDiscountParameter, original_BatchNoParameter, original_CostCenterParameter,
                original_CostPriceParameter, original_CustomsNoParameter, original_DeliverParameter,
                original_DeliveryParameter, original_DepartmentParameter, original_DescriptionParameter,
                original_DiscountParameter, original_EmployeeParameter, original_ExternalNoParameter,
                original_FixedLineParameter, original_ItemParameter, original_JobNoParameter, original_LocationParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_OptionalDate1Parameter,
                original_OptionalDate2Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OrderedParameter, original_Parameter1Parameter, original_Parameter2Parameter,
                original_PriceParameter, original_ProjectParameter, original_PurposeParameter,
                original_QuantityPrColiParameter, original_RecordIdParameter, original_RefPurchaseNoParameter,
                original_RemarksAfterParameter, original_RemarksBeforeParameter, original_SelectedParameter,
                original_TaxParameter, original_UnitParameter, original_VolumeParameter, original_WeightParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Orders_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allocated,
            ObjectParameter calculationOfCargo, ObjectParameter cashDiscount, ObjectParameter category,
            ObjectParameter cityName, ObjectParameter contact, ObjectParameter costCenter, ObjectParameter country,
            ObjectParameter currency, ObjectParameter customer, ObjectParameter delivery, ObjectParameter deliveryDate,
            ObjectParameter deliveryWeek, ObjectParameter department, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter eDILocationNr, ObjectParameter eMail, ObjectParameter endDisc,
            ObjectParameter endDiscIncl, ObjectParameter endDiscPct, ObjectParameter excise, ObjectParameter exciseBase,
            ObjectParameter giro, ObjectParameter internalRemarks, ObjectParameter isLiableToPayTax,
            ObjectParameter keepOrder, ObjectParameter lEANCustomersReference, ObjectParameter lEANOrderIdent,
            ObjectParameter lEANShipReference, ObjectParameter lEANTest, ObjectParameter language, ObjectParameter name,
            ObjectParameter mobile, ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3,
            ObjectParameter optional4, ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7,
            ObjectParameter optional8, ObjectParameter optionalNumber1, ObjectParameter optionalNumber2,
            ObjectParameter optionalNumber3, ObjectParameter optionalNumber4, ObjectParameter optionalNumber5,
            ObjectParameter optionalNumber6, ObjectParameter optionalNumber7, ObjectParameter optionalNumber8,
            ObjectParameter optionalText1, ObjectParameter optionalText2, ObjectParameter optionalText3,
            ObjectParameter optionalText4, ObjectParameter optionalText5, ObjectParameter optionalText6,
            ObjectParameter optionalText7, ObjectParameter optionalText8, ObjectParameter orderCategory,
            ObjectParameter orderCommunication, ObjectParameter orderCommunicationStatus, ObjectParameter orderCustomer,
            ObjectParameter orderCustomerAddress1, ObjectParameter orderCustomerAddress2,
            ObjectParameter orderCustomerAddress3, ObjectParameter orderCustomerCityName,
            ObjectParameter orderCustomerContact, ObjectParameter orderCustomerCountry,
            ObjectParameter orderCustomerEMail, ObjectParameter orderCustomerName,
            ObjectParameter orderCustomerPostalCode, ObjectParameter orderDate, ObjectParameter orderMerging,
            string orderNo, ObjectParameter orderText, ObjectParameter orderType, ObjectParameter ourRef,
            ObjectParameter payment, ObjectParameter postalCode, ObjectParameter priceList, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter rate, ObjectParameter recvNo, ObjectParameter remarks,
            ObjectParameter reports, ObjectParameter roundedAmount, ObjectParameter salesRep, ObjectParameter ship1,
            ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5, ObjectParameter ship6,
            ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipDate,
            ObjectParameter shipEDILocationNr, ObjectParameter shipEMail, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter status, ObjectParameter subDescription, ObjectParameter subEndDate,
            ObjectParameter subIntervals, ObjectParameter subNextDate, ObjectParameter tax, ObjectParameter taxNo,
            ObjectParameter vatFee, ObjectParameter vatFeeBase, ObjectParameter vatFreeFee,
            ObjectParameter vatFreeFeeBase, ObjectParameter yourRef, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders_AddNew", address1,
                address2, address3, agent, allocated, calculationOfCargo, cashDiscount, category, cityName, contact,
                costCenter, country, currency, customer, delivery, deliveryDate, deliveryWeek, department, eECCountry,
                eECTransCode, eDILocationNr, eMail, endDisc, endDiscIncl, endDiscPct, excise, exciseBase, giro,
                internalRemarks, isLiableToPayTax, keepOrder, lEANCustomersReference, lEANOrderIdent, lEANShipReference,
                lEANTest, language, name, mobile, optional1, optional2, optional3, optional4, optional5, optional6,
                optional7, optional8, optionalNumber1, optionalNumber2, optionalNumber3, optionalNumber4,
                optionalNumber5, optionalNumber6, optionalNumber7, optionalNumber8, optionalText1, optionalText2,
                optionalText3, optionalText4, optionalText5, optionalText6, optionalText7, optionalText8, orderCategory,
                orderCommunication, orderCommunicationStatus, orderCustomer, orderCustomerAddress1,
                orderCustomerAddress2, orderCustomerAddress3, orderCustomerCityName, orderCustomerContact,
                orderCustomerCountry, orderCustomerEMail, orderCustomerName, orderCustomerPostalCode, orderDate,
                orderMerging, orderNoParameter, orderText, orderType, ourRef, payment, postalCode, priceList, project,
                purpose, rate, recvNo, remarks, reports, roundedAmount, salesRep, ship1, ship2, ship3, ship5, ship6,
                ship7, shipCityName, shipDate, shipEDILocationNr, shipEMail, shipPostalCode, shipTo, status,
                subDescription, subEndDate, subIntervals, subNextDate, tax, taxNo, vatFee, vatFeeBase, vatFreeFee,
                vatFreeFeeBase, yourRef, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Orders_Delete(string original_OrderNo, Nullable<double> original_Trail,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders_Delete",
                original_OrderNoParameter, original_TrailParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Orders_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allocated,
            ObjectParameter calculationOfCargo, ObjectParameter cashDiscount, ObjectParameter category,
            ObjectParameter cityName, ObjectParameter contact, ObjectParameter costCenter, ObjectParameter country,
            ObjectParameter currency, ObjectParameter customer, ObjectParameter delivery, ObjectParameter deliveryDate,
            ObjectParameter deliveryWeek, ObjectParameter department, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter eDILocationNr, ObjectParameter eMail, ObjectParameter endDisc,
            ObjectParameter endDiscIncl, ObjectParameter endDiscPct, ObjectParameter excise, ObjectParameter exciseBase,
            ObjectParameter giro, ObjectParameter internalRemarks, ObjectParameter isLiableToPayTax,
            ObjectParameter keepOrder, ObjectParameter lEANCustomersReference, ObjectParameter lEANOrderIdent,
            ObjectParameter lEANShipReference, ObjectParameter lEANTest, ObjectParameter language, ObjectParameter name,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter orderCategory, ObjectParameter orderCommunication,
            ObjectParameter orderCommunicationStatus, ObjectParameter orderCustomer,
            ObjectParameter orderCustomerAddress1, ObjectParameter orderCustomerAddress2,
            ObjectParameter orderCustomerAddress3, ObjectParameter orderCustomerCityName,
            ObjectParameter orderCustomerContact, ObjectParameter orderCustomerCountry,
            ObjectParameter orderCustomerEMail, ObjectParameter orderCustomerName,
            ObjectParameter orderCustomerPostalCode, ObjectParameter orderDate, ObjectParameter orderMerging,
            string orderNo, ObjectParameter orderText, ObjectParameter orderType, ObjectParameter ourRef,
            ObjectParameter payment, ObjectParameter postalCode, ObjectParameter priceList, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter rate, ObjectParameter recvNo, ObjectParameter remarks,
            ObjectParameter reports, ObjectParameter roundedAmount, ObjectParameter salesRep, ObjectParameter ship1,
            ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5, ObjectParameter ship6,
            ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipDate,
            ObjectParameter shipEDILocationNr, ObjectParameter shipEMail, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter status, ObjectParameter subDescription, ObjectParameter subEndDate,
            ObjectParameter subIntervals, ObjectParameter subNextDate, ObjectParameter tax, ObjectParameter taxNo,
            Nullable<double> trail, ObjectParameter vatFee, ObjectParameter vatFeeBase, ObjectParameter vatFreeFee,
            ObjectParameter vatFreeFeeBase, ObjectParameter yourRef, string original_Address1, string original_Address2,
            string original_Address3, string original_Agent, Nullable<short> original_Allocated,
            Nullable<byte> original_CalculationOfCargo, string original_CashDiscount, string original_Category,
            string original_CityName, string original_Contact, string original_CostCenter, string original_Country,
            string original_Currency, string original_Customer, string original_Delivery,
            Nullable<System.DateTime> original_DeliveryDate, Nullable<int> original_DeliveryWeek,
            string original_Department, Nullable<short> original_EECCountry, Nullable<byte> original_EECTransCode,
            string original_EDILocationNr, string original_EMail, Nullable<double> original_EndDisc,
            Nullable<double> original_EndDiscIncl, Nullable<double> original_EndDiscPct,
            Nullable<double> original_Excise, Nullable<double> original_ExciseBase, string original_Giro,
            string original_InternalRemarks, Nullable<byte> original_IsLiableToPayTax, Nullable<bool> original_KeepOrder,
            string original_LEANCustomersReference, string original_LEANOrderIdent, string original_LEANShipReference,
            Nullable<bool> original_LEANTest, string original_Language, string original_Name,
            Nullable<short> original_Optional1, Nullable<short> original_Optional2, Nullable<short> original_Optional3,
            Nullable<short> original_Optional4, Nullable<short> original_Optional5, Nullable<short> original_Optional6,
            Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OrderCategory,
            string original_OrderCommunication, string original_OrderCommunicationStatus, string original_OrderCustomer,
            string original_OrderCustomerAddress1, string original_OrderCustomerAddress2,
            string original_OrderCustomerAddress3, string original_OrderCustomerCityName,
            string original_OrderCustomerContact, string original_OrderCustomerCountry,
            string original_OrderCustomerEMail, string original_OrderCustomerName,
            string original_OrderCustomerPostalCode, Nullable<System.DateTime> original_OrderDate,
            Nullable<short> original_OrderMerging, string original_OrderNo, string original_OrderText,
            Nullable<short> original_OrderType, string original_OurRef, string original_Payment,
            string original_PostalCode, string original_PriceList, string original_Project, string original_Purpose,
            Nullable<double> original_Rate, string original_RecvNo, string original_Remarks, string original_Reports,
            Nullable<double> original_RoundedAmount, string original_SalesRep, string original_Ship1,
            string original_Ship2, string original_Ship3, string original_Ship5, string original_Ship6,
            string original_Ship7, string original_ShipCityName, Nullable<System.DateTime> original_ShipDate,
            string original_ShipEDILocationNr, string original_ShipEMail, string original_ShipPostalCode,
            string original_ShipTo, string original_Status, string original_SubDescription,
            Nullable<System.DateTime> original_SubEndDate, string original_SubIntervals,
            Nullable<System.DateTime> original_SubNextDate, string original_Tax, string original_TaxNo,
            Nullable<double> original_Trail, Nullable<double> original_VatFee, Nullable<double> original_VatFeeBase,
            Nullable<double> original_VatFreeFee, Nullable<double> original_VatFreeFeeBase, string original_YourRef,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var orderNoParameter = orderNo != null
                ? new ObjectParameter("OrderNo", orderNo)
                : new ObjectParameter("OrderNo", typeof(string));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllocatedParameter = original_Allocated.HasValue
                ? new ObjectParameter("Original_Allocated", original_Allocated)
                : new ObjectParameter("Original_Allocated", typeof(short));

            var original_CalculationOfCargoParameter = original_CalculationOfCargo.HasValue
                ? new ObjectParameter("Original_CalculationOfCargo", original_CalculationOfCargo)
                : new ObjectParameter("Original_CalculationOfCargo", typeof(byte));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityNameParameter = original_CityName != null
                ? new ObjectParameter("Original_CityName", original_CityName)
                : new ObjectParameter("Original_CityName", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DeliveryDateParameter = original_DeliveryDate.HasValue
                ? new ObjectParameter("Original_DeliveryDate", original_DeliveryDate)
                : new ObjectParameter("Original_DeliveryDate", typeof(System.DateTime));

            var original_DeliveryWeekParameter = original_DeliveryWeek.HasValue
                ? new ObjectParameter("Original_DeliveryWeek", original_DeliveryWeek)
                : new ObjectParameter("Original_DeliveryWeek", typeof(int));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EMailParameter = original_EMail != null
                ? new ObjectParameter("Original_EMail", original_EMail)
                : new ObjectParameter("Original_EMail", typeof(string));

            var original_EndDiscParameter = original_EndDisc.HasValue
                ? new ObjectParameter("Original_EndDisc", original_EndDisc)
                : new ObjectParameter("Original_EndDisc", typeof(double));

            var original_EndDiscInclParameter = original_EndDiscIncl.HasValue
                ? new ObjectParameter("Original_EndDiscIncl", original_EndDiscIncl)
                : new ObjectParameter("Original_EndDiscIncl", typeof(double));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExciseParameter = original_Excise.HasValue
                ? new ObjectParameter("Original_Excise", original_Excise)
                : new ObjectParameter("Original_Excise", typeof(double));

            var original_ExciseBaseParameter = original_ExciseBase.HasValue
                ? new ObjectParameter("Original_ExciseBase", original_ExciseBase)
                : new ObjectParameter("Original_ExciseBase", typeof(double));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KeepOrderParameter = original_KeepOrder.HasValue
                ? new ObjectParameter("Original_KeepOrder", original_KeepOrder)
                : new ObjectParameter("Original_KeepOrder", typeof(bool));

            var original_LEANCustomersReferenceParameter = original_LEANCustomersReference != null
                ? new ObjectParameter("Original_LEANCustomersReference", original_LEANCustomersReference)
                : new ObjectParameter("Original_LEANCustomersReference", typeof(string));

            var original_LEANOrderIdentParameter = original_LEANOrderIdent != null
                ? new ObjectParameter("Original_LEANOrderIdent", original_LEANOrderIdent)
                : new ObjectParameter("Original_LEANOrderIdent", typeof(string));

            var original_LEANShipReferenceParameter = original_LEANShipReference != null
                ? new ObjectParameter("Original_LEANShipReference", original_LEANShipReference)
                : new ObjectParameter("Original_LEANShipReference", typeof(string));

            var original_LEANTestParameter = original_LEANTest.HasValue
                ? new ObjectParameter("Original_LEANTest", original_LEANTest)
                : new ObjectParameter("Original_LEANTest", typeof(bool));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderCategoryParameter = original_OrderCategory != null
                ? new ObjectParameter("Original_OrderCategory", original_OrderCategory)
                : new ObjectParameter("Original_OrderCategory", typeof(string));

            var original_OrderCommunicationParameter = original_OrderCommunication != null
                ? new ObjectParameter("Original_OrderCommunication", original_OrderCommunication)
                : new ObjectParameter("Original_OrderCommunication", typeof(string));

            var original_OrderCommunicationStatusParameter = original_OrderCommunicationStatus != null
                ? new ObjectParameter("Original_OrderCommunicationStatus", original_OrderCommunicationStatus)
                : new ObjectParameter("Original_OrderCommunicationStatus", typeof(string));

            var original_OrderCustomerParameter = original_OrderCustomer != null
                ? new ObjectParameter("Original_OrderCustomer", original_OrderCustomer)
                : new ObjectParameter("Original_OrderCustomer", typeof(string));

            var original_OrderCustomerAddress1Parameter = original_OrderCustomerAddress1 != null
                ? new ObjectParameter("Original_OrderCustomerAddress1", original_OrderCustomerAddress1)
                : new ObjectParameter("Original_OrderCustomerAddress1", typeof(string));

            var original_OrderCustomerAddress2Parameter = original_OrderCustomerAddress2 != null
                ? new ObjectParameter("Original_OrderCustomerAddress2", original_OrderCustomerAddress2)
                : new ObjectParameter("Original_OrderCustomerAddress2", typeof(string));

            var original_OrderCustomerAddress3Parameter = original_OrderCustomerAddress3 != null
                ? new ObjectParameter("Original_OrderCustomerAddress3", original_OrderCustomerAddress3)
                : new ObjectParameter("Original_OrderCustomerAddress3", typeof(string));

            var original_OrderCustomerCityNameParameter = original_OrderCustomerCityName != null
                ? new ObjectParameter("Original_OrderCustomerCityName", original_OrderCustomerCityName)
                : new ObjectParameter("Original_OrderCustomerCityName", typeof(string));

            var original_OrderCustomerContactParameter = original_OrderCustomerContact != null
                ? new ObjectParameter("Original_OrderCustomerContact", original_OrderCustomerContact)
                : new ObjectParameter("Original_OrderCustomerContact", typeof(string));

            var original_OrderCustomerCountryParameter = original_OrderCustomerCountry != null
                ? new ObjectParameter("Original_OrderCustomerCountry", original_OrderCustomerCountry)
                : new ObjectParameter("Original_OrderCustomerCountry", typeof(string));

            var original_OrderCustomerEMailParameter = original_OrderCustomerEMail != null
                ? new ObjectParameter("Original_OrderCustomerEMail", original_OrderCustomerEMail)
                : new ObjectParameter("Original_OrderCustomerEMail", typeof(string));

            var original_OrderCustomerNameParameter = original_OrderCustomerName != null
                ? new ObjectParameter("Original_OrderCustomerName", original_OrderCustomerName)
                : new ObjectParameter("Original_OrderCustomerName", typeof(string));

            var original_OrderCustomerPostalCodeParameter = original_OrderCustomerPostalCode != null
                ? new ObjectParameter("Original_OrderCustomerPostalCode", original_OrderCustomerPostalCode)
                : new ObjectParameter("Original_OrderCustomerPostalCode", typeof(string));

            var original_OrderDateParameter = original_OrderDate.HasValue
                ? new ObjectParameter("Original_OrderDate", original_OrderDate)
                : new ObjectParameter("Original_OrderDate", typeof(System.DateTime));

            var original_OrderMergingParameter = original_OrderMerging.HasValue
                ? new ObjectParameter("Original_OrderMerging", original_OrderMerging)
                : new ObjectParameter("Original_OrderMerging", typeof(short));

            var original_OrderNoParameter = original_OrderNo != null
                ? new ObjectParameter("Original_OrderNo", original_OrderNo)
                : new ObjectParameter("Original_OrderNo", typeof(string));

            var original_OrderTextParameter = original_OrderText != null
                ? new ObjectParameter("Original_OrderText", original_OrderText)
                : new ObjectParameter("Original_OrderText", typeof(string));

            var original_OrderTypeParameter = original_OrderType.HasValue
                ? new ObjectParameter("Original_OrderType", original_OrderType)
                : new ObjectParameter("Original_OrderType", typeof(short));

            var original_OurRefParameter = original_OurRef != null
                ? new ObjectParameter("Original_OurRef", original_OurRef)
                : new ObjectParameter("Original_OurRef", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_RoundedAmountParameter = original_RoundedAmount.HasValue
                ? new ObjectParameter("Original_RoundedAmount", original_RoundedAmount)
                : new ObjectParameter("Original_RoundedAmount", typeof(double));

            var original_SalesRepParameter = original_SalesRep != null
                ? new ObjectParameter("Original_SalesRep", original_SalesRep)
                : new ObjectParameter("Original_SalesRep", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipDateParameter = original_ShipDate.HasValue
                ? new ObjectParameter("Original_ShipDate", original_ShipDate)
                : new ObjectParameter("Original_ShipDate", typeof(System.DateTime));

            var original_ShipEDILocationNrParameter = original_ShipEDILocationNr != null
                ? new ObjectParameter("Original_ShipEDILocationNr", original_ShipEDILocationNr)
                : new ObjectParameter("Original_ShipEDILocationNr", typeof(string));

            var original_ShipEMailParameter = original_ShipEMail != null
                ? new ObjectParameter("Original_ShipEMail", original_ShipEMail)
                : new ObjectParameter("Original_ShipEMail", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_SubDescriptionParameter = original_SubDescription != null
                ? new ObjectParameter("Original_SubDescription", original_SubDescription)
                : new ObjectParameter("Original_SubDescription", typeof(string));

            var original_SubEndDateParameter = original_SubEndDate.HasValue
                ? new ObjectParameter("Original_SubEndDate", original_SubEndDate)
                : new ObjectParameter("Original_SubEndDate", typeof(System.DateTime));

            var original_SubIntervalsParameter = original_SubIntervals != null
                ? new ObjectParameter("Original_SubIntervals", original_SubIntervals)
                : new ObjectParameter("Original_SubIntervals", typeof(string));

            var original_SubNextDateParameter = original_SubNextDate.HasValue
                ? new ObjectParameter("Original_SubNextDate", original_SubNextDate)
                : new ObjectParameter("Original_SubNextDate", typeof(System.DateTime));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var original_VatFeeParameter = original_VatFee.HasValue
                ? new ObjectParameter("Original_VatFee", original_VatFee)
                : new ObjectParameter("Original_VatFee", typeof(double));

            var original_VatFeeBaseParameter = original_VatFeeBase.HasValue
                ? new ObjectParameter("Original_VatFeeBase", original_VatFeeBase)
                : new ObjectParameter("Original_VatFeeBase", typeof(double));

            var original_VatFreeFeeParameter = original_VatFreeFee.HasValue
                ? new ObjectParameter("Original_VatFreeFee", original_VatFreeFee)
                : new ObjectParameter("Original_VatFreeFee", typeof(double));

            var original_VatFreeFeeBaseParameter = original_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Original_VatFreeFeeBase", original_VatFreeFeeBase)
                : new ObjectParameter("Original_VatFreeFeeBase", typeof(double));

            var original_YourRefParameter = original_YourRef != null
                ? new ObjectParameter("Original_YourRef", original_YourRef)
                : new ObjectParameter("Original_YourRef", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders_Update", address1,
                address2, address3, agent, allocated, calculationOfCargo, cashDiscount, category, cityName, contact,
                costCenter, country, currency, customer, delivery, deliveryDate, deliveryWeek, department, eECCountry,
                eECTransCode, eDILocationNr, eMail, endDisc, endDiscIncl, endDiscPct, excise, exciseBase, giro,
                internalRemarks, isLiableToPayTax, keepOrder, lEANCustomersReference, lEANOrderIdent, lEANShipReference,
                lEANTest, language, name, optional1, optional2, optional3, optional4, optional5, optional6, optional7,
                optional8, optionalNumber1, optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5,
                optionalNumber6, optionalNumber7, optionalNumber8, optionalText1, optionalText2, optionalText3,
                optionalText4, optionalText5, optionalText6, optionalText7, optionalText8, orderCategory,
                orderCommunication, orderCommunicationStatus, orderCustomer, orderCustomerAddress1,
                orderCustomerAddress2, orderCustomerAddress3, orderCustomerCityName, orderCustomerContact,
                orderCustomerCountry, orderCustomerEMail, orderCustomerName, orderCustomerPostalCode, orderDate,
                orderMerging, orderNoParameter, orderText, orderType, ourRef, payment, postalCode, priceList, project,
                purpose, rate, recvNo, remarks, reports, roundedAmount, salesRep, ship1, ship2, ship3, ship5, ship6,
                ship7, shipCityName, shipDate, shipEDILocationNr, shipEMail, shipPostalCode, shipTo, status,
                subDescription, subEndDate, subIntervals, subNextDate, tax, taxNo, trailParameter, vatFee, vatFeeBase,
                vatFreeFee, vatFreeFeeBase, yourRef, original_Address1Parameter, original_Address2Parameter,
                original_Address3Parameter, original_AgentParameter, original_AllocatedParameter,
                original_CalculationOfCargoParameter, original_CashDiscountParameter, original_CategoryParameter,
                original_CityNameParameter, original_ContactParameter, original_CostCenterParameter,
                original_CountryParameter, original_CurrencyParameter, original_CustomerParameter,
                original_DeliveryParameter, original_DeliveryDateParameter, original_DeliveryWeekParameter,
                original_DepartmentParameter, original_EECCountryParameter, original_EECTransCodeParameter,
                original_EDILocationNrParameter, original_EMailParameter, original_EndDiscParameter,
                original_EndDiscInclParameter, original_EndDiscPctParameter, original_ExciseParameter,
                original_ExciseBaseParameter, original_GiroParameter, original_InternalRemarksParameter,
                original_IsLiableToPayTaxParameter, original_KeepOrderParameter,
                original_LEANCustomersReferenceParameter, original_LEANOrderIdentParameter,
                original_LEANShipReferenceParameter, original_LEANTestParameter, original_LanguageParameter,
                original_NameParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_Optional3Parameter, original_Optional4Parameter, original_Optional5Parameter,
                original_Optional6Parameter, original_Optional7Parameter, original_Optional8Parameter,
                original_OptionalNumber1Parameter, original_OptionalNumber2Parameter, original_OptionalNumber3Parameter,
                original_OptionalNumber4Parameter, original_OptionalNumber5Parameter, original_OptionalNumber6Parameter,
                original_OptionalNumber7Parameter, original_OptionalNumber8Parameter, original_OptionalText1Parameter,
                original_OptionalText2Parameter, original_OptionalText3Parameter, original_OptionalText4Parameter,
                original_OptionalText5Parameter, original_OptionalText6Parameter, original_OptionalText7Parameter,
                original_OptionalText8Parameter, original_OrderCategoryParameter, original_OrderCommunicationParameter,
                original_OrderCommunicationStatusParameter, original_OrderCustomerParameter,
                original_OrderCustomerAddress1Parameter, original_OrderCustomerAddress2Parameter,
                original_OrderCustomerAddress3Parameter, original_OrderCustomerCityNameParameter,
                original_OrderCustomerContactParameter, original_OrderCustomerCountryParameter,
                original_OrderCustomerEMailParameter, original_OrderCustomerNameParameter,
                original_OrderCustomerPostalCodeParameter, original_OrderDateParameter, original_OrderMergingParameter,
                original_OrderNoParameter, original_OrderTextParameter, original_OrderTypeParameter,
                original_OurRefParameter, original_PaymentParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_PurposeParameter,
                original_RateParameter, original_RecvNoParameter, original_RemarksParameter, original_ReportsParameter,
                original_RoundedAmountParameter, original_SalesRepParameter, original_Ship1Parameter,
                original_Ship2Parameter, original_Ship3Parameter, original_Ship5Parameter, original_Ship6Parameter,
                original_Ship7Parameter, original_ShipCityNameParameter, original_ShipDateParameter,
                original_ShipEDILocationNrParameter, original_ShipEMailParameter, original_ShipPostalCodeParameter,
                original_ShipToParameter, original_StatusParameter, original_SubDescriptionParameter,
                original_SubEndDateParameter, original_SubIntervalsParameter, original_SubNextDateParameter,
                original_TaxParameter, original_TaxNoParameter, original_TrailParameter, original_VatFeeParameter,
                original_VatFeeBaseParameter, original_VatFreeFeeParameter, original_VatFreeFeeBaseParameter,
                original_YourRefParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Orders2_AddNew()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders2_AddNew");
        }

        public virtual int Public_User_Orders2_Delete()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders2_Delete");
        }

        public virtual int Public_User_Orders2_Update()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Orders2_Update");
        }

        public virtual int Public_User_OrderStatus_AddNew(ObjectParameter description, ObjectParameter needSerialNo,
            ObjectParameter remarks, ObjectParameter showInStatus, ObjectParameter status,
            ObjectParameter totalAmountView, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderStatus_AddNew",
                description, needSerialNo, remarks, showInStatus, status, totalAmountView, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderStatus_Delete",
                original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_OrderStatus_Update(ObjectParameter description, ObjectParameter needSerialNo,
            ObjectParameter remarks, ObjectParameter showInStatus, ObjectParameter totalAmountView,
            string original_Description, Nullable<short> original_NeedSerialNo, string original_Remarks,
            Nullable<bool> original_ShowInStatus, string original_Status, Nullable<short> original_TotalAmountView,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_NeedSerialNoParameter = original_NeedSerialNo.HasValue
                ? new ObjectParameter("Original_NeedSerialNo", original_NeedSerialNo)
                : new ObjectParameter("Original_NeedSerialNo", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInStatusParameter = original_ShowInStatus.HasValue
                ? new ObjectParameter("Original_ShowInStatus", original_ShowInStatus)
                : new ObjectParameter("Original_ShowInStatus", typeof(bool));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_TotalAmountViewParameter = original_TotalAmountView.HasValue
                ? new ObjectParameter("Original_TotalAmountView", original_TotalAmountView)
                : new ObjectParameter("Original_TotalAmountView", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_OrderStatus_Update",
                description, needSerialNo, remarks, showInStatus, totalAmountView, original_DescriptionParameter,
                original_NeedSerialNoParameter, original_RemarksParameter, original_ShowInStatusParameter,
                original_StatusParameter, original_TotalAmountViewParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Payment_AddNew(Nullable<short> days, string description, string payment,
            string remarks, Nullable<short> type, string standard_Payment, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var paymentParameter = payment != null
                ? new ObjectParameter("Payment", payment)
                : new ObjectParameter("Payment", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var standard_PaymentParameter = standard_Payment != null
                ? new ObjectParameter("Standard_Payment", standard_Payment)
                : new ObjectParameter("Standard_Payment", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Payment_AddNew",
                daysParameter, descriptionParameter, paymentParameter, remarksParameter, typeParameter,
                standard_PaymentParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Payment_Delete(string original_Payment, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Payment_Delete",
                original_PaymentParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Payment_Update(Nullable<short> days, string description, string remarks,
            Nullable<short> type, Nullable<short> original_Days, string original_Description, string original_Payment,
            string original_Remarks, Nullable<short> original_Type, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var daysParameter = days.HasValue
                ? new ObjectParameter("Days", days)
                : new ObjectParameter("Days", typeof(short));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var typeParameter = type.HasValue
                ? new ObjectParameter("Type", type)
                : new ObjectParameter("Type", typeof(short));

            var original_DaysParameter = original_Days.HasValue
                ? new ObjectParameter("Original_Days", original_Days)
                : new ObjectParameter("Original_Days", typeof(short));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Payment_Update",
                daysParameter, descriptionParameter, remarksParameter, typeParameter, original_DaysParameter,
                original_DescriptionParameter, original_PaymentParameter, original_RemarksParameter,
                original_TypeParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_PostNr_AddNew(ObjectParameter postDistrikt, ObjectParameter postNr,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PostNr_AddNew",
                postDistrikt, postNr, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PostNr_Delete(string original_PostNr, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PostNrParameter = original_PostNr != null
                ? new ObjectParameter("Original_PostNr", original_PostNr)
                : new ObjectParameter("Original_PostNr", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PostNr_Delete",
                original_PostNrParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PostNr_Update(ObjectParameter postDistrikt, string original_PostDistrikt,
            string original_PostNr, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_PostDistriktParameter = original_PostDistrikt != null
                ? new ObjectParameter("Original_PostDistrikt", original_PostDistrikt)
                : new ObjectParameter("Original_PostDistrikt", typeof(string));

            var original_PostNrParameter = original_PostNr != null
                ? new ObjectParameter("Original_PostNr", original_PostNr)
                : new ObjectParameter("Original_PostNr", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PostNr_Update",
                postDistrikt, original_PostDistriktParameter, original_PostNrParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Project_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter allowActivating, ObjectParameter blocked, ObjectParameter city,
            ObjectParameter contact, ObjectParameter country, ObjectParameter customer, ObjectParameter customerName,
            ObjectParameter customerProjectNo, ObjectParameter endDate, ObjectParameter fax, ObjectParameter fixedPrice,
            ObjectParameter grouping, ObjectParameter includeSubProject, ObjectParameter invoiceToCustomer,
            ObjectParameter invoiceToCustomerName, ObjectParameter mobile, ObjectParameter name, ObjectParameter notat,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalDate3,
            ObjectParameter optionalDate4, ObjectParameter optionalDate5, ObjectParameter optionalDate6,
            ObjectParameter optionalDate7, ObjectParameter optionalDate8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter ourRef, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList,
            string project, ObjectParameter projectEndDate, ObjectParameter projectStartDate,
            ObjectParameter projectStatus1, ObjectParameter projectStatus2, ObjectParameter recvNo,
            ObjectParameter remarks, ObjectParameter responsible, ObjectParameter ship1, ObjectParameter ship2,
            ObjectParameter ship3, ObjectParameter ship5, ObjectParameter ship6, ObjectParameter ship7,
            ObjectParameter shipCityName, ObjectParameter shipPostalCode, ObjectParameter shipTo,
            ObjectParameter startDate, ObjectParameter yourRef, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Project_AddNew", address1,
                address2, address3, allowActivating, blocked, city, contact, country, customer, customerName,
                customerProjectNo, endDate, fax, fixedPrice, grouping, includeSubProject, invoiceToCustomer,
                invoiceToCustomerName, mobile, name, notat, optional1, optional2, optional3, optional4, optional5,
                optional6, optional7, optional8, optionalDate1, optionalDate2, optionalDate3, optionalDate4,
                optionalDate5, optionalDate6, optionalDate7, optionalDate8, optionalNumber1, optionalNumber2,
                optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7, optionalNumber8,
                optionalText1, optionalText2, optionalText3, optionalText4, optionalText5, optionalText6, optionalText7,
                optionalText8, ourRef, phone, postalCode, priceList, projectParameter, projectEndDate, projectStartDate,
                projectStatus1, projectStatus2, recvNo, remarks, responsible, ship1, ship2, ship3, ship5, ship6, ship7,
                shipCityName, shipPostalCode, shipTo, startDate, yourRef, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Project_Delete(string original_Project, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Project_Delete",
                original_ProjectParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Project_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter allowActivating, ObjectParameter blocked, ObjectParameter city,
            ObjectParameter contact, ObjectParameter country, ObjectParameter customer, ObjectParameter customerName,
            ObjectParameter customerProjectNo, ObjectParameter endDate, ObjectParameter fax, ObjectParameter fixedPrice,
            ObjectParameter grouping, ObjectParameter includeSubProject, ObjectParameter invoiceToCustomer,
            ObjectParameter invoiceToCustomerName, ObjectParameter mobile, ObjectParameter name, ObjectParameter notat,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4,
            ObjectParameter optional5, ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalDate3,
            ObjectParameter optionalDate4, ObjectParameter optionalDate5, ObjectParameter optionalDate6,
            ObjectParameter optionalDate7, ObjectParameter optionalDate8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter ourRef, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList,
            ObjectParameter projectEndDate, ObjectParameter projectStartDate, ObjectParameter projectStatus1,
            ObjectParameter projectStatus2, ObjectParameter recvNo, ObjectParameter remarks, ObjectParameter responsible,
            ObjectParameter ship1, ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5,
            ObjectParameter ship6, ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter startDate, ObjectParameter yourRef, string original_Address1,
            string original_Address2, string original_Address3, Nullable<bool> original_AllowActivating,
            Nullable<byte> original_Blocked, string original_City, string original_Contact, string original_Country,
            string original_Customer, string original_CustomerName, string original_CustomerProjectNo,
            Nullable<System.DateTime> original_EndDate, string original_Fax, Nullable<double> original_FixedPrice,
            string original_Grouping, Nullable<short> original_IncludeSubProject, string original_InvoiceToCustomer,
            string original_InvoiceToCustomerName, string original_Mobile, string original_Name, string original_Notat,
            Nullable<short> original_Optional1, Nullable<short> original_Optional2, Nullable<short> original_Optional3,
            Nullable<short> original_Optional4, Nullable<short> original_Optional5, Nullable<short> original_Optional6,
            Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<System.DateTime> original_OptionalDate1, Nullable<System.DateTime> original_OptionalDate2,
            Nullable<System.DateTime> original_OptionalDate3, Nullable<System.DateTime> original_OptionalDate4,
            Nullable<System.DateTime> original_OptionalDate5, Nullable<System.DateTime> original_OptionalDate6,
            Nullable<System.DateTime> original_OptionalDate7, Nullable<System.DateTime> original_OptionalDate8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, string original_OurRef, string original_Phone,
            string original_PostalCode, string original_PriceList, string original_Project,
            Nullable<System.DateTime> original_ProjectEndDate, Nullable<System.DateTime> original_ProjectStartDate,
            string original_ProjectStatus1, string original_ProjectStatus2, string original_RecvNo,
            string original_Remarks, string original_Responsible, string original_Ship1, string original_Ship2,
            string original_Ship3, string original_Ship5, string original_Ship6, string original_Ship7,
            string original_ShipCityName, string original_ShipPostalCode, string original_ShipTo,
            Nullable<System.DateTime> original_StartDate, string original_YourRef, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AllowActivatingParameter = original_AllowActivating.HasValue
                ? new ObjectParameter("Original_AllowActivating", original_AllowActivating)
                : new ObjectParameter("Original_AllowActivating", typeof(bool));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(byte));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_CustomerNameParameter = original_CustomerName != null
                ? new ObjectParameter("Original_CustomerName", original_CustomerName)
                : new ObjectParameter("Original_CustomerName", typeof(string));

            var original_CustomerProjectNoParameter = original_CustomerProjectNo != null
                ? new ObjectParameter("Original_CustomerProjectNo", original_CustomerProjectNo)
                : new ObjectParameter("Original_CustomerProjectNo", typeof(string));

            var original_EndDateParameter = original_EndDate.HasValue
                ? new ObjectParameter("Original_EndDate", original_EndDate)
                : new ObjectParameter("Original_EndDate", typeof(System.DateTime));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FixedPriceParameter = original_FixedPrice.HasValue
                ? new ObjectParameter("Original_FixedPrice", original_FixedPrice)
                : new ObjectParameter("Original_FixedPrice", typeof(double));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_IncludeSubProjectParameter = original_IncludeSubProject.HasValue
                ? new ObjectParameter("Original_IncludeSubProject", original_IncludeSubProject)
                : new ObjectParameter("Original_IncludeSubProject", typeof(short));

            var original_InvoiceToCustomerParameter = original_InvoiceToCustomer != null
                ? new ObjectParameter("Original_InvoiceToCustomer", original_InvoiceToCustomer)
                : new ObjectParameter("Original_InvoiceToCustomer", typeof(string));

            var original_InvoiceToCustomerNameParameter = original_InvoiceToCustomerName != null
                ? new ObjectParameter("Original_InvoiceToCustomerName", original_InvoiceToCustomerName)
                : new ObjectParameter("Original_InvoiceToCustomerName", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_NotatParameter = original_Notat != null
                ? new ObjectParameter("Original_Notat", original_Notat)
                : new ObjectParameter("Original_Notat", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalDate3Parameter = original_OptionalDate3.HasValue
                ? new ObjectParameter("Original_OptionalDate3", original_OptionalDate3)
                : new ObjectParameter("Original_OptionalDate3", typeof(System.DateTime));

            var original_OptionalDate4Parameter = original_OptionalDate4.HasValue
                ? new ObjectParameter("Original_OptionalDate4", original_OptionalDate4)
                : new ObjectParameter("Original_OptionalDate4", typeof(System.DateTime));

            var original_OptionalDate5Parameter = original_OptionalDate5.HasValue
                ? new ObjectParameter("Original_OptionalDate5", original_OptionalDate5)
                : new ObjectParameter("Original_OptionalDate5", typeof(System.DateTime));

            var original_OptionalDate6Parameter = original_OptionalDate6.HasValue
                ? new ObjectParameter("Original_OptionalDate6", original_OptionalDate6)
                : new ObjectParameter("Original_OptionalDate6", typeof(System.DateTime));

            var original_OptionalDate7Parameter = original_OptionalDate7.HasValue
                ? new ObjectParameter("Original_OptionalDate7", original_OptionalDate7)
                : new ObjectParameter("Original_OptionalDate7", typeof(System.DateTime));

            var original_OptionalDate8Parameter = original_OptionalDate8.HasValue
                ? new ObjectParameter("Original_OptionalDate8", original_OptionalDate8)
                : new ObjectParameter("Original_OptionalDate8", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OurRefParameter = original_OurRef != null
                ? new ObjectParameter("Original_OurRef", original_OurRef)
                : new ObjectParameter("Original_OurRef", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_ProjectEndDateParameter = original_ProjectEndDate.HasValue
                ? new ObjectParameter("Original_ProjectEndDate", original_ProjectEndDate)
                : new ObjectParameter("Original_ProjectEndDate", typeof(System.DateTime));

            var original_ProjectStartDateParameter = original_ProjectStartDate.HasValue
                ? new ObjectParameter("Original_ProjectStartDate", original_ProjectStartDate)
                : new ObjectParameter("Original_ProjectStartDate", typeof(System.DateTime));

            var original_ProjectStatus1Parameter = original_ProjectStatus1 != null
                ? new ObjectParameter("Original_ProjectStatus1", original_ProjectStatus1)
                : new ObjectParameter("Original_ProjectStatus1", typeof(string));

            var original_ProjectStatus2Parameter = original_ProjectStatus2 != null
                ? new ObjectParameter("Original_ProjectStatus2", original_ProjectStatus2)
                : new ObjectParameter("Original_ProjectStatus2", typeof(string));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ResponsibleParameter = original_Responsible != null
                ? new ObjectParameter("Original_Responsible", original_Responsible)
                : new ObjectParameter("Original_Responsible", typeof(string));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_YourRefParameter = original_YourRef != null
                ? new ObjectParameter("Original_YourRef", original_YourRef)
                : new ObjectParameter("Original_YourRef", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Project_Update", address1,
                address2, address3, allowActivating, blocked, city, contact, country, customer, customerName,
                customerProjectNo, endDate, fax, fixedPrice, grouping, includeSubProject, invoiceToCustomer,
                invoiceToCustomerName, mobile, name, notat, optional1, optional2, optional3, optional4, optional5,
                optional6, optional7, optional8, optionalDate1, optionalDate2, optionalDate3, optionalDate4,
                optionalDate5, optionalDate6, optionalDate7, optionalDate8, optionalNumber1, optionalNumber2,
                optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7, optionalNumber8,
                optionalText1, optionalText2, optionalText3, optionalText4, optionalText5, optionalText6, optionalText7,
                optionalText8, ourRef, phone, postalCode, priceList, projectEndDate, projectStartDate, projectStatus1,
                projectStatus2, recvNo, remarks, responsible, ship1, ship2, ship3, ship5, ship6, ship7, shipCityName,
                shipPostalCode, shipTo, startDate, yourRef, original_Address1Parameter, original_Address2Parameter,
                original_Address3Parameter, original_AllowActivatingParameter, original_BlockedParameter,
                original_CityParameter, original_ContactParameter, original_CountryParameter, original_CustomerParameter,
                original_CustomerNameParameter, original_CustomerProjectNoParameter, original_EndDateParameter,
                original_FaxParameter, original_FixedPriceParameter, original_GroupingParameter,
                original_IncludeSubProjectParameter, original_InvoiceToCustomerParameter,
                original_InvoiceToCustomerNameParameter, original_MobileParameter, original_NameParameter,
                original_NotatParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_Optional3Parameter, original_Optional4Parameter, original_Optional5Parameter,
                original_Optional6Parameter, original_Optional7Parameter, original_Optional8Parameter,
                original_OptionalDate1Parameter, original_OptionalDate2Parameter, original_OptionalDate3Parameter,
                original_OptionalDate4Parameter, original_OptionalDate5Parameter, original_OptionalDate6Parameter,
                original_OptionalDate7Parameter, original_OptionalDate8Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                original_OptionalNumber5Parameter, original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                original_OurRefParameter, original_PhoneParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_ProjectEndDateParameter,
                original_ProjectStartDateParameter, original_ProjectStatus1Parameter, original_ProjectStatus2Parameter,
                original_RecvNoParameter, original_RemarksParameter, original_ResponsibleParameter,
                original_Ship1Parameter, original_Ship2Parameter, original_Ship3Parameter, original_Ship5Parameter,
                original_Ship6Parameter, original_Ship7Parameter, original_ShipCityNameParameter,
                original_ShipPostalCodeParameter, original_ShipToParameter, original_StartDateParameter,
                original_YourRefParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ProjectLines_AddNew(ObjectParameter account, ObjectParameter costCenter,
            ObjectParameter costPrice, ObjectParameter date, ObjectParameter department, ObjectParameter description,
            ObjectParameter employee, ObjectParameter endDate, ObjectParameter invoiceAble, ObjectParameter item,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter project, ObjectParameter purPose,
            ObjectParameter quantity, ObjectParameter remarks, ObjectParameter salesPrice, ObjectParameter startDate,
            ObjectParameter usedTime, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ProjectLines_AddNew",
                account, costCenter, costPrice, date, department, description, employee, endDate, invoiceAble, item,
                optional1, optional2, project, purPose, quantity, remarks, salesPrice, startDate, usedTime,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ProjectLines_Delete(Nullable<decimal> original_RecordID,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(decimal));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ProjectLines_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_ProjectLines_Update(ObjectParameter account, ObjectParameter costCenter,
            ObjectParameter costPrice, ObjectParameter date, ObjectParameter department, ObjectParameter description,
            ObjectParameter employee, ObjectParameter endDate, ObjectParameter invoiceAble, ObjectParameter item,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter purPose, ObjectParameter quantity,
            ObjectParameter remarks, ObjectParameter salesPrice, ObjectParameter startDate, ObjectParameter usedTime,
            string original_Account, string original_CostCenter, Nullable<double> original_CostPrice,
            Nullable<System.DateTime> original_Date, string original_Department, string original_Description,
            string original_Employee, Nullable<System.DateTime> original_EndDate, Nullable<bool> original_InvoiceAble,
            string original_Item, string original_Optional1, string original_Optional2, string original_PurPose,
            Nullable<double> original_Quantity, Nullable<decimal> original_RecordID, string original_Remarks,
            Nullable<double> original_SalesPrice, Nullable<System.DateTime> original_StartDate,
            Nullable<double> original_UsedTime, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPriceParameter = original_CostPrice.HasValue
                ? new ObjectParameter("Original_CostPrice", original_CostPrice)
                : new ObjectParameter("Original_CostPrice", typeof(double));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_EndDateParameter = original_EndDate.HasValue
                ? new ObjectParameter("Original_EndDate", original_EndDate)
                : new ObjectParameter("Original_EndDate", typeof(System.DateTime));

            var original_InvoiceAbleParameter = original_InvoiceAble.HasValue
                ? new ObjectParameter("Original_InvoiceAble", original_InvoiceAble)
                : new ObjectParameter("Original_InvoiceAble", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_PurPoseParameter = original_PurPose != null
                ? new ObjectParameter("Original_PurPose", original_PurPose)
                : new ObjectParameter("Original_PurPose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(decimal));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SalesPriceParameter = original_SalesPrice.HasValue
                ? new ObjectParameter("Original_SalesPrice", original_SalesPrice)
                : new ObjectParameter("Original_SalesPrice", typeof(double));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_UsedTimeParameter = original_UsedTime.HasValue
                ? new ObjectParameter("Original_UsedTime", original_UsedTime)
                : new ObjectParameter("Original_UsedTime", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_ProjectLines_Update",
                account, costCenter, costPrice, date, department, description, employee, endDate, invoiceAble, item,
                optional1, optional2, purPose, quantity, remarks, salesPrice, startDate, usedTime,
                original_AccountParameter, original_CostCenterParameter, original_CostPriceParameter,
                original_DateParameter, original_DepartmentParameter, original_DescriptionParameter,
                original_EmployeeParameter, original_EndDateParameter, original_InvoiceAbleParameter,
                original_ItemParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_PurPoseParameter, original_QuantityParameter, original_RecordIDParameter,
                original_RemarksParameter, original_SalesPriceParameter, original_StartDateParameter,
                original_UsedTimeParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunication_AddNew(ObjectParameter communication, string name,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunication_AddNew", communication, nameParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunication_Delete(string original_Communication,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunication_Delete", original_CommunicationParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunication_Update(ObjectParameter name, string original_Communication,
            string original_Name, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CommunicationParameter = original_Communication != null
                ? new ObjectParameter("Original_Communication", original_Communication)
                : new ObjectParameter("Original_Communication", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunication_Update", name, original_CommunicationParameter,
                    original_NameParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunicationStatus_AddNew(string name, ObjectParameter status,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunicationStatus_AddNew", nameParameter, status, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunicationStatus_Delete(string original_Status,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunicationStatus_Delete", original_StatusParameter, gUIDParameter,
                    text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseCommunicationStatus_Update(ObjectParameter name, string original_Name,
            string original_Status, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "Public_User_PurchaseCommunicationStatus_Update", name, original_NameParameter,
                    original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseLine_AddNew(ObjectParameter account, ObjectParameter batchNo,
            ObjectParameter costCenter, ObjectParameter customsNo, ObjectParameter deliver, ObjectParameter delivery,
            ObjectParameter department, ObjectParameter description, ObjectParameter discount, ObjectParameter employee,
            ObjectParameter externalNo, ObjectParameter item, ObjectParameter lineNo, ObjectParameter location,
            ObjectParameter newSalesPrice, ObjectParameter optional1, ObjectParameter optional2,
            ObjectParameter optionalDate1, ObjectParameter optionalDate2, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter ordered, ObjectParameter parameter1,
            ObjectParameter parameter2, ObjectParameter price, ObjectParameter project, ObjectParameter purchaseNo,
            ObjectParameter purpose, ObjectParameter refOrderNo, ObjectParameter remarksAfter,
            ObjectParameter remarksBefore, ObjectParameter selected, ObjectParameter tax, ObjectParameter unit,
            ObjectParameter volume, ObjectParameter weight, Nullable<short> allowDuty, Nullable<double> conversion,
            Nullable<double> costPercent, string currency, Nullable<double> dutyAmount, Nullable<double> dutyAmountBase,
            Nullable<double> multiplaFaktor, Nullable<double> quantity, Nullable<double> rate, Nullable<short> status,
            string supplier, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var allowDutyParameter = allowDuty.HasValue
                ? new ObjectParameter("AllowDuty", allowDuty)
                : new ObjectParameter("AllowDuty", typeof(short));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var costPercentParameter = costPercent.HasValue
                ? new ObjectParameter("CostPercent", costPercent)
                : new ObjectParameter("CostPercent", typeof(double));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var dutyAmountParameter = dutyAmount.HasValue
                ? new ObjectParameter("DutyAmount", dutyAmount)
                : new ObjectParameter("DutyAmount", typeof(double));

            var dutyAmountBaseParameter = dutyAmountBase.HasValue
                ? new ObjectParameter("DutyAmountBase", dutyAmountBase)
                : new ObjectParameter("DutyAmountBase", typeof(double));

            var multiplaFaktorParameter = multiplaFaktor.HasValue
                ? new ObjectParameter("MultiplaFaktor", multiplaFaktor)
                : new ObjectParameter("MultiplaFaktor", typeof(double));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var statusParameter = status.HasValue
                ? new ObjectParameter("Status", status)
                : new ObjectParameter("Status", typeof(short));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseLine_AddNew",
                account, batchNo, costCenter, customsNo, deliver, delivery, department, description, discount, employee,
                externalNo, item, lineNo, location, newSalesPrice, optional1, optional2, optionalDate1, optionalDate2,
                optionalNumber1, optionalNumber2, ordered, parameter1, parameter2, price, project, purchaseNo, purpose,
                refOrderNo, remarksAfter, remarksBefore, selected, tax, unit, volume, weight, allowDutyParameter,
                conversionParameter, costPercentParameter, currencyParameter, dutyAmountParameter,
                dutyAmountBaseParameter, multiplaFaktorParameter, quantityParameter, rateParameter, statusParameter,
                supplierParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseLine_AfterUpdate(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue
                ? new ObjectParameter("RecordID", recordID)
                : new ObjectParameter("RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseLine_AfterUpdate",
                recordIDParameter);
        }

        public virtual int Public_User_PurchaseLine_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseLine_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseLine_Update(ObjectParameter account, ObjectParameter batchNo,
            ObjectParameter costCenter, ObjectParameter customsNo, ObjectParameter deliver, ObjectParameter delivery,
            ObjectParameter department, ObjectParameter description, ObjectParameter discount, ObjectParameter employee,
            ObjectParameter externalNo, ObjectParameter item, ObjectParameter location, ObjectParameter newSalesPrice,
            ObjectParameter optional1, ObjectParameter optional2, ObjectParameter optionalDate1,
            ObjectParameter optionalDate2, ObjectParameter optionalNumber1, ObjectParameter optionalNumber2,
            ObjectParameter ordered, ObjectParameter parameter1, ObjectParameter parameter2, ObjectParameter price,
            ObjectParameter project, ObjectParameter purpose, ObjectParameter refOrderNo, ObjectParameter remarksAfter,
            ObjectParameter remarksBefore, ObjectParameter selected, ObjectParameter tax, ObjectParameter unit,
            ObjectParameter volume, ObjectParameter weight, string original_Account, string original_BatchNo,
            string original_CostCenter, string original_CustomsNo, Nullable<double> original_Deliver,
            Nullable<System.DateTime> original_Delivery, string original_Department, string original_Description,
            Nullable<double> original_Discount, string original_Employee, string original_ExternalNo,
            string original_Item, string original_Location, Nullable<double> original_NewSalesPrice,
            string original_Optional1, string original_Optional2, Nullable<System.DateTime> original_OptionalDate1,
            Nullable<System.DateTime> original_OptionalDate2, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_Ordered, string original_Parameter1,
            string original_Parameter2, Nullable<double> original_Price, string original_Project,
            string original_Purpose, Nullable<int> original_RecordId, string original_RefOrderNo,
            string original_RemarksAfter, string original_RemarksBefore, Nullable<bool> original_Selected,
            string original_Tax, string original_Unit, Nullable<double> original_Volume,
            Nullable<double> original_Weight, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_BatchNoParameter = original_BatchNo != null
                ? new ObjectParameter("Original_BatchNo", original_BatchNo)
                : new ObjectParameter("Original_BatchNo", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CustomsNoParameter = original_CustomsNo != null
                ? new ObjectParameter("Original_CustomsNo", original_CustomsNo)
                : new ObjectParameter("Original_CustomsNo", typeof(string));

            var original_DeliverParameter = original_Deliver.HasValue
                ? new ObjectParameter("Original_Deliver", original_Deliver)
                : new ObjectParameter("Original_Deliver", typeof(double));

            var original_DeliveryParameter = original_Delivery.HasValue
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DiscountParameter = original_Discount.HasValue
                ? new ObjectParameter("Original_Discount", original_Discount)
                : new ObjectParameter("Original_Discount", typeof(double));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ExternalNoParameter = original_ExternalNo != null
                ? new ObjectParameter("Original_ExternalNo", original_ExternalNo)
                : new ObjectParameter("Original_ExternalNo", typeof(string));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_LocationParameter = original_Location != null
                ? new ObjectParameter("Original_Location", original_Location)
                : new ObjectParameter("Original_Location", typeof(string));

            var original_NewSalesPriceParameter = original_NewSalesPrice.HasValue
                ? new ObjectParameter("Original_NewSalesPrice", original_NewSalesPrice)
                : new ObjectParameter("Original_NewSalesPrice", typeof(double));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OptionalDate1Parameter = original_OptionalDate1.HasValue
                ? new ObjectParameter("Original_OptionalDate1", original_OptionalDate1)
                : new ObjectParameter("Original_OptionalDate1", typeof(System.DateTime));

            var original_OptionalDate2Parameter = original_OptionalDate2.HasValue
                ? new ObjectParameter("Original_OptionalDate2", original_OptionalDate2)
                : new ObjectParameter("Original_OptionalDate2", typeof(System.DateTime));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(double));

            var original_Parameter1Parameter = original_Parameter1 != null
                ? new ObjectParameter("Original_Parameter1", original_Parameter1)
                : new ObjectParameter("Original_Parameter1", typeof(string));

            var original_Parameter2Parameter = original_Parameter2 != null
                ? new ObjectParameter("Original_Parameter2", original_Parameter2)
                : new ObjectParameter("Original_Parameter2", typeof(string));

            var original_PriceParameter = original_Price.HasValue
                ? new ObjectParameter("Original_Price", original_Price)
                : new ObjectParameter("Original_Price", typeof(double));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RefOrderNoParameter = original_RefOrderNo != null
                ? new ObjectParameter("Original_RefOrderNo", original_RefOrderNo)
                : new ObjectParameter("Original_RefOrderNo", typeof(string));

            var original_RemarksAfterParameter = original_RemarksAfter != null
                ? new ObjectParameter("Original_RemarksAfter", original_RemarksAfter)
                : new ObjectParameter("Original_RemarksAfter", typeof(string));

            var original_RemarksBeforeParameter = original_RemarksBefore != null
                ? new ObjectParameter("Original_RemarksBefore", original_RemarksBefore)
                : new ObjectParameter("Original_RemarksBefore", typeof(string));

            var original_SelectedParameter = original_Selected.HasValue
                ? new ObjectParameter("Original_Selected", original_Selected)
                : new ObjectParameter("Original_Selected", typeof(bool));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var original_VolumeParameter = original_Volume.HasValue
                ? new ObjectParameter("Original_Volume", original_Volume)
                : new ObjectParameter("Original_Volume", typeof(double));

            var original_WeightParameter = original_Weight.HasValue
                ? new ObjectParameter("Original_Weight", original_Weight)
                : new ObjectParameter("Original_Weight", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseLine_Update",
                account, batchNo, costCenter, customsNo, deliver, delivery, department, description, discount, employee,
                externalNo, item, location, newSalesPrice, optional1, optional2, optionalDate1, optionalDate2,
                optionalNumber1, optionalNumber2, ordered, parameter1, parameter2, price, project, purpose, refOrderNo,
                remarksAfter, remarksBefore, selected, tax, unit, volume, weight, original_AccountParameter,
                original_BatchNoParameter, original_CostCenterParameter, original_CustomsNoParameter,
                original_DeliverParameter, original_DeliveryParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DiscountParameter, original_EmployeeParameter,
                original_ExternalNoParameter, original_ItemParameter, original_LocationParameter,
                original_NewSalesPriceParameter, original_Optional1Parameter, original_Optional2Parameter,
                original_OptionalDate1Parameter, original_OptionalDate2Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OrderedParameter, original_Parameter1Parameter,
                original_Parameter2Parameter, original_PriceParameter, original_ProjectParameter,
                original_PurposeParameter, original_RecordIdParameter, original_RefOrderNoParameter,
                original_RemarksAfterParameter, original_RemarksBeforeParameter, original_SelectedParameter,
                original_TaxParameter, original_UnitParameter, original_VolumeParameter, original_WeightParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Purchases_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter approvedBy1, ObjectParameter approvedBy2,
            ObjectParameter approvedBy3, ObjectParameter betalingsID, ObjectParameter buyer,
            ObjectParameter cashDiscount, ObjectParameter category, ObjectParameter cityName, ObjectParameter contact,
            ObjectParameter costCenter, ObjectParameter costPercent, ObjectParameter costPercentDistribution,
            ObjectParameter costPercentPurchases, ObjectParameter country, ObjectParameter currency,
            ObjectParameter delivery, ObjectParameter deliveryDate, ObjectParameter deliveryWeek,
            ObjectParameter department, ObjectParameter due, ObjectParameter eDILocationNr, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter endDisc, ObjectParameter endDiscPct, ObjectParameter excise,
            ObjectParameter exciseBase, ObjectParameter internalRemarks, ObjectParameter invoiceDate,
            ObjectParameter invoiceNo, ObjectParameter isLiableToPayTax, ObjectParameter kortArt,
            ObjectParameter lEANCustomersReference, ObjectParameter lEANShipReference, ObjectParameter lEANTest,
            ObjectParameter language, ObjectParameter name, ObjectParameter optional1, ObjectParameter optional2,
            ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5, ObjectParameter optional6,
            ObjectParameter optional7, ObjectParameter optional8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter ordered, ObjectParameter ourAccount, ObjectParameter payment, ObjectParameter postalCode,
            ObjectParameter priceList, ObjectParameter project, ObjectParameter purchaseCommunication,
            ObjectParameter purchaseCommunicationStatus, ObjectParameter purchaseDate, string purchaseNo,
            ObjectParameter purchaseText, ObjectParameter purpose, ObjectParameter rate, ObjectParameter recvNo,
            ObjectParameter remarks, ObjectParameter reports, ObjectParameter roundedAmount, ObjectParameter ship1,
            ObjectParameter ship2, ObjectParameter ship3, ObjectParameter ship5, ObjectParameter ship6,
            ObjectParameter ship7, ObjectParameter shipCityName, ObjectParameter shipFrom,
            ObjectParameter shipPostalCode, ObjectParameter shipTo, ObjectParameter status, ObjectParameter supplier,
            ObjectParameter tax, ObjectParameter taxNo, ObjectParameter vatFee, ObjectParameter vatFeeBase,
            ObjectParameter vatFreeFee, ObjectParameter vatFreeFeeBase, ObjectParameter warehouse,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var purchaseNoParameter = purchaseNo != null
                ? new ObjectParameter("PurchaseNo", purchaseNo)
                : new ObjectParameter("PurchaseNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purchases_AddNew", address1,
                address2, address3, agent, approvedBy1, approvedBy2, approvedBy3, betalingsID, buyer, cashDiscount,
                category, cityName, contact, costCenter, costPercent, costPercentDistribution, costPercentPurchases,
                country, currency, delivery, deliveryDate, deliveryWeek, department, due, eDILocationNr, eECCountry,
                eECTransCode, endDisc, endDiscPct, excise, exciseBase, internalRemarks, invoiceDate, invoiceNo,
                isLiableToPayTax, kortArt, lEANCustomersReference, lEANShipReference, lEANTest, language, name,
                optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, ordered, ourAccount, payment, postalCode, priceList,
                project, purchaseCommunication, purchaseCommunicationStatus, purchaseDate, purchaseNoParameter,
                purchaseText, purpose, rate, recvNo, remarks, reports, roundedAmount, ship1, ship2, ship3, ship5, ship6,
                ship7, shipCityName, shipFrom, shipPostalCode, shipTo, status, supplier, tax, taxNo, vatFee, vatFeeBase,
                vatFreeFee, vatFreeFeeBase, warehouse, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Purchases_Delete(string original_PurchaseNo, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purchases_Delete",
                original_PurchaseNoParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Purchases_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter approvedBy1, ObjectParameter approvedBy2,
            ObjectParameter approvedBy3, ObjectParameter betalingsID, ObjectParameter buyer,
            ObjectParameter cashDiscount, ObjectParameter category, ObjectParameter cityName, ObjectParameter contact,
            ObjectParameter costCenter, ObjectParameter costPercent, ObjectParameter costPercentDistribution,
            ObjectParameter costPercentPurchases, ObjectParameter country, ObjectParameter currency,
            ObjectParameter delivery, ObjectParameter deliveryDate, ObjectParameter deliveryWeek,
            ObjectParameter department, ObjectParameter due, ObjectParameter eDILocationNr, ObjectParameter eECCountry,
            ObjectParameter eECTransCode, ObjectParameter endDisc, ObjectParameter endDiscPct, ObjectParameter excise,
            ObjectParameter exciseBase, ObjectParameter internalRemarks, ObjectParameter invoiceDate,
            ObjectParameter invoiceNo, ObjectParameter isLiableToPayTax, ObjectParameter kortArt,
            ObjectParameter language, ObjectParameter lEANCustomersReference, ObjectParameter lEANShipReference,
            ObjectParameter lEANTest, ObjectParameter name, ObjectParameter optional1, ObjectParameter optional2,
            ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5, ObjectParameter optional6,
            ObjectParameter optional7, ObjectParameter optional8, ObjectParameter optionalNumber1,
            ObjectParameter optionalNumber2, ObjectParameter optionalNumber3, ObjectParameter optionalNumber4,
            ObjectParameter optionalNumber5, ObjectParameter optionalNumber6, ObjectParameter optionalNumber7,
            ObjectParameter optionalNumber8, ObjectParameter optionalText1, ObjectParameter optionalText2,
            ObjectParameter optionalText3, ObjectParameter optionalText4, ObjectParameter optionalText5,
            ObjectParameter optionalText6, ObjectParameter optionalText7, ObjectParameter optionalText8,
            ObjectParameter ordered, ObjectParameter ourAccount, ObjectParameter payment, ObjectParameter postalCode,
            ObjectParameter priceList, ObjectParameter project, ObjectParameter purchaseCommunication,
            ObjectParameter purchaseCommunicationStatus, ObjectParameter purchaseDate, ObjectParameter purchaseText,
            ObjectParameter purpose, ObjectParameter rate, ObjectParameter recvNo, ObjectParameter remarks,
            ObjectParameter reports, ObjectParameter roundedAmount, ObjectParameter ship1, ObjectParameter ship2,
            ObjectParameter ship3, ObjectParameter ship5, ObjectParameter ship6, ObjectParameter ship7,
            ObjectParameter shipCityName, ObjectParameter shipFrom, ObjectParameter shipPostalCode,
            ObjectParameter shipTo, ObjectParameter status, ObjectParameter supplier, ObjectParameter tax,
            ObjectParameter taxNo, ObjectParameter vatFee, ObjectParameter vatFeeBase, ObjectParameter vatFreeFee,
            ObjectParameter vatFreeFeeBase, ObjectParameter warehouse, string original_Address1,
            string original_Address2, string original_Address3, string original_Agent,
            Nullable<bool> original_ApprovedBy1, Nullable<bool> original_ApprovedBy2,
            Nullable<bool> original_ApprovedBy3, string original_BetalingsID, string original_Buyer,
            string original_CashDiscount, string original_Category, string original_CityName, string original_Contact,
            string original_CostCenter, Nullable<double> original_CostPercent,
            Nullable<byte> original_CostPercentDistribution, string original_CostPercentPurchases,
            string original_Country, string original_Currency, string original_Delivery,
            Nullable<System.DateTime> original_DeliveryDate, Nullable<short> original_DeliveryWeek,
            string original_Department, Nullable<System.DateTime> original_Due, string original_EDILocationNr,
            Nullable<short> original_EECCountry, Nullable<byte> original_EECTransCode, Nullable<double> original_EndDisc,
            Nullable<double> original_EndDiscPct, Nullable<double> original_Excise, Nullable<double> original_ExciseBase,
            string original_InternalRemarks, Nullable<System.DateTime> original_InvoiceDate, string original_InvoiceNo,
            Nullable<byte> original_IsLiableToPayTax, string original_KortArt, string original_Language,
            string original_LEANCustomersReference, string original_LEANShipReference, Nullable<bool> original_LEANTest,
            string original_Name, Nullable<short> original_Optional1, Nullable<short> original_Optional2,
            Nullable<short> original_Optional3, Nullable<short> original_Optional4, Nullable<short> original_Optional5,
            Nullable<short> original_Optional6, Nullable<short> original_Optional7, Nullable<short> original_Optional8,
            Nullable<double> original_OptionalNumber1, Nullable<double> original_OptionalNumber2,
            Nullable<double> original_OptionalNumber3, Nullable<double> original_OptionalNumber4,
            Nullable<double> original_OptionalNumber5, Nullable<double> original_OptionalNumber6,
            Nullable<double> original_OptionalNumber7, Nullable<double> original_OptionalNumber8,
            string original_OptionalText1, string original_OptionalText2, string original_OptionalText3,
            string original_OptionalText4, string original_OptionalText5, string original_OptionalText6,
            string original_OptionalText7, string original_OptionalText8, Nullable<short> original_Ordered,
            string original_OurAccount, string original_Payment, string original_PostalCode, string original_PriceList,
            string original_Project, string original_PurchaseCommunication, string original_PurchaseCommunicationStatus,
            Nullable<System.DateTime> original_PurchaseDate, string original_PurchaseNo, string original_PurchaseText,
            string original_Purpose, Nullable<double> original_Rate, string original_RecvNo, string original_Remarks,
            string original_Reports, Nullable<double> original_RoundedAmount, string original_Ship1,
            string original_Ship2, string original_Ship3, string original_Ship5, string original_Ship6,
            string original_Ship7, string original_ShipCityName, string original_ShipFrom,
            string original_ShipPostalCode, string original_ShipTo, string original_Status, string original_Supplier,
            string original_Tax, string original_TaxNo, Nullable<double> original_VatFee,
            Nullable<double> original_VatFeeBase, Nullable<double> original_VatFreeFee,
            Nullable<double> original_VatFreeFeeBase, string original_Warehouse, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_ApprovedBy1Parameter = original_ApprovedBy1.HasValue
                ? new ObjectParameter("Original_ApprovedBy1", original_ApprovedBy1)
                : new ObjectParameter("Original_ApprovedBy1", typeof(bool));

            var original_ApprovedBy2Parameter = original_ApprovedBy2.HasValue
                ? new ObjectParameter("Original_ApprovedBy2", original_ApprovedBy2)
                : new ObjectParameter("Original_ApprovedBy2", typeof(bool));

            var original_ApprovedBy3Parameter = original_ApprovedBy3.HasValue
                ? new ObjectParameter("Original_ApprovedBy3", original_ApprovedBy3)
                : new ObjectParameter("Original_ApprovedBy3", typeof(bool));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_BuyerParameter = original_Buyer != null
                ? new ObjectParameter("Original_Buyer", original_Buyer)
                : new ObjectParameter("Original_Buyer", typeof(string));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityNameParameter = original_CityName != null
                ? new ObjectParameter("Original_CityName", original_CityName)
                : new ObjectParameter("Original_CityName", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CostPercentParameter = original_CostPercent.HasValue
                ? new ObjectParameter("Original_CostPercent", original_CostPercent)
                : new ObjectParameter("Original_CostPercent", typeof(double));

            var original_CostPercentDistributionParameter = original_CostPercentDistribution.HasValue
                ? new ObjectParameter("Original_CostPercentDistribution", original_CostPercentDistribution)
                : new ObjectParameter("Original_CostPercentDistribution", typeof(byte));

            var original_CostPercentPurchasesParameter = original_CostPercentPurchases != null
                ? new ObjectParameter("Original_CostPercentPurchases", original_CostPercentPurchases)
                : new ObjectParameter("Original_CostPercentPurchases", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DeliveryDateParameter = original_DeliveryDate.HasValue
                ? new ObjectParameter("Original_DeliveryDate", original_DeliveryDate)
                : new ObjectParameter("Original_DeliveryDate", typeof(System.DateTime));

            var original_DeliveryWeekParameter = original_DeliveryWeek.HasValue
                ? new ObjectParameter("Original_DeliveryWeek", original_DeliveryWeek)
                : new ObjectParameter("Original_DeliveryWeek", typeof(short));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EndDiscParameter = original_EndDisc.HasValue
                ? new ObjectParameter("Original_EndDisc", original_EndDisc)
                : new ObjectParameter("Original_EndDisc", typeof(double));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExciseParameter = original_Excise.HasValue
                ? new ObjectParameter("Original_Excise", original_Excise)
                : new ObjectParameter("Original_Excise", typeof(double));

            var original_ExciseBaseParameter = original_ExciseBase.HasValue
                ? new ObjectParameter("Original_ExciseBase", original_ExciseBase)
                : new ObjectParameter("Original_ExciseBase", typeof(double));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InvoiceDateParameter = original_InvoiceDate.HasValue
                ? new ObjectParameter("Original_InvoiceDate", original_InvoiceDate)
                : new ObjectParameter("Original_InvoiceDate", typeof(System.DateTime));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_LEANCustomersReferenceParameter = original_LEANCustomersReference != null
                ? new ObjectParameter("Original_LEANCustomersReference", original_LEANCustomersReference)
                : new ObjectParameter("Original_LEANCustomersReference", typeof(string));

            var original_LEANShipReferenceParameter = original_LEANShipReference != null
                ? new ObjectParameter("Original_LEANShipReference", original_LEANShipReference)
                : new ObjectParameter("Original_LEANShipReference", typeof(string));

            var original_LEANTestParameter = original_LEANTest.HasValue
                ? new ObjectParameter("Original_LEANTest", original_LEANTest)
                : new ObjectParameter("Original_LEANTest", typeof(bool));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(short));

            var original_OurAccountParameter = original_OurAccount != null
                ? new ObjectParameter("Original_OurAccount", original_OurAccount)
                : new ObjectParameter("Original_OurAccount", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurchaseCommunicationParameter = original_PurchaseCommunication != null
                ? new ObjectParameter("Original_PurchaseCommunication", original_PurchaseCommunication)
                : new ObjectParameter("Original_PurchaseCommunication", typeof(string));

            var original_PurchaseCommunicationStatusParameter = original_PurchaseCommunicationStatus != null
                ? new ObjectParameter("Original_PurchaseCommunicationStatus", original_PurchaseCommunicationStatus)
                : new ObjectParameter("Original_PurchaseCommunicationStatus", typeof(string));

            var original_PurchaseDateParameter = original_PurchaseDate.HasValue
                ? new ObjectParameter("Original_PurchaseDate", original_PurchaseDate)
                : new ObjectParameter("Original_PurchaseDate", typeof(System.DateTime));

            var original_PurchaseNoParameter = original_PurchaseNo != null
                ? new ObjectParameter("Original_PurchaseNo", original_PurchaseNo)
                : new ObjectParameter("Original_PurchaseNo", typeof(string));

            var original_PurchaseTextParameter = original_PurchaseText != null
                ? new ObjectParameter("Original_PurchaseText", original_PurchaseText)
                : new ObjectParameter("Original_PurchaseText", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecvNoParameter = original_RecvNo != null
                ? new ObjectParameter("Original_RecvNo", original_RecvNo)
                : new ObjectParameter("Original_RecvNo", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_RoundedAmountParameter = original_RoundedAmount.HasValue
                ? new ObjectParameter("Original_RoundedAmount", original_RoundedAmount)
                : new ObjectParameter("Original_RoundedAmount", typeof(double));

            var original_Ship1Parameter = original_Ship1 != null
                ? new ObjectParameter("Original_Ship1", original_Ship1)
                : new ObjectParameter("Original_Ship1", typeof(string));

            var original_Ship2Parameter = original_Ship2 != null
                ? new ObjectParameter("Original_Ship2", original_Ship2)
                : new ObjectParameter("Original_Ship2", typeof(string));

            var original_Ship3Parameter = original_Ship3 != null
                ? new ObjectParameter("Original_Ship3", original_Ship3)
                : new ObjectParameter("Original_Ship3", typeof(string));

            var original_Ship5Parameter = original_Ship5 != null
                ? new ObjectParameter("Original_Ship5", original_Ship5)
                : new ObjectParameter("Original_Ship5", typeof(string));

            var original_Ship6Parameter = original_Ship6 != null
                ? new ObjectParameter("Original_Ship6", original_Ship6)
                : new ObjectParameter("Original_Ship6", typeof(string));

            var original_Ship7Parameter = original_Ship7 != null
                ? new ObjectParameter("Original_Ship7", original_Ship7)
                : new ObjectParameter("Original_Ship7", typeof(string));

            var original_ShipCityNameParameter = original_ShipCityName != null
                ? new ObjectParameter("Original_ShipCityName", original_ShipCityName)
                : new ObjectParameter("Original_ShipCityName", typeof(string));

            var original_ShipFromParameter = original_ShipFrom != null
                ? new ObjectParameter("Original_ShipFrom", original_ShipFrom)
                : new ObjectParameter("Original_ShipFrom", typeof(string));

            var original_ShipPostalCodeParameter = original_ShipPostalCode != null
                ? new ObjectParameter("Original_ShipPostalCode", original_ShipPostalCode)
                : new ObjectParameter("Original_ShipPostalCode", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var original_VatFeeParameter = original_VatFee.HasValue
                ? new ObjectParameter("Original_VatFee", original_VatFee)
                : new ObjectParameter("Original_VatFee", typeof(double));

            var original_VatFeeBaseParameter = original_VatFeeBase.HasValue
                ? new ObjectParameter("Original_VatFeeBase", original_VatFeeBase)
                : new ObjectParameter("Original_VatFeeBase", typeof(double));

            var original_VatFreeFeeParameter = original_VatFreeFee.HasValue
                ? new ObjectParameter("Original_VatFreeFee", original_VatFreeFee)
                : new ObjectParameter("Original_VatFreeFee", typeof(double));

            var original_VatFreeFeeBaseParameter = original_VatFreeFeeBase.HasValue
                ? new ObjectParameter("Original_VatFreeFeeBase", original_VatFreeFeeBase)
                : new ObjectParameter("Original_VatFreeFeeBase", typeof(double));

            var original_WarehouseParameter = original_Warehouse != null
                ? new ObjectParameter("Original_Warehouse", original_Warehouse)
                : new ObjectParameter("Original_Warehouse", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purchases_Update", address1,
                address2, address3, agent, approvedBy1, approvedBy2, approvedBy3, betalingsID, buyer, cashDiscount,
                category, cityName, contact, costCenter, costPercent, costPercentDistribution, costPercentPurchases,
                country, currency, delivery, deliveryDate, deliveryWeek, department, due, eDILocationNr, eECCountry,
                eECTransCode, endDisc, endDiscPct, excise, exciseBase, internalRemarks, invoiceDate, invoiceNo,
                isLiableToPayTax, kortArt, language, lEANCustomersReference, lEANShipReference, lEANTest, name,
                optional1, optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, ordered, ourAccount, payment, postalCode, priceList,
                project, purchaseCommunication, purchaseCommunicationStatus, purchaseDate, purchaseText, purpose, rate,
                recvNo, remarks, reports, roundedAmount, ship1, ship2, ship3, ship5, ship6, ship7, shipCityName,
                shipFrom, shipPostalCode, shipTo, status, supplier, tax, taxNo, vatFee, vatFeeBase, vatFreeFee,
                vatFreeFeeBase, warehouse, original_Address1Parameter, original_Address2Parameter,
                original_Address3Parameter, original_AgentParameter, original_ApprovedBy1Parameter,
                original_ApprovedBy2Parameter, original_ApprovedBy3Parameter, original_BetalingsIDParameter,
                original_BuyerParameter, original_CashDiscountParameter, original_CategoryParameter,
                original_CityNameParameter, original_ContactParameter, original_CostCenterParameter,
                original_CostPercentParameter, original_CostPercentDistributionParameter,
                original_CostPercentPurchasesParameter, original_CountryParameter, original_CurrencyParameter,
                original_DeliveryParameter, original_DeliveryDateParameter, original_DeliveryWeekParameter,
                original_DepartmentParameter, original_DueParameter, original_EDILocationNrParameter,
                original_EECCountryParameter, original_EECTransCodeParameter, original_EndDiscParameter,
                original_EndDiscPctParameter, original_ExciseParameter, original_ExciseBaseParameter,
                original_InternalRemarksParameter, original_InvoiceDateParameter, original_InvoiceNoParameter,
                original_IsLiableToPayTaxParameter, original_KortArtParameter, original_LanguageParameter,
                original_LEANCustomersReferenceParameter, original_LEANShipReferenceParameter,
                original_LEANTestParameter, original_NameParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_Optional3Parameter, original_Optional4Parameter,
                original_Optional5Parameter, original_Optional6Parameter, original_Optional7Parameter,
                original_Optional8Parameter, original_OptionalNumber1Parameter, original_OptionalNumber2Parameter,
                original_OptionalNumber3Parameter, original_OptionalNumber4Parameter, original_OptionalNumber5Parameter,
                original_OptionalNumber6Parameter, original_OptionalNumber7Parameter, original_OptionalNumber8Parameter,
                original_OptionalText1Parameter, original_OptionalText2Parameter, original_OptionalText3Parameter,
                original_OptionalText4Parameter, original_OptionalText5Parameter, original_OptionalText6Parameter,
                original_OptionalText7Parameter, original_OptionalText8Parameter, original_OrderedParameter,
                original_OurAccountParameter, original_PaymentParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_PurchaseCommunicationParameter,
                original_PurchaseCommunicationStatusParameter, original_PurchaseDateParameter,
                original_PurchaseNoParameter, original_PurchaseTextParameter, original_PurposeParameter,
                original_RateParameter, original_RecvNoParameter, original_RemarksParameter, original_ReportsParameter,
                original_RoundedAmountParameter, original_Ship1Parameter, original_Ship2Parameter,
                original_Ship3Parameter, original_Ship5Parameter, original_Ship6Parameter, original_Ship7Parameter,
                original_ShipCityNameParameter, original_ShipFromParameter, original_ShipPostalCodeParameter,
                original_ShipToParameter, original_StatusParameter, original_SupplierParameter, original_TaxParameter,
                original_TaxNoParameter, original_VatFeeParameter, original_VatFeeBaseParameter,
                original_VatFreeFeeParameter, original_VatFreeFeeBaseParameter, original_WarehouseParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseStatus_AddNew(ObjectParameter description, ObjectParameter needSerialNo,
            ObjectParameter remarks, ObjectParameter showInStatus, ObjectParameter status,
            ObjectParameter totalAmountView, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseStatus_AddNew",
                description, needSerialNo, remarks, showInStatus, status, totalAmountView, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseStatus_Delete(string original_Status, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseStatus_Delete",
                original_StatusParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_PurchaseStatus_Update(ObjectParameter description, ObjectParameter needSerialNo,
            ObjectParameter remarks, ObjectParameter showInStatus, ObjectParameter totalAmountView,
            string original_Description, Nullable<short> original_NeedSerialNo, string original_Remarks,
            Nullable<bool> original_ShowInStatus, string original_Status, Nullable<short> original_TotalAmountView,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_NeedSerialNoParameter = original_NeedSerialNo.HasValue
                ? new ObjectParameter("Original_NeedSerialNo", original_NeedSerialNo)
                : new ObjectParameter("Original_NeedSerialNo", typeof(short));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ShowInStatusParameter = original_ShowInStatus.HasValue
                ? new ObjectParameter("Original_ShowInStatus", original_ShowInStatus)
                : new ObjectParameter("Original_ShowInStatus", typeof(bool));

            var original_StatusParameter = original_Status != null
                ? new ObjectParameter("Original_Status", original_Status)
                : new ObjectParameter("Original_Status", typeof(string));

            var original_TotalAmountViewParameter = original_TotalAmountView.HasValue
                ? new ObjectParameter("Original_TotalAmountView", original_TotalAmountView)
                : new ObjectParameter("Original_TotalAmountView", typeof(short));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_PurchaseStatus_Update",
                description, needSerialNo, remarks, showInStatus, totalAmountView, original_DescriptionParameter,
                original_NeedSerialNoParameter, original_RemarksParameter, original_ShowInStatusParameter,
                original_StatusParameter, original_TotalAmountViewParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Purpose_AddNew(ObjectParameter name, ObjectParameter purpose,
            ObjectParameter remarks, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purpose_AddNew", name,
                purpose, remarks, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Purpose_Delete(string original_Purpose, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purpose_Delete",
                original_PurposeParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Purpose_Update(ObjectParameter name, ObjectParameter remarks,
            string original_Name, string original_Purpose, string original_Remarks, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Purpose_Update", name,
                remarks, original_NameParameter, original_PurposeParameter, original_RemarksParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Source_AddNew(ObjectParameter dBAutoNo, ObjectParameter description,
            ObjectParameter remarks, ObjectParameter source, ObjectParameter tabTo, ObjectParameter taxCode,
            ObjectParameter type, ObjectParameter voucher, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Source_AddNew", dBAutoNo,
                description, remarks, source, tabTo, taxCode, type, voucher, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Source_Delete(string original_Source, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Source_Delete",
                original_SourceParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Source_Update(ObjectParameter dBAutoNo, ObjectParameter description,
            ObjectParameter remarks, ObjectParameter tabTo, ObjectParameter taxCode, ObjectParameter type,
            ObjectParameter voucher, Nullable<byte> original_DBAutoNo, string original_Description,
            string original_Remarks, string original_Source, Nullable<short> original_TabTo,
            Nullable<short> original_TaxCode, Nullable<short> original_Type, string original_Voucher,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_DBAutoNoParameter = original_DBAutoNo.HasValue
                ? new ObjectParameter("Original_DBAutoNo", original_DBAutoNo)
                : new ObjectParameter("Original_DBAutoNo", typeof(byte));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_TabToParameter = original_TabTo.HasValue
                ? new ObjectParameter("Original_TabTo", original_TabTo)
                : new ObjectParameter("Original_TabTo", typeof(short));

            var original_TaxCodeParameter = original_TaxCode.HasValue
                ? new ObjectParameter("Original_TaxCode", original_TaxCode)
                : new ObjectParameter("Original_TaxCode", typeof(short));

            var original_TypeParameter = original_Type.HasValue
                ? new ObjectParameter("Original_Type", original_Type)
                : new ObjectParameter("Original_Type", typeof(short));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Source_Update", dBAutoNo,
                description, remarks, tabTo, taxCode, type, voucher, original_DBAutoNoParameter,
                original_DescriptionParameter, original_RemarksParameter, original_SourceParameter,
                original_TabToParameter, original_TaxCodeParameter, original_TypeParameter, original_VoucherParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierCategory_AddNew(ObjectParameter name, ObjectParameter remarks,
            ObjectParameter supplierCat, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierCategory_AddNew",
                name, remarks, supplierCat, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierCategory_Delete(string original_SupplierCat, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SupplierCatParameter = original_SupplierCat != null
                ? new ObjectParameter("Original_SupplierCat", original_SupplierCat)
                : new ObjectParameter("Original_SupplierCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierCategory_Delete",
                original_SupplierCatParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierCategory_Update(ObjectParameter name, ObjectParameter remarks,
            string original_Name, string original_Remarks, string original_SupplierCat, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SupplierCatParameter = original_SupplierCat != null
                ? new ObjectParameter("Original_SupplierCat", original_SupplierCat)
                : new ObjectParameter("Original_SupplierCat", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierCategory_Update",
                name, remarks, original_NameParameter, original_RemarksParameter, original_SupplierCatParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierContacts_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter city, ObjectParameter country, ObjectParameter directPhone, ObjectParameter email,
            ObjectParameter fax, ObjectParameter interNet, ObjectParameter localNumber, ObjectParameter mobile,
            ObjectParameter name, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter supplier,
            ObjectParameter title, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierContacts_AddNew",
                address1, address2, city, country, directPhone, email, fax, interNet, localNumber, mobile, name, phone,
                postalCode, supplier, title, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierContacts_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierContacts_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_SupplierContacts_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter city, ObjectParameter country, ObjectParameter directPhone, ObjectParameter email,
            ObjectParameter fax, ObjectParameter interNet, ObjectParameter localNumber, ObjectParameter mobile,
            ObjectParameter name, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter supplier,
            ObjectParameter title, string original_Address1, string original_Address2, string original_City,
            string original_Country, string original_DirectPhone, string original_Email, string original_Fax,
            string original_InterNet, string original_LocalNumber, string original_Mobile, string original_Name,
            string original_Phone, string original_PostalCode, Nullable<int> original_RecordID, string original_Supplier,
            string original_Title, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_DirectPhoneParameter = original_DirectPhone != null
                ? new ObjectParameter("Original_DirectPhone", original_DirectPhone)
                : new ObjectParameter("Original_DirectPhone", typeof(string));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_LocalNumberParameter = original_LocalNumber != null
                ? new ObjectParameter("Original_LocalNumber", original_LocalNumber)
                : new ObjectParameter("Original_LocalNumber", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_SupplierContacts_Update",
                address1, address2, city, country, directPhone, email, fax, interNet, localNumber, mobile, name, phone,
                postalCode, supplier, title, original_Address1Parameter, original_Address2Parameter,
                original_CityParameter, original_CountryParameter, original_DirectPhoneParameter,
                original_EmailParameter, original_FaxParameter, original_InterNetParameter,
                original_LocalNumberParameter, original_MobileParameter, original_NameParameter, original_PhoneParameter,
                original_PostalCodeParameter, original_RecordIDParameter, original_SupplierParameter,
                original_TitleParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Suppliers_AddNew(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allowInBank, ObjectParameter bank,
            ObjectParameter bankName, ObjectParameter blocked, ObjectParameter buyer, ObjectParameter cashDiscount,
            ObjectParameter category, ObjectParameter city, ObjectParameter contact, ObjectParameter costCenter,
            ObjectParameter country, ObjectParameter countryCode, ObjectParameter creditLimit, ObjectParameter currency,
            ObjectParameter delivery, ObjectParameter department, ObjectParameter eDILocationNr,
            ObjectParameter eECCountry, ObjectParameter eECTransCode, ObjectParameter email, ObjectParameter endDiscPct,
            ObjectParameter excludeFromPaymentProcedures, ObjectParameter fax, ObjectParameter fIKNumber,
            ObjectParameter giro, ObjectParameter grouping, ObjectParameter iBAN, ObjectParameter internalRemarks,
            ObjectParameter interNet, ObjectParameter isLiableToPayTax, ObjectParameter kortArt,
            ObjectParameter language, ObjectParameter mobile, ObjectParameter name, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter ordered, ObjectParameter ourAccount, ObjectParameter payment,
            ObjectParameter payTo, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList,
            ObjectParameter project, ObjectParameter purchaseCommunication, ObjectParameter purpose,
            ObjectParameter remarks, ObjectParameter reports, string supplier, ObjectParameter tax,
            ObjectParameter taxNo, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Suppliers_AddNew", address1,
                address2, address3, agent, allowInBank, bank, bankName, blocked, buyer, cashDiscount, category, city,
                contact, costCenter, country, countryCode, creditLimit, currency, delivery, department, eDILocationNr,
                eECCountry, eECTransCode, email, endDiscPct, excludeFromPaymentProcedures, fax, fIKNumber, giro,
                grouping, iBAN, internalRemarks, interNet, isLiableToPayTax, kortArt, language, mobile, name, optional1,
                optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, ordered, ourAccount, payment, payTo, phone, postalCode,
                priceList, project, purchaseCommunication, purpose, remarks, reports, supplierParameter, tax, taxNo,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Suppliers_Delete(string original_Supplier, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Suppliers_Delete",
                original_SupplierParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Suppliers_Update(ObjectParameter address1, ObjectParameter address2,
            ObjectParameter address3, ObjectParameter agent, ObjectParameter allowInBank, ObjectParameter bank,
            ObjectParameter bankName, ObjectParameter blocked, ObjectParameter buyer, ObjectParameter cashDiscount,
            ObjectParameter category, ObjectParameter city, ObjectParameter contact, ObjectParameter costCenter,
            ObjectParameter country, ObjectParameter countryCode, ObjectParameter creditLimit, ObjectParameter currency,
            ObjectParameter delivery, ObjectParameter department, ObjectParameter eDILocationNr,
            ObjectParameter eECCountry, ObjectParameter eECTransCode, ObjectParameter email, ObjectParameter endDiscPct,
            ObjectParameter excludeFromPaymentProcedures, ObjectParameter fax, ObjectParameter fIKNumber,
            ObjectParameter giro, ObjectParameter grouping, ObjectParameter iBAN, ObjectParameter internalRemarks,
            ObjectParameter interNet, ObjectParameter isLiableToPayTax, ObjectParameter kortArt,
            ObjectParameter language, ObjectParameter mobile, ObjectParameter name, ObjectParameter optional1,
            ObjectParameter optional2, ObjectParameter optional3, ObjectParameter optional4, ObjectParameter optional5,
            ObjectParameter optional6, ObjectParameter optional7, ObjectParameter optional8,
            ObjectParameter optionalNumber1, ObjectParameter optionalNumber2, ObjectParameter optionalNumber3,
            ObjectParameter optionalNumber4, ObjectParameter optionalNumber5, ObjectParameter optionalNumber6,
            ObjectParameter optionalNumber7, ObjectParameter optionalNumber8, ObjectParameter optionalText1,
            ObjectParameter optionalText2, ObjectParameter optionalText3, ObjectParameter optionalText4,
            ObjectParameter optionalText5, ObjectParameter optionalText6, ObjectParameter optionalText7,
            ObjectParameter optionalText8, ObjectParameter ordered, ObjectParameter ourAccount, ObjectParameter payment,
            ObjectParameter payTo, ObjectParameter phone, ObjectParameter postalCode, ObjectParameter priceList,
            ObjectParameter project, ObjectParameter purchaseCommunication, ObjectParameter purpose,
            ObjectParameter remarks, ObjectParameter reports, ObjectParameter tax, ObjectParameter taxNo,
            string original_Address1, string original_Address2, string original_Address3, string original_Agent,
            string original_AllowInBank, string original_Bank, string original_BankName,
            Nullable<short> original_Blocked, string original_Buyer, string original_CashDiscount,
            string original_Category, string original_City, string original_Contact, string original_CostCenter,
            string original_Country, string original_CountryCode, Nullable<double> original_CreditLimit,
            string original_Currency, string original_Delivery, string original_Department,
            string original_EDILocationNr, Nullable<short> original_EECCountry, Nullable<byte> original_EECTransCode,
            string original_Email, Nullable<double> original_EndDiscPct,
            Nullable<bool> original_ExcludeFromPaymentProcedures, string original_Fax, string original_FIKNumber,
            string original_Giro, string original_Grouping, string original_IBAN, string original_InternalRemarks,
            string original_InterNet, Nullable<byte> original_IsLiableToPayTax, string original_KortArt,
            string original_Language, string original_Mobile, string original_Name, Nullable<short> original_Optional1,
            Nullable<short> original_Optional2, Nullable<short> original_Optional3, Nullable<short> original_Optional4,
            Nullable<short> original_Optional5, Nullable<short> original_Optional6, Nullable<short> original_Optional7,
            Nullable<short> original_Optional8, Nullable<double> original_OptionalNumber1,
            Nullable<double> original_OptionalNumber2, Nullable<double> original_OptionalNumber3,
            Nullable<double> original_OptionalNumber4, Nullable<double> original_OptionalNumber5,
            Nullable<double> original_OptionalNumber6, Nullable<double> original_OptionalNumber7,
            Nullable<double> original_OptionalNumber8, string original_OptionalText1, string original_OptionalText2,
            string original_OptionalText3, string original_OptionalText4, string original_OptionalText5,
            string original_OptionalText6, string original_OptionalText7, string original_OptionalText8,
            Nullable<short> original_Ordered, string original_OurAccount, string original_Payment, string original_PayTo,
            string original_Phone, string original_PostalCode, string original_PriceList, string original_Project,
            string original_PurchaseCommunication, string original_Purpose, string original_Remarks,
            string original_Reports, string original_Supplier, string original_Tax, string original_TaxNo,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_Address1Parameter = original_Address1 != null
                ? new ObjectParameter("Original_Address1", original_Address1)
                : new ObjectParameter("Original_Address1", typeof(string));

            var original_Address2Parameter = original_Address2 != null
                ? new ObjectParameter("Original_Address2", original_Address2)
                : new ObjectParameter("Original_Address2", typeof(string));

            var original_Address3Parameter = original_Address3 != null
                ? new ObjectParameter("Original_Address3", original_Address3)
                : new ObjectParameter("Original_Address3", typeof(string));

            var original_AgentParameter = original_Agent != null
                ? new ObjectParameter("Original_Agent", original_Agent)
                : new ObjectParameter("Original_Agent", typeof(string));

            var original_AllowInBankParameter = original_AllowInBank != null
                ? new ObjectParameter("Original_AllowInBank", original_AllowInBank)
                : new ObjectParameter("Original_AllowInBank", typeof(string));

            var original_BankParameter = original_Bank != null
                ? new ObjectParameter("Original_Bank", original_Bank)
                : new ObjectParameter("Original_Bank", typeof(string));

            var original_BankNameParameter = original_BankName != null
                ? new ObjectParameter("Original_BankName", original_BankName)
                : new ObjectParameter("Original_BankName", typeof(string));

            var original_BlockedParameter = original_Blocked.HasValue
                ? new ObjectParameter("Original_Blocked", original_Blocked)
                : new ObjectParameter("Original_Blocked", typeof(short));

            var original_BuyerParameter = original_Buyer != null
                ? new ObjectParameter("Original_Buyer", original_Buyer)
                : new ObjectParameter("Original_Buyer", typeof(string));

            var original_CashDiscountParameter = original_CashDiscount != null
                ? new ObjectParameter("Original_CashDiscount", original_CashDiscount)
                : new ObjectParameter("Original_CashDiscount", typeof(string));

            var original_CategoryParameter = original_Category != null
                ? new ObjectParameter("Original_Category", original_Category)
                : new ObjectParameter("Original_Category", typeof(string));

            var original_CityParameter = original_City != null
                ? new ObjectParameter("Original_City", original_City)
                : new ObjectParameter("Original_City", typeof(string));

            var original_ContactParameter = original_Contact != null
                ? new ObjectParameter("Original_Contact", original_Contact)
                : new ObjectParameter("Original_Contact", typeof(string));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CountryParameter = original_Country != null
                ? new ObjectParameter("Original_Country", original_Country)
                : new ObjectParameter("Original_Country", typeof(string));

            var original_CountryCodeParameter = original_CountryCode != null
                ? new ObjectParameter("Original_CountryCode", original_CountryCode)
                : new ObjectParameter("Original_CountryCode", typeof(string));

            var original_CreditLimitParameter = original_CreditLimit.HasValue
                ? new ObjectParameter("Original_CreditLimit", original_CreditLimit)
                : new ObjectParameter("Original_CreditLimit", typeof(double));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_DeliveryParameter = original_Delivery != null
                ? new ObjectParameter("Original_Delivery", original_Delivery)
                : new ObjectParameter("Original_Delivery", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EDILocationNrParameter = original_EDILocationNr != null
                ? new ObjectParameter("Original_EDILocationNr", original_EDILocationNr)
                : new ObjectParameter("Original_EDILocationNr", typeof(string));

            var original_EECCountryParameter = original_EECCountry.HasValue
                ? new ObjectParameter("Original_EECCountry", original_EECCountry)
                : new ObjectParameter("Original_EECCountry", typeof(short));

            var original_EECTransCodeParameter = original_EECTransCode.HasValue
                ? new ObjectParameter("Original_EECTransCode", original_EECTransCode)
                : new ObjectParameter("Original_EECTransCode", typeof(byte));

            var original_EmailParameter = original_Email != null
                ? new ObjectParameter("Original_Email", original_Email)
                : new ObjectParameter("Original_Email", typeof(string));

            var original_EndDiscPctParameter = original_EndDiscPct.HasValue
                ? new ObjectParameter("Original_EndDiscPct", original_EndDiscPct)
                : new ObjectParameter("Original_EndDiscPct", typeof(double));

            var original_ExcludeFromPaymentProceduresParameter = original_ExcludeFromPaymentProcedures.HasValue
                ? new ObjectParameter("Original_ExcludeFromPaymentProcedures", original_ExcludeFromPaymentProcedures)
                : new ObjectParameter("Original_ExcludeFromPaymentProcedures", typeof(bool));

            var original_FaxParameter = original_Fax != null
                ? new ObjectParameter("Original_Fax", original_Fax)
                : new ObjectParameter("Original_Fax", typeof(string));

            var original_FIKNumberParameter = original_FIKNumber != null
                ? new ObjectParameter("Original_FIKNumber", original_FIKNumber)
                : new ObjectParameter("Original_FIKNumber", typeof(string));

            var original_GiroParameter = original_Giro != null
                ? new ObjectParameter("Original_Giro", original_Giro)
                : new ObjectParameter("Original_Giro", typeof(string));

            var original_GroupingParameter = original_Grouping != null
                ? new ObjectParameter("Original_Grouping", original_Grouping)
                : new ObjectParameter("Original_Grouping", typeof(string));

            var original_IBANParameter = original_IBAN != null
                ? new ObjectParameter("Original_IBAN", original_IBAN)
                : new ObjectParameter("Original_IBAN", typeof(string));

            var original_InternalRemarksParameter = original_InternalRemarks != null
                ? new ObjectParameter("Original_InternalRemarks", original_InternalRemarks)
                : new ObjectParameter("Original_InternalRemarks", typeof(string));

            var original_InterNetParameter = original_InterNet != null
                ? new ObjectParameter("Original_InterNet", original_InterNet)
                : new ObjectParameter("Original_InterNet", typeof(string));

            var original_IsLiableToPayTaxParameter = original_IsLiableToPayTax.HasValue
                ? new ObjectParameter("Original_IsLiableToPayTax", original_IsLiableToPayTax)
                : new ObjectParameter("Original_IsLiableToPayTax", typeof(byte));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LanguageParameter = original_Language != null
                ? new ObjectParameter("Original_Language", original_Language)
                : new ObjectParameter("Original_Language", typeof(string));

            var original_MobileParameter = original_Mobile != null
                ? new ObjectParameter("Original_Mobile", original_Mobile)
                : new ObjectParameter("Original_Mobile", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_Optional1Parameter = original_Optional1.HasValue
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(short));

            var original_Optional2Parameter = original_Optional2.HasValue
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(short));

            var original_Optional3Parameter = original_Optional3.HasValue
                ? new ObjectParameter("Original_Optional3", original_Optional3)
                : new ObjectParameter("Original_Optional3", typeof(short));

            var original_Optional4Parameter = original_Optional4.HasValue
                ? new ObjectParameter("Original_Optional4", original_Optional4)
                : new ObjectParameter("Original_Optional4", typeof(short));

            var original_Optional5Parameter = original_Optional5.HasValue
                ? new ObjectParameter("Original_Optional5", original_Optional5)
                : new ObjectParameter("Original_Optional5", typeof(short));

            var original_Optional6Parameter = original_Optional6.HasValue
                ? new ObjectParameter("Original_Optional6", original_Optional6)
                : new ObjectParameter("Original_Optional6", typeof(short));

            var original_Optional7Parameter = original_Optional7.HasValue
                ? new ObjectParameter("Original_Optional7", original_Optional7)
                : new ObjectParameter("Original_Optional7", typeof(short));

            var original_Optional8Parameter = original_Optional8.HasValue
                ? new ObjectParameter("Original_Optional8", original_Optional8)
                : new ObjectParameter("Original_Optional8", typeof(short));

            var original_OptionalNumber1Parameter = original_OptionalNumber1.HasValue
                ? new ObjectParameter("Original_OptionalNumber1", original_OptionalNumber1)
                : new ObjectParameter("Original_OptionalNumber1", typeof(double));

            var original_OptionalNumber2Parameter = original_OptionalNumber2.HasValue
                ? new ObjectParameter("Original_OptionalNumber2", original_OptionalNumber2)
                : new ObjectParameter("Original_OptionalNumber2", typeof(double));

            var original_OptionalNumber3Parameter = original_OptionalNumber3.HasValue
                ? new ObjectParameter("Original_OptionalNumber3", original_OptionalNumber3)
                : new ObjectParameter("Original_OptionalNumber3", typeof(double));

            var original_OptionalNumber4Parameter = original_OptionalNumber4.HasValue
                ? new ObjectParameter("Original_OptionalNumber4", original_OptionalNumber4)
                : new ObjectParameter("Original_OptionalNumber4", typeof(double));

            var original_OptionalNumber5Parameter = original_OptionalNumber5.HasValue
                ? new ObjectParameter("Original_OptionalNumber5", original_OptionalNumber5)
                : new ObjectParameter("Original_OptionalNumber5", typeof(double));

            var original_OptionalNumber6Parameter = original_OptionalNumber6.HasValue
                ? new ObjectParameter("Original_OptionalNumber6", original_OptionalNumber6)
                : new ObjectParameter("Original_OptionalNumber6", typeof(double));

            var original_OptionalNumber7Parameter = original_OptionalNumber7.HasValue
                ? new ObjectParameter("Original_OptionalNumber7", original_OptionalNumber7)
                : new ObjectParameter("Original_OptionalNumber7", typeof(double));

            var original_OptionalNumber8Parameter = original_OptionalNumber8.HasValue
                ? new ObjectParameter("Original_OptionalNumber8", original_OptionalNumber8)
                : new ObjectParameter("Original_OptionalNumber8", typeof(double));

            var original_OptionalText1Parameter = original_OptionalText1 != null
                ? new ObjectParameter("Original_OptionalText1", original_OptionalText1)
                : new ObjectParameter("Original_OptionalText1", typeof(string));

            var original_OptionalText2Parameter = original_OptionalText2 != null
                ? new ObjectParameter("Original_OptionalText2", original_OptionalText2)
                : new ObjectParameter("Original_OptionalText2", typeof(string));

            var original_OptionalText3Parameter = original_OptionalText3 != null
                ? new ObjectParameter("Original_OptionalText3", original_OptionalText3)
                : new ObjectParameter("Original_OptionalText3", typeof(string));

            var original_OptionalText4Parameter = original_OptionalText4 != null
                ? new ObjectParameter("Original_OptionalText4", original_OptionalText4)
                : new ObjectParameter("Original_OptionalText4", typeof(string));

            var original_OptionalText5Parameter = original_OptionalText5 != null
                ? new ObjectParameter("Original_OptionalText5", original_OptionalText5)
                : new ObjectParameter("Original_OptionalText5", typeof(string));

            var original_OptionalText6Parameter = original_OptionalText6 != null
                ? new ObjectParameter("Original_OptionalText6", original_OptionalText6)
                : new ObjectParameter("Original_OptionalText6", typeof(string));

            var original_OptionalText7Parameter = original_OptionalText7 != null
                ? new ObjectParameter("Original_OptionalText7", original_OptionalText7)
                : new ObjectParameter("Original_OptionalText7", typeof(string));

            var original_OptionalText8Parameter = original_OptionalText8 != null
                ? new ObjectParameter("Original_OptionalText8", original_OptionalText8)
                : new ObjectParameter("Original_OptionalText8", typeof(string));

            var original_OrderedParameter = original_Ordered.HasValue
                ? new ObjectParameter("Original_Ordered", original_Ordered)
                : new ObjectParameter("Original_Ordered", typeof(short));

            var original_OurAccountParameter = original_OurAccount != null
                ? new ObjectParameter("Original_OurAccount", original_OurAccount)
                : new ObjectParameter("Original_OurAccount", typeof(string));

            var original_PaymentParameter = original_Payment != null
                ? new ObjectParameter("Original_Payment", original_Payment)
                : new ObjectParameter("Original_Payment", typeof(string));

            var original_PayToParameter = original_PayTo != null
                ? new ObjectParameter("Original_PayTo", original_PayTo)
                : new ObjectParameter("Original_PayTo", typeof(string));

            var original_PhoneParameter = original_Phone != null
                ? new ObjectParameter("Original_Phone", original_Phone)
                : new ObjectParameter("Original_Phone", typeof(string));

            var original_PostalCodeParameter = original_PostalCode != null
                ? new ObjectParameter("Original_PostalCode", original_PostalCode)
                : new ObjectParameter("Original_PostalCode", typeof(string));

            var original_PriceListParameter = original_PriceList != null
                ? new ObjectParameter("Original_PriceList", original_PriceList)
                : new ObjectParameter("Original_PriceList", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurchaseCommunicationParameter = original_PurchaseCommunication != null
                ? new ObjectParameter("Original_PurchaseCommunication", original_PurchaseCommunication)
                : new ObjectParameter("Original_PurchaseCommunication", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReportsParameter = original_Reports != null
                ? new ObjectParameter("Original_Reports", original_Reports)
                : new ObjectParameter("Original_Reports", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxNoParameter = original_TaxNo != null
                ? new ObjectParameter("Original_TaxNo", original_TaxNo)
                : new ObjectParameter("Original_TaxNo", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Suppliers_Update", address1,
                address2, address3, agent, allowInBank, bank, bankName, blocked, buyer, cashDiscount, category, city,
                contact, costCenter, country, countryCode, creditLimit, currency, delivery, department, eDILocationNr,
                eECCountry, eECTransCode, email, endDiscPct, excludeFromPaymentProcedures, fax, fIKNumber, giro,
                grouping, iBAN, internalRemarks, interNet, isLiableToPayTax, kortArt, language, mobile, name, optional1,
                optional2, optional3, optional4, optional5, optional6, optional7, optional8, optionalNumber1,
                optionalNumber2, optionalNumber3, optionalNumber4, optionalNumber5, optionalNumber6, optionalNumber7,
                optionalNumber8, optionalText1, optionalText2, optionalText3, optionalText4, optionalText5,
                optionalText6, optionalText7, optionalText8, ordered, ourAccount, payment, payTo, phone, postalCode,
                priceList, project, purchaseCommunication, purpose, remarks, reports, tax, taxNo,
                original_Address1Parameter, original_Address2Parameter, original_Address3Parameter,
                original_AgentParameter, original_AllowInBankParameter, original_BankParameter,
                original_BankNameParameter, original_BlockedParameter, original_BuyerParameter,
                original_CashDiscountParameter, original_CategoryParameter, original_CityParameter,
                original_ContactParameter, original_CostCenterParameter, original_CountryParameter,
                original_CountryCodeParameter, original_CreditLimitParameter, original_CurrencyParameter,
                original_DeliveryParameter, original_DepartmentParameter, original_EDILocationNrParameter,
                original_EECCountryParameter, original_EECTransCodeParameter, original_EmailParameter,
                original_EndDiscPctParameter, original_ExcludeFromPaymentProceduresParameter, original_FaxParameter,
                original_FIKNumberParameter, original_GiroParameter, original_GroupingParameter, original_IBANParameter,
                original_InternalRemarksParameter, original_InterNetParameter, original_IsLiableToPayTaxParameter,
                original_KortArtParameter, original_LanguageParameter, original_MobileParameter, original_NameParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_Optional3Parameter,
                original_Optional4Parameter, original_Optional5Parameter, original_Optional6Parameter,
                original_Optional7Parameter, original_Optional8Parameter, original_OptionalNumber1Parameter,
                original_OptionalNumber2Parameter, original_OptionalNumber3Parameter, original_OptionalNumber4Parameter,
                original_OptionalNumber5Parameter, original_OptionalNumber6Parameter, original_OptionalNumber7Parameter,
                original_OptionalNumber8Parameter, original_OptionalText1Parameter, original_OptionalText2Parameter,
                original_OptionalText3Parameter, original_OptionalText4Parameter, original_OptionalText5Parameter,
                original_OptionalText6Parameter, original_OptionalText7Parameter, original_OptionalText8Parameter,
                original_OrderedParameter, original_OurAccountParameter, original_PaymentParameter,
                original_PayToParameter, original_PhoneParameter, original_PostalCodeParameter,
                original_PriceListParameter, original_ProjectParameter, original_PurchaseCommunicationParameter,
                original_PurposeParameter, original_RemarksParameter, original_ReportsParameter,
                original_SupplierParameter, original_TaxParameter, original_TaxNoParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Tax_AddNew(ObjectParameter aquisition, ObjectParameter balance,
            ObjectParameter expenses, ObjectParameter name, ObjectParameter rate, ObjectParameter ratio,
            ObjectParameter remarks, ObjectParameter returnCode, ObjectParameter tax, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Tax_AddNew", aquisition,
                balance, expenses, name, rate, ratio, remarks, returnCode, tax, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Tax_Delete(string original_Tax, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Tax_Delete",
                original_TaxParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Tax_Update(ObjectParameter aquisition, ObjectParameter balance,
            ObjectParameter expenses, ObjectParameter name, ObjectParameter rate, ObjectParameter ratio,
            ObjectParameter remarks, ObjectParameter returnCode, ObjectParameter tax, string original_Aquisition,
            string original_Balance, string original_Expenses, string original_Name, Nullable<double> original_Rate,
            Nullable<double> original_Ratio, string original_Remarks, Nullable<short> original_ReturnCode,
            string original_Tax, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_AquisitionParameter = original_Aquisition != null
                ? new ObjectParameter("Original_Aquisition", original_Aquisition)
                : new ObjectParameter("Original_Aquisition", typeof(string));

            var original_BalanceParameter = original_Balance != null
                ? new ObjectParameter("Original_Balance", original_Balance)
                : new ObjectParameter("Original_Balance", typeof(string));

            var original_ExpensesParameter = original_Expenses != null
                ? new ObjectParameter("Original_Expenses", original_Expenses)
                : new ObjectParameter("Original_Expenses", typeof(string));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RatioParameter = original_Ratio.HasValue
                ? new ObjectParameter("Original_Ratio", original_Ratio)
                : new ObjectParameter("Original_Ratio", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_ReturnCodeParameter = original_ReturnCode.HasValue
                ? new ObjectParameter("Original_ReturnCode", original_ReturnCode)
                : new ObjectParameter("Original_ReturnCode", typeof(short));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Tax_Update", aquisition,
                balance, expenses, name, rate, ratio, remarks, returnCode, tax, original_AquisitionParameter,
                original_BalanceParameter, original_ExpensesParameter, original_NameParameter, original_RateParameter,
                original_RatioParameter, original_RemarksParameter, original_ReturnCodeParameter, original_TaxParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeHeaderLine_AddNew(ObjectParameter costCenter, ObjectParameter department,
            ObjectParameter employee, ObjectParameter project, ObjectParameter purpose, ObjectParameter startDate,
            ObjectParameter description_Monday, ObjectParameter fromTime_Monday, ObjectParameter quantity_Monday,
            ObjectParameter toTime_Monday, ObjectParameter description_Tuesday, ObjectParameter fromTime_Tuesday,
            ObjectParameter quantity_Tuesday, ObjectParameter toTime_Tuesday, ObjectParameter description_Wednesday,
            ObjectParameter fromTime_Wednesday, ObjectParameter quantity_Wednesday, ObjectParameter toTime_Wednesday,
            ObjectParameter description_Thursday, ObjectParameter fromTime_Thursday, ObjectParameter quantity_Thursday,
            ObjectParameter toTime_Thursday, ObjectParameter description_Friday, ObjectParameter fromTime_Friday,
            ObjectParameter quantity_Friday, ObjectParameter toTime_Friday, ObjectParameter description_Saturday,
            ObjectParameter fromTime_Saturday, ObjectParameter quantity_Saturday, ObjectParameter toTime_Saturday,
            ObjectParameter description_Sunday, ObjectParameter fromTime_Sunday, ObjectParameter quantity_Sunday,
            ObjectParameter toTime_Sunday, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeHeaderLine_AddNew",
                costCenter, department, employee, project, purpose, startDate, description_Monday, fromTime_Monday,
                quantity_Monday, toTime_Monday, description_Tuesday, fromTime_Tuesday, quantity_Tuesday, toTime_Tuesday,
                description_Wednesday, fromTime_Wednesday, quantity_Wednesday, toTime_Wednesday, description_Thursday,
                fromTime_Thursday, quantity_Thursday, toTime_Thursday, description_Friday, fromTime_Friday,
                quantity_Friday, toTime_Friday, description_Saturday, fromTime_Saturday, quantity_Saturday,
                toTime_Saturday, description_Sunday, fromTime_Sunday, quantity_Sunday, toTime_Sunday, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeHeaderLine_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeHeaderLine_Delete",
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeHeaderLine_Update(ObjectParameter costCenter, ObjectParameter department,
            ObjectParameter employee, ObjectParameter project, ObjectParameter purpose, ObjectParameter startDate,
            ObjectParameter description_Monday, ObjectParameter fromTime_Monday, ObjectParameter quantity_Monday,
            ObjectParameter toTime_Monday, ObjectParameter description_Tuesday, ObjectParameter fromTime_Tuesday,
            ObjectParameter quantity_Tuesday, ObjectParameter toTime_Tuesday, ObjectParameter description_Wednesday,
            ObjectParameter fromTime_Wednesday, ObjectParameter quantity_Wednesday, ObjectParameter toTime_Wednesday,
            ObjectParameter description_Thursday, ObjectParameter fromTime_Thursday, ObjectParameter quantity_Thursday,
            ObjectParameter toTime_Thursday, ObjectParameter description_Friday, ObjectParameter fromTime_Friday,
            ObjectParameter quantity_Friday, ObjectParameter toTime_Friday, ObjectParameter description_Saturday,
            ObjectParameter fromTime_Saturday, ObjectParameter quantity_Saturday, ObjectParameter toTime_Saturday,
            ObjectParameter description_Sunday, ObjectParameter fromTime_Sunday, ObjectParameter quantity_Sunday,
            ObjectParameter toTime_Sunday, string original_CostCenter, string original_Department,
            string original_Employee, string original_Project, string original_Purpose,
            Nullable<System.DateTime> original_StartDate, string original_Description_Monday,
            Nullable<System.DateTime> original_FromTime_Monday, Nullable<System.Guid> original_GUID_Monday,
            Nullable<double> original_Quantity_Monday, Nullable<System.DateTime> original_ToTime_Monday,
            string original_Description_Tuesday, Nullable<System.DateTime> original_FromTime_Tuesday,
            Nullable<System.Guid> original_GUID_Tuesday, Nullable<double> original_Quantity_Tuesday,
            Nullable<System.DateTime> original_ToTime_Tuesday, string original_Description_Wednesday,
            Nullable<System.DateTime> original_FromTime_Wednesday, Nullable<System.Guid> original_GUID_Wednesday,
            Nullable<double> original_Quantity_Wednesday, Nullable<System.DateTime> original_ToTime_Wednesday,
            string original_Description_Thursday, Nullable<System.DateTime> original_FromTime_Thursday,
            Nullable<System.Guid> original_GUID_Thursday, Nullable<double> original_Quantity_Thursday,
            Nullable<System.DateTime> original_ToTime_Thursday, string original_Description_Friday,
            Nullable<System.DateTime> original_FromTime_Friday, Nullable<System.Guid> original_GUID_Friday,
            Nullable<double> original_Quantity_Friday, Nullable<System.DateTime> original_ToTime_Friday,
            string original_Description_Saturday, Nullable<System.DateTime> original_FromTime_Saturday,
            Nullable<System.Guid> original_GUID_Saturday, Nullable<double> original_Quantity_Saturday,
            Nullable<System.DateTime> original_ToTime_Saturday, string original_Description_Sunday,
            Nullable<System.DateTime> original_FromTime_Sunday, Nullable<System.Guid> original_GUID_Sunday,
            Nullable<double> original_Quantity_Sunday, Nullable<System.DateTime> original_ToTime_Sunday,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_StartDateParameter = original_StartDate.HasValue
                ? new ObjectParameter("Original_StartDate", original_StartDate)
                : new ObjectParameter("Original_StartDate", typeof(System.DateTime));

            var original_Description_MondayParameter = original_Description_Monday != null
                ? new ObjectParameter("Original_Description_Monday", original_Description_Monday)
                : new ObjectParameter("Original_Description_Monday", typeof(string));

            var original_FromTime_MondayParameter = original_FromTime_Monday.HasValue
                ? new ObjectParameter("Original_FromTime_Monday", original_FromTime_Monday)
                : new ObjectParameter("Original_FromTime_Monday", typeof(System.DateTime));

            var original_GUID_MondayParameter = original_GUID_Monday.HasValue
                ? new ObjectParameter("Original_GUID_Monday", original_GUID_Monday)
                : new ObjectParameter("Original_GUID_Monday", typeof(System.Guid));

            var original_Quantity_MondayParameter = original_Quantity_Monday.HasValue
                ? new ObjectParameter("Original_Quantity_Monday", original_Quantity_Monday)
                : new ObjectParameter("Original_Quantity_Monday", typeof(double));

            var original_ToTime_MondayParameter = original_ToTime_Monday.HasValue
                ? new ObjectParameter("Original_ToTime_Monday", original_ToTime_Monday)
                : new ObjectParameter("Original_ToTime_Monday", typeof(System.DateTime));

            var original_Description_TuesdayParameter = original_Description_Tuesday != null
                ? new ObjectParameter("Original_Description_Tuesday", original_Description_Tuesday)
                : new ObjectParameter("Original_Description_Tuesday", typeof(string));

            var original_FromTime_TuesdayParameter = original_FromTime_Tuesday.HasValue
                ? new ObjectParameter("Original_FromTime_Tuesday", original_FromTime_Tuesday)
                : new ObjectParameter("Original_FromTime_Tuesday", typeof(System.DateTime));

            var original_GUID_TuesdayParameter = original_GUID_Tuesday.HasValue
                ? new ObjectParameter("Original_GUID_Tuesday", original_GUID_Tuesday)
                : new ObjectParameter("Original_GUID_Tuesday", typeof(System.Guid));

            var original_Quantity_TuesdayParameter = original_Quantity_Tuesday.HasValue
                ? new ObjectParameter("Original_Quantity_Tuesday", original_Quantity_Tuesday)
                : new ObjectParameter("Original_Quantity_Tuesday", typeof(double));

            var original_ToTime_TuesdayParameter = original_ToTime_Tuesday.HasValue
                ? new ObjectParameter("Original_ToTime_Tuesday", original_ToTime_Tuesday)
                : new ObjectParameter("Original_ToTime_Tuesday", typeof(System.DateTime));

            var original_Description_WednesdayParameter = original_Description_Wednesday != null
                ? new ObjectParameter("Original_Description_Wednesday", original_Description_Wednesday)
                : new ObjectParameter("Original_Description_Wednesday", typeof(string));

            var original_FromTime_WednesdayParameter = original_FromTime_Wednesday.HasValue
                ? new ObjectParameter("Original_FromTime_Wednesday", original_FromTime_Wednesday)
                : new ObjectParameter("Original_FromTime_Wednesday", typeof(System.DateTime));

            var original_GUID_WednesdayParameter = original_GUID_Wednesday.HasValue
                ? new ObjectParameter("Original_GUID_Wednesday", original_GUID_Wednesday)
                : new ObjectParameter("Original_GUID_Wednesday", typeof(System.Guid));

            var original_Quantity_WednesdayParameter = original_Quantity_Wednesday.HasValue
                ? new ObjectParameter("Original_Quantity_Wednesday", original_Quantity_Wednesday)
                : new ObjectParameter("Original_Quantity_Wednesday", typeof(double));

            var original_ToTime_WednesdayParameter = original_ToTime_Wednesday.HasValue
                ? new ObjectParameter("Original_ToTime_Wednesday", original_ToTime_Wednesday)
                : new ObjectParameter("Original_ToTime_Wednesday", typeof(System.DateTime));

            var original_Description_ThursdayParameter = original_Description_Thursday != null
                ? new ObjectParameter("Original_Description_Thursday", original_Description_Thursday)
                : new ObjectParameter("Original_Description_Thursday", typeof(string));

            var original_FromTime_ThursdayParameter = original_FromTime_Thursday.HasValue
                ? new ObjectParameter("Original_FromTime_Thursday", original_FromTime_Thursday)
                : new ObjectParameter("Original_FromTime_Thursday", typeof(System.DateTime));

            var original_GUID_ThursdayParameter = original_GUID_Thursday.HasValue
                ? new ObjectParameter("Original_GUID_Thursday", original_GUID_Thursday)
                : new ObjectParameter("Original_GUID_Thursday", typeof(System.Guid));

            var original_Quantity_ThursdayParameter = original_Quantity_Thursday.HasValue
                ? new ObjectParameter("Original_Quantity_Thursday", original_Quantity_Thursday)
                : new ObjectParameter("Original_Quantity_Thursday", typeof(double));

            var original_ToTime_ThursdayParameter = original_ToTime_Thursday.HasValue
                ? new ObjectParameter("Original_ToTime_Thursday", original_ToTime_Thursday)
                : new ObjectParameter("Original_ToTime_Thursday", typeof(System.DateTime));

            var original_Description_FridayParameter = original_Description_Friday != null
                ? new ObjectParameter("Original_Description_Friday", original_Description_Friday)
                : new ObjectParameter("Original_Description_Friday", typeof(string));

            var original_FromTime_FridayParameter = original_FromTime_Friday.HasValue
                ? new ObjectParameter("Original_FromTime_Friday", original_FromTime_Friday)
                : new ObjectParameter("Original_FromTime_Friday", typeof(System.DateTime));

            var original_GUID_FridayParameter = original_GUID_Friday.HasValue
                ? new ObjectParameter("Original_GUID_Friday", original_GUID_Friday)
                : new ObjectParameter("Original_GUID_Friday", typeof(System.Guid));

            var original_Quantity_FridayParameter = original_Quantity_Friday.HasValue
                ? new ObjectParameter("Original_Quantity_Friday", original_Quantity_Friday)
                : new ObjectParameter("Original_Quantity_Friday", typeof(double));

            var original_ToTime_FridayParameter = original_ToTime_Friday.HasValue
                ? new ObjectParameter("Original_ToTime_Friday", original_ToTime_Friday)
                : new ObjectParameter("Original_ToTime_Friday", typeof(System.DateTime));

            var original_Description_SaturdayParameter = original_Description_Saturday != null
                ? new ObjectParameter("Original_Description_Saturday", original_Description_Saturday)
                : new ObjectParameter("Original_Description_Saturday", typeof(string));

            var original_FromTime_SaturdayParameter = original_FromTime_Saturday.HasValue
                ? new ObjectParameter("Original_FromTime_Saturday", original_FromTime_Saturday)
                : new ObjectParameter("Original_FromTime_Saturday", typeof(System.DateTime));

            var original_GUID_SaturdayParameter = original_GUID_Saturday.HasValue
                ? new ObjectParameter("Original_GUID_Saturday", original_GUID_Saturday)
                : new ObjectParameter("Original_GUID_Saturday", typeof(System.Guid));

            var original_Quantity_SaturdayParameter = original_Quantity_Saturday.HasValue
                ? new ObjectParameter("Original_Quantity_Saturday", original_Quantity_Saturday)
                : new ObjectParameter("Original_Quantity_Saturday", typeof(double));

            var original_ToTime_SaturdayParameter = original_ToTime_Saturday.HasValue
                ? new ObjectParameter("Original_ToTime_Saturday", original_ToTime_Saturday)
                : new ObjectParameter("Original_ToTime_Saturday", typeof(System.DateTime));

            var original_Description_SundayParameter = original_Description_Sunday != null
                ? new ObjectParameter("Original_Description_Sunday", original_Description_Sunday)
                : new ObjectParameter("Original_Description_Sunday", typeof(string));

            var original_FromTime_SundayParameter = original_FromTime_Sunday.HasValue
                ? new ObjectParameter("Original_FromTime_Sunday", original_FromTime_Sunday)
                : new ObjectParameter("Original_FromTime_Sunday", typeof(System.DateTime));

            var original_GUID_SundayParameter = original_GUID_Sunday.HasValue
                ? new ObjectParameter("Original_GUID_Sunday", original_GUID_Sunday)
                : new ObjectParameter("Original_GUID_Sunday", typeof(System.Guid));

            var original_Quantity_SundayParameter = original_Quantity_Sunday.HasValue
                ? new ObjectParameter("Original_Quantity_Sunday", original_Quantity_Sunday)
                : new ObjectParameter("Original_Quantity_Sunday", typeof(double));

            var original_ToTime_SundayParameter = original_ToTime_Sunday.HasValue
                ? new ObjectParameter("Original_ToTime_Sunday", original_ToTime_Sunday)
                : new ObjectParameter("Original_ToTime_Sunday", typeof(System.DateTime));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeHeaderLine_Update",
                costCenter, department, employee, project, purpose, startDate, description_Monday, fromTime_Monday,
                quantity_Monday, toTime_Monday, description_Tuesday, fromTime_Tuesday, quantity_Tuesday, toTime_Tuesday,
                description_Wednesday, fromTime_Wednesday, quantity_Wednesday, toTime_Wednesday, description_Thursday,
                fromTime_Thursday, quantity_Thursday, toTime_Thursday, description_Friday, fromTime_Friday,
                quantity_Friday, toTime_Friday, description_Saturday, fromTime_Saturday, quantity_Saturday,
                toTime_Saturday, description_Sunday, fromTime_Sunday, quantity_Sunday, toTime_Sunday,
                original_CostCenterParameter, original_DepartmentParameter, original_EmployeeParameter,
                original_ProjectParameter, original_PurposeParameter, original_StartDateParameter,
                original_Description_MondayParameter, original_FromTime_MondayParameter, original_GUID_MondayParameter,
                original_Quantity_MondayParameter, original_ToTime_MondayParameter,
                original_Description_TuesdayParameter, original_FromTime_TuesdayParameter,
                original_GUID_TuesdayParameter, original_Quantity_TuesdayParameter, original_ToTime_TuesdayParameter,
                original_Description_WednesdayParameter, original_FromTime_WednesdayParameter,
                original_GUID_WednesdayParameter, original_Quantity_WednesdayParameter,
                original_ToTime_WednesdayParameter, original_Description_ThursdayParameter,
                original_FromTime_ThursdayParameter, original_GUID_ThursdayParameter,
                original_Quantity_ThursdayParameter, original_ToTime_ThursdayParameter,
                original_Description_FridayParameter, original_FromTime_FridayParameter, original_GUID_FridayParameter,
                original_Quantity_FridayParameter, original_ToTime_FridayParameter,
                original_Description_SaturdayParameter, original_FromTime_SaturdayParameter,
                original_GUID_SaturdayParameter, original_Quantity_SaturdayParameter, original_ToTime_SaturdayParameter,
                original_Description_SundayParameter, original_FromTime_SundayParameter, original_GUID_SundayParameter,
                original_Quantity_SundayParameter, original_ToTime_SundayParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeItems_AddNew(ObjectParameter description, Nullable<System.Guid> gUID_TimeLine,
            ObjectParameter invoiceAble, ObjectParameter item, ObjectParameter quantity, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var gUID_TimeLineParameter = gUID_TimeLine.HasValue
                ? new ObjectParameter("GUID_TimeLine", gUID_TimeLine)
                : new ObjectParameter("GUID_TimeLine", typeof(System.Guid));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeItems_AddNew",
                description, gUID_TimeLineParameter, invoiceAble, item, quantity, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_TimeItems_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeItems_Delete",
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeItems_Update(ObjectParameter description, ObjectParameter invoiceAble,
            ObjectParameter item, ObjectParameter quantity, string original_Description,
            Nullable<bool> original_InvoiceAble, string original_Item, Nullable<double> original_Quantity,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_InvoiceAbleParameter = original_InvoiceAble.HasValue
                ? new ObjectParameter("Original_InvoiceAble", original_InvoiceAble)
                : new ObjectParameter("Original_InvoiceAble", typeof(bool));

            var original_ItemParameter = original_Item != null
                ? new ObjectParameter("Original_Item", original_Item)
                : new ObjectParameter("Original_Item", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeItems_Update",
                description, invoiceAble, item, quantity, original_DescriptionParameter, original_InvoiceAbleParameter,
                original_ItemParameter, original_QuantityParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_TimeLine_AddNew(ObjectParameter description, ObjectParameter fromTime,
            Nullable<System.Guid> gUID_TimeHeaderLine, ObjectParameter quantity, ObjectParameter toTime,
            Nullable<byte> weekDay, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUID_TimeHeaderLineParameter = gUID_TimeHeaderLine.HasValue
                ? new ObjectParameter("GUID_TimeHeaderLine", gUID_TimeHeaderLine)
                : new ObjectParameter("GUID_TimeHeaderLine", typeof(System.Guid));

            var weekDayParameter = weekDay.HasValue
                ? new ObjectParameter("WeekDay", weekDay)
                : new ObjectParameter("WeekDay", typeof(byte));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeLine_AddNew",
                description, fromTime, gUID_TimeHeaderLineParameter, quantity, toTime, weekDayParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeLine_Delete(Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeLine_Delete",
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TimeLine_Update(ObjectParameter description, ObjectParameter fromTime,
            ObjectParameter quantity, ObjectParameter toTime, string original_Description,
            Nullable<System.DateTime> original_FromTime, Nullable<double> original_Quantity,
            Nullable<System.DateTime> original_ToTime, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_FromTimeParameter = original_FromTime.HasValue
                ? new ObjectParameter("Original_FromTime", original_FromTime)
                : new ObjectParameter("Original_FromTime", typeof(System.DateTime));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_ToTimeParameter = original_ToTime.HasValue
                ? new ObjectParameter("Original_ToTime", original_ToTime)
                : new ObjectParameter("Original_ToTime", typeof(System.DateTime));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TimeLine_Update",
                description, fromTime, quantity, toTime, original_DescriptionParameter, original_FromTimeParameter,
                original_QuantityParameter, original_ToTimeParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Titles_AddNew(string title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var titleParameter = title != null
                ? new ObjectParameter("Title", title)
                : new ObjectParameter("Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Titles_AddNew",
                titleParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Titles_Delete(string original_Title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Titles_Delete",
                original_TitleParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Titles_Update(string original_Title, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_TitleParameter = original_Title != null
                ? new ObjectParameter("Original_Title", original_Title)
                : new ObjectParameter("Original_Title", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Titles_Update",
                original_TitleParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Transactions_AddNew(string account, Nullable<double> amount,
            Nullable<double> amountBase, Nullable<short> approved, string betalingsID,
            Nullable<double> cashDiscountAmount, Nullable<System.DateTime> cashDiscountDue, Nullable<short> closed,
            Nullable<byte> code, string costCenter, string currency, string customer, Nullable<System.DateTime> date,
            string department, string description, Nullable<System.DateTime> due, string dutyCode, string employee,
            Nullable<byte> info, Nullable<short> interestCarrier, string invoiceNo, string kortArt,
            Nullable<double> open, Nullable<double> openBase, Nullable<short> opening, string optional1,
            string optional2, Nullable<System.DateTime> originalDue, string project, string purpose,
            Nullable<double> quantity, Nullable<double> rate, string remarks, string setOff, string shipTo,
            string source, string supplier, string tax, Nullable<double> taxAmount, Nullable<double> trail,
            Nullable<bool> useCashDiscount, string voucher, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var amountBaseParameter = amountBase.HasValue
                ? new ObjectParameter("AmountBase", amountBase)
                : new ObjectParameter("AmountBase", typeof(double));

            var approvedParameter = approved.HasValue
                ? new ObjectParameter("Approved", approved)
                : new ObjectParameter("Approved", typeof(short));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var cashDiscountDueParameter = cashDiscountDue.HasValue
                ? new ObjectParameter("CashDiscountDue", cashDiscountDue)
                : new ObjectParameter("CashDiscountDue", typeof(System.DateTime));

            var closedParameter = closed.HasValue
                ? new ObjectParameter("Closed", closed)
                : new ObjectParameter("Closed", typeof(short));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var dutyCodeParameter = dutyCode != null
                ? new ObjectParameter("DutyCode", dutyCode)
                : new ObjectParameter("DutyCode", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(byte));

            var interestCarrierParameter = interestCarrier.HasValue
                ? new ObjectParameter("InterestCarrier", interestCarrier)
                : new ObjectParameter("InterestCarrier", typeof(short));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var openParameter = open.HasValue
                ? new ObjectParameter("Open", open)
                : new ObjectParameter("Open", typeof(double));

            var openBaseParameter = openBase.HasValue
                ? new ObjectParameter("OpenBase", openBase)
                : new ObjectParameter("OpenBase", typeof(double));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var originalDueParameter = originalDue.HasValue
                ? new ObjectParameter("OriginalDue", originalDue)
                : new ObjectParameter("OriginalDue", typeof(System.DateTime));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxAmountParameter = taxAmount.HasValue
                ? new ObjectParameter("TaxAmount", taxAmount)
                : new ObjectParameter("TaxAmount", typeof(double));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var useCashDiscountParameter = useCashDiscount.HasValue
                ? new ObjectParameter("UseCashDiscount", useCashDiscount)
                : new ObjectParameter("UseCashDiscount", typeof(bool));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Transactions_AddNew",
                accountParameter, amountParameter, amountBaseParameter, approvedParameter, betalingsIDParameter,
                cashDiscountAmountParameter, cashDiscountDueParameter, closedParameter, codeParameter,
                costCenterParameter, currencyParameter, customerParameter, dateParameter, departmentParameter,
                descriptionParameter, dueParameter, dutyCodeParameter, employeeParameter, infoParameter,
                interestCarrierParameter, invoiceNoParameter, kortArtParameter, openParameter, openBaseParameter,
                openingParameter, optional1Parameter, optional2Parameter, originalDueParameter, projectParameter,
                purposeParameter, quantityParameter, rateParameter, remarksParameter, setOffParameter, shipToParameter,
                sourceParameter, supplierParameter, taxParameter, taxAmountParameter, trailParameter,
                useCashDiscountParameter, voucherParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_Transactions_Delete(string original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID != null
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Transactions_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Transactions_Update(string account, Nullable<double> amount,
            Nullable<double> amountBase, Nullable<short> approved, string betalingsID,
            Nullable<double> cashDiscountAmount, Nullable<System.DateTime> cashDiscountDue, Nullable<short> closed,
            Nullable<byte> code, string costCenter, string currency, string customer, Nullable<System.DateTime> date,
            string department, string description, Nullable<System.DateTime> due, string dutyCode, string employee,
            Nullable<bool> endorsed, Nullable<double> endorsedAmount, string endorsedBy,
            Nullable<System.DateTime> endorsedDate, Nullable<byte> info, Nullable<short> interestCarrier,
            string invoiceNo, string kortArt, Nullable<double> open, Nullable<double> openBase, Nullable<short> opening,
            string optional1, string optional2, Nullable<System.DateTime> originalDue, string project, string purpose,
            Nullable<double> quantity, Nullable<double> rate, string remarks, string setOff, string shipTo,
            string source, string supplier, string tax, Nullable<double> taxAmount, Nullable<double> trail,
            Nullable<bool> useCashDiscount, string voucher, string original_Account, Nullable<double> original_Amount,
            Nullable<double> original_AmountBase, Nullable<short> original_Approved, string original_BetalingsID,
            Nullable<double> original_CashDiscountAmount, Nullable<System.DateTime> original_CashDiscountDue,
            Nullable<short> original_Closed, Nullable<byte> original_Code, string original_CostCenter,
            string original_Currency, string original_Customer, Nullable<System.DateTime> original_Date,
            string original_Department, string original_Description, Nullable<System.DateTime> original_Due,
            string original_DutyCode, string original_Employee, Nullable<bool> original_Endorsed,
            Nullable<double> original_EndorsedAmount, string original_EndorsedBy,
            Nullable<System.DateTime> original_EndorsedDate, Nullable<byte> original_Info,
            Nullable<short> original_InterestCarrier, string original_InvoiceNo, string original_KortArt,
            Nullable<double> original_Open, Nullable<double> original_OpenBase, Nullable<short> original_Opening,
            string original_Optional1, string original_Optional2, Nullable<System.DateTime> original_OriginalDue,
            string original_Project, string original_Purpose, Nullable<double> original_Quantity,
            Nullable<double> original_Rate, Nullable<int> original_RecordId, string original_Remarks,
            string original_SetOff, string original_ShipTo, string original_Source, string original_Supplier,
            string original_Tax, Nullable<double> original_TaxAmount, Nullable<double> original_Trail,
            Nullable<bool> original_UseCashDiscount, string original_Voucher, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var accountParameter = account != null
                ? new ObjectParameter("Account", account)
                : new ObjectParameter("Account", typeof(string));

            var amountParameter = amount.HasValue
                ? new ObjectParameter("Amount", amount)
                : new ObjectParameter("Amount", typeof(double));

            var amountBaseParameter = amountBase.HasValue
                ? new ObjectParameter("AmountBase", amountBase)
                : new ObjectParameter("AmountBase", typeof(double));

            var approvedParameter = approved.HasValue
                ? new ObjectParameter("Approved", approved)
                : new ObjectParameter("Approved", typeof(short));

            var betalingsIDParameter = betalingsID != null
                ? new ObjectParameter("BetalingsID", betalingsID)
                : new ObjectParameter("BetalingsID", typeof(string));

            var cashDiscountAmountParameter = cashDiscountAmount.HasValue
                ? new ObjectParameter("CashDiscountAmount", cashDiscountAmount)
                : new ObjectParameter("CashDiscountAmount", typeof(double));

            var cashDiscountDueParameter = cashDiscountDue.HasValue
                ? new ObjectParameter("CashDiscountDue", cashDiscountDue)
                : new ObjectParameter("CashDiscountDue", typeof(System.DateTime));

            var closedParameter = closed.HasValue
                ? new ObjectParameter("Closed", closed)
                : new ObjectParameter("Closed", typeof(short));

            var codeParameter = code.HasValue
                ? new ObjectParameter("Code", code)
                : new ObjectParameter("Code", typeof(byte));

            var costCenterParameter = costCenter != null
                ? new ObjectParameter("CostCenter", costCenter)
                : new ObjectParameter("CostCenter", typeof(string));

            var currencyParameter = currency != null
                ? new ObjectParameter("Currency", currency)
                : new ObjectParameter("Currency", typeof(string));

            var customerParameter = customer != null
                ? new ObjectParameter("Customer", customer)
                : new ObjectParameter("Customer", typeof(string));

            var dateParameter = date.HasValue
                ? new ObjectParameter("Date", date)
                : new ObjectParameter("Date", typeof(System.DateTime));

            var departmentParameter = department != null
                ? new ObjectParameter("Department", department)
                : new ObjectParameter("Department", typeof(string));

            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var dueParameter = due.HasValue
                ? new ObjectParameter("Due", due)
                : new ObjectParameter("Due", typeof(System.DateTime));

            var dutyCodeParameter = dutyCode != null
                ? new ObjectParameter("DutyCode", dutyCode)
                : new ObjectParameter("DutyCode", typeof(string));

            var employeeParameter = employee != null
                ? new ObjectParameter("Employee", employee)
                : new ObjectParameter("Employee", typeof(string));

            var endorsedParameter = endorsed.HasValue
                ? new ObjectParameter("Endorsed", endorsed)
                : new ObjectParameter("Endorsed", typeof(bool));

            var endorsedAmountParameter = endorsedAmount.HasValue
                ? new ObjectParameter("EndorsedAmount", endorsedAmount)
                : new ObjectParameter("EndorsedAmount", typeof(double));

            var endorsedByParameter = endorsedBy != null
                ? new ObjectParameter("EndorsedBy", endorsedBy)
                : new ObjectParameter("EndorsedBy", typeof(string));

            var endorsedDateParameter = endorsedDate.HasValue
                ? new ObjectParameter("EndorsedDate", endorsedDate)
                : new ObjectParameter("EndorsedDate", typeof(System.DateTime));

            var infoParameter = info.HasValue
                ? new ObjectParameter("Info", info)
                : new ObjectParameter("Info", typeof(byte));

            var interestCarrierParameter = interestCarrier.HasValue
                ? new ObjectParameter("InterestCarrier", interestCarrier)
                : new ObjectParameter("InterestCarrier", typeof(short));

            var invoiceNoParameter = invoiceNo != null
                ? new ObjectParameter("InvoiceNo", invoiceNo)
                : new ObjectParameter("InvoiceNo", typeof(string));

            var kortArtParameter = kortArt != null
                ? new ObjectParameter("KortArt", kortArt)
                : new ObjectParameter("KortArt", typeof(string));

            var openParameter = open.HasValue
                ? new ObjectParameter("Open", open)
                : new ObjectParameter("Open", typeof(double));

            var openBaseParameter = openBase.HasValue
                ? new ObjectParameter("OpenBase", openBase)
                : new ObjectParameter("OpenBase", typeof(double));

            var openingParameter = opening.HasValue
                ? new ObjectParameter("Opening", opening)
                : new ObjectParameter("Opening", typeof(short));

            var optional1Parameter = optional1 != null
                ? new ObjectParameter("Optional1", optional1)
                : new ObjectParameter("Optional1", typeof(string));

            var optional2Parameter = optional2 != null
                ? new ObjectParameter("Optional2", optional2)
                : new ObjectParameter("Optional2", typeof(string));

            var originalDueParameter = originalDue.HasValue
                ? new ObjectParameter("OriginalDue", originalDue)
                : new ObjectParameter("OriginalDue", typeof(System.DateTime));

            var projectParameter = project != null
                ? new ObjectParameter("Project", project)
                : new ObjectParameter("Project", typeof(string));

            var purposeParameter = purpose != null
                ? new ObjectParameter("Purpose", purpose)
                : new ObjectParameter("Purpose", typeof(string));

            var quantityParameter = quantity.HasValue
                ? new ObjectParameter("Quantity", quantity)
                : new ObjectParameter("Quantity", typeof(double));

            var rateParameter = rate.HasValue
                ? new ObjectParameter("Rate", rate)
                : new ObjectParameter("Rate", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var setOffParameter = setOff != null
                ? new ObjectParameter("SetOff", setOff)
                : new ObjectParameter("SetOff", typeof(string));

            var shipToParameter = shipTo != null
                ? new ObjectParameter("ShipTo", shipTo)
                : new ObjectParameter("ShipTo", typeof(string));

            var sourceParameter = source != null
                ? new ObjectParameter("Source", source)
                : new ObjectParameter("Source", typeof(string));

            var supplierParameter = supplier != null
                ? new ObjectParameter("Supplier", supplier)
                : new ObjectParameter("Supplier", typeof(string));

            var taxParameter = tax != null
                ? new ObjectParameter("Tax", tax)
                : new ObjectParameter("Tax", typeof(string));

            var taxAmountParameter = taxAmount.HasValue
                ? new ObjectParameter("TaxAmount", taxAmount)
                : new ObjectParameter("TaxAmount", typeof(double));

            var trailParameter = trail.HasValue
                ? new ObjectParameter("Trail", trail)
                : new ObjectParameter("Trail", typeof(double));

            var useCashDiscountParameter = useCashDiscount.HasValue
                ? new ObjectParameter("UseCashDiscount", useCashDiscount)
                : new ObjectParameter("UseCashDiscount", typeof(bool));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountParameter = original_Amount.HasValue
                ? new ObjectParameter("Original_Amount", original_Amount)
                : new ObjectParameter("Original_Amount", typeof(double));

            var original_AmountBaseParameter = original_AmountBase.HasValue
                ? new ObjectParameter("Original_AmountBase", original_AmountBase)
                : new ObjectParameter("Original_AmountBase", typeof(double));

            var original_ApprovedParameter = original_Approved.HasValue
                ? new ObjectParameter("Original_Approved", original_Approved)
                : new ObjectParameter("Original_Approved", typeof(short));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_CashDiscountAmountParameter = original_CashDiscountAmount.HasValue
                ? new ObjectParameter("Original_CashDiscountAmount", original_CashDiscountAmount)
                : new ObjectParameter("Original_CashDiscountAmount", typeof(double));

            var original_CashDiscountDueParameter = original_CashDiscountDue.HasValue
                ? new ObjectParameter("Original_CashDiscountDue", original_CashDiscountDue)
                : new ObjectParameter("Original_CashDiscountDue", typeof(System.DateTime));

            var original_ClosedParameter = original_Closed.HasValue
                ? new ObjectParameter("Original_Closed", original_Closed)
                : new ObjectParameter("Original_Closed", typeof(short));

            var original_CodeParameter = original_Code.HasValue
                ? new ObjectParameter("Original_Code", original_Code)
                : new ObjectParameter("Original_Code", typeof(byte));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_DutyCodeParameter = original_DutyCode != null
                ? new ObjectParameter("Original_DutyCode", original_DutyCode)
                : new ObjectParameter("Original_DutyCode", typeof(string));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_EndorsedParameter = original_Endorsed.HasValue
                ? new ObjectParameter("Original_Endorsed", original_Endorsed)
                : new ObjectParameter("Original_Endorsed", typeof(bool));

            var original_EndorsedAmountParameter = original_EndorsedAmount.HasValue
                ? new ObjectParameter("Original_EndorsedAmount", original_EndorsedAmount)
                : new ObjectParameter("Original_EndorsedAmount", typeof(double));

            var original_EndorsedByParameter = original_EndorsedBy != null
                ? new ObjectParameter("Original_EndorsedBy", original_EndorsedBy)
                : new ObjectParameter("Original_EndorsedBy", typeof(string));

            var original_EndorsedDateParameter = original_EndorsedDate.HasValue
                ? new ObjectParameter("Original_EndorsedDate", original_EndorsedDate)
                : new ObjectParameter("Original_EndorsedDate", typeof(System.DateTime));

            var original_InfoParameter = original_Info.HasValue
                ? new ObjectParameter("Original_Info", original_Info)
                : new ObjectParameter("Original_Info", typeof(byte));

            var original_InterestCarrierParameter = original_InterestCarrier.HasValue
                ? new ObjectParameter("Original_InterestCarrier", original_InterestCarrier)
                : new ObjectParameter("Original_InterestCarrier", typeof(short));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_OpenParameter = original_Open.HasValue
                ? new ObjectParameter("Original_Open", original_Open)
                : new ObjectParameter("Original_Open", typeof(double));

            var original_OpenBaseParameter = original_OpenBase.HasValue
                ? new ObjectParameter("Original_OpenBase", original_OpenBase)
                : new ObjectParameter("Original_OpenBase", typeof(double));

            var original_OpeningParameter = original_Opening.HasValue
                ? new ObjectParameter("Original_Opening", original_Opening)
                : new ObjectParameter("Original_Opening", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_OriginalDueParameter = original_OriginalDue.HasValue
                ? new ObjectParameter("Original_OriginalDue", original_OriginalDue)
                : new ObjectParameter("Original_OriginalDue", typeof(System.DateTime));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_ShipToParameter = original_ShipTo != null
                ? new ObjectParameter("Original_ShipTo", original_ShipTo)
                : new ObjectParameter("Original_ShipTo", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_TaxAmountParameter = original_TaxAmount.HasValue
                ? new ObjectParameter("Original_TaxAmount", original_TaxAmount)
                : new ObjectParameter("Original_TaxAmount", typeof(double));

            var original_TrailParameter = original_Trail.HasValue
                ? new ObjectParameter("Original_Trail", original_Trail)
                : new ObjectParameter("Original_Trail", typeof(double));

            var original_UseCashDiscountParameter = original_UseCashDiscount.HasValue
                ? new ObjectParameter("Original_UseCashDiscount", original_UseCashDiscount)
                : new ObjectParameter("Original_UseCashDiscount", typeof(bool));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Transactions_Update",
                accountParameter, amountParameter, amountBaseParameter, approvedParameter, betalingsIDParameter,
                cashDiscountAmountParameter, cashDiscountDueParameter, closedParameter, codeParameter,
                costCenterParameter, currencyParameter, customerParameter, dateParameter, departmentParameter,
                descriptionParameter, dueParameter, dutyCodeParameter, employeeParameter, endorsedParameter,
                endorsedAmountParameter, endorsedByParameter, endorsedDateParameter, infoParameter,
                interestCarrierParameter, invoiceNoParameter, kortArtParameter, openParameter, openBaseParameter,
                openingParameter, optional1Parameter, optional2Parameter, originalDueParameter, projectParameter,
                purposeParameter, quantityParameter, rateParameter, remarksParameter, setOffParameter, shipToParameter,
                sourceParameter, supplierParameter, taxParameter, taxAmountParameter, trailParameter,
                useCashDiscountParameter, voucherParameter, original_AccountParameter, original_AmountParameter,
                original_AmountBaseParameter, original_ApprovedParameter, original_BetalingsIDParameter,
                original_CashDiscountAmountParameter, original_CashDiscountDueParameter, original_ClosedParameter,
                original_CodeParameter, original_CostCenterParameter, original_CurrencyParameter,
                original_CustomerParameter, original_DateParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DueParameter, original_DutyCodeParameter,
                original_EmployeeParameter, original_EndorsedParameter, original_EndorsedAmountParameter,
                original_EndorsedByParameter, original_EndorsedDateParameter, original_InfoParameter,
                original_InterestCarrierParameter, original_InvoiceNoParameter, original_KortArtParameter,
                original_OpenParameter, original_OpenBaseParameter, original_OpeningParameter,
                original_Optional1Parameter, original_Optional2Parameter, original_OriginalDueParameter,
                original_ProjectParameter, original_PurposeParameter, original_QuantityParameter, original_RateParameter,
                original_RecordIdParameter, original_RemarksParameter, original_SetOffParameter,
                original_ShipToParameter, original_SourceParameter, original_SupplierParameter, original_TaxParameter,
                original_TaxAmountParameter, original_TrailParameter, original_UseCashDiscountParameter,
                original_VoucherParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                current_useridParameter);
        }

        public virtual int Public_User_TransEntry_AddNew(ObjectParameter account, ObjectParameter amount,
            ObjectParameter betalingsID, ObjectParameter cashDiscountAmount, ObjectParameter code,
            ObjectParameter costCenter, ObjectParameter currency, ObjectParameter customer, ObjectParameter date,
            ObjectParameter department, ObjectParameter description, ObjectParameter due, ObjectParameter employee,
            ObjectParameter invoiceNo, ObjectParameter journal, ObjectParameter kortArt, ObjectParameter lineNo,
            ObjectParameter opening, ObjectParameter optional1, ObjectParameter optional2, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter quantity, ObjectParameter rate, ObjectParameter remarks,
            ObjectParameter setOff, ObjectParameter source, ObjectParameter supplier, ObjectParameter tax,
            ObjectParameter voucher, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TransEntry_AddNew", account,
                amount, betalingsID, cashDiscountAmount, code, costCenter, currency, customer, date, department,
                description, due, employee, invoiceNo, journal, kortArt, lineNo, opening, optional1, optional2, project,
                purpose, quantity, rate, remarks, setOff, source, supplier, tax, voucher, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TransEntry_Delete(Nullable<int> original_RecordID, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_RecordIDParameter = original_RecordID.HasValue
                ? new ObjectParameter("Original_RecordID", original_RecordID)
                : new ObjectParameter("Original_RecordID", typeof(int));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TransEntry_Delete",
                original_RecordIDParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_TransEntry_Update(ObjectParameter account, ObjectParameter amount,
            ObjectParameter betalingsID, ObjectParameter cashDiscountAmount, ObjectParameter code,
            ObjectParameter costCenter, ObjectParameter currency, ObjectParameter customer, ObjectParameter date,
            ObjectParameter department, ObjectParameter description, ObjectParameter due, ObjectParameter employee,
            ObjectParameter invoiceNo, ObjectParameter journal, ObjectParameter kortArt, ObjectParameter lineNo,
            ObjectParameter opening, ObjectParameter optional1, ObjectParameter optional2, ObjectParameter project,
            ObjectParameter purpose, ObjectParameter quantity, ObjectParameter rate, ObjectParameter remarks,
            ObjectParameter setOff, ObjectParameter source, ObjectParameter supplier, ObjectParameter tax,
            ObjectParameter voucher, string original_Account, Nullable<double> original_Amount,
            string original_BetalingsID, Nullable<double> original_CashDiscountAmount, Nullable<byte> original_Code,
            string original_CostCenter, string original_Currency, string original_Customer,
            Nullable<System.DateTime> original_Date, string original_Department, string original_Description,
            Nullable<System.DateTime> original_Due, string original_Employee, string original_InvoiceNo,
            string original_Journal, string original_KortArt, Nullable<short> original_LineNo,
            Nullable<short> original_Opening, string original_Optional1, string original_Optional2,
            string original_Project, string original_Purpose, Nullable<double> original_Quantity,
            Nullable<double> original_Rate, Nullable<int> original_RecordId, string original_Remarks,
            string original_SetOff, string original_Source, string original_Supplier, string original_Tax,
            string original_Voucher, Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var original_AccountParameter = original_Account != null
                ? new ObjectParameter("Original_Account", original_Account)
                : new ObjectParameter("Original_Account", typeof(string));

            var original_AmountParameter = original_Amount.HasValue
                ? new ObjectParameter("Original_Amount", original_Amount)
                : new ObjectParameter("Original_Amount", typeof(double));

            var original_BetalingsIDParameter = original_BetalingsID != null
                ? new ObjectParameter("Original_BetalingsID", original_BetalingsID)
                : new ObjectParameter("Original_BetalingsID", typeof(string));

            var original_CashDiscountAmountParameter = original_CashDiscountAmount.HasValue
                ? new ObjectParameter("Original_CashDiscountAmount", original_CashDiscountAmount)
                : new ObjectParameter("Original_CashDiscountAmount", typeof(double));

            var original_CodeParameter = original_Code.HasValue
                ? new ObjectParameter("Original_Code", original_Code)
                : new ObjectParameter("Original_Code", typeof(byte));

            var original_CostCenterParameter = original_CostCenter != null
                ? new ObjectParameter("Original_CostCenter", original_CostCenter)
                : new ObjectParameter("Original_CostCenter", typeof(string));

            var original_CurrencyParameter = original_Currency != null
                ? new ObjectParameter("Original_Currency", original_Currency)
                : new ObjectParameter("Original_Currency", typeof(string));

            var original_CustomerParameter = original_Customer != null
                ? new ObjectParameter("Original_Customer", original_Customer)
                : new ObjectParameter("Original_Customer", typeof(string));

            var original_DateParameter = original_Date.HasValue
                ? new ObjectParameter("Original_Date", original_Date)
                : new ObjectParameter("Original_Date", typeof(System.DateTime));

            var original_DepartmentParameter = original_Department != null
                ? new ObjectParameter("Original_Department", original_Department)
                : new ObjectParameter("Original_Department", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_DueParameter = original_Due.HasValue
                ? new ObjectParameter("Original_Due", original_Due)
                : new ObjectParameter("Original_Due", typeof(System.DateTime));

            var original_EmployeeParameter = original_Employee != null
                ? new ObjectParameter("Original_Employee", original_Employee)
                : new ObjectParameter("Original_Employee", typeof(string));

            var original_InvoiceNoParameter = original_InvoiceNo != null
                ? new ObjectParameter("Original_InvoiceNo", original_InvoiceNo)
                : new ObjectParameter("Original_InvoiceNo", typeof(string));

            var original_JournalParameter = original_Journal != null
                ? new ObjectParameter("Original_Journal", original_Journal)
                : new ObjectParameter("Original_Journal", typeof(string));

            var original_KortArtParameter = original_KortArt != null
                ? new ObjectParameter("Original_KortArt", original_KortArt)
                : new ObjectParameter("Original_KortArt", typeof(string));

            var original_LineNoParameter = original_LineNo.HasValue
                ? new ObjectParameter("Original_LineNo", original_LineNo)
                : new ObjectParameter("Original_LineNo", typeof(short));

            var original_OpeningParameter = original_Opening.HasValue
                ? new ObjectParameter("Original_Opening", original_Opening)
                : new ObjectParameter("Original_Opening", typeof(short));

            var original_Optional1Parameter = original_Optional1 != null
                ? new ObjectParameter("Original_Optional1", original_Optional1)
                : new ObjectParameter("Original_Optional1", typeof(string));

            var original_Optional2Parameter = original_Optional2 != null
                ? new ObjectParameter("Original_Optional2", original_Optional2)
                : new ObjectParameter("Original_Optional2", typeof(string));

            var original_ProjectParameter = original_Project != null
                ? new ObjectParameter("Original_Project", original_Project)
                : new ObjectParameter("Original_Project", typeof(string));

            var original_PurposeParameter = original_Purpose != null
                ? new ObjectParameter("Original_Purpose", original_Purpose)
                : new ObjectParameter("Original_Purpose", typeof(string));

            var original_QuantityParameter = original_Quantity.HasValue
                ? new ObjectParameter("Original_Quantity", original_Quantity)
                : new ObjectParameter("Original_Quantity", typeof(double));

            var original_RateParameter = original_Rate.HasValue
                ? new ObjectParameter("Original_Rate", original_Rate)
                : new ObjectParameter("Original_Rate", typeof(double));

            var original_RecordIdParameter = original_RecordId.HasValue
                ? new ObjectParameter("Original_RecordId", original_RecordId)
                : new ObjectParameter("Original_RecordId", typeof(int));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_SetOffParameter = original_SetOff != null
                ? new ObjectParameter("Original_SetOff", original_SetOff)
                : new ObjectParameter("Original_SetOff", typeof(string));

            var original_SourceParameter = original_Source != null
                ? new ObjectParameter("Original_Source", original_Source)
                : new ObjectParameter("Original_Source", typeof(string));

            var original_SupplierParameter = original_Supplier != null
                ? new ObjectParameter("Original_Supplier", original_Supplier)
                : new ObjectParameter("Original_Supplier", typeof(string));

            var original_TaxParameter = original_Tax != null
                ? new ObjectParameter("Original_Tax", original_Tax)
                : new ObjectParameter("Original_Tax", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_TransEntry_Update", account,
                amount, betalingsID, cashDiscountAmount, code, costCenter, currency, customer, date, department,
                description, due, employee, invoiceNo, journal, kortArt, lineNo, opening, optional1, optional2, project,
                purpose, quantity, rate, remarks, setOff, source, supplier, tax, voucher, original_AccountParameter,
                original_AmountParameter, original_BetalingsIDParameter, original_CashDiscountAmountParameter,
                original_CodeParameter, original_CostCenterParameter, original_CurrencyParameter,
                original_CustomerParameter, original_DateParameter, original_DepartmentParameter,
                original_DescriptionParameter, original_DueParameter, original_EmployeeParameter,
                original_InvoiceNoParameter, original_JournalParameter, original_KortArtParameter,
                original_LineNoParameter, original_OpeningParameter, original_Optional1Parameter,
                original_Optional2Parameter, original_ProjectParameter, original_PurposeParameter,
                original_QuantityParameter, original_RateParameter, original_RecordIdParameter,
                original_RemarksParameter, original_SetOffParameter, original_SourceParameter,
                original_SupplierParameter, original_TaxParameter, original_VoucherParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Unit_AddNew(string baseUnit, Nullable<double> conversion, string name,
            string remarks, string unit, string standard_Unit, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var baseUnitParameter = baseUnit != null
                ? new ObjectParameter("BaseUnit", baseUnit)
                : new ObjectParameter("BaseUnit", typeof(string));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var unitParameter = unit != null
                ? new ObjectParameter("Unit", unit)
                : new ObjectParameter("Unit", typeof(string));

            var standard_UnitParameter = standard_Unit != null
                ? new ObjectParameter("Standard_Unit", standard_Unit)
                : new ObjectParameter("Standard_Unit", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Unit_AddNew",
                baseUnitParameter, conversionParameter, nameParameter, remarksParameter, unitParameter,
                standard_UnitParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Unit_Delete(string original_Unit, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Unit_Delete",
                original_UnitParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Unit_Update(string baseUnit, Nullable<double> conversion, string name,
            string remarks, string original_BaseUnit, Nullable<double> original_Conversion, string original_Name,
            string original_Remarks, string original_Unit, Nullable<bool> returnNoRows, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var baseUnitParameter = baseUnit != null
                ? new ObjectParameter("BaseUnit", baseUnit)
                : new ObjectParameter("BaseUnit", typeof(string));

            var conversionParameter = conversion.HasValue
                ? new ObjectParameter("Conversion", conversion)
                : new ObjectParameter("Conversion", typeof(double));

            var nameParameter = name != null
                ? new ObjectParameter("Name", name)
                : new ObjectParameter("Name", typeof(string));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_BaseUnitParameter = original_BaseUnit != null
                ? new ObjectParameter("Original_BaseUnit", original_BaseUnit)
                : new ObjectParameter("Original_BaseUnit", typeof(string));

            var original_ConversionParameter = original_Conversion.HasValue
                ? new ObjectParameter("Original_Conversion", original_Conversion)
                : new ObjectParameter("Original_Conversion", typeof(double));

            var original_NameParameter = original_Name != null
                ? new ObjectParameter("Original_Name", original_Name)
                : new ObjectParameter("Original_Name", typeof(string));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_UnitParameter = original_Unit != null
                ? new ObjectParameter("Original_Unit", original_Unit)
                : new ObjectParameter("Original_Unit", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Unit_Update",
                baseUnitParameter, conversionParameter, nameParameter, remarksParameter, original_BaseUnitParameter,
                original_ConversionParameter, original_NameParameter, original_RemarksParameter, original_UnitParameter,
                returnNoRowsParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Voucher_AddNew(ObjectParameter description, ObjectParameter maximum,
            ObjectParameter minimum, ObjectParameter next, ObjectParameter remarks, ObjectParameter voucher,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Voucher_AddNew",
                description, maximum, minimum, next, remarks, voucher, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Voucher_Delete(string original_Voucher, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Voucher_Delete",
                original_VoucherParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_User_Voucher_Update(ObjectParameter description, ObjectParameter maximum,
            ObjectParameter minimum, ObjectParameter next, ObjectParameter remarks, string original_Description,
            Nullable<double> original_Maximum, Nullable<double> original_Minimum, Nullable<double> original_Next,
            string original_Remarks, string original_Voucher, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_MaximumParameter = original_Maximum.HasValue
                ? new ObjectParameter("Original_Maximum", original_Maximum)
                : new ObjectParameter("Original_Maximum", typeof(double));

            var original_MinimumParameter = original_Minimum.HasValue
                ? new ObjectParameter("Original_Minimum", original_Minimum)
                : new ObjectParameter("Original_Minimum", typeof(double));

            var original_NextParameter = original_Next.HasValue
                ? new ObjectParameter("Original_Next", original_Next)
                : new ObjectParameter("Original_Next", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_User_Voucher_Update",
                description, maximum, minimum, next, remarks, original_DescriptionParameter, original_MaximumParameter,
                original_MinimumParameter, original_NextParameter, original_RemarksParameter, original_VoucherParameter,
                gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Voucher_AddNew(string description, Nullable<double> maximum, Nullable<double> minimum,
            Nullable<double> next, string remarks, string voucher, string standard_Voucher, Nullable<bool> returnNoRows,
            Nullable<System.Guid> gUID, Nullable<short> text_language, string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var maximumParameter = maximum.HasValue
                ? new ObjectParameter("Maximum", maximum)
                : new ObjectParameter("Maximum", typeof(double));

            var minimumParameter = minimum.HasValue
                ? new ObjectParameter("Minimum", minimum)
                : new ObjectParameter("Minimum", typeof(double));

            var nextParameter = next.HasValue
                ? new ObjectParameter("Next", next)
                : new ObjectParameter("Next", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var voucherParameter = voucher != null
                ? new ObjectParameter("Voucher", voucher)
                : new ObjectParameter("Voucher", typeof(string));

            var standard_VoucherParameter = standard_Voucher != null
                ? new ObjectParameter("Standard_Voucher", standard_Voucher)
                : new ObjectParameter("Standard_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Voucher_AddNew",
                descriptionParameter, maximumParameter, minimumParameter, nextParameter, remarksParameter,
                voucherParameter, standard_VoucherParameter, returnNoRowsParameter, gUIDParameter,
                text_languageParameter, current_useridParameter);
        }

        public virtual int Public_Voucher_Delete(string original_Voucher, Nullable<System.Guid> gUID,
            Nullable<short> text_language, string current_userid)
        {
            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("Public_Voucher_Delete",
                original_VoucherParameter, gUIDParameter, text_languageParameter, current_useridParameter);
        }

        public virtual ObjectResult<Public_Voucher_Select_All_Result> Public_Voucher_Select_All()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Voucher_Select_All_Result>(
                    "Public_Voucher_Select_All");
        }

        public virtual ObjectResult<Public_Voucher_Select_Single_Result> Public_Voucher_Select_Single(
            string original_Voucher, Nullable<System.Guid> gUID)
        {
            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Voucher_Select_Single_Result>(
                    "Public_Voucher_Select_Single", original_VoucherParameter, gUIDParameter);
        }

        public virtual ObjectResult<Public_Voucher_Update_Result> Public_Voucher_Update(string description,
            Nullable<double> maximum, Nullable<double> minimum, Nullable<double> next, string remarks,
            string original_Description, Nullable<double> original_Maximum, Nullable<double> original_Minimum,
            Nullable<double> original_Next, string original_Remarks, string original_Voucher,
            Nullable<bool> returnNoRows, Nullable<System.Guid> gUID, Nullable<short> text_language,
            string current_userid)
        {
            var descriptionParameter = description != null
                ? new ObjectParameter("Description", description)
                : new ObjectParameter("Description", typeof(string));

            var maximumParameter = maximum.HasValue
                ? new ObjectParameter("Maximum", maximum)
                : new ObjectParameter("Maximum", typeof(double));

            var minimumParameter = minimum.HasValue
                ? new ObjectParameter("Minimum", minimum)
                : new ObjectParameter("Minimum", typeof(double));

            var nextParameter = next.HasValue
                ? new ObjectParameter("Next", next)
                : new ObjectParameter("Next", typeof(double));

            var remarksParameter = remarks != null
                ? new ObjectParameter("Remarks", remarks)
                : new ObjectParameter("Remarks", typeof(string));

            var original_DescriptionParameter = original_Description != null
                ? new ObjectParameter("Original_Description", original_Description)
                : new ObjectParameter("Original_Description", typeof(string));

            var original_MaximumParameter = original_Maximum.HasValue
                ? new ObjectParameter("Original_Maximum", original_Maximum)
                : new ObjectParameter("Original_Maximum", typeof(double));

            var original_MinimumParameter = original_Minimum.HasValue
                ? new ObjectParameter("Original_Minimum", original_Minimum)
                : new ObjectParameter("Original_Minimum", typeof(double));

            var original_NextParameter = original_Next.HasValue
                ? new ObjectParameter("Original_Next", original_Next)
                : new ObjectParameter("Original_Next", typeof(double));

            var original_RemarksParameter = original_Remarks != null
                ? new ObjectParameter("Original_Remarks", original_Remarks)
                : new ObjectParameter("Original_Remarks", typeof(string));

            var original_VoucherParameter = original_Voucher != null
                ? new ObjectParameter("Original_Voucher", original_Voucher)
                : new ObjectParameter("Original_Voucher", typeof(string));

            var returnNoRowsParameter = returnNoRows.HasValue
                ? new ObjectParameter("ReturnNoRows", returnNoRows)
                : new ObjectParameter("ReturnNoRows", typeof(bool));

            var gUIDParameter = gUID.HasValue
                ? new ObjectParameter("GUID", gUID)
                : new ObjectParameter("GUID", typeof(System.Guid));

            var text_languageParameter = text_language.HasValue
                ? new ObjectParameter("text_language", text_language)
                : new ObjectParameter("text_language", typeof(short));

            var current_useridParameter = current_userid != null
                ? new ObjectParameter("current_userid", current_userid)
                : new ObjectParameter("current_userid", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Public_Voucher_Update_Result>(
                    "Public_Voucher_Update", descriptionParameter, maximumParameter, minimumParameter, nextParameter,
                    remarksParameter, original_DescriptionParameter, original_MaximumParameter,
                    original_MinimumParameter, original_NextParameter, original_RemarksParameter,
                    original_VoucherParameter, returnNoRowsParameter, gUIDParameter, text_languageParameter,
                    current_useridParameter);
        }

        public virtual int sp_Kompas_AccountsFetchNext(string param_Account, ObjectParameter param_NewAccount)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_AccountsFetchNext",
                param_AccountParameter, param_NewAccount);
        }

        public virtual int sp_Kompas_AccountsFetchPrevious(string param_Account, ObjectParameter param_NewAccount)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_AccountsFetchPrevious",
                param_AccountParameter, param_NewAccount);
        }

        public virtual ObjectResult<sp_Kompas_AccountsMayDelete_Result> sp_Kompas_AccountsMayDelete(
            string param_Account, Nullable<bool> param_FullVersion)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_FullVersionParameter = param_FullVersion.HasValue
                ? new ObjectParameter("Param_FullVersion", param_FullVersion)
                : new ObjectParameter("Param_FullVersion", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_AccountsMayDelete_Result>(
                    "sp_Kompas_AccountsMayDelete", param_AccountParameter, param_FullVersionParameter);
        }

        public virtual ObjectResult<sp_Kompas_AccountsUpdateBlockingInfo_Result> sp_Kompas_AccountsUpdateBlockingInfo(
            string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_AccountsUpdateBlockingInfo_Result>(
                        "sp_Kompas_AccountsUpdateBlockingInfo", param_AccountParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_AccountsUpdateFuncGetDistributionCount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_AccountsUpdateFuncGetDistributionCount", param_AccountParameter);
        }

        public virtual ObjectResult<sp_Kompas_AccountsUpdateSysInfoGetGroupings_Result>
            sp_Kompas_AccountsUpdateSysInfoGetGroupings(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_AccountsUpdateSysInfoGetGroupings_Result>(
                        "sp_Kompas_AccountsUpdateSysInfoGetGroupings", param_AccountParameter);
        }

        public virtual ObjectResult<string> sp_Kompas_AccountsUpdateSysInfoGetSystemAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>(
                    "sp_Kompas_AccountsUpdateSysInfoGetSystemAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_AddToOrderLog(Nullable<int> param_RecordID, string param_NewLogValue)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_NewLogValueParameter = param_NewLogValue != null
                ? new ObjectParameter("Param_NewLogValue", param_NewLogValue)
                : new ObjectParameter("Param_NewLogValue", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_AddToOrderLog",
                param_RecordIDParameter, param_NewLogValueParameter);
        }

        public virtual int sp_Kompas_AddToPurchaseLog(Nullable<int> param_RecordID, string param_NewLogValue)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_NewLogValueParameter = param_NewLogValue != null
                ? new ObjectParameter("Param_NewLogValue", param_NewLogValue)
                : new ObjectParameter("Param_NewLogValue", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_AddToPurchaseLog",
                param_RecordIDParameter, param_NewLogValueParameter);
        }

        public virtual ObjectResult<sp_Kompas_BalanceAgeingAllCustomersSuppliers_Result>
            sp_Kompas_BalanceAgeingAllCustomersSuppliers(string param_Groupfrom, string param_GroupTo,
                string param_CurrencyFrom, string param_CurrencyTo, Nullable<System.DateTime> param_ByDate,
                Nullable<bool> param_UseOpenItem, Nullable<bool> param_UseDueDate, Nullable<bool> param_NoZeroBalance,
                Nullable<bool> param_BalanceByCurrency, Nullable<bool> param_Customers)
        {
            var param_GroupfromParameter = param_Groupfrom != null
                ? new ObjectParameter("Param_Groupfrom", param_Groupfrom)
                : new ObjectParameter("Param_Groupfrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_CurrencyFromParameter = param_CurrencyFrom != null
                ? new ObjectParameter("Param_CurrencyFrom", param_CurrencyFrom)
                : new ObjectParameter("Param_CurrencyFrom", typeof(string));

            var param_CurrencyToParameter = param_CurrencyTo != null
                ? new ObjectParameter("Param_CurrencyTo", param_CurrencyTo)
                : new ObjectParameter("Param_CurrencyTo", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_NoZeroBalanceParameter = param_NoZeroBalance.HasValue
                ? new ObjectParameter("Param_NoZeroBalance", param_NoZeroBalance)
                : new ObjectParameter("Param_NoZeroBalance", typeof(bool));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_CustomersParameter = param_Customers.HasValue
                ? new ObjectParameter("Param_Customers", param_Customers)
                : new ObjectParameter("Param_Customers", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_BalanceAgeingAllCustomersSuppliers_Result>(
                        "sp_Kompas_BalanceAgeingAllCustomersSuppliers", param_GroupfromParameter, param_GroupToParameter,
                        param_CurrencyFromParameter, param_CurrencyToParameter, param_ByDateParameter,
                        param_UseOpenItemParameter, param_UseDueDateParameter, param_NoZeroBalanceParameter,
                        param_BalanceByCurrencyParameter, param_CustomersParameter);
        }

        public virtual ObjectResult<sp_Kompas_BalanceAgeingSingleCustomersSuppliers_Result>
            sp_Kompas_BalanceAgeingSingleCustomersSuppliers(string param_ID, Nullable<System.DateTime> param_ByDate,
                Nullable<bool> param_UseOpenItem, Nullable<bool> param_UseDueDate,
                Nullable<bool> param_BalanceByCurrency, Nullable<bool> param_Customers)
        {
            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            var param_BalanceByCurrencyParameter = param_BalanceByCurrency.HasValue
                ? new ObjectParameter("Param_BalanceByCurrency", param_BalanceByCurrency)
                : new ObjectParameter("Param_BalanceByCurrency", typeof(bool));

            var param_CustomersParameter = param_Customers.HasValue
                ? new ObjectParameter("Param_Customers", param_Customers)
                : new ObjectParameter("Param_Customers", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_BalanceAgeingSingleCustomersSuppliers_Result>(
                        "sp_Kompas_BalanceAgeingSingleCustomersSuppliers", param_IDParameter, param_ByDateParameter,
                        param_UseOpenItemParameter, param_UseDueDateParameter, param_BalanceByCurrencyParameter,
                        param_CustomersParameter);
        }

        public virtual ObjectResult<sp_Kompas_BatchCusSupStatements_SetupStatements_Result>
            sp_Kompas_BatchCusSupStatements_SetupStatements(string param_FromID, string param_ToID,
                string param_FromGrouping, string param_ToGrouping, Nullable<bool> param_WithBalance,
                string param_OrderByField, Nullable<System.DateTime> param_DueByDate, Nullable<bool> param_UseOpenItem,
                Nullable<bool> param_IsCustomer, Nullable<bool> param_SingleID)
        {
            var param_FromIDParameter = param_FromID != null
                ? new ObjectParameter("Param_FromID", param_FromID)
                : new ObjectParameter("Param_FromID", typeof(string));

            var param_ToIDParameter = param_ToID != null
                ? new ObjectParameter("Param_ToID", param_ToID)
                : new ObjectParameter("Param_ToID", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_WithBalanceParameter = param_WithBalance.HasValue
                ? new ObjectParameter("Param_WithBalance", param_WithBalance)
                : new ObjectParameter("Param_WithBalance", typeof(bool));

            var param_OrderByFieldParameter = param_OrderByField != null
                ? new ObjectParameter("Param_OrderByField", param_OrderByField)
                : new ObjectParameter("Param_OrderByField", typeof(string));

            var param_DueByDateParameter = param_DueByDate.HasValue
                ? new ObjectParameter("Param_DueByDate", param_DueByDate)
                : new ObjectParameter("Param_DueByDate", typeof(System.DateTime));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_SingleIDParameter = param_SingleID.HasValue
                ? new ObjectParameter("Param_SingleID", param_SingleID)
                : new ObjectParameter("Param_SingleID", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_BatchCusSupStatements_SetupStatements_Result>(
                        "sp_Kompas_BatchCusSupStatements_SetupStatements", param_FromIDParameter, param_ToIDParameter,
                        param_FromGroupingParameter, param_ToGroupingParameter, param_WithBalanceParameter,
                        param_OrderByFieldParameter, param_DueByDateParameter, param_UseOpenItemParameter,
                        param_IsCustomerParameter, param_SingleIDParameter);
        }

        public virtual int sp_Kompas_BOMUpdateDescription(string param_Item, string param_Description)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_BOMUpdateDescription",
                param_ItemParameter, param_DescriptionParameter);
        }

        public virtual ObjectResult<sp_Kompas_CheckGroupAccount_Result> sp_Kompas_CheckGroupAccount(
            Nullable<int> param_InvBookInventory)
        {
            var param_InvBookInventoryParameter = param_InvBookInventory.HasValue
                ? new ObjectParameter("Param_InvBookInventory", param_InvBookInventory)
                : new ObjectParameter("Param_InvBookInventory", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_CheckGroupAccount_Result>(
                    "sp_Kompas_CheckGroupAccount", param_InvBookInventoryParameter);
        }

        public virtual ObjectResult<sp_Kompas_CheckOtherTabels_Result> sp_Kompas_CheckOtherTabels(
            Nullable<int> param_Edition)
        {
            var param_EditionParameter = param_Edition.HasValue
                ? new ObjectParameter("Param_Edition", param_Edition)
                : new ObjectParameter("Param_Edition", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_CheckOtherTabels_Result>(
                    "sp_Kompas_CheckOtherTabels", param_EditionParameter);
        }

        public virtual ObjectResult<sp_Kompas_CheckSystemAccount_Result> sp_Kompas_CheckSystemAccount(
            Nullable<int> param_Edition)
        {
            var param_EditionParameter = param_Edition.HasValue
                ? new ObjectParameter("Param_Edition", param_Edition)
                : new ObjectParameter("Param_Edition", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_CheckSystemAccount_Result>(
                    "sp_Kompas_CheckSystemAccount", param_EditionParameter);
        }

        public virtual int sp_Kompas_CreateNewCompanyAssignUserAllRights(string param_UserName)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_CreateNewCompanyAssignUserAllRights", param_UserNameParameter);
        }

        public virtual int sp_Kompas_CreatePeriodBalanceAllAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_CreatePeriodBalanceAllAccounts");
        }

        public virtual int sp_Kompas_CreatePeriodBalanceSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_CreatePeriodBalanceSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_CustomerBalanceByPeriods(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_CustomerBalanceByPeriods",
                param_CustomerParameter, param_FromDateParameter, param_ToDateParameter);
        }

        public virtual ObjectResult<sp_Kompas_CustomerOrdersArchiveLines_Result> sp_Kompas_CustomerOrdersArchiveLines(
            string param_OrderNo, Nullable<double> param_Trail)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_CustomerOrdersArchiveLines_Result>(
                        "sp_Kompas_CustomerOrdersArchiveLines", param_OrderNoParameter, param_TrailParameter);
        }

        public virtual ObjectResult<sp_Kompas_CustomerOrdersOpenLines_Result> sp_Kompas_CustomerOrdersOpenLines(
            string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_CustomerOrdersOpenLines_Result>(
                    "sp_Kompas_CustomerOrdersOpenLines", param_OrderNoParameter);
        }

        public virtual int sp_Kompas_CustomersDeleteCustomer(string param_Customer, Nullable<bool> param_DeleteLinks)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_DeleteLinksParameter = param_DeleteLinks.HasValue
                ? new ObjectParameter("Param_DeleteLinks", param_DeleteLinks)
                : new ObjectParameter("Param_DeleteLinks", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_CustomersDeleteCustomer",
                param_CustomerParameter, param_DeleteLinksParameter);
        }

        public virtual int sp_Kompas_CustomersFetchNext(string param_Customer, ObjectParameter param_NewCustomer)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_CustomersFetchNext",
                param_CustomerParameter, param_NewCustomer);
        }

        public virtual int sp_Kompas_CustomersFetchPrevious(string param_Customer, ObjectParameter param_NewCustomer)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_CustomersFetchPrevious",
                param_CustomerParameter, param_NewCustomer);
        }

        public virtual ObjectResult<sp_Kompas_DataBaseTableColumnNames_Result> sp_Kompas_DataBaseTableColumnNames(
            string param_Table_Name)
        {
            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_DataBaseTableColumnNames_Result>(
                    "sp_Kompas_DataBaseTableColumnNames", param_Table_NameParameter);
        }

        public virtual ObjectResult<sp_Kompas_DataBaseTableColumnProperties_Result>
            sp_Kompas_DataBaseTableColumnProperties(string param_Table_Name, string param_Table_Column_Name)
        {
            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            var param_Table_Column_NameParameter = param_Table_Column_Name != null
                ? new ObjectParameter("Param_Table_Column_Name", param_Table_Column_Name)
                : new ObjectParameter("Param_Table_Column_Name", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_DataBaseTableColumnProperties_Result>(
                        "sp_Kompas_DataBaseTableColumnProperties", param_Table_NameParameter,
                        param_Table_Column_NameParameter);
        }

        public virtual int sp_Kompas_DataBaseTableIndexs(string param_Table_Name)
        {
            var param_Table_NameParameter = param_Table_Name != null
                ? new ObjectParameter("Param_Table_Name", param_Table_Name)
                : new ObjectParameter("Param_Table_Name", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DataBaseTableIndexs",
                param_Table_NameParameter);
        }

        public virtual ObjectResult<string> sp_Kompas_DataBaseTableNames()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("sp_Kompas_DataBaseTableNames");
        }

        public virtual int sp_Kompas_DataMigrateResetAllOrders()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DataMigrateResetAllOrders");
        }

        public virtual int sp_Kompas_DataMigrateResetAllPurchases()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DataMigrateResetAllPurchases");
        }

        public virtual int sp_Kompas_DataMigrateResetJournals()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DataMigrateResetJournals");
        }

        public virtual int sp_Kompas_DDB_CreateStruct()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DDB_CreateStruct");
        }

        public virtual int sp_Kompas_DeleteAllRecordsInTable(string param_TableName)
        {
            var param_TableNameParameter = param_TableName != null
                ? new ObjectParameter("Param_TableName", param_TableName)
                : new ObjectParameter("Param_TableName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteAllRecordsInTable",
                param_TableNameParameter);
        }

        public virtual int sp_Kompas_DeleteLinesInventory(Nullable<System.DateTime> param_Ending,
            string param_Description, Nullable<double> param_Trail)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteLinesInventory",
                param_EndingParameter, param_DescriptionParameter, param_TrailParameter);
        }

        public virtual int sp_Kompas_DeleteOpenEntrySettlementsInTransactionsBatch(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DeleteOpenEntrySettlementsInTransactionsBatch", param_JournalParameter);
        }

        public virtual int sp_Kompas_DeleteTransactionsAccount(Nullable<System.DateTime> param_Ending,
            string param_Description, Nullable<double> param_Trail, string param_User, string param_PeriodID)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteTransactionsAccount",
                param_EndingParameter, param_DescriptionParameter, param_TrailParameter, param_UserParameter,
                param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DeleteTransactionsCustomer(Nullable<System.DateTime> param_Ending,
            string param_Description, Nullable<double> param_Trail, string param_User, string param_PeriodID)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteTransactionsCustomer",
                param_EndingParameter, param_DescriptionParameter, param_TrailParameter, param_UserParameter,
                param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DeleteTransactionsSupplier(Nullable<System.DateTime> param_Ending,
            string param_Description, Nullable<double> param_Trail, string param_User, string param_PeriodID)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_UserParameter = param_User != null
                ? new ObjectParameter("Param_User", param_User)
                : new ObjectParameter("Param_User", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteTransactionsSupplier",
                param_EndingParameter, param_DescriptionParameter, param_TrailParameter, param_UserParameter,
                param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DeleteTransEntryByJournal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DeleteTransEntryByJournal",
                param_JournalParameter);
        }

        public virtual int sp_Kompas_DeleteTransOpenItemByEntryRefBatch(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DeleteTransOpenItemByEntryRefBatch", param_JournalParameter);
        }

        public virtual int sp_Kompas_DFCalcNewSalesPriceAvanceCalcAvanceByCostPrice(string param_Item,
            Nullable<double> param_CostPrice)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFCalcNewSalesPriceAvanceCalcAvanceByCostPrice", param_ItemParameter,
                    param_CostPriceParameter);
        }

        public virtual int sp_Kompas_DFCalcNewSalesPriceAvanceCalcAvanceBySalesPrice(string param_Item,
            Nullable<double> param_CostPrice)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFCalcNewSalesPriceAvanceCalcAvanceBySalesPrice", param_ItemParameter,
                    param_CostPriceParameter);
        }

        public virtual int sp_Kompas_DFCalcNewSalesPriceAvanceCalcPriceByCostPrice(string param_Item,
            Nullable<double> param_CostPrice, Nullable<double> param_DutyAmount)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_DutyAmountParameter = param_DutyAmount.HasValue
                ? new ObjectParameter("Param_DutyAmount", param_DutyAmount)
                : new ObjectParameter("Param_DutyAmount", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFCalcNewSalesPriceAvanceCalcPriceByCostPrice", param_ItemParameter,
                    param_CostPriceParameter, param_DutyAmountParameter);
        }

        public virtual int sp_Kompas_DFCalcNewSalesPriceAvanceCalcPriceBySalesPrice(string param_Item,
            Nullable<double> param_CostPrice, Nullable<double> param_DutyAmount)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_DutyAmountParameter = param_DutyAmount.HasValue
                ? new ObjectParameter("Param_DutyAmount", param_DutyAmount)
                : new ObjectParameter("Param_DutyAmount", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFCalcNewSalesPriceAvanceCalcPriceBySalesPrice", param_ItemParameter,
                    param_CostPriceParameter, param_DutyAmountParameter);
        }

        public virtual int sp_Kompas_DFDeletePeriodsOnAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DFDeletePeriodsOnAccount",
                param_AccountParameter);
        }

        public virtual int sp_Kompas_DFLedgerUpdateUpdateAccountBalanceBalanceAccount(Nullable<double> param_Quantity,
            Nullable<double> param_Amount, string param_Account)
        {
            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFLedgerUpdateUpdateAccountBalanceBalanceAccount", param_QuantityParameter,
                    param_AmountParameter, param_AccountParameter);
        }

        public virtual int sp_Kompas_DFLedgerUpdateUpdateAccountBalanceProfitAccount(Nullable<double> param_Quantity,
            Nullable<double> param_Amount, string param_Account)
        {
            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFLedgerUpdateUpdateAccountBalanceProfitAccount", param_QuantityParameter,
                    param_AmountParameter, param_AccountParameter);
        }

        public virtual int sp_Kompas_DFLedgerUpdateUpdatePeriodBalanceBalanceAccount(Nullable<double> param_Quantity,
            Nullable<double> param_Amount, string param_Account, string param_PeriodID)
        {
            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFLedgerUpdateUpdatePeriodBalanceBalanceAccount", param_QuantityParameter,
                    param_AmountParameter, param_AccountParameter, param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DFLedgerUpdateUpdatePeriodBalanceProfitAccount(Nullable<double> param_Quantity,
            Nullable<double> param_Amount, string param_Account, string param_PeriodID)
        {
            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFLedgerUpdateUpdatePeriodBalanceProfitAccount", param_QuantityParameter,
                    param_AmountParameter, param_AccountParameter, param_PeriodIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_DFLinesCheckPostCheckLines(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_DFLinesCheckPostCheckLines", param_JournalParameter);
        }

        public virtual int sp_Kompas_DFLinesCheckPostPostLines(string param_Journal, string param_UserName,
            string param_Description)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DFLinesCheckPostPostLines",
                param_JournalParameter, param_UserNameParameter, param_DescriptionParameter);
        }

        public virtual int sp_Kompas_DFMakeDistributeTrans(string param_Description, Nullable<int> param_DistributeOn,
            Nullable<int> param_Trail)
        {
            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_DistributeOnParameter = param_DistributeOn.HasValue
                ? new ObjectParameter("Param_DistributeOn", param_DistributeOn)
                : new ObjectParameter("Param_DistributeOn", typeof(int));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DFMakeDistributeTrans",
                param_DescriptionParameter, param_DistributeOnParameter, param_TrailParameter);
        }

        public virtual ObjectResult<sp_Kompas_DFTransCheckPostCheckLines_Result> sp_Kompas_DFTransCheckPostCheckLines(
            string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_DFTransCheckPostCheckLines_Result>(
                        "sp_Kompas_DFTransCheckPostCheckLines", param_JournalParameter);
        }

        public virtual int sp_Kompas_DFTransCheckPostDeleteSimulationLines(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFTransCheckPostDeleteSimulationLines", param_JournalParameter);
        }

        public virtual int sp_Kompas_DFTransCheckPostPostLines(string param_Journal,
            Nullable<System.DateTime> param_PostDate, string param_UserName, Nullable<short> param_Language,
            ObjectParameter param_LastTrail)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_DFTransCheckPostPostLines",
                param_JournalParameter, param_PostDateParameter, param_UserNameParameter, param_LanguageParameter,
                param_LastTrail);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_DFTransCheckPostSimTrans(string param_Journal,
            Nullable<System.DateTime> param_PostDate, Nullable<short> param_Language)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_PostDateParameter = param_PostDate.HasValue
                ? new ObjectParameter("Param_PostDate", param_PostDate)
                : new ObjectParameter("Param_PostDate", typeof(System.DateTime));

            var param_LanguageParameter = param_Language.HasValue
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_DFTransCheckPostSimTrans", param_JournalParameter, param_PostDateParameter,
                    param_LanguageParameter);
        }

        public virtual int sp_Kompas_DFTransTransferBlockPeriodsInYear(Nullable<System.DateTime> param_Starting,
            Nullable<System.DateTime> param_Ending)
        {
            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFTransTransferBlockPeriodsInYear", param_StartingParameter, param_EndingParameter);
        }

        public virtual int sp_Kompas_DFTransTransferDeleteOldTransferEntries(string param_PeriodID)
        {
            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFTransTransferDeleteOldTransferEntries", param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DFTransTransferResetPeriodBalanceByPeriod(string param_PeriodID)
        {
            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFTransTransferResetPeriodBalanceByPeriod", param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_DFUpdateAccountsWithTransactionsPrTrail(Nullable<double> param_Trail,
            Nullable<bool> param_CheckTrail, Nullable<int> param_FromRecordID)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_CheckTrailParameter = param_CheckTrail.HasValue
                ? new ObjectParameter("Param_CheckTrail", param_CheckTrail)
                : new ObjectParameter("Param_CheckTrail", typeof(bool));

            var param_FromRecordIDParameter = param_FromRecordID.HasValue
                ? new ObjectParameter("Param_FromRecordID", param_FromRecordID)
                : new ObjectParameter("Param_FromRecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFUpdateAccountsWithTransactionsPrTrail", param_TrailParameter, param_CheckTrailParameter,
                    param_FromRecordIDParameter);
        }

        public virtual int sp_Kompas_DFUpdateDelSubTotalsOnLines(string param_OrderNo, Nullable<int> param_Trail)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_DFUpdateDelSubTotalsOnLines", param_OrderNoParameter, param_TrailParameter);
        }

        public virtual int sp_Kompas_DFUpdateDelSubTotalsOnLinesEntry(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_DFUpdateDelSubTotalsOnLinesEntry", param_OrderNoParameter);
        }

        public virtual int sp_Kompas_EditTransactionSetNewDue(Nullable<int> param_RecordID,
            Nullable<System.DateTime> param_NewDue)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_NewDueParameter = param_NewDue.HasValue
                ? new ObjectParameter("Param_NewDue", param_NewDue)
                : new ObjectParameter("Param_NewDue", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_EditTransactionSetNewDue",
                param_RecordIDParameter, param_NewDueParameter);
        }

        public virtual int sp_Kompas_Execute(string param_SQL)
        {
            var param_SQLParameter = param_SQL != null
                ? new ObjectParameter("Param_SQL", param_SQL)
                : new ObjectParameter("Param_SQL", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_Execute", param_SQLParameter);
        }

        public virtual int sp_Kompas_ExecuteSQL(string param_SQL)
        {
            var param_SQLParameter = param_SQL != null
                ? new ObjectParameter("Param_SQL", param_SQL)
                : new ObjectParameter("Param_SQL", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ExecuteSQL",
                param_SQLParameter);
        }

        public virtual int sp_Kompas_FindSerialNoInsertIntoItemSerialNoSale(string param_Item, string param_SerialNo,
            string param_OrderNo, string param_Customer, Nullable<int> param_RecID)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_RecIDParameter = param_RecID.HasValue
                ? new ObjectParameter("Param_RecID", param_RecID)
                : new ObjectParameter("Param_RecID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_FindSerialNoInsertIntoItemSerialNoSale", param_ItemParameter, param_SerialNoParameter,
                    param_OrderNoParameter, param_CustomerParameter, param_RecIDParameter);
        }

        public virtual int sp_Kompas_FMResetUserFormPosition(string param_UserName, string param_FormName)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_FormNameParameter = param_FormName != null
                ? new ObjectParameter("Param_FormName", param_FormName)
                : new ObjectParameter("Param_FormName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_FMResetUserFormPosition",
                param_UserNameParameter, param_FormNameParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventoryFuncClickUpdateNoNullValues()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventoryFuncClickUpdateNoNullValues");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy100()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy100");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy25()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy25");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy50()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsDefracBy50");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceAvance()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceAvance");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceByRate()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceByRate");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceBySats(Nullable<double> param_Sats,
            Nullable<bool> param_IsSalesPrice)
        {
            var param_SatsParameter = param_Sats.HasValue
                ? new ObjectParameter("Param_Sats", param_Sats)
                : new ObjectParameter("Param_Sats", typeof(double));

            var param_IsSalesPriceParameter = param_IsSalesPrice.HasValue
                ? new ObjectParameter("Param_IsSalesPrice", param_IsSalesPrice)
                : new ObjectParameter("Param_IsSalesPrice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceBySats", param_SatsParameter,
                    param_IsSalesPriceParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceByValue(Nullable<double> param_Value)
        {
            var param_ValueParameter = param_Value.HasValue
                ? new ObjectParameter("Param_Value", param_Value)
                : new ObjectParameter("Param_Value", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesFillOutItemsUpdatePriceByValue", param_ValueParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesSetupItemInsertPricelists(string param_PriceList,
            Nullable<double> param_Quantity, string param_Currency, string param_Unit, string param_ItemFrom,
            string param_ItemTo, string param_LocationFrom, string param_LocationTo, string param_GroupingFrom,
            string param_GroupingTo, string param_CategoryFrom, string param_CategoryTo, string param_SupplierNoFrom,
            string param_SupplierNoTo, Nullable<short> param_FromPriceListType, string param_FromPriceLIst,
            Nullable<System.DateTime> param_ActiveFrom, Nullable<System.DateTime> param_ActiveTo,
            Nullable<System.DateTime> param_InActiveFrom, Nullable<System.DateTime> param_InActiveTo,
            Nullable<short> param_FromWebUseOnWeb, Nullable<short> param_ToWebUseOnWeb)
        {
            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_ItemFromParameter = param_ItemFrom != null
                ? new ObjectParameter("Param_ItemFrom", param_ItemFrom)
                : new ObjectParameter("Param_ItemFrom", typeof(string));

            var param_ItemToParameter = param_ItemTo != null
                ? new ObjectParameter("Param_ItemTo", param_ItemTo)
                : new ObjectParameter("Param_ItemTo", typeof(string));

            var param_LocationFromParameter = param_LocationFrom != null
                ? new ObjectParameter("Param_LocationFrom", param_LocationFrom)
                : new ObjectParameter("Param_LocationFrom", typeof(string));

            var param_LocationToParameter = param_LocationTo != null
                ? new ObjectParameter("Param_LocationTo", param_LocationTo)
                : new ObjectParameter("Param_LocationTo", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_CategoryFromParameter = param_CategoryFrom != null
                ? new ObjectParameter("Param_CategoryFrom", param_CategoryFrom)
                : new ObjectParameter("Param_CategoryFrom", typeof(string));

            var param_CategoryToParameter = param_CategoryTo != null
                ? new ObjectParameter("Param_CategoryTo", param_CategoryTo)
                : new ObjectParameter("Param_CategoryTo", typeof(string));

            var param_SupplierNoFromParameter = param_SupplierNoFrom != null
                ? new ObjectParameter("Param_SupplierNoFrom", param_SupplierNoFrom)
                : new ObjectParameter("Param_SupplierNoFrom", typeof(string));

            var param_SupplierNoToParameter = param_SupplierNoTo != null
                ? new ObjectParameter("Param_SupplierNoTo", param_SupplierNoTo)
                : new ObjectParameter("Param_SupplierNoTo", typeof(string));

            var param_FromPriceListTypeParameter = param_FromPriceListType.HasValue
                ? new ObjectParameter("Param_FromPriceListType", param_FromPriceListType)
                : new ObjectParameter("Param_FromPriceListType", typeof(short));

            var param_FromPriceLIstParameter = param_FromPriceLIst != null
                ? new ObjectParameter("Param_FromPriceLIst", param_FromPriceLIst)
                : new ObjectParameter("Param_FromPriceLIst", typeof(string));

            var param_ActiveFromParameter = param_ActiveFrom.HasValue
                ? new ObjectParameter("Param_ActiveFrom", param_ActiveFrom)
                : new ObjectParameter("Param_ActiveFrom", typeof(System.DateTime));

            var param_ActiveToParameter = param_ActiveTo.HasValue
                ? new ObjectParameter("Param_ActiveTo", param_ActiveTo)
                : new ObjectParameter("Param_ActiveTo", typeof(System.DateTime));

            var param_InActiveFromParameter = param_InActiveFrom.HasValue
                ? new ObjectParameter("Param_InActiveFrom", param_InActiveFrom)
                : new ObjectParameter("Param_InActiveFrom", typeof(System.DateTime));

            var param_InActiveToParameter = param_InActiveTo.HasValue
                ? new ObjectParameter("Param_InActiveTo", param_InActiveTo)
                : new ObjectParameter("Param_InActiveTo", typeof(System.DateTime));

            var param_FromWebUseOnWebParameter = param_FromWebUseOnWeb.HasValue
                ? new ObjectParameter("Param_FromWebUseOnWeb", param_FromWebUseOnWeb)
                : new ObjectParameter("Param_FromWebUseOnWeb", typeof(short));

            var param_ToWebUseOnWebParameter = param_ToWebUseOnWeb.HasValue
                ? new ObjectParameter("Param_ToWebUseOnWeb", param_ToWebUseOnWeb)
                : new ObjectParameter("Param_ToWebUseOnWeb", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesSetupItemInsertPricelists", param_PriceListParameter,
                    param_QuantityParameter, param_CurrencyParameter, param_UnitParameter, param_ItemFromParameter,
                    param_ItemToParameter, param_LocationFromParameter, param_LocationToParameter,
                    param_GroupingFromParameter, param_GroupingToParameter, param_CategoryFromParameter,
                    param_CategoryToParameter, param_SupplierNoFromParameter, param_SupplierNoToParameter,
                    param_FromPriceListTypeParameter, param_FromPriceLIstParameter, param_ActiveFromParameter,
                    param_ActiveToParameter, param_InActiveFromParameter, param_InActiveToParameter,
                    param_FromWebUseOnWebParameter, param_ToWebUseOnWebParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesSetupItemsDeleteAllLines()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesSetupItemsDeleteAllLines");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesSetupItemsUpdateLines(string param_ItemFrom,
            string param_ItemTo, string param_LocationFrom, string param_LocationTo, string param_GroupingFrom,
            string param_GroupingTo, string param_CategoryFrom, string param_CategoryTo, string param_SupplierNoFrom,
            string param_SupplierNoTo, Nullable<short> param_FromPriceListType, string param_FromPriceLIst,
            Nullable<short> param_FromWebUseOnWeb, Nullable<short> param_ToWebUseOnWeb)
        {
            var param_ItemFromParameter = param_ItemFrom != null
                ? new ObjectParameter("Param_ItemFrom", param_ItemFrom)
                : new ObjectParameter("Param_ItemFrom", typeof(string));

            var param_ItemToParameter = param_ItemTo != null
                ? new ObjectParameter("Param_ItemTo", param_ItemTo)
                : new ObjectParameter("Param_ItemTo", typeof(string));

            var param_LocationFromParameter = param_LocationFrom != null
                ? new ObjectParameter("Param_LocationFrom", param_LocationFrom)
                : new ObjectParameter("Param_LocationFrom", typeof(string));

            var param_LocationToParameter = param_LocationTo != null
                ? new ObjectParameter("Param_LocationTo", param_LocationTo)
                : new ObjectParameter("Param_LocationTo", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_CategoryFromParameter = param_CategoryFrom != null
                ? new ObjectParameter("Param_CategoryFrom", param_CategoryFrom)
                : new ObjectParameter("Param_CategoryFrom", typeof(string));

            var param_CategoryToParameter = param_CategoryTo != null
                ? new ObjectParameter("Param_CategoryTo", param_CategoryTo)
                : new ObjectParameter("Param_CategoryTo", typeof(string));

            var param_SupplierNoFromParameter = param_SupplierNoFrom != null
                ? new ObjectParameter("Param_SupplierNoFrom", param_SupplierNoFrom)
                : new ObjectParameter("Param_SupplierNoFrom", typeof(string));

            var param_SupplierNoToParameter = param_SupplierNoTo != null
                ? new ObjectParameter("Param_SupplierNoTo", param_SupplierNoTo)
                : new ObjectParameter("Param_SupplierNoTo", typeof(string));

            var param_FromPriceListTypeParameter = param_FromPriceListType.HasValue
                ? new ObjectParameter("Param_FromPriceListType", param_FromPriceListType)
                : new ObjectParameter("Param_FromPriceListType", typeof(short));

            var param_FromPriceLIstParameter = param_FromPriceLIst != null
                ? new ObjectParameter("Param_FromPriceLIst", param_FromPriceLIst)
                : new ObjectParameter("Param_FromPriceLIst", typeof(string));

            var param_FromWebUseOnWebParameter = param_FromWebUseOnWeb.HasValue
                ? new ObjectParameter("Param_FromWebUseOnWeb", param_FromWebUseOnWeb)
                : new ObjectParameter("Param_FromWebUseOnWeb", typeof(short));

            var param_ToWebUseOnWebParameter = param_ToWebUseOnWeb.HasValue
                ? new ObjectParameter("Param_ToWebUseOnWeb", param_ToWebUseOnWeb)
                : new ObjectParameter("Param_ToWebUseOnWeb", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesSetupItemsUpdateLines", param_ItemFromParameter,
                    param_ItemToParameter, param_LocationFromParameter, param_LocationToParameter,
                    param_GroupingFromParameter, param_GroupingToParameter, param_CategoryFromParameter,
                    param_CategoryToParameter, param_SupplierNoFromParameter, param_SupplierNoToParameter,
                    param_FromPriceListTypeParameter, param_FromPriceLIstParameter, param_FromWebUseOnWebParameter,
                    param_ToWebUseOnWebParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesSetupItemUpdateAvance()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesSetupItemUpdateAvance");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesSetupItemUpdateCurrencyRate()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesSetupItemUpdateCurrencyRate");
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesUpdateItemsUpdateItemPrice(
            Nullable<bool> param_UpdateAvance, string param_UserID)
        {
            var param_UpdateAvanceParameter = param_UpdateAvance.HasValue
                ? new ObjectParameter("Param_UpdateAvance", param_UpdateAvance)
                : new ObjectParameter("Param_UpdateAvance", typeof(bool));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesUpdateItemsUpdateItemPrice", param_UpdateAvanceParameter,
                    param_UserIDParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventorySalesUpdateItemsUpdateSalesPrice()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventorySalesUpdateItemsUpdateSalesPrice");
        }

        public virtual int sp_Kompas_frmAdjustInventoryUpdateInventoryCalcValue(string param_DataLinkID,
            Nullable<int> param_dltAdjustInventory, Nullable<System.DateTime> param_DateTo, Nullable<int> param_Type,
            Nullable<double> param_PercentCalc, Nullable<int> param_MaxEntries, Nullable<int> param_Status)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TypeParameter = param_Type.HasValue
                ? new ObjectParameter("Param_Type", param_Type)
                : new ObjectParameter("Param_Type", typeof(int));

            var param_PercentCalcParameter = param_PercentCalc.HasValue
                ? new ObjectParameter("Param_PercentCalc", param_PercentCalc)
                : new ObjectParameter("Param_PercentCalc", typeof(double));

            var param_MaxEntriesParameter = param_MaxEntries.HasValue
                ? new ObjectParameter("Param_MaxEntries", param_MaxEntries)
                : new ObjectParameter("Param_MaxEntries", typeof(int));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventoryUpdateInventoryCalcValue", param_DataLinkIDParameter,
                    param_dltAdjustInventoryParameter, param_DateToParameter, param_TypeParameter,
                    param_PercentCalcParameter, param_MaxEntriesParameter, param_StatusParameter);
        }

        public virtual int sp_Kompas_frmAdjustInventoryUpdateTmpOnInventory(string param_DataLinkID,
            Nullable<int> param_dltAdjustInventory, Nullable<System.DateTime> param_DateTo, Nullable<int> param_Status)
        {
            var param_DataLinkIDParameter = param_DataLinkID != null
                ? new ObjectParameter("Param_DataLinkID", param_DataLinkID)
                : new ObjectParameter("Param_DataLinkID", typeof(string));

            var param_dltAdjustInventoryParameter = param_dltAdjustInventory.HasValue
                ? new ObjectParameter("Param_dltAdjustInventory", param_dltAdjustInventory)
                : new ObjectParameter("Param_dltAdjustInventory", typeof(int));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmAdjustInventoryUpdateTmpOnInventory", param_DataLinkIDParameter,
                    param_dltAdjustInventoryParameter, param_DateToParameter, param_StatusParameter);
        }

        public virtual int sp_Kompas_frmBudgetFuncClickUpdateClearPeriodBalance(
            Nullable<System.DateTime> param_Starting, Nullable<System.DateTime> param_Ending)
        {
            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmBudgetFuncClickUpdateClearPeriodBalance", param_StartingParameter,
                    param_EndingParameter);
        }

        public virtual int sp_Kompas_frmChangeFuncClickDeleteOneAccountFromAccounts(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmChangeFuncClickDeleteOneAccountFromAccounts", param_AccountParameter);
        }

        public virtual int sp_Kompas_frmChangeFuncClickDeleteOneAccountFromPB(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmChangeFuncClickDeleteOneAccountFromPB", param_AccountParameter);
        }

        public virtual int sp_Kompas_frmChangeFuncClickUpdateChangeValueOptions(string param_ValueTo,
            string param_Module, string param_ValueFrom)
        {
            var param_ValueToParameter = param_ValueTo != null
                ? new ObjectParameter("Param_ValueTo", param_ValueTo)
                : new ObjectParameter("Param_ValueTo", typeof(string));

            var param_ModuleParameter = param_Module != null
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(string));

            var param_ValueFromParameter = param_ValueFrom != null
                ? new ObjectParameter("Param_ValueFrom", param_ValueFrom)
                : new ObjectParameter("Param_ValueFrom", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmChangeFuncClickUpdateChangeValueOptions", param_ValueToParameter,
                    param_ModuleParameter, param_ValueFromParameter);
        }

        public virtual int sp_Kompas_frmCustomerInterestRefreshResetCustomers(string param_CustomerFrom,
            string param_CustomerTo, string param_GroupingFrom, string param_GroupingTo, string param_InterestFrom,
            string param_InterestTo)
        {
            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_InterestFromParameter = param_InterestFrom != null
                ? new ObjectParameter("Param_InterestFrom", param_InterestFrom)
                : new ObjectParameter("Param_InterestFrom", typeof(string));

            var param_InterestToParameter = param_InterestTo != null
                ? new ObjectParameter("Param_InterestTo", param_InterestTo)
                : new ObjectParameter("Param_InterestTo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmCustomerInterestRefreshResetCustomers", param_CustomerFromParameter,
                    param_CustomerToParameter, param_GroupingFromParameter, param_GroupingToParameter,
                    param_InterestFromParameter, param_InterestToParameter);
        }

        public virtual int sp_Kompas_frmInventoryFKFormAddCopyBillOfMaterialToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmInventoryFKFormAddCopyBillOfMaterialToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual int sp_Kompas_frmInventoryFKFormAddCopyInventoryTextToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmInventoryFKFormAddCopyInventoryTextToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual int sp_Kompas_frmInventoryFKFormAddCopyItemDutyToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmInventoryFKFormAddCopyItemDutyToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual int sp_Kompas_frmInventoryFKFormAddCopyItemPriceToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmInventoryFKFormAddCopyItemPriceToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual int sp_Kompas_frmInventoryFKFormAddCopyParameterToNewItem(string param_NewItem,
            string param_OldItem)
        {
            var param_NewItemParameter = param_NewItem != null
                ? new ObjectParameter("Param_NewItem", param_NewItem)
                : new ObjectParameter("Param_NewItem", typeof(string));

            var param_OldItemParameter = param_OldItem != null
                ? new ObjectParameter("Param_OldItem", param_OldItem)
                : new ObjectParameter("Param_OldItem", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_frmInventoryFKFormAddCopyParameterToNewItem", param_NewItemParameter,
                    param_OldItemParameter);
        }

        public virtual ObjectResult<sp_Kompas_GetAccountingYears_Result> sp_Kompas_GetAccountingYears()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_GetAccountingYears_Result>(
                    "sp_Kompas_GetAccountingYears");
        }

        public virtual ObjectResult<Nullable<double>> sp_Kompas_GetCashDiscountAmount(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "sp_Kompas_GetCashDiscountAmount", param_RecordIDParameter);
        }

        public virtual ObjectResult<sp_Kompas_GetOrderDiscount_Result> sp_Kompas_GetOrderDiscount(string param_CusSup,
            string param_CusSupCat, string param_Item, string param_InventoryCat, string param_Unit,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_Date, string param_Parameter1,
            string param_Parameter2, string param_Project, string param_CostCenter)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_CusSupCatParameter = param_CusSupCat != null
                ? new ObjectParameter("Param_CusSupCat", param_CusSupCat)
                : new ObjectParameter("Param_CusSupCat", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_InventoryCatParameter = param_InventoryCat != null
                ? new ObjectParameter("Param_InventoryCat", param_InventoryCat)
                : new ObjectParameter("Param_InventoryCat", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_GetOrderDiscount_Result>(
                    "sp_Kompas_GetOrderDiscount", param_CusSupParameter, param_CusSupCatParameter, param_ItemParameter,
                    param_InventoryCatParameter, param_UnitParameter, param_QuantityParameter, param_DateParameter,
                    param_Parameter1Parameter, param_Parameter2Parameter, param_ProjectParameter,
                    param_CostCenterParameter);
        }

        public virtual ObjectResult<sp_Kompas_GetPurchaseDiscount_Result> sp_Kompas_GetPurchaseDiscount(
            string param_CusSup, string param_CusSupCat, string param_Item, string param_InventoryCat, string param_Unit,
            Nullable<double> param_Quantity, Nullable<System.DateTime> param_Date, string param_Parameter1,
            string param_Parameter2)
        {
            var param_CusSupParameter = param_CusSup != null
                ? new ObjectParameter("Param_CusSup", param_CusSup)
                : new ObjectParameter("Param_CusSup", typeof(string));

            var param_CusSupCatParameter = param_CusSupCat != null
                ? new ObjectParameter("Param_CusSupCat", param_CusSupCat)
                : new ObjectParameter("Param_CusSupCat", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_InventoryCatParameter = param_InventoryCat != null
                ? new ObjectParameter("Param_InventoryCat", param_InventoryCat)
                : new ObjectParameter("Param_InventoryCat", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_GetPurchaseDiscount_Result>(
                    "sp_Kompas_GetPurchaseDiscount", param_CusSupParameter, param_CusSupCatParameter,
                    param_ItemParameter, param_InventoryCatParameter, param_UnitParameter, param_QuantityParameter,
                    param_DateParameter, param_Parameter1Parameter, param_Parameter2Parameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_GetTransactionsCount()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_GetTransactionsCount");
        }

        public virtual ObjectResult<sp_Kompas_GetUserRoster_Result> sp_Kompas_GetUserRoster(string param_DatabaseName)
        {
            var param_DatabaseNameParameter = param_DatabaseName != null
                ? new ObjectParameter("Param_DatabaseName", param_DatabaseName)
                : new ObjectParameter("Param_DatabaseName", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_GetUserRoster_Result>(
                    "sp_Kompas_GetUserRoster", param_DatabaseNameParameter);
        }

        public virtual int sp_Kompas_HeavyCreateYearInsertIntoPeriods(Nullable<System.DateTime> param_Ending,
            string param_Name, Nullable<int> param_Status, Nullable<int> param_Opening, string param_PeriodID)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(int));

            var param_OpeningParameter = param_Opening.HasValue
                ? new ObjectParameter("Param_Opening", param_Opening)
                : new ObjectParameter("Param_Opening", typeof(int));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyCreateYearInsertIntoPeriods", param_EndingParameter, param_NameParameter,
                    param_StatusParameter, param_OpeningParameter, param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_HeavyCreateYearInsertIntoTaxPeriods(Nullable<System.DateTime> param_Starting,
            Nullable<System.DateTime> param_Ending, Nullable<System.DateTime> param_Due)
        {
            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_DueParameter = param_Due.HasValue
                ? new ObjectParameter("Param_Due", param_Due)
                : new ObjectParameter("Param_Due", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyCreateYearInsertIntoTaxPeriods", param_StartingParameter, param_EndingParameter,
                    param_DueParameter);
        }

        public virtual ObjectResult<sp_Kompas_HeavyGetPriceListPrice_Result> sp_Kompas_HeavyGetPriceListPrice(
            string param_PriceList, Nullable<int> param_PriceListType, string param_Item, string param_Unit,
            string param_Currency, Nullable<double> param_Quantity, Nullable<System.DateTime> param_Delivery,
            string param_Parameter1, string param_Parameter2, Nullable<double> param_CostPrice)
        {
            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_PriceListTypeParameter = param_PriceListType.HasValue
                ? new ObjectParameter("Param_PriceListType", param_PriceListType)
                : new ObjectParameter("Param_PriceListType", typeof(int));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_Parameter1Parameter = param_Parameter1 != null
                ? new ObjectParameter("Param_Parameter1", param_Parameter1)
                : new ObjectParameter("Param_Parameter1", typeof(string));

            var param_Parameter2Parameter = param_Parameter2 != null
                ? new ObjectParameter("Param_Parameter2", param_Parameter2)
                : new ObjectParameter("Param_Parameter2", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_HeavyGetPriceListPrice_Result>(
                    "sp_Kompas_HeavyGetPriceListPrice", param_PriceListParameter, param_PriceListTypeParameter,
                    param_ItemParameter, param_UnitParameter, param_CurrencyParameter, param_QuantityParameter,
                    param_DeliveryParameter, param_Parameter1Parameter, param_Parameter2Parameter,
                    param_CostPriceParameter);
        }

        public virtual int sp_Kompas_HeavyInterestCalcInsertIntoTransInterestItem(Nullable<int> param_TransRef,
            Nullable<int> param_SettleRef, Nullable<double> param_SettleInterest)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            var param_SettleRefParameter = param_SettleRef.HasValue
                ? new ObjectParameter("Param_SettleRef", param_SettleRef)
                : new ObjectParameter("Param_SettleRef", typeof(int));

            var param_SettleInterestParameter = param_SettleInterest.HasValue
                ? new ObjectParameter("Param_SettleInterest", param_SettleInterest)
                : new ObjectParameter("Param_SettleInterest", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyInterestCalcInsertIntoTransInterestItem", param_TransRefParameter,
                    param_SettleRefParameter, param_SettleInterestParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllRemoveFromTransOpenItem(Nullable<bool> param_IsCustomer)
        {
            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleAllRemoveFromTransOpenItem", param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllRemoveFromTransOpenItemChosenCusSup(string param_IDFrom,
            string param_IDTo, Nullable<bool> param_IsCustomer)
        {
            var param_IDFromParameter = param_IDFrom != null
                ? new ObjectParameter("Param_IDFrom", param_IDFrom)
                : new ObjectParameter("Param_IDFrom", typeof(string));

            var param_IDToParameter = param_IDTo != null
                ? new ObjectParameter("Param_IDTo", param_IDTo)
                : new ObjectParameter("Param_IDTo", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleAllRemoveFromTransOpenItemChosenCusSup", param_IDFromParameter,
                    param_IDToParameter, param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllRemoveOldSettlements(Nullable<System.DateTime> param_CurrentDate,
            string param_UserName, Nullable<bool> param_IsCustomer)
        {
            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleAllRemoveOldSettlements", param_CurrentDateParameter,
                    param_UserNameParameter, param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnsettleAllRemoveOldSettlementsChosenCusSup(
            Nullable<System.DateTime> param_CurrentDate, string param_UserName, string param_IDFrom, string param_IDTo,
            Nullable<bool> param_IsCustomer)
        {
            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_IDFromParameter = param_IDFrom != null
                ? new ObjectParameter("Param_IDFrom", param_IDFrom)
                : new ObjectParameter("Param_IDFrom", typeof(string));

            var param_IDToParameter = param_IDTo != null
                ? new ObjectParameter("Param_IDTo", param_IDTo)
                : new ObjectParameter("Param_IDTo", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnsettleAllRemoveOldSettlementsChosenCusSup", param_CurrentDateParameter,
                    param_UserNameParameter, param_IDFromParameter, param_IDToParameter, param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllSettlements(string param_Host, Nullable<bool> param_IsCustomer,
            string param_FromCusSup, string param_ToCusSup, string param_FromCurrency, string param_ToCurrency,
            Nullable<System.DateTime> param_Date, string param_UserName, Nullable<bool> param_ZeroBalanceOnly)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            var param_FromCusSupParameter = param_FromCusSup != null
                ? new ObjectParameter("Param_FromCusSup", param_FromCusSup)
                : new ObjectParameter("Param_FromCusSup", typeof(string));

            var param_ToCusSupParameter = param_ToCusSup != null
                ? new ObjectParameter("Param_ToCusSup", param_ToCusSup)
                : new ObjectParameter("Param_ToCusSup", typeof(string));

            var param_FromCurrencyParameter = param_FromCurrency != null
                ? new ObjectParameter("Param_FromCurrency", param_FromCurrency)
                : new ObjectParameter("Param_FromCurrency", typeof(string));

            var param_ToCurrencyParameter = param_ToCurrency != null
                ? new ObjectParameter("Param_ToCurrency", param_ToCurrency)
                : new ObjectParameter("Param_ToCurrency", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_ZeroBalanceOnlyParameter = param_ZeroBalanceOnly.HasValue
                ? new ObjectParameter("Param_ZeroBalanceOnly", param_ZeroBalanceOnly)
                : new ObjectParameter("Param_ZeroBalanceOnly", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_HeavyUnSettleAllSettlements", param_HostParameter, param_IsCustomerParameter,
                param_FromCusSupParameter, param_ToCusSupParameter, param_FromCurrencyParameter,
                param_ToCurrencyParameter, param_DateParameter, param_UserNameParameter, param_ZeroBalanceOnlyParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllSettleRateDifferences(Nullable<System.DateTime> param_CurrentDate,
            string param_UserName, Nullable<bool> param_IsCustomer)
        {
            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleAllSettleRateDifferences", param_CurrentDateParameter,
                    param_UserNameParameter, param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleAllSettleRateDifferencesChosenCusSup(
            Nullable<System.DateTime> param_CurrentDate, string param_UserName, string param_IDFrom, string param_IDTo,
            Nullable<bool> param_IsCustomer)
        {
            var param_CurrentDateParameter = param_CurrentDate.HasValue
                ? new ObjectParameter("Param_CurrentDate", param_CurrentDate)
                : new ObjectParameter("Param_CurrentDate", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_IDFromParameter = param_IDFrom != null
                ? new ObjectParameter("Param_IDFrom", param_IDFrom)
                : new ObjectParameter("Param_IDFrom", typeof(string));

            var param_IDToParameter = param_IDTo != null
                ? new ObjectParameter("Param_IDTo", param_IDTo)
                : new ObjectParameter("Param_IDTo", typeof(string));

            var param_IsCustomerParameter = param_IsCustomer.HasValue
                ? new ObjectParameter("Param_IsCustomer", param_IsCustomer)
                : new ObjectParameter("Param_IsCustomer", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleAllSettleRateDifferencesChosenCusSup", param_CurrentDateParameter,
                    param_UserNameParameter, param_IDFromParameter, param_IDToParameter, param_IsCustomerParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordDeleteCurrencyDifferences(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordDeleteCurrencyDifferences", param_TransRefParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordRemoveSettlementInfo(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordRemoveSettlementInfo", param_TransRefParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordUnsettleInvoicesOnPayment(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordUnsettleInvoicesOnPayment", param_TransRefParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordUnSettlePayment(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordUnSettlePayment", param_TransRefParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordUpdateCustomerBalance(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordUpdateCustomerBalance", param_TransRefParameter);
        }

        public virtual int sp_Kompas_HeavyUnSettleRecordUpdateSupplierBalance(Nullable<int> param_TransRef)
        {
            var param_TransRefParameter = param_TransRef.HasValue
                ? new ObjectParameter("Param_TransRef", param_TransRef)
                : new ObjectParameter("Param_TransRef", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_HeavyUnSettleRecordUpdateSupplierBalance", param_TransRefParameter);
        }

        public virtual int sp_Kompas_InsertNewPostNr(string param_ZipCode, string param_District)
        {
            var param_ZipCodeParameter = param_ZipCode != null
                ? new ObjectParameter("Param_ZipCode", param_ZipCode)
                : new ObjectParameter("Param_ZipCode", typeof(string));

            var param_DistrictParameter = param_District != null
                ? new ObjectParameter("Param_District", param_District)
                : new ObjectParameter("Param_District", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InsertNewPostNr",
                param_ZipCodeParameter, param_DistrictParameter);
        }

        public virtual int sp_Kompas_InterestCalcCalculateInterestAmountByCustomer(
            Nullable<System.DateTime> param_Starting, Nullable<System.DateTime> param_Ending,
            Nullable<short> param_CalcMethod, string param_Host, Nullable<double> param_MinInterest)
        {
            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_CalcMethodParameter = param_CalcMethod.HasValue
                ? new ObjectParameter("Param_CalcMethod", param_CalcMethod)
                : new ObjectParameter("Param_CalcMethod", typeof(short));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_MinInterestParameter = param_MinInterest.HasValue
                ? new ObjectParameter("Param_MinInterest", param_MinInterest)
                : new ObjectParameter("Param_MinInterest", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InterestCalcCalculateInterestAmountByCustomer", param_StartingParameter,
                    param_EndingParameter, param_CalcMethodParameter, param_HostParameter, param_MinInterestParameter);
        }

        public virtual ObjectResult<sp_Kompas_InterestCalcFetchCustomers_Result> sp_Kompas_InterestCalcFetchCustomers(
            string param_Host, string param_FromCustomer, string param_ToCustomer, string param_FromGrouping,
            string param_ToGrouping, string param_FromInterest, string param_ToInterest,
            Nullable<bool> param_OrderByName)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_FromCustomerParameter = param_FromCustomer != null
                ? new ObjectParameter("Param_FromCustomer", param_FromCustomer)
                : new ObjectParameter("Param_FromCustomer", typeof(string));

            var param_ToCustomerParameter = param_ToCustomer != null
                ? new ObjectParameter("Param_ToCustomer", param_ToCustomer)
                : new ObjectParameter("Param_ToCustomer", typeof(string));

            var param_FromGroupingParameter = param_FromGrouping != null
                ? new ObjectParameter("Param_FromGrouping", param_FromGrouping)
                : new ObjectParameter("Param_FromGrouping", typeof(string));

            var param_ToGroupingParameter = param_ToGrouping != null
                ? new ObjectParameter("Param_ToGrouping", param_ToGrouping)
                : new ObjectParameter("Param_ToGrouping", typeof(string));

            var param_FromInterestParameter = param_FromInterest != null
                ? new ObjectParameter("Param_FromInterest", param_FromInterest)
                : new ObjectParameter("Param_FromInterest", typeof(string));

            var param_ToInterestParameter = param_ToInterest != null
                ? new ObjectParameter("Param_ToInterest", param_ToInterest)
                : new ObjectParameter("Param_ToInterest", typeof(string));

            var param_OrderByNameParameter = param_OrderByName.HasValue
                ? new ObjectParameter("Param_OrderByName", param_OrderByName)
                : new ObjectParameter("Param_OrderByName", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_InterestCalcFetchCustomers_Result>(
                        "sp_Kompas_InterestCalcFetchCustomers", param_HostParameter, param_FromCustomerParameter,
                        param_ToCustomerParameter, param_FromGroupingParameter, param_ToGroupingParameter,
                        param_FromInterestParameter, param_ToInterestParameter, param_OrderByNameParameter);
        }

        public virtual ObjectResult<sp_Kompas_InterestCalcReFetchCustomers_Result>
            sp_Kompas_InterestCalcReFetchCustomers(string param_Host, Nullable<bool> param_OrderByName)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_OrderByNameParameter = param_OrderByName.HasValue
                ? new ObjectParameter("Param_OrderByName", param_OrderByName)
                : new ObjectParameter("Param_OrderByName", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_InterestCalcReFetchCustomers_Result>(
                        "sp_Kompas_InterestCalcReFetchCustomers", param_HostParameter, param_OrderByNameParameter);
        }

        public virtual int sp_Kompas_InterestCalcSelectAll(string param_Host, Nullable<bool> param_Selected)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_SelectedParameter = param_Selected.HasValue
                ? new ObjectParameter("Param_Selected", param_Selected)
                : new ObjectParameter("Param_Selected", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InterestCalcSelectAll",
                param_HostParameter, param_SelectedParameter);
        }

        public virtual int sp_Kompas_InternalUpdateDelSubTotalsOnLines(Nullable<int> param_RecordID,
            Nullable<double> param_Ordered, Nullable<double> param_Deliver, Nullable<double> param_Amount,
            Nullable<double> param_AmountBase, Nullable<double> param_Discount)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliverParameter = param_Deliver.HasValue
                ? new ObjectParameter("Param_Deliver", param_Deliver)
                : new ObjectParameter("Param_Deliver", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AmountBaseParameter = param_AmountBase.HasValue
                ? new ObjectParameter("Param_AmountBase", param_AmountBase)
                : new ObjectParameter("Param_AmountBase", typeof(double));

            var param_DiscountParameter = param_Discount.HasValue
                ? new ObjectParameter("Param_Discount", param_Discount)
                : new ObjectParameter("Param_Discount", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InternalUpdateDelSubTotalsOnLines", param_RecordIDParameter, param_OrderedParameter,
                    param_DeliverParameter, param_AmountParameter, param_AmountBaseParameter, param_DiscountParameter);
        }

        public virtual int sp_Kompas_InternalUpdateDelSubTotalsOnLinesEntry(Nullable<int> param_RecordID,
            Nullable<double> param_Ordered, Nullable<double> param_Deliver, Nullable<double> param_Amount,
            Nullable<double> param_AmountBase, Nullable<double> param_Discount, Nullable<double> param_CostAmount,
            Nullable<double> param_OptionalNumber1)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliverParameter = param_Deliver.HasValue
                ? new ObjectParameter("Param_Deliver", param_Deliver)
                : new ObjectParameter("Param_Deliver", typeof(double));

            var param_AmountParameter = param_Amount.HasValue
                ? new ObjectParameter("Param_Amount", param_Amount)
                : new ObjectParameter("Param_Amount", typeof(double));

            var param_AmountBaseParameter = param_AmountBase.HasValue
                ? new ObjectParameter("Param_AmountBase", param_AmountBase)
                : new ObjectParameter("Param_AmountBase", typeof(double));

            var param_DiscountParameter = param_Discount.HasValue
                ? new ObjectParameter("Param_Discount", param_Discount)
                : new ObjectParameter("Param_Discount", typeof(double));

            var param_CostAmountParameter = param_CostAmount.HasValue
                ? new ObjectParameter("Param_CostAmount", param_CostAmount)
                : new ObjectParameter("Param_CostAmount", typeof(double));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InternalUpdateDelSubTotalsOnLinesEntry", param_RecordIDParameter, param_OrderedParameter,
                    param_DeliverParameter, param_AmountParameter, param_AmountBaseParameter, param_DiscountParameter,
                    param_CostAmountParameter, param_OptionalNumber1Parameter);
        }

        public virtual int sp_Kompas_InvCountCheckLines(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvCountCheckLines",
                param_JournalParameter);
        }

        public virtual int sp_Kompas_InvCountCompressDeleteOldLines(string param_Journal,
            Nullable<bool> param_ForceAllLines)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_ForceAllLinesParameter = param_ForceAllLines.HasValue
                ? new ObjectParameter("Param_ForceAllLines", param_ForceAllLines)
                : new ObjectParameter("Param_ForceAllLines", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InvCountCompressDeleteOldLines", param_JournalParameter, param_ForceAllLinesParameter);
        }

        public virtual int sp_Kompas_InvCountCompressDeleteZeroLines(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InvCountCompressDeleteZeroLines", param_JournalParameter);
        }

        public virtual int sp_Kompas_InvCountCompressLines(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvCountCompressLines",
                param_JournalParameter);
        }

        public virtual int sp_Kompas_InvCountDeleteJournalEntries(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_InvCountDeleteJournalEntries", param_JournalParameter);
        }

        public virtual int sp_Kompas_InvCountDoInsertLine(string param_Journal, Nullable<short> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvCountDoInsertLine",
                param_JournalParameter, param_LineNoParameter);
        }

        public virtual int sp_Kompas_InvCountGetItemsAndLocations(string param_Journal, string param_ItemFrom,
            string param_ItemTo, string param_LocationFrom, string param_LocationTo, string param_GroupingFrom,
            string param_GroupingTo, string param_PlacementFrom, string param_PlacementTo, string param_SupplierFrom,
            string param_SupplierTo, Nullable<bool> param_NegativeStock, Nullable<bool> param_Location,
            Nullable<bool> param_Parameter, string param_SortField)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_ItemFromParameter = param_ItemFrom != null
                ? new ObjectParameter("Param_ItemFrom", param_ItemFrom)
                : new ObjectParameter("Param_ItemFrom", typeof(string));

            var param_ItemToParameter = param_ItemTo != null
                ? new ObjectParameter("Param_ItemTo", param_ItemTo)
                : new ObjectParameter("Param_ItemTo", typeof(string));

            var param_LocationFromParameter = param_LocationFrom != null
                ? new ObjectParameter("Param_LocationFrom", param_LocationFrom)
                : new ObjectParameter("Param_LocationFrom", typeof(string));

            var param_LocationToParameter = param_LocationTo != null
                ? new ObjectParameter("Param_LocationTo", param_LocationTo)
                : new ObjectParameter("Param_LocationTo", typeof(string));

            var param_GroupingFromParameter = param_GroupingFrom != null
                ? new ObjectParameter("Param_GroupingFrom", param_GroupingFrom)
                : new ObjectParameter("Param_GroupingFrom", typeof(string));

            var param_GroupingToParameter = param_GroupingTo != null
                ? new ObjectParameter("Param_GroupingTo", param_GroupingTo)
                : new ObjectParameter("Param_GroupingTo", typeof(string));

            var param_PlacementFromParameter = param_PlacementFrom != null
                ? new ObjectParameter("Param_PlacementFrom", param_PlacementFrom)
                : new ObjectParameter("Param_PlacementFrom", typeof(string));

            var param_PlacementToParameter = param_PlacementTo != null
                ? new ObjectParameter("Param_PlacementTo", param_PlacementTo)
                : new ObjectParameter("Param_PlacementTo", typeof(string));

            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_NegativeStockParameter = param_NegativeStock.HasValue
                ? new ObjectParameter("Param_NegativeStock", param_NegativeStock)
                : new ObjectParameter("Param_NegativeStock", typeof(bool));

            var param_LocationParameter = param_Location.HasValue
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(bool));

            var param_ParameterParameter = param_Parameter.HasValue
                ? new ObjectParameter("Param_Parameter", param_Parameter)
                : new ObjectParameter("Param_Parameter", typeof(bool));

            var param_SortFieldParameter = param_SortField != null
                ? new ObjectParameter("Param_SortField", param_SortField)
                : new ObjectParameter("Param_SortField", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_InvCountGetItemsAndLocations", param_JournalParameter, param_ItemFromParameter,
                param_ItemToParameter, param_LocationFromParameter, param_LocationToParameter,
                param_GroupingFromParameter, param_GroupingToParameter, param_PlacementFromParameter,
                param_PlacementToParameter, param_SupplierFromParameter, param_SupplierToParameter,
                param_NegativeStockParameter, param_LocationParameter, param_ParameterParameter,
                param_SortFieldParameter);
        }

        public virtual int sp_Kompas_InvCountInsertIntoInvCountJournal(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InvCountInsertIntoInvCountJournal", param_JournalParameter);
        }

        public virtual int sp_Kompas_InvCountPrepareInsertLine(string param_Journal, Nullable<short> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvCountPrepareInsertLine",
                param_JournalParameter, param_LineNoParameter);
        }

        public virtual int sp_Kompas_InvCountUpdateOnHand(string param_Journal,
            Nullable<System.DateTime> param_CountDate, Nullable<bool> param_UseLocation,
            Nullable<bool> param_UseParameter, Nullable<bool> param_SetCounted, Nullable<bool> param_UsePhysOnhand)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_CountDateParameter = param_CountDate.HasValue
                ? new ObjectParameter("Param_CountDate", param_CountDate)
                : new ObjectParameter("Param_CountDate", typeof(System.DateTime));

            var param_UseLocationParameter = param_UseLocation.HasValue
                ? new ObjectParameter("Param_UseLocation", param_UseLocation)
                : new ObjectParameter("Param_UseLocation", typeof(bool));

            var param_UseParameterParameter = param_UseParameter.HasValue
                ? new ObjectParameter("Param_UseParameter", param_UseParameter)
                : new ObjectParameter("Param_UseParameter", typeof(bool));

            var param_SetCountedParameter = param_SetCounted.HasValue
                ? new ObjectParameter("Param_SetCounted", param_SetCounted)
                : new ObjectParameter("Param_SetCounted", typeof(bool));

            var param_UsePhysOnhandParameter = param_UsePhysOnhand.HasValue
                ? new ObjectParameter("Param_UsePhysOnhand", param_UsePhysOnhand)
                : new ObjectParameter("Param_UsePhysOnhand", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvCountUpdateOnHand",
                param_JournalParameter, param_CountDateParameter, param_UseLocationParameter,
                param_UseParameterParameter, param_SetCountedParameter, param_UsePhysOnhandParameter);
        }

        public virtual int sp_Kompas_InvCountUpdateOnHandLastCountInfo(string param_Journal,
            Nullable<System.DateTime> param_CountDate, string param_CountBy)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_CountDateParameter = param_CountDate.HasValue
                ? new ObjectParameter("Param_CountDate", param_CountDate)
                : new ObjectParameter("Param_CountDate", typeof(System.DateTime));

            var param_CountByParameter = param_CountBy != null
                ? new ObjectParameter("Param_CountBy", param_CountBy)
                : new ObjectParameter("Param_CountBy", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InvCountUpdateOnHandLastCountInfo", param_JournalParameter, param_CountDateParameter,
                    param_CountByParameter);
        }

        public virtual int sp_Kompas_InventoryFetchNext(string param_Item, ObjectParameter param_NewItem)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InventoryFetchNext",
                param_ItemParameter, param_NewItem);
        }

        public virtual int sp_Kompas_InventoryFetchPrevious(string param_Item, ObjectParameter param_NewItem)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InventoryFetchPrevious",
                param_ItemParameter, param_NewItem);
        }

        public virtual int sp_Kompas_InventoryFKFormDeleteItemFromInventory(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InventoryFKFormDeleteItemFromInventory", param_ItemParameter);
        }

        public virtual int sp_Kompas_InventoryFKFormDeleteItemFromOnHand(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InventoryFKFormDeleteItemFromOnHand", param_ItemParameter);
        }

        public virtual int sp_Kompas_InventoryIntrastatStatement(Nullable<System.DateTime> param_FromDate,
            Nullable<System.DateTime> param_ToDate)
        {
            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_InventoryIntrastatStatement", param_FromDateParameter, param_ToDateParameter);
        }

        public virtual int sp_Kompas_InventoryUpdateOnHand(Nullable<double> param_Trail, Nullable<int> param_Status,
            Nullable<bool> param_UpdatePrice, Nullable<bool> param_UpdateCostprice, Nullable<double> param_Rate,
            Nullable<int> param_FromRecordID, Nullable<bool> param_ForceCostPriceUpdate)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_StatusParameter = param_Status.HasValue
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(int));

            var param_UpdatePriceParameter = param_UpdatePrice.HasValue
                ? new ObjectParameter("Param_UpdatePrice", param_UpdatePrice)
                : new ObjectParameter("Param_UpdatePrice", typeof(bool));

            var param_UpdateCostpriceParameter = param_UpdateCostprice.HasValue
                ? new ObjectParameter("Param_UpdateCostprice", param_UpdateCostprice)
                : new ObjectParameter("Param_UpdateCostprice", typeof(bool));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            var param_FromRecordIDParameter = param_FromRecordID.HasValue
                ? new ObjectParameter("Param_FromRecordID", param_FromRecordID)
                : new ObjectParameter("Param_FromRecordID", typeof(int));

            var param_ForceCostPriceUpdateParameter = param_ForceCostPriceUpdate.HasValue
                ? new ObjectParameter("Param_ForceCostPriceUpdate", param_ForceCostPriceUpdate)
                : new ObjectParameter("Param_ForceCostPriceUpdate", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InventoryUpdateOnHand",
                param_TrailParameter, param_StatusParameter, param_UpdatePriceParameter, param_UpdateCostpriceParameter,
                param_RateParameter, param_FromRecordIDParameter, param_ForceCostPriceUpdateParameter);
        }

        public virtual int sp_Kompas_InventoryUpdateSalesprisAndAvance(string param_Item,
            Nullable<double> param_NewSalesPrice, Nullable<bool> param_UpdateItemPrice)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_NewSalesPriceParameter = param_NewSalesPrice.HasValue
                ? new ObjectParameter("Param_NewSalesPrice", param_NewSalesPrice)
                : new ObjectParameter("Param_NewSalesPrice", typeof(double));

            var param_UpdateItemPriceParameter = param_UpdateItemPrice.HasValue
                ? new ObjectParameter("Param_UpdateItemPrice", param_UpdateItemPrice)
                : new ObjectParameter("Param_UpdateItemPrice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InventoryUpdateSalesprisAndAvance", param_ItemParameter, param_NewSalesPriceParameter,
                    param_UpdateItemPriceParameter);
        }

        public virtual int sp_Kompas_InveTextEnsureAllLanguagesInsertToInventoryText(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InveTextEnsureAllLanguagesInsertToInventoryText", param_ItemParameter);
        }

        public virtual ObjectResult<sp_Kompas_InvoiceReprint_SetupInvoices_Result>
            sp_Kompas_InvoiceReprint_SetupInvoices(Nullable<System.DateTime> param_DateFrom,
                Nullable<System.DateTime> param_DateTo, string param_CustomerFrom, string param_CustomerTo,
                string param_VoucherFrom, string param_VoucherTo, Nullable<short> param_OrderTypeFrom,
                Nullable<short> param_OrderTypeTo, string param_OrderByField, string param_Host)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_VoucherFromParameter = param_VoucherFrom != null
                ? new ObjectParameter("Param_VoucherFrom", param_VoucherFrom)
                : new ObjectParameter("Param_VoucherFrom", typeof(string));

            var param_VoucherToParameter = param_VoucherTo != null
                ? new ObjectParameter("Param_VoucherTo", param_VoucherTo)
                : new ObjectParameter("Param_VoucherTo", typeof(string));

            var param_OrderTypeFromParameter = param_OrderTypeFrom.HasValue
                ? new ObjectParameter("Param_OrderTypeFrom", param_OrderTypeFrom)
                : new ObjectParameter("Param_OrderTypeFrom", typeof(short));

            var param_OrderTypeToParameter = param_OrderTypeTo.HasValue
                ? new ObjectParameter("Param_OrderTypeTo", param_OrderTypeTo)
                : new ObjectParameter("Param_OrderTypeTo", typeof(short));

            var param_OrderByFieldParameter = param_OrderByField != null
                ? new ObjectParameter("Param_OrderByField", param_OrderByField)
                : new ObjectParameter("Param_OrderByField", typeof(string));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_InvoiceReprint_SetupInvoices_Result>(
                        "sp_Kompas_InvoiceReprint_SetupInvoices", param_DateFromParameter, param_DateToParameter,
                        param_CustomerFromParameter, param_CustomerToParameter, param_VoucherFromParameter,
                        param_VoucherToParameter, param_OrderTypeFromParameter, param_OrderTypeToParameter,
                        param_OrderByFieldParameter, param_HostParameter);
        }

        public virtual int sp_Kompas_InvSerialAfterUpdateDeleteSerialNoReference(string param_Item,
            string param_SerialNo, Nullable<short> param_InvoiceTP)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            var param_InvoiceTPParameter = param_InvoiceTP.HasValue
                ? new ObjectParameter("Param_InvoiceTP", param_InvoiceTP)
                : new ObjectParameter("Param_InvoiceTP", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_InvSerialAfterUpdateDeleteSerialNoReference", param_ItemParameter,
                    param_SerialNoParameter, param_InvoiceTPParameter);
        }

        public virtual int sp_Kompas_InvWorkSheetDoInsertLine(string param_Journal, Nullable<short> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvWorkSheetDoInsertLine",
                param_JournalParameter, param_LineNoParameter);
        }

        public virtual int sp_Kompas_InvWorkSheetPrepareInsertLine(string param_Journal, Nullable<short> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_InvWorkSheetPrepareInsertLine",
                    param_JournalParameter, param_LineNoParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_JournalGetMaxLineNo(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_JournalGetMaxLineNo", param_JournalParameter);
        }

        public virtual int sp_Kompas_JournalUtilsSumJournal(string param_Journal, Nullable<int> param_EndingLineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_EndingLineNoParameter = param_EndingLineNo.HasValue
                ? new ObjectParameter("Param_EndingLineNo", param_EndingLineNo)
                : new ObjectParameter("Param_EndingLineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_JournalUtilsSumJournal",
                param_JournalParameter, param_EndingLineNoParameter);
        }

        public virtual int sp_Kompas_KonvertToDBVersion34()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_KonvertToDBVersion34");
        }

        public virtual int sp_Kompas_KonvertToDBVersion35()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_KonvertToDBVersion35");
        }

        public virtual int sp_Kompas_KonvertToDBVersion36()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_KonvertToDBVersion36");
        }

        public virtual int sp_Kompas_KonvertToDBVersion37()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_KonvertToDBVersion37");
        }

        public virtual int sp_Kompas_ListFormLoadInsertStandardFilter(string param_Tag, string param_SortFields)
        {
            var param_TagParameter = param_Tag != null
                ? new ObjectParameter("Param_Tag", param_Tag)
                : new ObjectParameter("Param_Tag", typeof(string));

            var param_SortFieldsParameter = param_SortFields != null
                ? new ObjectParameter("Param_SortFields", param_SortFields)
                : new ObjectParameter("Param_SortFields", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_ListFormLoadInsertStandardFilter", param_TagParameter, param_SortFieldsParameter);
        }

        public virtual int sp_Kompas_OnHandInsertItem(string param_Item)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OnHandInsertItem",
                param_ItemParameter);
        }

        public virtual int sp_Kompas_OpenDatabaseForceSysUserAllRights()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OpenDatabaseForceSysUserAllRights");
        }

        public virtual int sp_Kompas_OpenDatabaseInsertSysUser()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OpenDatabaseInsertSysUser");
        }

        public virtual int sp_Kompas_OrderLinesInsertSetOfMaterial(string param_OrderNo, Nullable<int> param_RecordID)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrderLinesInsertSetOfMaterial",
                    param_OrderNoParameter, param_RecordIDParameter);
        }

        public virtual int sp_Kompas_OrderLinesUpdateDeliveryDate(string param_OrderNo,
            Nullable<System.DateTime> param_Date)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_OrderLinesUpdateDeliveryDate", param_OrderNoParameter, param_DateParameter);
        }

        public virtual int sp_Kompas_OrderLinesUpdateWithOrderInfo(string param_Customer, string param_OrderNo,
            string param_Currency, Nullable<double> param_Rate, string param_Tax)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_RateParameter = param_Rate.HasValue
                ? new ObjectParameter("Param_Rate", param_Rate)
                : new ObjectParameter("Param_Rate", typeof(double));

            var param_TaxParameter = param_Tax != null
                ? new ObjectParameter("Param_Tax", param_Tax)
                : new ObjectParameter("Param_Tax", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrderLinesUpdateWithOrderInfo",
                    param_CustomerParameter, param_OrderNoParameter, param_CurrencyParameter, param_RateParameter,
                    param_TaxParameter);
        }

        public virtual ObjectResult<Nullable<double>> sp_Kompas_OrdersCalcWeightDelivery(string param_OrderNo,
            string param_Delivery)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_DeliveryParameter = param_Delivery != null
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<double>>(
                    "sp_Kompas_OrdersCalcWeightDelivery", param_OrderNoParameter, param_DeliveryParameter);
        }

        public virtual int sp_Kompas_OrdersCopyInsertOrderLines(string param_FromOrderNo, string param_ToOrderNo,
            string param_Customer)
        {
            var param_FromOrderNoParameter = param_FromOrderNo != null
                ? new ObjectParameter("Param_FromOrderNo", param_FromOrderNo)
                : new ObjectParameter("Param_FromOrderNo", typeof(string));

            var param_ToOrderNoParameter = param_ToOrderNo != null
                ? new ObjectParameter("Param_ToOrderNo", param_ToOrderNo)
                : new ObjectParameter("Param_ToOrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrdersCopyInsertOrderLines",
                param_FromOrderNoParameter, param_ToOrderNoParameter, param_CustomerParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_OrdersCustomerHasRemarks(string param_OrderCustomer,
            string param_Customer)
        {
            var param_OrderCustomerParameter = param_OrderCustomer != null
                ? new ObjectParameter("Param_OrderCustomer", param_OrderCustomer)
                : new ObjectParameter("Param_OrderCustomer", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_OrdersCustomerHasRemarks", param_OrderCustomerParameter, param_CustomerParameter);
        }

        public virtual int sp_Kompas_OrdersFetchNext(string param_OrderNo, Nullable<double> param_Trail,
            Nullable<short> param_OrderType, Nullable<bool> param_Archive, ObjectParameter param_NewOrderNo,
            ObjectParameter param_NewTrail)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_OrderTypeParameter = param_OrderType.HasValue
                ? new ObjectParameter("Param_OrderType", param_OrderType)
                : new ObjectParameter("Param_OrderType", typeof(short));

            var param_ArchiveParameter = param_Archive.HasValue
                ? new ObjectParameter("Param_Archive", param_Archive)
                : new ObjectParameter("Param_Archive", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrdersFetchNext",
                param_OrderNoParameter, param_TrailParameter, param_OrderTypeParameter, param_ArchiveParameter,
                param_NewOrderNo, param_NewTrail);
        }

        public virtual int sp_Kompas_OrdersFetchPrevious(string param_OrderNo, Nullable<double> param_Trail,
            Nullable<short> param_OrderType, Nullable<bool> param_Archive, ObjectParameter param_NewOrderNo,
            ObjectParameter param_NewTrail)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_OrderTypeParameter = param_OrderType.HasValue
                ? new ObjectParameter("Param_OrderType", param_OrderType)
                : new ObjectParameter("Param_OrderType", typeof(short));

            var param_ArchiveParameter = param_Archive.HasValue
                ? new ObjectParameter("Param_Archive", param_Archive)
                : new ObjectParameter("Param_Archive", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrdersFetchPrevious",
                param_OrderNoParameter, param_TrailParameter, param_OrderTypeParameter, param_ArchiveParameter,
                param_NewOrderNo, param_NewTrail);
        }

        public virtual int sp_Kompas_OrdersInsertNewInsertedLine(string param_OrderNo, string param_Customer,
            Nullable<int> param_LineNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_OrdersInsertNewInsertedLine", param_OrderNoParameter, param_CustomerParameter,
                param_LineNoParameter);
        }

        public virtual int sp_Kompas_OrdersMakeOrderLine(string param_OrderNo, string param_Item,
            Nullable<double> param_Ordered, Nullable<System.DateTime> param_Delivery)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrdersMakeOrderLine",
                param_OrderNoParameter, param_ItemParameter, param_OrderedParameter, param_DeliveryParameter);
        }

        public virtual ObjectResult<sp_Kompas_OrdersSelectNotDisponibleItem_Result>
            sp_Kompas_OrdersSelectNotDisponibleItem(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_OrdersSelectNotDisponibleItem_Result>(
                        "sp_Kompas_OrdersSelectNotDisponibleItem", param_OrderNoParameter);
        }

        public virtual int sp_Kompas_OrdersSelectOrDeselectAllLines(Nullable<bool> param_Selected, string param_OrderNo)
        {
            var param_SelectedParameter = param_Selected.HasValue
                ? new ObjectParameter("Param_Selected", param_Selected)
                : new ObjectParameter("Param_Selected", typeof(bool));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersSelectOrDeselectAllLines", param_SelectedParameter, param_OrderNoParameter);
        }

        public virtual int sp_Kompas_OrdersUpdateAssignInvoiceCustomer(string param_Customer, string param_OrderNo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersUpdateAssignInvoiceCustomer", param_CustomerParameter, param_OrderNoParameter);
        }

        public virtual int sp_Kompas_OrdersUpdateLineNoOnInsertedLines(string param_OrderNo,
            Nullable<bool> param_IsOrder, Nullable<int> param_LineNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_IsOrderParameter = param_IsOrder.HasValue
                ? new ObjectParameter("Param_IsOrder", param_IsOrder)
                : new ObjectParameter("Param_IsOrder", typeof(bool));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersUpdateLineNoOnInsertedLines", param_OrderNoParameter, param_IsOrderParameter,
                    param_LineNoParameter);
        }

        public virtual int sp_Kompas_OrdersUpdateNewRateOnLines(Nullable<double> param_NewRate, string param_OrderNo,
            Nullable<bool> param_IsOrder)
        {
            var param_NewRateParameter = param_NewRate.HasValue
                ? new ObjectParameter("Param_NewRate", param_NewRate)
                : new ObjectParameter("Param_NewRate", typeof(double));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_IsOrderParameter = param_IsOrder.HasValue
                ? new ObjectParameter("Param_IsOrder", param_IsOrder)
                : new ObjectParameter("Param_IsOrder", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_OrdersUpdateNewRateOnLines",
                param_NewRateParameter, param_OrderNoParameter, param_IsOrderParameter);
        }

        public virtual int sp_Kompas_OrdersWorkSheetInsertNewInsertedLine(string param_Journal, string param_OrderNo,
            Nullable<int> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersWorkSheetInsertNewInsertedLine", param_JournalParameter, param_OrderNoParameter,
                    param_LineNoParameter);
        }

        public virtual int sp_Kompas_OrdersWorkSheetUpdateAllLinesInOrders(string param_Journal,
            Nullable<bool> param_ClearJournal, Nullable<int> param_RecordID)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_ClearJournalParameter = param_ClearJournal.HasValue
                ? new ObjectParameter("Param_ClearJournal", param_ClearJournal)
                : new ObjectParameter("Param_ClearJournal", typeof(bool));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersWorkSheetUpdateAllLinesInOrders", param_JournalParameter,
                    param_ClearJournalParameter, param_RecordIDParameter);
        }

        public virtual int sp_Kompas_OrdersWorkSheetUpdateLineNoOnInsertedLines(string param_Journal,
            string param_OrderNo, Nullable<int> param_LineNo)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersWorkSheetUpdateLineNoOnInsertedLines", param_JournalParameter,
                    param_OrderNoParameter, param_LineNoParameter);
        }

        public virtual int sp_Kompas_OrdersWorkSheetUpdateLinesInOrdersByRecordID(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdersWorkSheetUpdateLinesInOrdersByRecordID", param_RecordIDParameter);
        }

        public virtual int sp_Kompas_OrdSerialNoDeleteSerialNoOnItem(string param_Item, string param_SerialNo)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdSerialNoDeleteSerialNoOnItem", param_ItemParameter, param_SerialNoParameter);
        }

        public virtual int sp_Kompas_OrdSerialNoInsertNewSerialNo(string param_Item, string param_SerialNo)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_OrdSerialNoInsertNewSerialNo", param_ItemParameter, param_SerialNoParameter);
        }

        public virtual int sp_Kompas_OrdUtilitiesAfterUpdateUpdateSetOfMaterialLines(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_OrdUtilitiesAfterUpdateUpdateSetOfMaterialLines", param_OrderNoParameter);
        }

        public virtual int sp_Kompas_PeriodBalanceChangePeriodStatus(Nullable<short> param_NewStatus,
            string param_PeriodID)
        {
            var param_NewStatusParameter = param_NewStatus.HasValue
                ? new ObjectParameter("Param_NewStatus", param_NewStatus)
                : new ObjectParameter("Param_NewStatus", typeof(short));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PeriodBalanceChangePeriodStatus", param_NewStatusParameter, param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_PeriodBalanceForceNotNullOnBudget()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PeriodBalanceForceNotNullOnBudget");
        }

        public virtual int sp_Kompas_PeriodBalanceMakeNewYear(Nullable<System.DateTime> param_Ending)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PeriodBalanceMakeNewYear",
                param_EndingParameter);
        }

        public virtual int sp_Kompas_PeriodBalanceOnSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_PeriodBalanceOnSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_PeriodBalanceUpdateBudgetOnAnAccount(Nullable<double> param_NewBudget,
            string param_Account, string param_PeriodID)
        {
            var param_NewBudgetParameter = param_NewBudget.HasValue
                ? new ObjectParameter("Param_NewBudget", param_NewBudget)
                : new ObjectParameter("Param_NewBudget", typeof(double));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PeriodBalanceUpdateBudgetOnAnAccount", param_NewBudgetParameter, param_AccountParameter,
                    param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_PeriodBalanceUpdateThisYearsBudgetWithLastYearsActuals(string param_LYFromPeriodID,
            string param_LYToPeriodID, Nullable<double> param_PctAdjust)
        {
            var param_LYFromPeriodIDParameter = param_LYFromPeriodID != null
                ? new ObjectParameter("Param_LYFromPeriodID", param_LYFromPeriodID)
                : new ObjectParameter("Param_LYFromPeriodID", typeof(string));

            var param_LYToPeriodIDParameter = param_LYToPeriodID != null
                ? new ObjectParameter("Param_LYToPeriodID", param_LYToPeriodID)
                : new ObjectParameter("Param_LYToPeriodID", typeof(string));

            var param_PctAdjustParameter = param_PctAdjust.HasValue
                ? new ObjectParameter("Param_PctAdjust", param_PctAdjust)
                : new ObjectParameter("Param_PctAdjust", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PeriodBalanceUpdateThisYearsBudgetWithLastYearsActuals", param_LYFromPeriodIDParameter,
                    param_LYToPeriodIDParameter, param_PctAdjustParameter);
        }

        public virtual ObjectResult<sp_Kompas_PeriodsByNameWithEndingAndStarting_Result>
            sp_Kompas_PeriodsByNameWithEndingAndStarting()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_PeriodsByNameWithEndingAndStarting_Result>(
                        "sp_Kompas_PeriodsByNameWithEndingAndStarting");
        }

        public virtual int sp_Kompas_PeriodsUpdateRemarks(string param_NewRemark, string param_PeriodID)
        {
            var param_NewRemarkParameter = param_NewRemark != null
                ? new ObjectParameter("Param_NewRemark", param_NewRemark)
                : new ObjectParameter("Param_NewRemark", typeof(string));

            var param_PeriodIDParameter = param_PeriodID != null
                ? new ObjectParameter("Param_PeriodID", param_PeriodID)
                : new ObjectParameter("Param_PeriodID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PeriodsUpdateRemarks",
                param_NewRemarkParameter, param_PeriodIDParameter);
        }

        public virtual int sp_Kompas_PM_DeleteOptions()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PM_DeleteOptions");
        }

        public virtual int sp_Kompas_PriceListAddAddItems(string param_PriceList, Nullable<short> param_PriceListType,
            Nullable<double> param_Quantity, string param_Unit, string param_Currency,
            Nullable<System.DateTime> param_Active, Nullable<System.DateTime> param_InActive,
            string param_SelectItemFrom, string param_SelectItemTo, string param_SelectLocationFrom,
            string param_SelectLocationTo, string param_SelectGroupFrom, string param_SelectGroupTo,
            string param_SelectCategoryFrom, string param_SelectCategoryTo, string param_SelectSupplierFrom,
            string param_SelectSupplierTo, Nullable<byte> param_SelectWebUseOnWebFrom,
            Nullable<byte> param_SelectWebUseOnWebTo, string param_UserID)
        {
            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_PriceListTypeParameter = param_PriceListType.HasValue
                ? new ObjectParameter("Param_PriceListType", param_PriceListType)
                : new ObjectParameter("Param_PriceListType", typeof(short));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_ActiveParameter = param_Active.HasValue
                ? new ObjectParameter("Param_Active", param_Active)
                : new ObjectParameter("Param_Active", typeof(System.DateTime));

            var param_InActiveParameter = param_InActive.HasValue
                ? new ObjectParameter("Param_InActive", param_InActive)
                : new ObjectParameter("Param_InActive", typeof(System.DateTime));

            var param_SelectItemFromParameter = param_SelectItemFrom != null
                ? new ObjectParameter("Param_SelectItemFrom", param_SelectItemFrom)
                : new ObjectParameter("Param_SelectItemFrom", typeof(string));

            var param_SelectItemToParameter = param_SelectItemTo != null
                ? new ObjectParameter("Param_SelectItemTo", param_SelectItemTo)
                : new ObjectParameter("Param_SelectItemTo", typeof(string));

            var param_SelectLocationFromParameter = param_SelectLocationFrom != null
                ? new ObjectParameter("Param_SelectLocationFrom", param_SelectLocationFrom)
                : new ObjectParameter("Param_SelectLocationFrom", typeof(string));

            var param_SelectLocationToParameter = param_SelectLocationTo != null
                ? new ObjectParameter("Param_SelectLocationTo", param_SelectLocationTo)
                : new ObjectParameter("Param_SelectLocationTo", typeof(string));

            var param_SelectGroupFromParameter = param_SelectGroupFrom != null
                ? new ObjectParameter("Param_SelectGroupFrom", param_SelectGroupFrom)
                : new ObjectParameter("Param_SelectGroupFrom", typeof(string));

            var param_SelectGroupToParameter = param_SelectGroupTo != null
                ? new ObjectParameter("Param_SelectGroupTo", param_SelectGroupTo)
                : new ObjectParameter("Param_SelectGroupTo", typeof(string));

            var param_SelectCategoryFromParameter = param_SelectCategoryFrom != null
                ? new ObjectParameter("Param_SelectCategoryFrom", param_SelectCategoryFrom)
                : new ObjectParameter("Param_SelectCategoryFrom", typeof(string));

            var param_SelectCategoryToParameter = param_SelectCategoryTo != null
                ? new ObjectParameter("Param_SelectCategoryTo", param_SelectCategoryTo)
                : new ObjectParameter("Param_SelectCategoryTo", typeof(string));

            var param_SelectSupplierFromParameter = param_SelectSupplierFrom != null
                ? new ObjectParameter("Param_SelectSupplierFrom", param_SelectSupplierFrom)
                : new ObjectParameter("Param_SelectSupplierFrom", typeof(string));

            var param_SelectSupplierToParameter = param_SelectSupplierTo != null
                ? new ObjectParameter("Param_SelectSupplierTo", param_SelectSupplierTo)
                : new ObjectParameter("Param_SelectSupplierTo", typeof(string));

            var param_SelectWebUseOnWebFromParameter = param_SelectWebUseOnWebFrom.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebFrom", param_SelectWebUseOnWebFrom)
                : new ObjectParameter("Param_SelectWebUseOnWebFrom", typeof(byte));

            var param_SelectWebUseOnWebToParameter = param_SelectWebUseOnWebTo.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebTo", param_SelectWebUseOnWebTo)
                : new ObjectParameter("Param_SelectWebUseOnWebTo", typeof(byte));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PriceListAddAddItems",
                param_PriceListParameter, param_PriceListTypeParameter, param_QuantityParameter, param_UnitParameter,
                param_CurrencyParameter, param_ActiveParameter, param_InActiveParameter, param_SelectItemFromParameter,
                param_SelectItemToParameter, param_SelectLocationFromParameter, param_SelectLocationToParameter,
                param_SelectGroupFromParameter, param_SelectGroupToParameter, param_SelectCategoryFromParameter,
                param_SelectCategoryToParameter, param_SelectSupplierFromParameter, param_SelectSupplierToParameter,
                param_SelectWebUseOnWebFromParameter, param_SelectWebUseOnWebToParameter, param_UserIDParameter);
        }

        public virtual int sp_Kompas_PriceListAddDeleteItems(string param_SelectPriceList,
            Nullable<double> param_SelectQuantity, string param_SelectUnit, string param_SelectCurrency,
            string param_SelectItemFrom, string param_SelectItemTo, string param_SelectLocationFrom,
            string param_SelectLocationTo, string param_SelectGroupFrom, string param_SelectGroupTo,
            string param_SelectCategoryFrom, string param_SelectCategoryTo, string param_SelectSupplierFrom,
            string param_SelectSupplierTo, Nullable<byte> param_SelectWebUseOnWebFrom,
            Nullable<byte> param_SelectWebUseOnWebTo, Nullable<System.DateTime> param_Active,
            Nullable<System.DateTime> param_InActive)
        {
            var param_SelectPriceListParameter = param_SelectPriceList != null
                ? new ObjectParameter("Param_SelectPriceList", param_SelectPriceList)
                : new ObjectParameter("Param_SelectPriceList", typeof(string));

            var param_SelectQuantityParameter = param_SelectQuantity.HasValue
                ? new ObjectParameter("Param_SelectQuantity", param_SelectQuantity)
                : new ObjectParameter("Param_SelectQuantity", typeof(double));

            var param_SelectUnitParameter = param_SelectUnit != null
                ? new ObjectParameter("Param_SelectUnit", param_SelectUnit)
                : new ObjectParameter("Param_SelectUnit", typeof(string));

            var param_SelectCurrencyParameter = param_SelectCurrency != null
                ? new ObjectParameter("Param_SelectCurrency", param_SelectCurrency)
                : new ObjectParameter("Param_SelectCurrency", typeof(string));

            var param_SelectItemFromParameter = param_SelectItemFrom != null
                ? new ObjectParameter("Param_SelectItemFrom", param_SelectItemFrom)
                : new ObjectParameter("Param_SelectItemFrom", typeof(string));

            var param_SelectItemToParameter = param_SelectItemTo != null
                ? new ObjectParameter("Param_SelectItemTo", param_SelectItemTo)
                : new ObjectParameter("Param_SelectItemTo", typeof(string));

            var param_SelectLocationFromParameter = param_SelectLocationFrom != null
                ? new ObjectParameter("Param_SelectLocationFrom", param_SelectLocationFrom)
                : new ObjectParameter("Param_SelectLocationFrom", typeof(string));

            var param_SelectLocationToParameter = param_SelectLocationTo != null
                ? new ObjectParameter("Param_SelectLocationTo", param_SelectLocationTo)
                : new ObjectParameter("Param_SelectLocationTo", typeof(string));

            var param_SelectGroupFromParameter = param_SelectGroupFrom != null
                ? new ObjectParameter("Param_SelectGroupFrom", param_SelectGroupFrom)
                : new ObjectParameter("Param_SelectGroupFrom", typeof(string));

            var param_SelectGroupToParameter = param_SelectGroupTo != null
                ? new ObjectParameter("Param_SelectGroupTo", param_SelectGroupTo)
                : new ObjectParameter("Param_SelectGroupTo", typeof(string));

            var param_SelectCategoryFromParameter = param_SelectCategoryFrom != null
                ? new ObjectParameter("Param_SelectCategoryFrom", param_SelectCategoryFrom)
                : new ObjectParameter("Param_SelectCategoryFrom", typeof(string));

            var param_SelectCategoryToParameter = param_SelectCategoryTo != null
                ? new ObjectParameter("Param_SelectCategoryTo", param_SelectCategoryTo)
                : new ObjectParameter("Param_SelectCategoryTo", typeof(string));

            var param_SelectSupplierFromParameter = param_SelectSupplierFrom != null
                ? new ObjectParameter("Param_SelectSupplierFrom", param_SelectSupplierFrom)
                : new ObjectParameter("Param_SelectSupplierFrom", typeof(string));

            var param_SelectSupplierToParameter = param_SelectSupplierTo != null
                ? new ObjectParameter("Param_SelectSupplierTo", param_SelectSupplierTo)
                : new ObjectParameter("Param_SelectSupplierTo", typeof(string));

            var param_SelectWebUseOnWebFromParameter = param_SelectWebUseOnWebFrom.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebFrom", param_SelectWebUseOnWebFrom)
                : new ObjectParameter("Param_SelectWebUseOnWebFrom", typeof(byte));

            var param_SelectWebUseOnWebToParameter = param_SelectWebUseOnWebTo.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebTo", param_SelectWebUseOnWebTo)
                : new ObjectParameter("Param_SelectWebUseOnWebTo", typeof(byte));

            var param_ActiveParameter = param_Active.HasValue
                ? new ObjectParameter("Param_Active", param_Active)
                : new ObjectParameter("Param_Active", typeof(System.DateTime));

            var param_InActiveParameter = param_InActive.HasValue
                ? new ObjectParameter("Param_InActive", param_InActive)
                : new ObjectParameter("Param_InActive", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PriceListAddDeleteItems",
                param_SelectPriceListParameter, param_SelectQuantityParameter, param_SelectUnitParameter,
                param_SelectCurrencyParameter, param_SelectItemFromParameter, param_SelectItemToParameter,
                param_SelectLocationFromParameter, param_SelectLocationToParameter, param_SelectGroupFromParameter,
                param_SelectGroupToParameter, param_SelectCategoryFromParameter, param_SelectCategoryToParameter,
                param_SelectSupplierFromParameter, param_SelectSupplierToParameter, param_SelectWebUseOnWebFromParameter,
                param_SelectWebUseOnWebToParameter, param_ActiveParameter, param_InActiveParameter);
        }

        public virtual int sp_Kompas_PriceListAddUpdateItems(Nullable<System.DateTime> param_Active,
            Nullable<System.DateTime> param_InActive, Nullable<double> param_Quantity, string param_Unit,
            string param_Currency, string param_SelectPriceList, Nullable<double> param_SelectQuantity,
            string param_SelectUnit, string param_SelectCurrency, string param_SelectItemFrom, string param_SelectItemTo,
            string param_SelectLocationFrom, string param_SelectLocationTo, string param_SelectGroupFrom,
            string param_SelectGroupTo, string param_SelectCategoryFrom, string param_SelectCategoryTo,
            string param_SelectSupplierFrom, string param_SelectSupplierTo, Nullable<byte> param_SelectWebUseOnWebFrom,
            Nullable<byte> param_SelectWebUseOnWebTo, string param_UserID)
        {
            var param_ActiveParameter = param_Active.HasValue
                ? new ObjectParameter("Param_Active", param_Active)
                : new ObjectParameter("Param_Active", typeof(System.DateTime));

            var param_InActiveParameter = param_InActive.HasValue
                ? new ObjectParameter("Param_InActive", param_InActive)
                : new ObjectParameter("Param_InActive", typeof(System.DateTime));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var param_UnitParameter = param_Unit != null
                ? new ObjectParameter("Param_Unit", param_Unit)
                : new ObjectParameter("Param_Unit", typeof(string));

            var param_CurrencyParameter = param_Currency != null
                ? new ObjectParameter("Param_Currency", param_Currency)
                : new ObjectParameter("Param_Currency", typeof(string));

            var param_SelectPriceListParameter = param_SelectPriceList != null
                ? new ObjectParameter("Param_SelectPriceList", param_SelectPriceList)
                : new ObjectParameter("Param_SelectPriceList", typeof(string));

            var param_SelectQuantityParameter = param_SelectQuantity.HasValue
                ? new ObjectParameter("Param_SelectQuantity", param_SelectQuantity)
                : new ObjectParameter("Param_SelectQuantity", typeof(double));

            var param_SelectUnitParameter = param_SelectUnit != null
                ? new ObjectParameter("Param_SelectUnit", param_SelectUnit)
                : new ObjectParameter("Param_SelectUnit", typeof(string));

            var param_SelectCurrencyParameter = param_SelectCurrency != null
                ? new ObjectParameter("Param_SelectCurrency", param_SelectCurrency)
                : new ObjectParameter("Param_SelectCurrency", typeof(string));

            var param_SelectItemFromParameter = param_SelectItemFrom != null
                ? new ObjectParameter("Param_SelectItemFrom", param_SelectItemFrom)
                : new ObjectParameter("Param_SelectItemFrom", typeof(string));

            var param_SelectItemToParameter = param_SelectItemTo != null
                ? new ObjectParameter("Param_SelectItemTo", param_SelectItemTo)
                : new ObjectParameter("Param_SelectItemTo", typeof(string));

            var param_SelectLocationFromParameter = param_SelectLocationFrom != null
                ? new ObjectParameter("Param_SelectLocationFrom", param_SelectLocationFrom)
                : new ObjectParameter("Param_SelectLocationFrom", typeof(string));

            var param_SelectLocationToParameter = param_SelectLocationTo != null
                ? new ObjectParameter("Param_SelectLocationTo", param_SelectLocationTo)
                : new ObjectParameter("Param_SelectLocationTo", typeof(string));

            var param_SelectGroupFromParameter = param_SelectGroupFrom != null
                ? new ObjectParameter("Param_SelectGroupFrom", param_SelectGroupFrom)
                : new ObjectParameter("Param_SelectGroupFrom", typeof(string));

            var param_SelectGroupToParameter = param_SelectGroupTo != null
                ? new ObjectParameter("Param_SelectGroupTo", param_SelectGroupTo)
                : new ObjectParameter("Param_SelectGroupTo", typeof(string));

            var param_SelectCategoryFromParameter = param_SelectCategoryFrom != null
                ? new ObjectParameter("Param_SelectCategoryFrom", param_SelectCategoryFrom)
                : new ObjectParameter("Param_SelectCategoryFrom", typeof(string));

            var param_SelectCategoryToParameter = param_SelectCategoryTo != null
                ? new ObjectParameter("Param_SelectCategoryTo", param_SelectCategoryTo)
                : new ObjectParameter("Param_SelectCategoryTo", typeof(string));

            var param_SelectSupplierFromParameter = param_SelectSupplierFrom != null
                ? new ObjectParameter("Param_SelectSupplierFrom", param_SelectSupplierFrom)
                : new ObjectParameter("Param_SelectSupplierFrom", typeof(string));

            var param_SelectSupplierToParameter = param_SelectSupplierTo != null
                ? new ObjectParameter("Param_SelectSupplierTo", param_SelectSupplierTo)
                : new ObjectParameter("Param_SelectSupplierTo", typeof(string));

            var param_SelectWebUseOnWebFromParameter = param_SelectWebUseOnWebFrom.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebFrom", param_SelectWebUseOnWebFrom)
                : new ObjectParameter("Param_SelectWebUseOnWebFrom", typeof(byte));

            var param_SelectWebUseOnWebToParameter = param_SelectWebUseOnWebTo.HasValue
                ? new ObjectParameter("Param_SelectWebUseOnWebTo", param_SelectWebUseOnWebTo)
                : new ObjectParameter("Param_SelectWebUseOnWebTo", typeof(byte));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PriceListAddUpdateItems",
                param_ActiveParameter, param_InActiveParameter, param_QuantityParameter, param_UnitParameter,
                param_CurrencyParameter, param_SelectPriceListParameter, param_SelectQuantityParameter,
                param_SelectUnitParameter, param_SelectCurrencyParameter, param_SelectItemFromParameter,
                param_SelectItemToParameter, param_SelectLocationFromParameter, param_SelectLocationToParameter,
                param_SelectGroupFromParameter, param_SelectGroupToParameter, param_SelectCategoryFromParameter,
                param_SelectCategoryToParameter, param_SelectSupplierFromParameter, param_SelectSupplierToParameter,
                param_SelectWebUseOnWebFromParameter, param_SelectWebUseOnWebToParameter, param_UserIDParameter);
        }

        public virtual int sp_Kompas_PurchaseLinesUpdateDeliveryDate(string param_PurchaseNo,
            Nullable<System.DateTime> param_Date)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurchaseLinesUpdateDeliveryDate", param_PurchaseNoParameter, param_DateParameter);
        }

        public virtual int sp_Kompas_PurchasesCopyInsertPurchaseLines(string param_FromPurchaseNo,
            string param_ToPurchaseNo, string param_Supplier)
        {
            var param_FromPurchaseNoParameter = param_FromPurchaseNo != null
                ? new ObjectParameter("Param_FromPurchaseNo", param_FromPurchaseNo)
                : new ObjectParameter("Param_FromPurchaseNo", typeof(string));

            var param_ToPurchaseNoParameter = param_ToPurchaseNo != null
                ? new ObjectParameter("Param_ToPurchaseNo", param_ToPurchaseNo)
                : new ObjectParameter("Param_ToPurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurchasesCopyInsertPurchaseLines", param_FromPurchaseNoParameter,
                    param_ToPurchaseNoParameter, param_SupplierParameter);
        }

        public virtual int sp_Kompas_PurchasesDeleteSerialNoByRecordID(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurchasesDeleteSerialNoByRecordID", param_RecordIDParameter);
        }

        public virtual int sp_Kompas_PurchasesFetchNext(string param_PurchaseNo, Nullable<double> param_Trail,
            Nullable<bool> param_Archive, ObjectParameter param_NewPurchaseNo, ObjectParameter param_NewTrail)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_ArchiveParameter = param_Archive.HasValue
                ? new ObjectParameter("Param_Archive", param_Archive)
                : new ObjectParameter("Param_Archive", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PurchasesFetchNext",
                param_PurchaseNoParameter, param_TrailParameter, param_ArchiveParameter, param_NewPurchaseNo,
                param_NewTrail);
        }

        public virtual int sp_Kompas_PurchasesFetchPrevious(string param_PurchaseNo, Nullable<double> param_Trail,
            Nullable<bool> param_Archive, ObjectParameter param_NewPurchaseNo, ObjectParameter param_NewTrail)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_ArchiveParameter = param_Archive.HasValue
                ? new ObjectParameter("Param_Archive", param_Archive)
                : new ObjectParameter("Param_Archive", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_PurchasesFetchPrevious",
                param_PurchaseNoParameter, param_TrailParameter, param_ArchiveParameter, param_NewPurchaseNo,
                param_NewTrail);
        }

        public virtual int sp_Kompas_PurchasesInsertNewInsertedLine(string param_PurchaseNo, string param_Supplier,
            Nullable<int> param_LineNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_LineNoParameter = param_LineNo.HasValue
                ? new ObjectParameter("Param_LineNo", param_LineNo)
                : new ObjectParameter("Param_LineNo", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurchasesInsertNewInsertedLine", param_PurchaseNoParameter, param_SupplierParameter,
                    param_LineNoParameter);
        }

        public virtual int sp_Kompas_PurchasesUpdateSupplierOnLines(string param_Supplier, string param_PurchaseNo,
            string param_Tax)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TaxParameter = param_Tax != null
                ? new ObjectParameter("Param_Tax", param_Tax)
                : new ObjectParameter("Param_Tax", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurchasesUpdateSupplierOnLines", param_SupplierParameter, param_PurchaseNoParameter,
                    param_TaxParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_PurchaseSupplierHasRemarks(string param_Supplier,
            string param_ShipTo)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_PurchaseSupplierHasRemarks", param_SupplierParameter, param_ShipToParameter);
        }

        public virtual int sp_Kompas_PurSerialNoUpdateClearSerialNo(string param_Item, string param_SerialNo)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_SerialNoParameter = param_SerialNo != null
                ? new ObjectParameter("Param_SerialNo", param_SerialNo)
                : new ObjectParameter("Param_SerialNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_PurSerialNoUpdateClearSerialNo", param_ItemParameter, param_SerialNoParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateAccountsCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateAccountsCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateCustomersCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateCustomersCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateCustomersLink()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCommonUpdateCustomersLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdateItemPriceCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateItemPriceCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateLinesCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateLinesCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateLinesEntryCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateLinesEntryCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateOrdersCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateOrdersCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateOrdersLink()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCommonUpdateOrdersLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdatePurchasesCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdatePurchasesCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdatePurchasesLink()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCommonUpdatePurchasesLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdateSuppliersCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateSuppliersCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateSuppliersLink()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCommonUpdateSuppliersLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdateTaxLink()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCommonUpdateTaxLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdateTaxPeriodsLink()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateTaxPeriodsLink");
        }

        public virtual int sp_Kompas_RecalcCommonUpdateTransactionsCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateTransactionsCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCommonUpdateTransEntryCurrency(string param_SystemCurrency)
        {
            var param_SystemCurrencyParameter = param_SystemCurrency != null
                ? new ObjectParameter("Param_SystemCurrency", param_SystemCurrency)
                : new ObjectParameter("Param_SystemCurrency", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcCommonUpdateTransEntryCurrency", param_SystemCurrencyParameter);
        }

        public virtual int sp_Kompas_RecalcCustomersResetCustomer()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCustomersResetCustomer");
        }

        public virtual int sp_Kompas_RecalcCustomersRoundBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCustomersRoundBalance");
        }

        public virtual int sp_Kompas_RecalcCustomersUpdateBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcCustomersUpdateBalance");
        }

        public virtual int sp_Kompas_RecalcEnsureTransactionsClosedIsNotNull()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcEnsureTransactionsClosedIsNotNull");
        }

        public virtual int sp_Kompas_RecalcForceOpeningOnAllPeriods()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcForceOpeningOnAllPeriods");
        }

        public virtual int sp_Kompas_RecalcForceTransactionsPeriodIDOpeningAllAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcForceTransactionsPeriodIDOpeningAllAccounts");
        }

        public virtual int sp_Kompas_RecalcForceTransactionsPeriodIDOpeningSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcForceTransactionsPeriodIDOpeningSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_RecalcForceTransactionsPeriodIDOtherAllAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcForceTransactionsPeriodIDOtherAllAccounts");
        }

        public virtual int sp_Kompas_RecalcForceTransactionsPeriodIDOtherSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcForceTransactionsPeriodIDOtherSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustByAllocatedOrders()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustByAllocatedOrders");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustByAllocatedPurchases()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustByAllocatedPurchases");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustByNotAllocatedOrders()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustByNotAllocatedOrders");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustByNotAllocatedPurchases()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustByNotAllocatedPurchases");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustOnHandAllocatedBOMItems()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustOnHandAllocatedBOMItems");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustOnHandByAllocatedOrders()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustOnHandByAllocatedOrders");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustOnHandByAllocatedPurchases()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustOnHandByAllocatedPurchases");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustOnHandByNotAllocatedOrders()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustOnHandByNotAllocatedOrders");
        }

        public virtual int sp_Kompas_RecalcInventoryAdjustOnHandByNotAllocatedPurchases()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryAdjustOnHandByNotAllocatedPurchases");
        }

        public virtual int sp_Kompas_RecalcInventoryDeleteErrorLinesEntry()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryDeleteErrorLinesEntry");
        }

        public virtual int sp_Kompas_RecalcInventoryDeleteUnneededOnHand()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryDeleteUnneededOnHand");
        }

        public virtual int sp_Kompas_RecalcInventoryEnsureConversionAboveZero()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryEnsureConversionAboveZero");
        }

        public virtual int sp_Kompas_RecalcInventoryEnsureDecimalsZeroOrAbove()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryEnsureDecimalsZeroOrAbove");
        }

        public virtual int sp_Kompas_RecalcInventoryEnsureLinesEntryConversionAboveZero()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryEnsureLinesEntryConversionAboveZero");
        }

        public virtual int sp_Kompas_RecalcInventoryOnHandInsertMainLocation()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryOnHandInsertMainLocation");
        }

        public virtual int sp_Kompas_RecalcInventoryOnHandInsertSpecificLocation()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryOnHandInsertSpecificLocation");
        }

        public virtual int sp_Kompas_RecalcInventoryResetItems()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcInventoryResetItems");
        }

        public virtual int sp_Kompas_RecalcInventoryResetOnHand()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcInventoryResetOnHand");
        }

        public virtual int sp_Kompas_RecalcInventoryRoundOnHandValues()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryRoundOnHandValues");
        }

        public virtual int sp_Kompas_RecalcInventoryRoundValues()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcInventoryRoundValues");
        }

        public virtual int sp_Kompas_RecalcInventoryUpdateItemsByBookedLines()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryUpdateItemsByBookedLines");
        }

        public virtual int sp_Kompas_RecalcInventoryUpdateOnHandByBookedLines()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcInventoryUpdateOnHandByBookedLines");
        }

        public virtual int sp_Kompas_RecalcOpenEntrySettlements(Nullable<double> param_NewRate,
            Nullable<int> param_RecordID)
        {
            var param_NewRateParameter = param_NewRate.HasValue
                ? new ObjectParameter("Param_NewRate", param_NewRate)
                : new ObjectParameter("Param_NewRate", typeof(double));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcOpenEntrySettlements",
                param_NewRateParameter, param_RecordIDParameter);
        }

        public virtual int sp_Kompas_RecalcOrderLines(string param_OrderNo, Nullable<bool> param_UpdatePrice,
            Nullable<bool> param_UpdateCostPrice, Nullable<bool> param_UpdateDiscount, Nullable<int> param_FromLineNo,
            Nullable<int> param_RecordID, Nullable<byte> param_KeepPriceOnOrdreRecalc,
            Nullable<bool> param_UpdateAllLines)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UpdatePriceParameter = param_UpdatePrice.HasValue
                ? new ObjectParameter("Param_UpdatePrice", param_UpdatePrice)
                : new ObjectParameter("Param_UpdatePrice", typeof(bool));

            var param_UpdateCostPriceParameter = param_UpdateCostPrice.HasValue
                ? new ObjectParameter("Param_UpdateCostPrice", param_UpdateCostPrice)
                : new ObjectParameter("Param_UpdateCostPrice", typeof(bool));

            var param_UpdateDiscountParameter = param_UpdateDiscount.HasValue
                ? new ObjectParameter("Param_UpdateDiscount", param_UpdateDiscount)
                : new ObjectParameter("Param_UpdateDiscount", typeof(bool));

            var param_FromLineNoParameter = param_FromLineNo.HasValue
                ? new ObjectParameter("Param_FromLineNo", param_FromLineNo)
                : new ObjectParameter("Param_FromLineNo", typeof(int));

            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_KeepPriceOnOrdreRecalcParameter = param_KeepPriceOnOrdreRecalc.HasValue
                ? new ObjectParameter("Param_KeepPriceOnOrdreRecalc", param_KeepPriceOnOrdreRecalc)
                : new ObjectParameter("Param_KeepPriceOnOrdreRecalc", typeof(byte));

            var param_UpdateAllLinesParameter = param_UpdateAllLines.HasValue
                ? new ObjectParameter("Param_UpdateAllLines", param_UpdateAllLines)
                : new ObjectParameter("Param_UpdateAllLines", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcOrderLines",
                param_OrderNoParameter, param_UpdatePriceParameter, param_UpdateCostPriceParameter,
                param_UpdateDiscountParameter, param_FromLineNoParameter, param_RecordIDParameter,
                param_KeepPriceOnOrdreRecalcParameter, param_UpdateAllLinesParameter);
        }

        public virtual int sp_Kompas_RecalcOrdersSetLinkOnOpenOrders()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcOrdersSetLinkOnOpenOrders");
        }

        public virtual int sp_Kompas_RecalcPurchaseLines(string param_PurchaseNo, Nullable<bool> param_UpdatePrice,
            Nullable<bool> param_UpdateDiscount, Nullable<int> param_FromLineNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_UpdatePriceParameter = param_UpdatePrice.HasValue
                ? new ObjectParameter("Param_UpdatePrice", param_UpdatePrice)
                : new ObjectParameter("Param_UpdatePrice", typeof(bool));

            var param_UpdateDiscountParameter = param_UpdateDiscount.HasValue
                ? new ObjectParameter("Param_UpdateDiscount", param_UpdateDiscount)
                : new ObjectParameter("Param_UpdateDiscount", typeof(bool));

            var param_FromLineNoParameter = param_FromLineNo.HasValue
                ? new ObjectParameter("Param_FromLineNo", param_FromLineNo)
                : new ObjectParameter("Param_FromLineNo", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcPurchaseLines",
                param_PurchaseNoParameter, param_UpdatePriceParameter, param_UpdateDiscountParameter,
                param_FromLineNoParameter);
        }

        public virtual int sp_Kompas_RecalcPurchasesSetLinkOnOpenPurchases()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcPurchasesSetLinkOnOpenPurchases");
        }

        public virtual int sp_Kompas_RecalcResetAllAccounts()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcResetAllAccounts");
        }

        public virtual int sp_Kompas_RecalcResetPeriodBalanceAllAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcResetPeriodBalanceAllAccounts");
        }

        public virtual int sp_Kompas_RecalcResetPeriodBalanceSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcResetPeriodBalanceSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_RecalcResetSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcResetSingleAccount",
                param_AccountParameter);
        }

        public virtual int sp_Kompas_RecalcRoundPeriodBalanceAmounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcRoundPeriodBalanceAmounts");
        }

        public virtual int sp_Kompas_RecalcSuppliersResetSupplier()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcSuppliersResetSupplier");
        }

        public virtual int sp_Kompas_RecalcSuppliersRoundBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcSuppliersRoundBalance");
        }

        public virtual int sp_Kompas_RecalcSuppliersUpdateBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcSuppliersUpdateBalance");
        }

        public virtual int sp_Kompas_RecalcUpdateAccountsBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RecalcUpdateAccountsBalance");
        }

        public virtual int sp_Kompas_RecalcUpdatePeriodBalanceBalanceAllAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcUpdatePeriodBalanceBalanceAllAccounts");
        }

        public virtual int sp_Kompas_RecalcUpdatePeriodBalanceBalanceSingleAccount(string param_Account)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcUpdatePeriodBalanceBalanceSingleAccount", param_AccountParameter);
        }

        public virtual int sp_Kompas_RecalcUpdatePeriodBalanceCurEarnings()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcUpdatePeriodBalanceCurEarnings");
        }

        public virtual int sp_Kompas_RecalcUpdatePeriodBalanceSumAccounts()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RecalcUpdatePeriodBalanceSumAccounts");
        }

        public virtual int sp_Kompas_RemindersBookReminders(Nullable<System.DateTime> param_Ending,
            string param_EndingID, string param_Customer, string param_Description, Nullable<double> param_Trail,
            string param_Source, string param_Voucher, string param_UserName, Nullable<bool> param_PostFee,
            Nullable<bool> param_UpdateNo, Nullable<System.DateTime> param_ThisPrDate, string param_Host)
        {
            var param_EndingParameter = param_Ending.HasValue
                ? new ObjectParameter("Param_Ending", param_Ending)
                : new ObjectParameter("Param_Ending", typeof(System.DateTime));

            var param_EndingIDParameter = param_EndingID != null
                ? new ObjectParameter("Param_EndingID", param_EndingID)
                : new ObjectParameter("Param_EndingID", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_SourceParameter = param_Source != null
                ? new ObjectParameter("Param_Source", param_Source)
                : new ObjectParameter("Param_Source", typeof(string));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_PostFeeParameter = param_PostFee.HasValue
                ? new ObjectParameter("Param_PostFee", param_PostFee)
                : new ObjectParameter("Param_PostFee", typeof(bool));

            var param_UpdateNoParameter = param_UpdateNo.HasValue
                ? new ObjectParameter("Param_UpdateNo", param_UpdateNo)
                : new ObjectParameter("Param_UpdateNo", typeof(bool));

            var param_ThisPrDateParameter = param_ThisPrDate.HasValue
                ? new ObjectParameter("Param_ThisPrDate", param_ThisPrDate)
                : new ObjectParameter("Param_ThisPrDate", typeof(System.DateTime));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_RemindersBookReminders",
                param_EndingParameter, param_EndingIDParameter, param_CustomerParameter, param_DescriptionParameter,
                param_TrailParameter, param_SourceParameter, param_VoucherParameter, param_UserNameParameter,
                param_PostFeeParameter, param_UpdateNoParameter, param_ThisPrDateParameter, param_HostParameter);
        }

        public virtual ObjectResult<sp_Kompas_RemindersCheckBeforeBook_Result> sp_Kompas_RemindersCheckBeforeBook(
            string param_Host)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_RemindersCheckBeforeBook_Result>(
                    "sp_Kompas_RemindersCheckBeforeBook", param_HostParameter);
        }

        public virtual int sp_Kompas_RemindersGetCustomerForReminders(Nullable<System.DateTime> param_ThisPrDate,
            string param_Host, string param_CustomerFrom, string param_CustomerTo, string param_GroupFrom,
            string param_GroupTo, Nullable<int> param_LastReminderFrom, Nullable<int> param_LastReminderTo,
            Nullable<bool> param_NoBlockedCustomers)
        {
            var param_ThisPrDateParameter = param_ThisPrDate.HasValue
                ? new ObjectParameter("Param_ThisPrDate", param_ThisPrDate)
                : new ObjectParameter("Param_ThisPrDate", typeof(System.DateTime));

            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_LastReminderFromParameter = param_LastReminderFrom.HasValue
                ? new ObjectParameter("Param_LastReminderFrom", param_LastReminderFrom)
                : new ObjectParameter("Param_LastReminderFrom", typeof(int));

            var param_LastReminderToParameter = param_LastReminderTo.HasValue
                ? new ObjectParameter("Param_LastReminderTo", param_LastReminderTo)
                : new ObjectParameter("Param_LastReminderTo", typeof(int));

            var param_NoBlockedCustomersParameter = param_NoBlockedCustomers.HasValue
                ? new ObjectParameter("Param_NoBlockedCustomers", param_NoBlockedCustomers)
                : new ObjectParameter("Param_NoBlockedCustomers", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_RemindersGetCustomerForReminders", param_ThisPrDateParameter, param_HostParameter,
                    param_CustomerFromParameter, param_CustomerToParameter, param_GroupFromParameter,
                    param_GroupToParameter, param_LastReminderFromParameter, param_LastReminderToParameter,
                    param_NoBlockedCustomersParameter);
        }

        public virtual ObjectResult<sp_Kompas_RemindersMakeEntriesForPrint_Result>
            sp_Kompas_RemindersMakeEntriesForPrint(string param_Host, Nullable<System.DateTime> param_ThisPrDate,
                string param_Description)
        {
            var param_HostParameter = param_Host != null
                ? new ObjectParameter("Param_Host", param_Host)
                : new ObjectParameter("Param_Host", typeof(string));

            var param_ThisPrDateParameter = param_ThisPrDate.HasValue
                ? new ObjectParameter("Param_ThisPrDate", param_ThisPrDate)
                : new ObjectParameter("Param_ThisPrDate", typeof(System.DateTime));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_RemindersMakeEntriesForPrint_Result>(
                        "sp_Kompas_RemindersMakeEntriesForPrint", param_HostParameter, param_ThisPrDateParameter,
                        param_DescriptionParameter);
        }

        public virtual int sp_Kompas_ReportManagerDeleteReport(Nullable<short> param_Module, string param_Report)
        {
            var param_ModuleParameter = param_Module.HasValue
                ? new ObjectParameter("Param_Module", param_Module)
                : new ObjectParameter("Param_Module", typeof(short));

            var param_ReportParameter = param_Report != null
                ? new ObjectParameter("Param_Report", param_Report)
                : new ObjectParameter("Param_Report", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ReportManagerDeleteReport",
                param_ModuleParameter, param_ReportParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_ReportManagerGetReportGroupCount()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_ReportManagerGetReportGroupCount");
        }

        public virtual int sp_Kompas_ResetCounterField(string param_TableName)
        {
            var param_TableNameParameter = param_TableName != null
                ? new ObjectParameter("Param_TableName", param_TableName)
                : new ObjectParameter("Param_TableName", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetCounterField",
                param_TableNameParameter);
        }

        public virtual int sp_Kompas_ResetResetAccounts()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetAccounts");
        }

        public virtual int sp_Kompas_ResetResetCustomers()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetCustomers");
        }

        public virtual int sp_Kompas_ResetResetInventory()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetInventory");
        }

        public virtual int sp_Kompas_ResetResetOnHand()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetOnHand");
        }

        public virtual int sp_Kompas_ResetResetPeriodBalance()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetPeriodBalance");
        }

        public virtual int sp_Kompas_ResetResetPeriodBalanceBudget()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetPeriodBalanceBudget");
        }

        public virtual int sp_Kompas_ResetResetSuppliers()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetSuppliers");
        }

        public virtual int sp_Kompas_ResetResetVouchers()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_ResetResetVouchers");
        }

        public virtual ObjectResult<sp_Kompas_SimulatePosting_Result> sp_Kompas_SimulatePosting(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_SimulatePosting_Result>(
                    "sp_Kompas_SimulatePosting", param_JournalParameter);
        }

        public virtual ObjectResult<sp_Kompas_SimulateSetOffAccountsGetSetOffs_Result>
            sp_Kompas_SimulateSetOffAccountsGetSetOffs(string param_Journal)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_SimulateSetOffAccountsGetSetOffs_Result>(
                        "sp_Kompas_SimulateSetOffAccountsGetSetOffs", param_JournalParameter);
        }

        public virtual ObjectResult<sp_Kompas_SimulateSetOffAccountsGetSetOffsTransactions_Result>
            sp_Kompas_SimulateSetOffAccountsGetSetOffsTransactions(string param_Journal, string param_Account)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_SimulateSetOffAccountsGetSetOffsTransactions_Result>(
                        "sp_Kompas_SimulateSetOffAccountsGetSetOffsTransactions", param_JournalParameter,
                        param_AccountParameter);
        }

        public virtual ObjectResult<sp_Kompas_SimulateSpecification_Result> sp_Kompas_SimulateSpecification(
            string param_Account, string param_Journal)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_SimulateSpecification_Result>(
                    "sp_Kompas_SimulateSpecification", param_AccountParameter, param_JournalParameter);
        }

        public virtual ObjectResult<sp_Kompas_SimulateSpecifyVoucher_Result> sp_Kompas_SimulateSpecifyVoucher(
            string param_Voucher, string param_Journal)
        {
            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("Param_Journal", param_Journal)
                : new ObjectParameter("Param_Journal", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_SimulateSpecifyVoucher_Result>(
                    "sp_Kompas_SimulateSpecifyVoucher", param_VoucherParameter, param_JournalParameter);
        }

        public virtual ObjectResult<sp_Kompas_StandardAnalysisCalculateFigures_Result>
            sp_Kompas_StandardAnalysisCalculateFigures(string param_FromPeriodID, string param_ToPeriodID)
        {
            var param_FromPeriodIDParameter = param_FromPeriodID != null
                ? new ObjectParameter("Param_FromPeriodID", param_FromPeriodID)
                : new ObjectParameter("Param_FromPeriodID", typeof(string));

            var param_ToPeriodIDParameter = param_ToPeriodID != null
                ? new ObjectParameter("Param_ToPeriodID", param_ToPeriodID)
                : new ObjectParameter("Param_ToPeriodID", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_StandardAnalysisCalculateFigures_Result>(
                        "sp_Kompas_StandardAnalysisCalculateFigures", param_FromPeriodIDParameter,
                        param_ToPeriodIDParameter);
        }

        public virtual int sp_Kompas_StatisticsCustomerFunc1ByPeriods(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<bool> param_UseShipTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_UseShipToParameter = param_UseShipTo.HasValue
                ? new ObjectParameter("Param_UseShipTo", param_UseShipTo)
                : new ObjectParameter("Param_UseShipTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsCustomerFunc1ByPeriods", param_CustomerParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter, param_UseShipToParameter);
        }

        public virtual int sp_Kompas_StatisticsCustomerFuncByGroups(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate, Nullable<byte> param_Func,
            Nullable<bool> param_UseInvoiceTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseInvoiceToParameter = param_UseInvoiceTo.HasValue
                ? new ObjectParameter("Param_UseInvoiceTo", param_UseInvoiceTo)
                : new ObjectParameter("Param_UseInvoiceTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsCustomerFuncByGroups", param_CustomerParameter, param_FromDateParameter,
                    param_ToDateParameter, param_FuncParameter, param_UseInvoiceToParameter);
        }

        public virtual int sp_Kompas_StatisticsCustomerFuncByItems(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate, Nullable<byte> param_Func,
            Nullable<bool> param_UseInvoiceTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseInvoiceToParameter = param_UseInvoiceTo.HasValue
                ? new ObjectParameter("Param_UseInvoiceTo", param_UseInvoiceTo)
                : new ObjectParameter("Param_UseInvoiceTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_StatisticsCustomerFuncByItems",
                    param_CustomerParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter,
                    param_UseInvoiceToParameter);
        }

        public virtual int sp_Kompas_StatisticsCustomerFuncOtherByPeriods(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<byte> param_Func, Nullable<bool> param_UseShipTo)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            var param_UseShipToParameter = param_UseShipTo.HasValue
                ? new ObjectParameter("Param_UseShipTo", param_UseShipTo)
                : new ObjectParameter("Param_UseShipTo", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsCustomerFuncOtherByPeriods", param_CustomerParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter, param_FuncParameter, param_UseShipToParameter);
        }

        public virtual int sp_Kompas_StatisticsInventoryBuyFuncByPeriods(string param_Item,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<byte> param_Func)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsInventoryBuyFuncByPeriods", param_ItemParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter, param_FuncParameter);
        }

        public virtual int sp_Kompas_StatisticsInventorySaleFuncByPeriods(string param_Item,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv, Nullable<byte> param_Func)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsInventorySaleFuncByPeriods", param_ItemParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter, param_FuncParameter);
        }

        public virtual int sp_Kompas_StatisticsSupplierFunc1ByPeriods(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsSupplierFunc1ByPeriods", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter);
        }

        public virtual int sp_Kompas_StatisticsSupplierFuncByGroups(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate, Nullable<byte> param_Func)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsSupplierFuncByGroups", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_FuncParameter);
        }

        public virtual int sp_Kompas_StatisticsSupplierFuncByItems(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate, Nullable<byte> param_Func)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_FuncParameter = param_Func.HasValue
                ? new ObjectParameter("Param_Func", param_Func)
                : new ObjectParameter("Param_Func", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_StatisticsSupplierFuncByItems",
                    param_SupplierParameter, param_FromDateParameter, param_ToDateParameter, param_FuncParameter);
        }

        public virtual int sp_Kompas_StatisticsSupplierFuncOtherByPeriods(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<byte> param_TotalInv)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_TotalInvParameter = param_TotalInv.HasValue
                ? new ObjectParameter("Param_TotalInv", param_TotalInv)
                : new ObjectParameter("Param_TotalInv", typeof(byte));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_StatisticsSupplierFuncOtherByPeriods", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_TotalInvParameter);
        }

        public virtual int sp_Kompas_SupplierBalanceByPeriods(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_SupplierBalanceByPeriods",
                param_SupplierParameter, param_FromDateParameter, param_ToDateParameter);
        }

        public virtual ObjectResult<sp_Kompas_SupplierPurchasesArchiveLines_Result>
            sp_Kompas_SupplierPurchasesArchiveLines(string param_PurchaseNo, Nullable<double> param_Trail)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_SupplierPurchasesArchiveLines_Result>(
                        "sp_Kompas_SupplierPurchasesArchiveLines", param_PurchaseNoParameter, param_TrailParameter);
        }

        public virtual ObjectResult<sp_Kompas_SupplierPurchasesOpenLines_Result> sp_Kompas_SupplierPurchasesOpenLines(
            string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_SupplierPurchasesOpenLines_Result>(
                        "sp_Kompas_SupplierPurchasesOpenLines", param_PurchaseNoParameter);
        }

        public virtual int sp_Kompas_SuppliersDeleteSupplier(string param_Supplier, Nullable<bool> param_DeleteLinks)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_DeleteLinksParameter = param_DeleteLinks.HasValue
                ? new ObjectParameter("Param_DeleteLinks", param_DeleteLinks)
                : new ObjectParameter("Param_DeleteLinks", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_SuppliersDeleteSupplier",
                param_SupplierParameter, param_DeleteLinksParameter);
        }

        public virtual int sp_Kompas_SuppliersFetchNext(string param_Supplier, ObjectParameter param_NewSupplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_SuppliersFetchNext",
                param_SupplierParameter, param_NewSupplier);
        }

        public virtual int sp_Kompas_SuppliersFetchPrevious(string param_Supplier, ObjectParameter param_NewSupplier)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_SuppliersFetchPrevious",
                param_SupplierParameter, param_NewSupplier);
        }

        public virtual int sp_Kompas_TaxDueSetupUpdateTransactionsDueDate(Nullable<System.DateTime> param_NewDue,
            string param_UserName, Nullable<System.DateTime> param_ChangedDate,
            Nullable<System.DateTime> param_StartDate, Nullable<System.DateTime> param_EndDate)
        {
            var param_NewDueParameter = param_NewDue.HasValue
                ? new ObjectParameter("Param_NewDue", param_NewDue)
                : new ObjectParameter("Param_NewDue", typeof(System.DateTime));

            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_ChangedDateParameter = param_ChangedDate.HasValue
                ? new ObjectParameter("Param_ChangedDate", param_ChangedDate)
                : new ObjectParameter("Param_ChangedDate", typeof(System.DateTime));

            var param_StartDateParameter = param_StartDate.HasValue
                ? new ObjectParameter("Param_StartDate", param_StartDate)
                : new ObjectParameter("Param_StartDate", typeof(System.DateTime));

            var param_EndDateParameter = param_EndDate.HasValue
                ? new ObjectParameter("Param_EndDate", param_EndDate)
                : new ObjectParameter("Param_EndDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_TaxDueSetupUpdateTransactionsDueDate", param_NewDueParameter, param_UserNameParameter,
                    param_ChangedDateParameter, param_StartDateParameter, param_EndDateParameter);
        }

        public virtual int sp_Kompas_TaxPeriodsDeleteTaxPeriods(Nullable<System.DateTime> param_FromDate)
        {
            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_TaxPeriodsDeleteTaxPeriods",
                param_FromDateParameter);
        }

        public virtual int sp_Kompas_TaxPeriodsUpdateTaxPeriodsClosed(Nullable<System.DateTime> param_Closed,
            Nullable<System.DateTime> param_Starting)
        {
            var param_ClosedParameter = param_Closed.HasValue
                ? new ObjectParameter("Param_Closed", param_Closed)
                : new ObjectParameter("Param_Closed", typeof(System.DateTime));

            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_TaxPeriodsUpdateTaxPeriodsClosed", param_ClosedParameter, param_StartingParameter);
        }

        public virtual int sp_Kompas_TaxPeriodsUpdateTaxPeriodsRemarks(string param_Remark,
            Nullable<System.DateTime> param_Starting)
        {
            var param_RemarkParameter = param_Remark != null
                ? new ObjectParameter("Param_Remark", param_Remark)
                : new ObjectParameter("Param_Remark", typeof(string));

            var param_StartingParameter = param_Starting.HasValue
                ? new ObjectParameter("Param_Starting", param_Starting)
                : new ObjectParameter("Param_Starting", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_TaxPeriodsUpdateTaxPeriodsRemarks", param_RemarkParameter, param_StartingParameter);
        }

        public virtual int sp_Kompas_TaxPeriodsUpdateTransactionsDueDate(string param_UserName,
            Nullable<System.DateTime> param_ChangedDate, Nullable<System.DateTime> param_FromDate)
        {
            var param_UserNameParameter = param_UserName != null
                ? new ObjectParameter("Param_UserName", param_UserName)
                : new ObjectParameter("Param_UserName", typeof(string));

            var param_ChangedDateParameter = param_ChangedDate.HasValue
                ? new ObjectParameter("Param_ChangedDate", param_ChangedDate)
                : new ObjectParameter("Param_ChangedDate", typeof(System.DateTime));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_TaxPeriodsUpdateTransactionsDueDate", param_UserNameParameter, param_ChangedDateParameter,
                    param_FromDateParameter);
        }

        public virtual int sp_Kompas_TextholderInsertNewLanguage(Nullable<short> param_IX, string param_Language)
        {
            var param_IXParameter = param_IX.HasValue
                ? new ObjectParameter("Param_IX", param_IX)
                : new ObjectParameter("Param_IX", typeof(short));

            var param_LanguageParameter = param_Language != null
                ? new ObjectParameter("Param_Language", param_Language)
                : new ObjectParameter("Param_Language", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                "sp_Kompas_TextholderInsertNewLanguage", param_IXParameter, param_LanguageParameter);
        }

        public virtual int sp_Kompas_TextHolderInsertNewText(string param_ID, Nullable<short> param_IX)
        {
            var param_IDParameter = param_ID != null
                ? new ObjectParameter("Param_ID", param_ID)
                : new ObjectParameter("Param_ID", typeof(string));

            var param_IXParameter = param_IX.HasValue
                ? new ObjectParameter("Param_IX", param_IX)
                : new ObjectParameter("Param_IX", typeof(short));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_TextHolderInsertNewText",
                param_IDParameter, param_IXParameter);
        }

        public virtual ObjectResult<sp_Kompas_TransactionsByAccount_Result> sp_Kompas_TransactionsByAccount(
            string param_Account, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_TransactionsByAccount_Result>(
                    "sp_Kompas_TransactionsByAccount", param_AccountParameter, param_FromDateParameter,
                    param_ToDateParameter);
        }

        public virtual ObjectResult<sp_Kompas_TransactionsByCustomer_Result> sp_Kompas_TransactionsByCustomer(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_AkkAmount)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_AkkAmountParameter = param_AkkAmount.HasValue
                ? new ObjectParameter("Param_AkkAmount", param_AkkAmount)
                : new ObjectParameter("Param_AkkAmount", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_TransactionsByCustomer_Result>(
                    "sp_Kompas_TransactionsByCustomer", param_CustomerParameter, param_FromDateParameter,
                    param_ToDateParameter, param_AkkAmountParameter);
        }

        public virtual ObjectResult<sp_Kompas_TransactionsByCustomerOpen_Result> sp_Kompas_TransactionsByCustomerOpen(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_AkkAmount)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_AkkAmountParameter = param_AkkAmount.HasValue
                ? new ObjectParameter("Param_AkkAmount", param_AkkAmount)
                : new ObjectParameter("Param_AkkAmount", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_TransactionsByCustomerOpen_Result>(
                        "sp_Kompas_TransactionsByCustomerOpen", param_CustomerParameter, param_FromDateParameter,
                        param_ToDateParameter, param_AkkAmountParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransactionsByNone()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_TransactionsByNone");
        }

        public virtual ObjectResult<sp_Kompas_TransactionsBySupplier_Result> sp_Kompas_TransactionsBySupplier(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_AkkAmount)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_AkkAmountParameter = param_AkkAmount.HasValue
                ? new ObjectParameter("Param_AkkAmount", param_AkkAmount)
                : new ObjectParameter("Param_AkkAmount", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_TransactionsBySupplier_Result>(
                    "sp_Kompas_TransactionsBySupplier", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_AkkAmountParameter);
        }

        public virtual ObjectResult<sp_Kompas_TransactionsBySupplierOpen_Result> sp_Kompas_TransactionsBySupplierOpen(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_AkkAmount)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_AkkAmountParameter = param_AkkAmount.HasValue
                ? new ObjectParameter("Param_AkkAmount", param_AkkAmount)
                : new ObjectParameter("Param_AkkAmount", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Kompas_TransactionsBySupplierOpen_Result>(
                        "sp_Kompas_TransactionsBySupplierOpen", param_SupplierParameter, param_FromDateParameter,
                        param_ToDateParameter, param_AkkAmountParameter);
        }

        public virtual ObjectResult<sp_Kompas_TransactionsByTrail_Result> sp_Kompas_TransactionsByTrail(
            Nullable<double> param_Trail, string param_Voucher, Nullable<System.DateTime> param_FromDate,
            Nullable<System.DateTime> param_ToDate)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_TransactionsByTrail_Result>(
                    "sp_Kompas_TransactionsByTrail", param_TrailParameter, param_VoucherParameter,
                    param_FromDateParameter, param_ToDateParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransByAccountCount(string param_Account,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_TransByAccountCount", param_AccountParameter, param_FromDateParameter,
                    param_ToDateParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransByCustomerCount(string param_Customer,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_OpenItem)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_OpenItemParameter = param_OpenItem.HasValue
                ? new ObjectParameter("Param_OpenItem", param_OpenItem)
                : new ObjectParameter("Param_OpenItem", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_TransByCustomerCount", param_CustomerParameter, param_FromDateParameter,
                    param_ToDateParameter, param_OpenItemParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransByNoneCount()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Kompas_TransByNoneCount");
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransBySupplierCount(string param_Supplier,
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_OpenItem)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_OpenItemParameter = param_OpenItem.HasValue
                ? new ObjectParameter("Param_OpenItem", param_OpenItem)
                : new ObjectParameter("Param_OpenItem", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_TransBySupplierCount", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_OpenItemParameter);
        }

        public virtual ObjectResult<Nullable<int>> sp_Kompas_TransByTrailCount(Nullable<double> param_Trail,
            string param_Voucher, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Nullable<int>>(
                    "sp_Kompas_TransByTrailCount", param_TrailParameter, param_VoucherParameter, param_FromDateParameter,
                    param_ToDateParameter);
        }

        public virtual int sp_Kompas_TransOpenItemSettleRecord(Nullable<int> param_SettleRef,
            Nullable<int> param_EntryRef, Nullable<double> param_CurRate, Nullable<double> param_AmountTrans,
            Nullable<System.DateTime> param_Date)
        {
            var param_SettleRefParameter = param_SettleRef.HasValue
                ? new ObjectParameter("Param_SettleRef", param_SettleRef)
                : new ObjectParameter("Param_SettleRef", typeof(int));

            var param_EntryRefParameter = param_EntryRef.HasValue
                ? new ObjectParameter("Param_EntryRef", param_EntryRef)
                : new ObjectParameter("Param_EntryRef", typeof(int));

            var param_CurRateParameter = param_CurRate.HasValue
                ? new ObjectParameter("Param_CurRate", param_CurRate)
                : new ObjectParameter("Param_CurRate", typeof(double));

            var param_AmountTransParameter = param_AmountTrans.HasValue
                ? new ObjectParameter("Param_AmountTrans", param_AmountTrans)
                : new ObjectParameter("Param_AmountTrans", typeof(double));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_TransOpenItemSettleRecord",
                param_SettleRefParameter, param_EntryRefParameter, param_CurRateParameter, param_AmountTransParameter,
                param_DateParameter);
        }

        public virtual int sp_Kompas_UpdateInventoryValue(string param_Item, Nullable<double> param_NewValue)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_NewValueParameter = param_NewValue.HasValue
                ? new ObjectParameter("Param_NewValue", param_NewValue)
                : new ObjectParameter("Param_NewValue", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_UpdateInventoryValue",
                param_ItemParameter, param_NewValueParameter);
        }

        public virtual int sp_Kompas_UpdateLinesEntryWithDisponibleOnHand(string param_OrderNo,
            Nullable<bool> param_Allocated)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_AllocatedParameter = param_Allocated.HasValue
                ? new ObjectParameter("Param_Allocated", param_Allocated)
                : new ObjectParameter("Param_Allocated", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_UpdateLinesEntryWithDisponibleOnHand", param_OrderNoParameter, param_AllocatedParameter);
        }

        public virtual int sp_Kompas_UpdateOrdersUpdateOrderInfoFromCustomer(string param_CustomerFrom,
            string param_CustomerTo, string param_GroupFrom, string param_GroupTo, Nullable<bool> param_UpdateName,
            Nullable<bool> param_UpdateAddress1, Nullable<bool> param_UpdateAddress2,
            Nullable<bool> param_UpdateAddress3, Nullable<bool> param_UpdateCity, Nullable<bool> param_UpdateCountry,
            Nullable<bool> param_UpdateContact, Nullable<bool> param_UpdatePriceList,
            Nullable<bool> param_UpdateCategory, Nullable<bool> param_UpdateSalesRep,
            Nullable<bool> param_UpdateDelivery, Nullable<bool> param_UpdatePayment, Nullable<bool> param_UpdateGiro,
            Nullable<bool> param_UpdateTax, Nullable<bool> param_UpdateTaxNo, Nullable<bool> param_UpdateLanguage,
            Nullable<bool> param_UpdateAgent, Nullable<bool> param_UpdateDepartment,
            Nullable<bool> param_UpdateCostCenter, Nullable<bool> param_UpdatePurpose,
            Nullable<bool> param_UpdateProject, Nullable<bool> param_UpdateEndDiscPct,
            Nullable<bool> param_UpdateReports, Nullable<bool> param_UpdateCashDiscount,
            Nullable<bool> param_UpdateEECCountry, Nullable<bool> param_UpdateEECTransCode,
            Nullable<bool> param_UpdateRemarks, Nullable<bool> param_UpdateInternalRemarks,
            Nullable<bool> param_UpdateOrderCommunication, Nullable<bool> param_UpdateEDILocationNr,
            Nullable<bool> param_UpdateOptionalText1, Nullable<bool> param_UpdateOptionalText2,
            Nullable<bool> param_UpdateOptionalText3, Nullable<bool> param_UpdateOptionalText4,
            Nullable<bool> param_UpdateOptionalText5, Nullable<bool> param_UpdateOptionalText6,
            Nullable<bool> param_UpdateOptionalText7, Nullable<bool> param_UpdateOptionalText8,
            Nullable<bool> param_UpdateOptionalNumber1, Nullable<bool> param_UpdateOptionalNumber2,
            Nullable<bool> param_UpdateOptionalNumber3, Nullable<bool> param_UpdateOptionalNumber4,
            Nullable<bool> param_UpdateOptionalNumber5, Nullable<bool> param_UpdateOptionalNumber6,
            Nullable<bool> param_UpdateOptionalNumber7, Nullable<bool> param_UpdateOptionalNumber8,
            Nullable<bool> param_UpdateOptional1, Nullable<bool> param_UpdateOptional2,
            Nullable<bool> param_UpdateOptional3, Nullable<bool> param_UpdateOptional4,
            Nullable<bool> param_UpdateOptional5, Nullable<bool> param_UpdateOptional6,
            Nullable<bool> param_UpdateOptional7, Nullable<bool> param_UpdateOptional8, Nullable<bool> param_UpdateEmail)
        {
            var param_CustomerFromParameter = param_CustomerFrom != null
                ? new ObjectParameter("Param_CustomerFrom", param_CustomerFrom)
                : new ObjectParameter("Param_CustomerFrom", typeof(string));

            var param_CustomerToParameter = param_CustomerTo != null
                ? new ObjectParameter("Param_CustomerTo", param_CustomerTo)
                : new ObjectParameter("Param_CustomerTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_UpdateNameParameter = param_UpdateName.HasValue
                ? new ObjectParameter("Param_UpdateName", param_UpdateName)
                : new ObjectParameter("Param_UpdateName", typeof(bool));

            var param_UpdateAddress1Parameter = param_UpdateAddress1.HasValue
                ? new ObjectParameter("Param_UpdateAddress1", param_UpdateAddress1)
                : new ObjectParameter("Param_UpdateAddress1", typeof(bool));

            var param_UpdateAddress2Parameter = param_UpdateAddress2.HasValue
                ? new ObjectParameter("Param_UpdateAddress2", param_UpdateAddress2)
                : new ObjectParameter("Param_UpdateAddress2", typeof(bool));

            var param_UpdateAddress3Parameter = param_UpdateAddress3.HasValue
                ? new ObjectParameter("Param_UpdateAddress3", param_UpdateAddress3)
                : new ObjectParameter("Param_UpdateAddress3", typeof(bool));

            var param_UpdateCityParameter = param_UpdateCity.HasValue
                ? new ObjectParameter("Param_UpdateCity", param_UpdateCity)
                : new ObjectParameter("Param_UpdateCity", typeof(bool));

            var param_UpdateCountryParameter = param_UpdateCountry.HasValue
                ? new ObjectParameter("Param_UpdateCountry", param_UpdateCountry)
                : new ObjectParameter("Param_UpdateCountry", typeof(bool));

            var param_UpdateContactParameter = param_UpdateContact.HasValue
                ? new ObjectParameter("Param_UpdateContact", param_UpdateContact)
                : new ObjectParameter("Param_UpdateContact", typeof(bool));

            var param_UpdatePriceListParameter = param_UpdatePriceList.HasValue
                ? new ObjectParameter("Param_UpdatePriceList", param_UpdatePriceList)
                : new ObjectParameter("Param_UpdatePriceList", typeof(bool));

            var param_UpdateCategoryParameter = param_UpdateCategory.HasValue
                ? new ObjectParameter("Param_UpdateCategory", param_UpdateCategory)
                : new ObjectParameter("Param_UpdateCategory", typeof(bool));

            var param_UpdateSalesRepParameter = param_UpdateSalesRep.HasValue
                ? new ObjectParameter("Param_UpdateSalesRep", param_UpdateSalesRep)
                : new ObjectParameter("Param_UpdateSalesRep", typeof(bool));

            var param_UpdateDeliveryParameter = param_UpdateDelivery.HasValue
                ? new ObjectParameter("Param_UpdateDelivery", param_UpdateDelivery)
                : new ObjectParameter("Param_UpdateDelivery", typeof(bool));

            var param_UpdatePaymentParameter = param_UpdatePayment.HasValue
                ? new ObjectParameter("Param_UpdatePayment", param_UpdatePayment)
                : new ObjectParameter("Param_UpdatePayment", typeof(bool));

            var param_UpdateGiroParameter = param_UpdateGiro.HasValue
                ? new ObjectParameter("Param_UpdateGiro", param_UpdateGiro)
                : new ObjectParameter("Param_UpdateGiro", typeof(bool));

            var param_UpdateTaxParameter = param_UpdateTax.HasValue
                ? new ObjectParameter("Param_UpdateTax", param_UpdateTax)
                : new ObjectParameter("Param_UpdateTax", typeof(bool));

            var param_UpdateTaxNoParameter = param_UpdateTaxNo.HasValue
                ? new ObjectParameter("Param_UpdateTaxNo", param_UpdateTaxNo)
                : new ObjectParameter("Param_UpdateTaxNo", typeof(bool));

            var param_UpdateLanguageParameter = param_UpdateLanguage.HasValue
                ? new ObjectParameter("Param_UpdateLanguage", param_UpdateLanguage)
                : new ObjectParameter("Param_UpdateLanguage", typeof(bool));

            var param_UpdateAgentParameter = param_UpdateAgent.HasValue
                ? new ObjectParameter("Param_UpdateAgent", param_UpdateAgent)
                : new ObjectParameter("Param_UpdateAgent", typeof(bool));

            var param_UpdateDepartmentParameter = param_UpdateDepartment.HasValue
                ? new ObjectParameter("Param_UpdateDepartment", param_UpdateDepartment)
                : new ObjectParameter("Param_UpdateDepartment", typeof(bool));

            var param_UpdateCostCenterParameter = param_UpdateCostCenter.HasValue
                ? new ObjectParameter("Param_UpdateCostCenter", param_UpdateCostCenter)
                : new ObjectParameter("Param_UpdateCostCenter", typeof(bool));

            var param_UpdatePurposeParameter = param_UpdatePurpose.HasValue
                ? new ObjectParameter("Param_UpdatePurpose", param_UpdatePurpose)
                : new ObjectParameter("Param_UpdatePurpose", typeof(bool));

            var param_UpdateProjectParameter = param_UpdateProject.HasValue
                ? new ObjectParameter("Param_UpdateProject", param_UpdateProject)
                : new ObjectParameter("Param_UpdateProject", typeof(bool));

            var param_UpdateEndDiscPctParameter = param_UpdateEndDiscPct.HasValue
                ? new ObjectParameter("Param_UpdateEndDiscPct", param_UpdateEndDiscPct)
                : new ObjectParameter("Param_UpdateEndDiscPct", typeof(bool));

            var param_UpdateReportsParameter = param_UpdateReports.HasValue
                ? new ObjectParameter("Param_UpdateReports", param_UpdateReports)
                : new ObjectParameter("Param_UpdateReports", typeof(bool));

            var param_UpdateCashDiscountParameter = param_UpdateCashDiscount.HasValue
                ? new ObjectParameter("Param_UpdateCashDiscount", param_UpdateCashDiscount)
                : new ObjectParameter("Param_UpdateCashDiscount", typeof(bool));

            var param_UpdateEECCountryParameter = param_UpdateEECCountry.HasValue
                ? new ObjectParameter("Param_UpdateEECCountry", param_UpdateEECCountry)
                : new ObjectParameter("Param_UpdateEECCountry", typeof(bool));

            var param_UpdateEECTransCodeParameter = param_UpdateEECTransCode.HasValue
                ? new ObjectParameter("Param_UpdateEECTransCode", param_UpdateEECTransCode)
                : new ObjectParameter("Param_UpdateEECTransCode", typeof(bool));

            var param_UpdateRemarksParameter = param_UpdateRemarks.HasValue
                ? new ObjectParameter("Param_UpdateRemarks", param_UpdateRemarks)
                : new ObjectParameter("Param_UpdateRemarks", typeof(bool));

            var param_UpdateInternalRemarksParameter = param_UpdateInternalRemarks.HasValue
                ? new ObjectParameter("Param_UpdateInternalRemarks", param_UpdateInternalRemarks)
                : new ObjectParameter("Param_UpdateInternalRemarks", typeof(bool));

            var param_UpdateOrderCommunicationParameter = param_UpdateOrderCommunication.HasValue
                ? new ObjectParameter("Param_UpdateOrderCommunication", param_UpdateOrderCommunication)
                : new ObjectParameter("Param_UpdateOrderCommunication", typeof(bool));

            var param_UpdateEDILocationNrParameter = param_UpdateEDILocationNr.HasValue
                ? new ObjectParameter("Param_UpdateEDILocationNr", param_UpdateEDILocationNr)
                : new ObjectParameter("Param_UpdateEDILocationNr", typeof(bool));

            var param_UpdateOptionalText1Parameter = param_UpdateOptionalText1.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText1", param_UpdateOptionalText1)
                : new ObjectParameter("Param_UpdateOptionalText1", typeof(bool));

            var param_UpdateOptionalText2Parameter = param_UpdateOptionalText2.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText2", param_UpdateOptionalText2)
                : new ObjectParameter("Param_UpdateOptionalText2", typeof(bool));

            var param_UpdateOptionalText3Parameter = param_UpdateOptionalText3.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText3", param_UpdateOptionalText3)
                : new ObjectParameter("Param_UpdateOptionalText3", typeof(bool));

            var param_UpdateOptionalText4Parameter = param_UpdateOptionalText4.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText4", param_UpdateOptionalText4)
                : new ObjectParameter("Param_UpdateOptionalText4", typeof(bool));

            var param_UpdateOptionalText5Parameter = param_UpdateOptionalText5.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText5", param_UpdateOptionalText5)
                : new ObjectParameter("Param_UpdateOptionalText5", typeof(bool));

            var param_UpdateOptionalText6Parameter = param_UpdateOptionalText6.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText6", param_UpdateOptionalText6)
                : new ObjectParameter("Param_UpdateOptionalText6", typeof(bool));

            var param_UpdateOptionalText7Parameter = param_UpdateOptionalText7.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText7", param_UpdateOptionalText7)
                : new ObjectParameter("Param_UpdateOptionalText7", typeof(bool));

            var param_UpdateOptionalText8Parameter = param_UpdateOptionalText8.HasValue
                ? new ObjectParameter("Param_UpdateOptionalText8", param_UpdateOptionalText8)
                : new ObjectParameter("Param_UpdateOptionalText8", typeof(bool));

            var param_UpdateOptionalNumber1Parameter = param_UpdateOptionalNumber1.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber1", param_UpdateOptionalNumber1)
                : new ObjectParameter("Param_UpdateOptionalNumber1", typeof(bool));

            var param_UpdateOptionalNumber2Parameter = param_UpdateOptionalNumber2.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber2", param_UpdateOptionalNumber2)
                : new ObjectParameter("Param_UpdateOptionalNumber2", typeof(bool));

            var param_UpdateOptionalNumber3Parameter = param_UpdateOptionalNumber3.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber3", param_UpdateOptionalNumber3)
                : new ObjectParameter("Param_UpdateOptionalNumber3", typeof(bool));

            var param_UpdateOptionalNumber4Parameter = param_UpdateOptionalNumber4.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber4", param_UpdateOptionalNumber4)
                : new ObjectParameter("Param_UpdateOptionalNumber4", typeof(bool));

            var param_UpdateOptionalNumber5Parameter = param_UpdateOptionalNumber5.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber5", param_UpdateOptionalNumber5)
                : new ObjectParameter("Param_UpdateOptionalNumber5", typeof(bool));

            var param_UpdateOptionalNumber6Parameter = param_UpdateOptionalNumber6.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber6", param_UpdateOptionalNumber6)
                : new ObjectParameter("Param_UpdateOptionalNumber6", typeof(bool));

            var param_UpdateOptionalNumber7Parameter = param_UpdateOptionalNumber7.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber7", param_UpdateOptionalNumber7)
                : new ObjectParameter("Param_UpdateOptionalNumber7", typeof(bool));

            var param_UpdateOptionalNumber8Parameter = param_UpdateOptionalNumber8.HasValue
                ? new ObjectParameter("Param_UpdateOptionalNumber8", param_UpdateOptionalNumber8)
                : new ObjectParameter("Param_UpdateOptionalNumber8", typeof(bool));

            var param_UpdateOptional1Parameter = param_UpdateOptional1.HasValue
                ? new ObjectParameter("Param_UpdateOptional1", param_UpdateOptional1)
                : new ObjectParameter("Param_UpdateOptional1", typeof(bool));

            var param_UpdateOptional2Parameter = param_UpdateOptional2.HasValue
                ? new ObjectParameter("Param_UpdateOptional2", param_UpdateOptional2)
                : new ObjectParameter("Param_UpdateOptional2", typeof(bool));

            var param_UpdateOptional3Parameter = param_UpdateOptional3.HasValue
                ? new ObjectParameter("Param_UpdateOptional3", param_UpdateOptional3)
                : new ObjectParameter("Param_UpdateOptional3", typeof(bool));

            var param_UpdateOptional4Parameter = param_UpdateOptional4.HasValue
                ? new ObjectParameter("Param_UpdateOptional4", param_UpdateOptional4)
                : new ObjectParameter("Param_UpdateOptional4", typeof(bool));

            var param_UpdateOptional5Parameter = param_UpdateOptional5.HasValue
                ? new ObjectParameter("Param_UpdateOptional5", param_UpdateOptional5)
                : new ObjectParameter("Param_UpdateOptional5", typeof(bool));

            var param_UpdateOptional6Parameter = param_UpdateOptional6.HasValue
                ? new ObjectParameter("Param_UpdateOptional6", param_UpdateOptional6)
                : new ObjectParameter("Param_UpdateOptional6", typeof(bool));

            var param_UpdateOptional7Parameter = param_UpdateOptional7.HasValue
                ? new ObjectParameter("Param_UpdateOptional7", param_UpdateOptional7)
                : new ObjectParameter("Param_UpdateOptional7", typeof(bool));

            var param_UpdateOptional8Parameter = param_UpdateOptional8.HasValue
                ? new ObjectParameter("Param_UpdateOptional8", param_UpdateOptional8)
                : new ObjectParameter("Param_UpdateOptional8", typeof(bool));

            var param_UpdateEmailParameter = param_UpdateEmail.HasValue
                ? new ObjectParameter("Param_UpdateEmail", param_UpdateEmail)
                : new ObjectParameter("Param_UpdateEmail", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_UpdateOrdersUpdateOrderInfoFromCustomer", param_CustomerFromParameter,
                    param_CustomerToParameter, param_GroupFromParameter, param_GroupToParameter,
                    param_UpdateNameParameter, param_UpdateAddress1Parameter, param_UpdateAddress2Parameter,
                    param_UpdateAddress3Parameter, param_UpdateCityParameter, param_UpdateCountryParameter,
                    param_UpdateContactParameter, param_UpdatePriceListParameter, param_UpdateCategoryParameter,
                    param_UpdateSalesRepParameter, param_UpdateDeliveryParameter, param_UpdatePaymentParameter,
                    param_UpdateGiroParameter, param_UpdateTaxParameter, param_UpdateTaxNoParameter,
                    param_UpdateLanguageParameter, param_UpdateAgentParameter, param_UpdateDepartmentParameter,
                    param_UpdateCostCenterParameter, param_UpdatePurposeParameter, param_UpdateProjectParameter,
                    param_UpdateEndDiscPctParameter, param_UpdateReportsParameter, param_UpdateCashDiscountParameter,
                    param_UpdateEECCountryParameter, param_UpdateEECTransCodeParameter, param_UpdateRemarksParameter,
                    param_UpdateInternalRemarksParameter, param_UpdateOrderCommunicationParameter,
                    param_UpdateEDILocationNrParameter, param_UpdateOptionalText1Parameter,
                    param_UpdateOptionalText2Parameter, param_UpdateOptionalText3Parameter,
                    param_UpdateOptionalText4Parameter, param_UpdateOptionalText5Parameter,
                    param_UpdateOptionalText6Parameter, param_UpdateOptionalText7Parameter,
                    param_UpdateOptionalText8Parameter, param_UpdateOptionalNumber1Parameter,
                    param_UpdateOptionalNumber2Parameter, param_UpdateOptionalNumber3Parameter,
                    param_UpdateOptionalNumber4Parameter, param_UpdateOptionalNumber5Parameter,
                    param_UpdateOptionalNumber6Parameter, param_UpdateOptionalNumber7Parameter,
                    param_UpdateOptionalNumber8Parameter, param_UpdateOptional1Parameter, param_UpdateOptional2Parameter,
                    param_UpdateOptional3Parameter, param_UpdateOptional4Parameter, param_UpdateOptional5Parameter,
                    param_UpdateOptional6Parameter, param_UpdateOptional7Parameter, param_UpdateOptional8Parameter,
                    param_UpdateEmailParameter);
        }

        public virtual int sp_Kompas_UpdatePeriodBalanceCurEarningsBudget()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_UpdatePeriodBalanceCurEarningsBudget");
        }

        public virtual int sp_Kompas_UpdatePeriodBalanceSumAccountsBudget()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_UpdatePeriodBalanceSumAccountsBudget");
        }

        public virtual int sp_Kompas_UpdatePurchasesUpdatePurchaseInfoFromSupplier(string param_SupplierFrom,
            string param_SupplierTo, string param_GroupFrom, string param_GroupTo, Nullable<bool> param_UpdateName,
            Nullable<bool> param_UpdateAddress1, Nullable<bool> param_UpdateAddress2, Nullable<bool> param_UpdateCity,
            Nullable<bool> param_UpdateCountry, Nullable<bool> param_UpdateContact, Nullable<bool> param_UpdatePriceList,
            Nullable<bool> param_UpdateCategory, Nullable<bool> param_UpdateBuyer, Nullable<bool> param_UpdateDelivery,
            Nullable<bool> param_UpdatePayment, Nullable<bool> param_UpdateTax, Nullable<bool> param_UpdateTaxNo,
            Nullable<bool> param_UpdateLanguage, Nullable<bool> param_UpdateOurAccount, Nullable<bool> param_UpdateAgent,
            Nullable<bool> param_UpdateDepartment, Nullable<bool> param_UpdateCostCenter,
            Nullable<bool> param_UpdatePurpose, Nullable<bool> param_UpdateProject,
            Nullable<bool> param_UpdateendDiscPct, Nullable<bool> param_UpdateCashDiscount,
            Nullable<bool> param_UpdateEECCountry, Nullable<bool> param_UpdateEECTransCode,
            Nullable<bool> param_UpdateRemarks, Nullable<bool> param_UpdateInternalRemarks)
        {
            var param_SupplierFromParameter = param_SupplierFrom != null
                ? new ObjectParameter("Param_SupplierFrom", param_SupplierFrom)
                : new ObjectParameter("Param_SupplierFrom", typeof(string));

            var param_SupplierToParameter = param_SupplierTo != null
                ? new ObjectParameter("Param_SupplierTo", param_SupplierTo)
                : new ObjectParameter("Param_SupplierTo", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_UpdateNameParameter = param_UpdateName.HasValue
                ? new ObjectParameter("Param_UpdateName", param_UpdateName)
                : new ObjectParameter("Param_UpdateName", typeof(bool));

            var param_UpdateAddress1Parameter = param_UpdateAddress1.HasValue
                ? new ObjectParameter("Param_UpdateAddress1", param_UpdateAddress1)
                : new ObjectParameter("Param_UpdateAddress1", typeof(bool));

            var param_UpdateAddress2Parameter = param_UpdateAddress2.HasValue
                ? new ObjectParameter("Param_UpdateAddress2", param_UpdateAddress2)
                : new ObjectParameter("Param_UpdateAddress2", typeof(bool));

            var param_UpdateCityParameter = param_UpdateCity.HasValue
                ? new ObjectParameter("Param_UpdateCity", param_UpdateCity)
                : new ObjectParameter("Param_UpdateCity", typeof(bool));

            var param_UpdateCountryParameter = param_UpdateCountry.HasValue
                ? new ObjectParameter("Param_UpdateCountry", param_UpdateCountry)
                : new ObjectParameter("Param_UpdateCountry", typeof(bool));

            var param_UpdateContactParameter = param_UpdateContact.HasValue
                ? new ObjectParameter("Param_UpdateContact", param_UpdateContact)
                : new ObjectParameter("Param_UpdateContact", typeof(bool));

            var param_UpdatePriceListParameter = param_UpdatePriceList.HasValue
                ? new ObjectParameter("Param_UpdatePriceList", param_UpdatePriceList)
                : new ObjectParameter("Param_UpdatePriceList", typeof(bool));

            var param_UpdateCategoryParameter = param_UpdateCategory.HasValue
                ? new ObjectParameter("Param_UpdateCategory", param_UpdateCategory)
                : new ObjectParameter("Param_UpdateCategory", typeof(bool));

            var param_UpdateBuyerParameter = param_UpdateBuyer.HasValue
                ? new ObjectParameter("Param_UpdateBuyer", param_UpdateBuyer)
                : new ObjectParameter("Param_UpdateBuyer", typeof(bool));

            var param_UpdateDeliveryParameter = param_UpdateDelivery.HasValue
                ? new ObjectParameter("Param_UpdateDelivery", param_UpdateDelivery)
                : new ObjectParameter("Param_UpdateDelivery", typeof(bool));

            var param_UpdatePaymentParameter = param_UpdatePayment.HasValue
                ? new ObjectParameter("Param_UpdatePayment", param_UpdatePayment)
                : new ObjectParameter("Param_UpdatePayment", typeof(bool));

            var param_UpdateTaxParameter = param_UpdateTax.HasValue
                ? new ObjectParameter("Param_UpdateTax", param_UpdateTax)
                : new ObjectParameter("Param_UpdateTax", typeof(bool));

            var param_UpdateTaxNoParameter = param_UpdateTaxNo.HasValue
                ? new ObjectParameter("Param_UpdateTaxNo", param_UpdateTaxNo)
                : new ObjectParameter("Param_UpdateTaxNo", typeof(bool));

            var param_UpdateLanguageParameter = param_UpdateLanguage.HasValue
                ? new ObjectParameter("Param_UpdateLanguage", param_UpdateLanguage)
                : new ObjectParameter("Param_UpdateLanguage", typeof(bool));

            var param_UpdateOurAccountParameter = param_UpdateOurAccount.HasValue
                ? new ObjectParameter("Param_UpdateOurAccount", param_UpdateOurAccount)
                : new ObjectParameter("Param_UpdateOurAccount", typeof(bool));

            var param_UpdateAgentParameter = param_UpdateAgent.HasValue
                ? new ObjectParameter("Param_UpdateAgent", param_UpdateAgent)
                : new ObjectParameter("Param_UpdateAgent", typeof(bool));

            var param_UpdateDepartmentParameter = param_UpdateDepartment.HasValue
                ? new ObjectParameter("Param_UpdateDepartment", param_UpdateDepartment)
                : new ObjectParameter("Param_UpdateDepartment", typeof(bool));

            var param_UpdateCostCenterParameter = param_UpdateCostCenter.HasValue
                ? new ObjectParameter("Param_UpdateCostCenter", param_UpdateCostCenter)
                : new ObjectParameter("Param_UpdateCostCenter", typeof(bool));

            var param_UpdatePurposeParameter = param_UpdatePurpose.HasValue
                ? new ObjectParameter("Param_UpdatePurpose", param_UpdatePurpose)
                : new ObjectParameter("Param_UpdatePurpose", typeof(bool));

            var param_UpdateProjectParameter = param_UpdateProject.HasValue
                ? new ObjectParameter("Param_UpdateProject", param_UpdateProject)
                : new ObjectParameter("Param_UpdateProject", typeof(bool));

            var param_UpdateendDiscPctParameter = param_UpdateendDiscPct.HasValue
                ? new ObjectParameter("Param_UpdateendDiscPct", param_UpdateendDiscPct)
                : new ObjectParameter("Param_UpdateendDiscPct", typeof(bool));

            var param_UpdateCashDiscountParameter = param_UpdateCashDiscount.HasValue
                ? new ObjectParameter("Param_UpdateCashDiscount", param_UpdateCashDiscount)
                : new ObjectParameter("Param_UpdateCashDiscount", typeof(bool));

            var param_UpdateEECCountryParameter = param_UpdateEECCountry.HasValue
                ? new ObjectParameter("Param_UpdateEECCountry", param_UpdateEECCountry)
                : new ObjectParameter("Param_UpdateEECCountry", typeof(bool));

            var param_UpdateEECTransCodeParameter = param_UpdateEECTransCode.HasValue
                ? new ObjectParameter("Param_UpdateEECTransCode", param_UpdateEECTransCode)
                : new ObjectParameter("Param_UpdateEECTransCode", typeof(bool));

            var param_UpdateRemarksParameter = param_UpdateRemarks.HasValue
                ? new ObjectParameter("Param_UpdateRemarks", param_UpdateRemarks)
                : new ObjectParameter("Param_UpdateRemarks", typeof(bool));

            var param_UpdateInternalRemarksParameter = param_UpdateInternalRemarks.HasValue
                ? new ObjectParameter("Param_UpdateInternalRemarks", param_UpdateInternalRemarks)
                : new ObjectParameter("Param_UpdateInternalRemarks", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction(
                    "sp_Kompas_UpdatePurchasesUpdatePurchaseInfoFromSupplier", param_SupplierFromParameter,
                    param_SupplierToParameter, param_GroupFromParameter, param_GroupToParameter,
                    param_UpdateNameParameter, param_UpdateAddress1Parameter, param_UpdateAddress2Parameter,
                    param_UpdateCityParameter, param_UpdateCountryParameter, param_UpdateContactParameter,
                    param_UpdatePriceListParameter, param_UpdateCategoryParameter, param_UpdateBuyerParameter,
                    param_UpdateDeliveryParameter, param_UpdatePaymentParameter, param_UpdateTaxParameter,
                    param_UpdateTaxNoParameter, param_UpdateLanguageParameter, param_UpdateOurAccountParameter,
                    param_UpdateAgentParameter, param_UpdateDepartmentParameter, param_UpdateCostCenterParameter,
                    param_UpdatePurposeParameter, param_UpdateProjectParameter, param_UpdateendDiscPctParameter,
                    param_UpdateCashDiscountParameter, param_UpdateEECCountryParameter,
                    param_UpdateEECTransCodeParameter, param_UpdateRemarksParameter,
                    param_UpdateInternalRemarksParameter);
        }

        public virtual int sp_Kompas_UpdateTextholder()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_UpdateTextholder");
        }

        public virtual int sp_Kompas_VATInvoiceJournals(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, Nullable<bool> param_IncludePrimo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_IncludePrimoParameter = param_IncludePrimo.HasValue
                ? new ObjectParameter("Param_IncludePrimo", param_IncludePrimo)
                : new ObjectParameter("Param_IncludePrimo", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_VATInvoiceJournals",
                param_DateFromParameter, param_DateToParameter, param_IncludePrimoParameter);
        }

        public virtual int sp_Kompas_VATManuallyPosted(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, Nullable<bool> param_IncludePrimo)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_IncludePrimoParameter = param_IncludePrimo.HasValue
                ? new ObjectParameter("Param_IncludePrimo", param_IncludePrimo)
                : new ObjectParameter("Param_IncludePrimo", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Kompas_VATManuallyPosted",
                param_DateFromParameter, param_DateToParameter, param_IncludePrimoParameter);
        }

        public virtual ObjectResult<sp_Kompas_ZoomLinesByTrail_Result> sp_Kompas_ZoomLinesByTrail(
            Nullable<double> param_Trail, string param_Voucher, Nullable<System.DateTime> param_Date)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_ZoomLinesByTrail_Result>(
                    "sp_Kompas_ZoomLinesByTrail", param_TrailParameter, param_VoucherParameter, param_DateParameter);
        }

        public virtual ObjectResult<sp_Kompas_ZoomTransactionsByTrail_Result> sp_Kompas_ZoomTransactionsByTrail(
            Nullable<double> param_Trail, string param_Voucher, Nullable<System.DateTime> param_Date)
        {
            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_VoucherParameter = param_Voucher != null
                ? new ObjectParameter("Param_Voucher", param_Voucher)
                : new ObjectParameter("Param_Voucher", typeof(string));

            var param_DateParameter = param_Date.HasValue
                ? new ObjectParameter("Param_Date", param_Date)
                : new ObjectParameter("Param_Date", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Kompas_ZoomTransactionsByTrail_Result>(
                    "sp_Kompas_ZoomTransactionsByTrail", param_TrailParameter, param_VoucherParameter,
                    param_DateParameter);
        }

        public virtual int sp_OffInt_BalanceDimensionPerYear(string param_Account, string param_Dimension,
            string param_DimensionList, string param_FromPeriod, string param_ToPeriod, string param_FieldList)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_DimensionParameter = param_Dimension != null
                ? new ObjectParameter("Param_Dimension", param_Dimension)
                : new ObjectParameter("Param_Dimension", typeof(string));

            var param_DimensionListParameter = param_DimensionList != null
                ? new ObjectParameter("Param_DimensionList", param_DimensionList)
                : new ObjectParameter("Param_DimensionList", typeof(string));

            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_FieldListParameter = param_FieldList != null
                ? new ObjectParameter("Param_FieldList", param_FieldList)
                : new ObjectParameter("Param_FieldList", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_OffInt_BalanceDimensionPerYear",
                param_AccountParameter, param_DimensionParameter, param_DimensionListParameter,
                param_FromPeriodParameter, param_ToPeriodParameter, param_FieldListParameter);
        }

        public virtual int sp_OffInt_BudgetDimensionPerYear(string param_DimValue, string param_Dimension,
            string param_FromPeriod, string param_ToPeriod, string param_FieldList, string param_AccountsList)
        {
            var param_DimValueParameter = param_DimValue != null
                ? new ObjectParameter("Param_DimValue", param_DimValue)
                : new ObjectParameter("Param_DimValue", typeof(string));

            var param_DimensionParameter = param_Dimension != null
                ? new ObjectParameter("Param_Dimension", param_Dimension)
                : new ObjectParameter("Param_Dimension", typeof(string));

            var param_FromPeriodParameter = param_FromPeriod != null
                ? new ObjectParameter("Param_FromPeriod", param_FromPeriod)
                : new ObjectParameter("Param_FromPeriod", typeof(string));

            var param_ToPeriodParameter = param_ToPeriod != null
                ? new ObjectParameter("Param_ToPeriod", param_ToPeriod)
                : new ObjectParameter("Param_ToPeriod", typeof(string));

            var param_FieldListParameter = param_FieldList != null
                ? new ObjectParameter("Param_FieldList", param_FieldList)
                : new ObjectParameter("Param_FieldList", typeof(string));

            var param_AccountsListParameter = param_AccountsList != null
                ? new ObjectParameter("Param_AccountsList", param_AccountsList)
                : new ObjectParameter("Param_AccountsList", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_OffInt_BudgetDimensionPerYear",
                param_DimValueParameter, param_DimensionParameter, param_FromPeriodParameter, param_ToPeriodParameter,
                param_FieldListParameter, param_AccountsListParameter);
        }

        public virtual int sp_OffIntVATInvoiceJournals(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, string param_TaxCodeList, string param_FieldList)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TaxCodeListParameter = param_TaxCodeList != null
                ? new ObjectParameter("Param_TaxCodeList", param_TaxCodeList)
                : new ObjectParameter("Param_TaxCodeList", typeof(string));

            var param_FieldListParameter = param_FieldList != null
                ? new ObjectParameter("Param_FieldList", param_FieldList)
                : new ObjectParameter("Param_FieldList", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_OffIntVATInvoiceJournals",
                param_DateFromParameter, param_DateToParameter, param_TaxCodeListParameter, param_FieldListParameter);
        }

        public virtual int sp_OffIntVATManuallyPosted(Nullable<System.DateTime> param_DateFrom,
            Nullable<System.DateTime> param_DateTo, string param_TaxCodeList, string param_FieldList)
        {
            var param_DateFromParameter = param_DateFrom.HasValue
                ? new ObjectParameter("Param_DateFrom", param_DateFrom)
                : new ObjectParameter("Param_DateFrom", typeof(System.DateTime));

            var param_DateToParameter = param_DateTo.HasValue
                ? new ObjectParameter("Param_DateTo", param_DateTo)
                : new ObjectParameter("Param_DateTo", typeof(System.DateTime));

            var param_TaxCodeListParameter = param_TaxCodeList != null
                ? new ObjectParameter("Param_TaxCodeList", param_TaxCodeList)
                : new ObjectParameter("Param_TaxCodeList", typeof(string));

            var param_FieldListParameter = param_FieldList != null
                ? new ObjectParameter("Param_FieldList", param_FieldList)
                : new ObjectParameter("Param_FieldList", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_OffIntVATManuallyPosted",
                param_DateFromParameter, param_DateToParameter, param_TaxCodeListParameter, param_FieldListParameter);
        }

        public virtual ObjectResult<sp_Report_AccountsTransactions_Result> sp_Report_AccountsTransactions(
            string param_Account, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate)
        {
            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_AccountsTransactions_Result>(
                    "sp_Report_AccountsTransactions", param_AccountParameter, param_FromDateParameter,
                    param_ToDateParameter);
        }

        public virtual int sp_Report_CustomerBalanceAgeing(string param_Customer, string param_GroupFrom,
            string param_GroupTo, Nullable<System.DateTime> param_ByDate, Nullable<bool> param_UseOpenItem,
            Nullable<bool> param_NoZeroBalance, Nullable<bool> param_UseDueDate)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_GroupFromParameter = param_GroupFrom != null
                ? new ObjectParameter("Param_GroupFrom", param_GroupFrom)
                : new ObjectParameter("Param_GroupFrom", typeof(string));

            var param_GroupToParameter = param_GroupTo != null
                ? new ObjectParameter("Param_GroupTo", param_GroupTo)
                : new ObjectParameter("Param_GroupTo", typeof(string));

            var param_ByDateParameter = param_ByDate.HasValue
                ? new ObjectParameter("Param_ByDate", param_ByDate)
                : new ObjectParameter("Param_ByDate", typeof(System.DateTime));

            var param_UseOpenItemParameter = param_UseOpenItem.HasValue
                ? new ObjectParameter("Param_UseOpenItem", param_UseOpenItem)
                : new ObjectParameter("Param_UseOpenItem", typeof(bool));

            var param_NoZeroBalanceParameter = param_NoZeroBalance.HasValue
                ? new ObjectParameter("Param_NoZeroBalance", param_NoZeroBalance)
                : new ObjectParameter("Param_NoZeroBalance", typeof(bool));

            var param_UseDueDateParameter = param_UseDueDate.HasValue
                ? new ObjectParameter("Param_UseDueDate", param_UseDueDate)
                : new ObjectParameter("Param_UseDueDate", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sp_Report_CustomerBalanceAgeing",
                param_CustomerParameter, param_GroupFromParameter, param_GroupToParameter, param_ByDateParameter,
                param_UseOpenItemParameter, param_NoZeroBalanceParameter, param_UseDueDateParameter);
        }

        public virtual ObjectResult<sp_Report_CustomersCopy_Result> sp_Report_CustomersCopy(string param_Customer,
            Nullable<int> param_Copies)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_CopiesParameter = param_Copies.HasValue
                ? new ObjectParameter("Param_Copies", param_Copies)
                : new ObjectParameter("Param_Copies", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_CustomersCopy_Result>(
                    "sp_Report_CustomersCopy", param_CustomerParameter, param_CopiesParameter);
        }

        public virtual ObjectResult<sp_Report_CustomerStatement_Result> sp_Report_CustomerStatement(
            string param_Customer, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_Todate,
            Nullable<bool> param_OpenItem)
        {
            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_TodateParameter = param_Todate.HasValue
                ? new ObjectParameter("Param_Todate", param_Todate)
                : new ObjectParameter("Param_Todate", typeof(System.DateTime));

            var param_OpenItemParameter = param_OpenItem.HasValue
                ? new ObjectParameter("Param_OpenItem", param_OpenItem)
                : new ObjectParameter("Param_OpenItem", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_CustomerStatement_Result>(
                    "sp_Report_CustomerStatement", param_CustomerParameter, param_FromDateParameter,
                    param_TodateParameter, param_OpenItemParameter);
        }

        public virtual ObjectResult<sp_Report_InventoryCopy_Result> sp_Report_InventoryCopy(string param_Item,
            Nullable<int> param_Copies)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_CopiesParameter = param_Copies.HasValue
                ? new ObjectParameter("Param_Copies", param_Copies)
                : new ObjectParameter("Param_Copies", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_InventoryCopy_Result>(
                    "sp_Report_InventoryCopy", param_ItemParameter, param_CopiesParameter);
        }

        public virtual ObjectResult<sp_Report_OrderDocument_Result> sp_Report_OrderDocument(string param_OrderNo,
            Nullable<double> param_Trail, Nullable<bool> param_IsInvoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_OrderDocument_Result>(
                    "sp_Report_OrderDocument", param_OrderNoParameter, param_TrailParameter, param_IsInvoiceParameter);
        }

        public virtual ObjectResult<sp_Report_OrderDocument_Label_Result> sp_Report_OrderDocument_Label(
            string param_OrderNo, Nullable<double> param_Trail, Nullable<bool> param_IsInvoice)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_OrderDocument_Label_Result>(
                    "sp_Report_OrderDocument_Label", param_OrderNoParameter, param_TrailParameter,
                    param_IsInvoiceParameter);
        }

        public virtual ObjectResult<sp_Report_OrderInventoryDeliverCopy_Result> sp_Report_OrderInventoryDeliverCopy(
            string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_OrderInventoryDeliverCopy_Result>
                    ("sp_Report_OrderInventoryDeliverCopy", param_OrderNoParameter);
        }

        public virtual ObjectResult<sp_Report_PurchaseDocument_Result> sp_Report_PurchaseDocument(
            string param_PurchaseNo, Nullable<double> param_Trail, Nullable<bool> param_IsInvoice)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            var param_TrailParameter = param_Trail.HasValue
                ? new ObjectParameter("Param_Trail", param_Trail)
                : new ObjectParameter("Param_Trail", typeof(double));

            var param_IsInvoiceParameter = param_IsInvoice.HasValue
                ? new ObjectParameter("Param_IsInvoice", param_IsInvoice)
                : new ObjectParameter("Param_IsInvoice", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_PurchaseDocument_Result>(
                    "sp_Report_PurchaseDocument", param_PurchaseNoParameter, param_TrailParameter,
                    param_IsInvoiceParameter);
        }

        public virtual ObjectResult<sp_Report_PurchaseInventoryDeliverCopy_Result>
            sp_Report_PurchaseInventoryDeliverCopy(string param_PurchaseNo)
        {
            var param_PurchaseNoParameter = param_PurchaseNo != null
                ? new ObjectParameter("Param_PurchaseNo", param_PurchaseNo)
                : new ObjectParameter("Param_PurchaseNo", typeof(string));

            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<sp_Report_PurchaseInventoryDeliverCopy_Result>(
                        "sp_Report_PurchaseInventoryDeliverCopy", param_PurchaseNoParameter);
        }

        public virtual ObjectResult<sp_Report_SupplierCopy_Result> sp_Report_SupplierCopy(string param_Supplier,
            Nullable<int> param_Copies)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_CopiesParameter = param_Copies.HasValue
                ? new ObjectParameter("Param_Copies", param_Copies)
                : new ObjectParameter("Param_Copies", typeof(int));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_SupplierCopy_Result>(
                    "sp_Report_SupplierCopy", param_SupplierParameter, param_CopiesParameter);
        }

        public virtual ObjectResult<sp_Report_SuppplierStatement_Result> sp_Report_SuppplierStatement(
            string param_Supplier, Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<bool> param_OpenItem)
        {
            var param_SupplierParameter = param_Supplier != null
                ? new ObjectParameter("Param_Supplier", param_Supplier)
                : new ObjectParameter("Param_Supplier", typeof(string));

            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_OpenItemParameter = param_OpenItem.HasValue
                ? new ObjectParameter("Param_OpenItem", param_OpenItem)
                : new ObjectParameter("Param_OpenItem", typeof(bool));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_SuppplierStatement_Result>(
                    "sp_Report_SuppplierStatement", param_SupplierParameter, param_FromDateParameter,
                    param_ToDateParameter, param_OpenItemParameter);
        }

        public virtual ObjectResult<sp_Report_ToldOgSkat_Result> sp_Report_ToldOgSkat(
            Nullable<System.DateTime> param_FromDate, Nullable<System.DateTime> param_ToDate,
            Nullable<short> param_EECCountry)
        {
            var param_FromDateParameter = param_FromDate.HasValue
                ? new ObjectParameter("Param_FromDate", param_FromDate)
                : new ObjectParameter("Param_FromDate", typeof(System.DateTime));

            var param_ToDateParameter = param_ToDate.HasValue
                ? new ObjectParameter("Param_ToDate", param_ToDate)
                : new ObjectParameter("Param_ToDate", typeof(System.DateTime));

            var param_EECCountryParameter = param_EECCountry.HasValue
                ? new ObjectParameter("Param_EECCountry", param_EECCountry)
                : new ObjectParameter("Param_EECCountry", typeof(short));

            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<sp_Report_ToldOgSkat_Result>(
                    "sp_Report_ToldOgSkat", param_FromDateParameter, param_ToDateParameter, param_EECCountryParameter);
        }

        public virtual ObjectResult<string> sv_AddInventoryCount(string param_Journal, string param_Location,
            string param_Placement, string param_Employee, string param_Item, Nullable<double> param_Quantity)
        {
            var param_JournalParameter = param_Journal != null
                ? new ObjectParameter("param_Journal", param_Journal)
                : new ObjectParameter("param_Journal", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("param_Location", param_Location)
                : new ObjectParameter("param_Location", typeof(string));

            var param_PlacementParameter = param_Placement != null
                ? new ObjectParameter("Param_Placement", param_Placement)
                : new ObjectParameter("Param_Placement", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("sv_AddInventoryCount",
                param_JournalParameter, param_LocationParameter, param_PlacementParameter, param_EmployeeParameter,
                param_ItemParameter, param_QuantityParameter);
        }

        public virtual int sv_AddItem(string param_Item, string param_ItemAlternative, string param_ItemEAN,
            string param_Description, Nullable<double> param_CostPrice, Nullable<double> param_SalesPrice,
            string param_Grouping, string param_SupplierNo, string param_Location, Nullable<double> param_Min,
            Nullable<double> param_Max, string param_OptionalText1, string param_OptionalText2,
            string param_OptionalText3, string param_OptionalText4, string param_OptionalText5,
            string param_OptionalText6, string param_OptionalText7, string param_OptionalText8, string param_UserID)
        {
            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_ItemAlternativeParameter = param_ItemAlternative != null
                ? new ObjectParameter("Param_ItemAlternative", param_ItemAlternative)
                : new ObjectParameter("Param_ItemAlternative", typeof(string));

            var param_ItemEANParameter = param_ItemEAN != null
                ? new ObjectParameter("Param_ItemEAN", param_ItemEAN)
                : new ObjectParameter("Param_ItemEAN", typeof(string));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_SalesPriceParameter = param_SalesPrice.HasValue
                ? new ObjectParameter("Param_SalesPrice", param_SalesPrice)
                : new ObjectParameter("Param_SalesPrice", typeof(double));

            var param_GroupingParameter = param_Grouping != null
                ? new ObjectParameter("Param_Grouping", param_Grouping)
                : new ObjectParameter("Param_Grouping", typeof(string));

            var param_SupplierNoParameter = param_SupplierNo != null
                ? new ObjectParameter("Param_SupplierNo", param_SupplierNo)
                : new ObjectParameter("Param_SupplierNo", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("Param_Location", param_Location)
                : new ObjectParameter("Param_Location", typeof(string));

            var param_MinParameter = param_Min.HasValue
                ? new ObjectParameter("Param_Min", param_Min)
                : new ObjectParameter("Param_Min", typeof(double));

            var param_MaxParameter = param_Max.HasValue
                ? new ObjectParameter("Param_Max", param_Max)
                : new ObjectParameter("Param_Max", typeof(double));

            var param_OptionalText1Parameter = param_OptionalText1 != null
                ? new ObjectParameter("Param_OptionalText1", param_OptionalText1)
                : new ObjectParameter("Param_OptionalText1", typeof(string));

            var param_OptionalText2Parameter = param_OptionalText2 != null
                ? new ObjectParameter("Param_OptionalText2", param_OptionalText2)
                : new ObjectParameter("Param_OptionalText2", typeof(string));

            var param_OptionalText3Parameter = param_OptionalText3 != null
                ? new ObjectParameter("Param_OptionalText3", param_OptionalText3)
                : new ObjectParameter("Param_OptionalText3", typeof(string));

            var param_OptionalText4Parameter = param_OptionalText4 != null
                ? new ObjectParameter("Param_OptionalText4", param_OptionalText4)
                : new ObjectParameter("Param_OptionalText4", typeof(string));

            var param_OptionalText5Parameter = param_OptionalText5 != null
                ? new ObjectParameter("Param_OptionalText5", param_OptionalText5)
                : new ObjectParameter("Param_OptionalText5", typeof(string));

            var param_OptionalText6Parameter = param_OptionalText6 != null
                ? new ObjectParameter("Param_OptionalText6", param_OptionalText6)
                : new ObjectParameter("Param_OptionalText6", typeof(string));

            var param_OptionalText7Parameter = param_OptionalText7 != null
                ? new ObjectParameter("Param_OptionalText7", param_OptionalText7)
                : new ObjectParameter("Param_OptionalText7", typeof(string));

            var param_OptionalText8Parameter = param_OptionalText8 != null
                ? new ObjectParameter("Param_OptionalText8", param_OptionalText8)
                : new ObjectParameter("Param_OptionalText8", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sv_AddItem", param_ItemParameter,
                param_ItemAlternativeParameter, param_ItemEANParameter, param_DescriptionParameter,
                param_CostPriceParameter, param_SalesPriceParameter, param_GroupingParameter, param_SupplierNoParameter,
                param_LocationParameter, param_MinParameter, param_MaxParameter, param_OptionalText1Parameter,
                param_OptionalText2Parameter, param_OptionalText3Parameter, param_OptionalText4Parameter,
                param_OptionalText5Parameter, param_OptionalText6Parameter, param_OptionalText7Parameter,
                param_OptionalText8Parameter, param_UserIDParameter);
        }

        public virtual int sv_AddNewOrderLine(string param_OrderNo, string param_Item, Nullable<double> param_Ordered,
            Nullable<double> param_Price, Nullable<double> param_Discount, string param_Description,
            string param_Employee, string param_RemarksBefore, string param_RemarksAfter)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_PriceParameter = param_Price.HasValue
                ? new ObjectParameter("Param_Price", param_Price)
                : new ObjectParameter("Param_Price", typeof(double));

            var param_DiscountParameter = param_Discount.HasValue
                ? new ObjectParameter("param_Discount", param_Discount)
                : new ObjectParameter("param_Discount", typeof(double));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_RemarksBeforeParameter = param_RemarksBefore != null
                ? new ObjectParameter("Param_RemarksBefore", param_RemarksBefore)
                : new ObjectParameter("Param_RemarksBefore", typeof(string));

            var param_RemarksAfterParameter = param_RemarksAfter != null
                ? new ObjectParameter("Param_RemarksAfter", param_RemarksAfter)
                : new ObjectParameter("Param_RemarksAfter", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sv_AddNewOrderLine",
                param_OrderNoParameter, param_ItemParameter, param_OrderedParameter, param_PriceParameter,
                param_DiscountParameter, param_DescriptionParameter, param_EmployeeParameter,
                param_RemarksBeforeParameter, param_RemarksAfterParameter);
        }

        public virtual int sv_AddUpdateOrder(string param_OrderNo, Nullable<System.DateTime> param_OrderDate,
            Nullable<double> param_OptionalNumber1, Nullable<double> param_OptionalNumber2,
            Nullable<System.DateTime> param_DeliveryDate, string param_OrderCustomer, string param_OrderCustomerName,
            string param_OrderCustomerAddress1, string param_OrderCustomerAddress2, string param_OrderCustomerCity,
            string param_Ship1, string param_Ship2, string param_Ship3, string param_Ship4, string param_Ship5,
            string param_RecvNo, string param_SalesRep, string param_OrderText, string param_Remarks,
            string param_Status, string param_OrderCustomerContact, string param_UserID)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_OrderDateParameter = param_OrderDate.HasValue
                ? new ObjectParameter("Param_OrderDate", param_OrderDate)
                : new ObjectParameter("Param_OrderDate", typeof(System.DateTime));

            var param_OptionalNumber1Parameter = param_OptionalNumber1.HasValue
                ? new ObjectParameter("Param_OptionalNumber1", param_OptionalNumber1)
                : new ObjectParameter("Param_OptionalNumber1", typeof(double));

            var param_OptionalNumber2Parameter = param_OptionalNumber2.HasValue
                ? new ObjectParameter("Param_OptionalNumber2", param_OptionalNumber2)
                : new ObjectParameter("Param_OptionalNumber2", typeof(double));

            var param_DeliveryDateParameter = param_DeliveryDate.HasValue
                ? new ObjectParameter("Param_DeliveryDate", param_DeliveryDate)
                : new ObjectParameter("Param_DeliveryDate", typeof(System.DateTime));

            var param_OrderCustomerParameter = param_OrderCustomer != null
                ? new ObjectParameter("Param_OrderCustomer", param_OrderCustomer)
                : new ObjectParameter("Param_OrderCustomer", typeof(string));

            var param_OrderCustomerNameParameter = param_OrderCustomerName != null
                ? new ObjectParameter("Param_OrderCustomerName", param_OrderCustomerName)
                : new ObjectParameter("Param_OrderCustomerName", typeof(string));

            var param_OrderCustomerAddress1Parameter = param_OrderCustomerAddress1 != null
                ? new ObjectParameter("Param_OrderCustomerAddress1", param_OrderCustomerAddress1)
                : new ObjectParameter("Param_OrderCustomerAddress1", typeof(string));

            var param_OrderCustomerAddress2Parameter = param_OrderCustomerAddress2 != null
                ? new ObjectParameter("Param_OrderCustomerAddress2", param_OrderCustomerAddress2)
                : new ObjectParameter("Param_OrderCustomerAddress2", typeof(string));

            var param_OrderCustomerCityParameter = param_OrderCustomerCity != null
                ? new ObjectParameter("Param_OrderCustomerCity", param_OrderCustomerCity)
                : new ObjectParameter("Param_OrderCustomerCity", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_Ship4Parameter = param_Ship4 != null
                ? new ObjectParameter("Param_Ship4", param_Ship4)
                : new ObjectParameter("Param_Ship4", typeof(string));

            var param_Ship5Parameter = param_Ship5 != null
                ? new ObjectParameter("Param_Ship5", param_Ship5)
                : new ObjectParameter("Param_Ship5", typeof(string));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            var param_OrderTextParameter = param_OrderText != null
                ? new ObjectParameter("Param_OrderText", param_OrderText)
                : new ObjectParameter("Param_OrderText", typeof(string));

            var param_RemarksParameter = param_Remarks != null
                ? new ObjectParameter("Param_Remarks", param_Remarks)
                : new ObjectParameter("Param_Remarks", typeof(string));

            var param_StatusParameter = param_Status != null
                ? new ObjectParameter("Param_Status", param_Status)
                : new ObjectParameter("Param_Status", typeof(string));

            var param_OrderCustomerContactParameter = param_OrderCustomerContact != null
                ? new ObjectParameter("Param_OrderCustomerContact", param_OrderCustomerContact)
                : new ObjectParameter("Param_OrderCustomerContact", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sv_AddUpdateOrder",
                param_OrderNoParameter, param_OrderDateParameter, param_OptionalNumber1Parameter,
                param_OptionalNumber2Parameter, param_DeliveryDateParameter, param_OrderCustomerParameter,
                param_OrderCustomerNameParameter, param_OrderCustomerAddress1Parameter,
                param_OrderCustomerAddress2Parameter, param_OrderCustomerCityParameter, param_Ship1Parameter,
                param_Ship2Parameter, param_Ship3Parameter, param_Ship4Parameter, param_Ship5Parameter,
                param_RecvNoParameter, param_SalesRepParameter, param_OrderTextParameter, param_RemarksParameter,
                param_StatusParameter, param_OrderCustomerContactParameter, param_UserIDParameter);
        }

        public virtual int sv_CustomersAddUpdate(string param_UserID, string param_Customer, string param_Name,
            string param_Address1, string param_Address2, string param_PostalCode, string param_City,
            string param_Contact, string param_Phone, string param_Fax, string param_Email, string param_Grouping,
            string param_ShipTo, string param_Ship1, string param_Ship2, string param_Ship3, string param_Ship4)
        {
            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_NameParameter = param_Name != null
                ? new ObjectParameter("Param_Name", param_Name)
                : new ObjectParameter("Param_Name", typeof(string));

            var param_Address1Parameter = param_Address1 != null
                ? new ObjectParameter("Param_Address1", param_Address1)
                : new ObjectParameter("Param_Address1", typeof(string));

            var param_Address2Parameter = param_Address2 != null
                ? new ObjectParameter("Param_Address2", param_Address2)
                : new ObjectParameter("Param_Address2", typeof(string));

            var param_PostalCodeParameter = param_PostalCode != null
                ? new ObjectParameter("Param_PostalCode", param_PostalCode)
                : new ObjectParameter("Param_PostalCode", typeof(string));

            var param_CityParameter = param_City != null
                ? new ObjectParameter("Param_City", param_City)
                : new ObjectParameter("Param_City", typeof(string));

            var param_ContactParameter = param_Contact != null
                ? new ObjectParameter("Param_Contact", param_Contact)
                : new ObjectParameter("Param_Contact", typeof(string));

            var param_PhoneParameter = param_Phone != null
                ? new ObjectParameter("Param_Phone", param_Phone)
                : new ObjectParameter("Param_Phone", typeof(string));

            var param_FaxParameter = param_Fax != null
                ? new ObjectParameter("Param_Fax", param_Fax)
                : new ObjectParameter("Param_Fax", typeof(string));

            var param_EmailParameter = param_Email != null
                ? new ObjectParameter("Param_Email", param_Email)
                : new ObjectParameter("Param_Email", typeof(string));

            var param_GroupingParameter = param_Grouping != null
                ? new ObjectParameter("Param_Grouping", param_Grouping)
                : new ObjectParameter("Param_Grouping", typeof(string));

            var param_ShipToParameter = param_ShipTo != null
                ? new ObjectParameter("Param_ShipTo", param_ShipTo)
                : new ObjectParameter("Param_ShipTo", typeof(string));

            var param_Ship1Parameter = param_Ship1 != null
                ? new ObjectParameter("Param_Ship1", param_Ship1)
                : new ObjectParameter("Param_Ship1", typeof(string));

            var param_Ship2Parameter = param_Ship2 != null
                ? new ObjectParameter("Param_Ship2", param_Ship2)
                : new ObjectParameter("Param_Ship2", typeof(string));

            var param_Ship3Parameter = param_Ship3 != null
                ? new ObjectParameter("Param_Ship3", param_Ship3)
                : new ObjectParameter("Param_Ship3", typeof(string));

            var param_Ship4Parameter = param_Ship4 != null
                ? new ObjectParameter("Param_Ship4", param_Ship4)
                : new ObjectParameter("Param_Ship4", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("sv_CustomersAddUpdate",
                param_UserIDParameter, param_CustomerParameter, param_NameParameter, param_Address1Parameter,
                param_Address2Parameter, param_PostalCodeParameter, param_CityParameter, param_ContactParameter,
                param_PhoneParameter, param_FaxParameter, param_EmailParameter, param_GroupingParameter,
                param_ShipToParameter, param_Ship1Parameter, param_Ship2Parameter, param_Ship3Parameter,
                param_Ship4Parameter);
        }

        public virtual ObjectResult<Timeregistrering_Statistik_CostCenter_Result> Timeregistrering_Statistik_CostCenter()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext
                    .ExecuteFunction<Timeregistrering_Statistik_CostCenter_Result>(
                        "Timeregistrering_Statistik_CostCenter");
        }

        public virtual ObjectResult<Timeregistrering_Statistik_Linier_Result> Timeregistrering_Statistik_Linier()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Timeregistrering_Statistik_Linier_Result>(
                    "Timeregistrering_Statistik_Linier");
        }

        public virtual ObjectResult<Timeregistrering_Statistik_Purpose_Result> Timeregistrering_Statistik_Purpose()
        {
            return
                ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<Timeregistrering_Statistik_Purpose_Result>(
                    "Timeregistrering_Statistik_Purpose");
        }

        public virtual int tss_AddNewOrder(string param_OrderNo, string param_Customer, string param_UserID,
            string param_OrderText, string param_PriceList, string param_Department, string param_CostCenter,
            string param_Purpose, string param_Project, string param_RecvNo, string param_SalesRep)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_OrderTextParameter = param_OrderText != null
                ? new ObjectParameter("Param_OrderText", param_OrderText)
                : new ObjectParameter("Param_OrderText", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_AddNewOrder",
                param_OrderNoParameter, param_CustomerParameter, param_UserIDParameter, param_OrderTextParameter,
                param_PriceListParameter, param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter,
                param_ProjectParameter, param_RecvNoParameter, param_SalesRepParameter);
        }

        public virtual int tss_AddNewOrderLine(string param_OrderNo, string param_Item, string param_Account,
            Nullable<double> param_Ordered, Nullable<System.DateTime> param_Delivery, Nullable<double> param_CostPrice,
            Nullable<double> param_SalesPrice, string param_Description, string param_RemarksBefore,
            string param_RemarksAfter, string param_Department, string param_CostCenter, string param_Project,
            string param_PurPose, string param_Employee, Nullable<bool> param_InternalLine)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_SalesPriceParameter = param_SalesPrice.HasValue
                ? new ObjectParameter("Param_SalesPrice", param_SalesPrice)
                : new ObjectParameter("Param_SalesPrice", typeof(double));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_RemarksBeforeParameter = param_RemarksBefore != null
                ? new ObjectParameter("Param_RemarksBefore", param_RemarksBefore)
                : new ObjectParameter("Param_RemarksBefore", typeof(string));

            var param_RemarksAfterParameter = param_RemarksAfter != null
                ? new ObjectParameter("Param_RemarksAfter", param_RemarksAfter)
                : new ObjectParameter("Param_RemarksAfter", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_InternalLineParameter = param_InternalLine.HasValue
                ? new ObjectParameter("Param_InternalLine", param_InternalLine)
                : new ObjectParameter("Param_InternalLine", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_AddNewOrderLine",
                param_OrderNoParameter, param_ItemParameter, param_AccountParameter, param_OrderedParameter,
                param_DeliveryParameter, param_CostPriceParameter, param_SalesPriceParameter, param_DescriptionParameter,
                param_RemarksBeforeParameter, param_RemarksAfterParameter, param_DepartmentParameter,
                param_CostCenterParameter, param_ProjectParameter, param_PurPoseParameter, param_EmployeeParameter,
                param_InternalLineParameter);
        }

        public virtual int tss_DeleteOrder(string param_OrderNo)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_DeleteOrder",
                param_OrderNoParameter);
        }

        public virtual int tss_DeleteOrderLine(Nullable<int> param_RecordID)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_DeleteOrderLine",
                param_RecordIDParameter);
        }

        public virtual ObjectResult<string> tss_GetNextOrderno()
        {
            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("tss_GetNextOrderno");
        }

        public virtual int tss_UpdateOrder(string param_OrderNo, string param_UserID, string param_Customer,
            string param_OrderText, string param_PriceList, string param_Department, string param_CostCenter,
            string param_Purpose, string param_Project, string param_RecvNo, string param_SalesRep)
        {
            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_UserIDParameter = param_UserID != null
                ? new ObjectParameter("Param_UserID", param_UserID)
                : new ObjectParameter("Param_UserID", typeof(string));

            var param_CustomerParameter = param_Customer != null
                ? new ObjectParameter("Param_Customer", param_Customer)
                : new ObjectParameter("Param_Customer", typeof(string));

            var param_OrderTextParameter = param_OrderText != null
                ? new ObjectParameter("Param_OrderText", param_OrderText)
                : new ObjectParameter("Param_OrderText", typeof(string));

            var param_PriceListParameter = param_PriceList != null
                ? new ObjectParameter("Param_PriceList", param_PriceList)
                : new ObjectParameter("Param_PriceList", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_PurposeParameter = param_Purpose != null
                ? new ObjectParameter("Param_Purpose", param_Purpose)
                : new ObjectParameter("Param_Purpose", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_RecvNoParameter = param_RecvNo != null
                ? new ObjectParameter("Param_RecvNo", param_RecvNo)
                : new ObjectParameter("Param_RecvNo", typeof(string));

            var param_SalesRepParameter = param_SalesRep != null
                ? new ObjectParameter("Param_SalesRep", param_SalesRep)
                : new ObjectParameter("Param_SalesRep", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_UpdateOrder",
                param_OrderNoParameter, param_UserIDParameter, param_CustomerParameter, param_OrderTextParameter,
                param_PriceListParameter, param_DepartmentParameter, param_CostCenterParameter, param_PurposeParameter,
                param_ProjectParameter, param_RecvNoParameter, param_SalesRepParameter);
        }

        public virtual int tss_UpdateOrderLine(Nullable<int> param_RecordID, string param_OrderNo, string param_Item,
            string param_Account, Nullable<double> param_Ordered, Nullable<System.DateTime> param_Delivery,
            Nullable<double> param_CostPrice, Nullable<double> param_SalesPrice, string param_Description,
            string param_RemarksBefore, string param_RemarksAfter, string param_Department, string param_CostCenter,
            string param_Project, string param_PurPose, string param_Employee, Nullable<bool> param_InternalLine)
        {
            var param_RecordIDParameter = param_RecordID.HasValue
                ? new ObjectParameter("Param_RecordID", param_RecordID)
                : new ObjectParameter("Param_RecordID", typeof(int));

            var param_OrderNoParameter = param_OrderNo != null
                ? new ObjectParameter("Param_OrderNo", param_OrderNo)
                : new ObjectParameter("Param_OrderNo", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_AccountParameter = param_Account != null
                ? new ObjectParameter("Param_Account", param_Account)
                : new ObjectParameter("Param_Account", typeof(string));

            var param_OrderedParameter = param_Ordered.HasValue
                ? new ObjectParameter("Param_Ordered", param_Ordered)
                : new ObjectParameter("Param_Ordered", typeof(double));

            var param_DeliveryParameter = param_Delivery.HasValue
                ? new ObjectParameter("Param_Delivery", param_Delivery)
                : new ObjectParameter("Param_Delivery", typeof(System.DateTime));

            var param_CostPriceParameter = param_CostPrice.HasValue
                ? new ObjectParameter("Param_CostPrice", param_CostPrice)
                : new ObjectParameter("Param_CostPrice", typeof(double));

            var param_SalesPriceParameter = param_SalesPrice.HasValue
                ? new ObjectParameter("Param_SalesPrice", param_SalesPrice)
                : new ObjectParameter("Param_SalesPrice", typeof(double));

            var param_DescriptionParameter = param_Description != null
                ? new ObjectParameter("Param_Description", param_Description)
                : new ObjectParameter("Param_Description", typeof(string));

            var param_RemarksBeforeParameter = param_RemarksBefore != null
                ? new ObjectParameter("Param_RemarksBefore", param_RemarksBefore)
                : new ObjectParameter("Param_RemarksBefore", typeof(string));

            var param_RemarksAfterParameter = param_RemarksAfter != null
                ? new ObjectParameter("Param_RemarksAfter", param_RemarksAfter)
                : new ObjectParameter("Param_RemarksAfter", typeof(string));

            var param_DepartmentParameter = param_Department != null
                ? new ObjectParameter("Param_Department", param_Department)
                : new ObjectParameter("Param_Department", typeof(string));

            var param_CostCenterParameter = param_CostCenter != null
                ? new ObjectParameter("Param_CostCenter", param_CostCenter)
                : new ObjectParameter("Param_CostCenter", typeof(string));

            var param_ProjectParameter = param_Project != null
                ? new ObjectParameter("Param_Project", param_Project)
                : new ObjectParameter("Param_Project", typeof(string));

            var param_PurPoseParameter = param_PurPose != null
                ? new ObjectParameter("Param_PurPose", param_PurPose)
                : new ObjectParameter("Param_PurPose", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_InternalLineParameter = param_InternalLine.HasValue
                ? new ObjectParameter("Param_InternalLine", param_InternalLine)
                : new ObjectParameter("Param_InternalLine", typeof(bool));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction("tss_UpdateOrderLine",
                param_RecordIDParameter, param_OrderNoParameter, param_ItemParameter, param_AccountParameter,
                param_OrderedParameter, param_DeliveryParameter, param_CostPriceParameter, param_SalesPriceParameter,
                param_DescriptionParameter, param_RemarksBeforeParameter, param_RemarksAfterParameter,
                param_DepartmentParameter, param_CostCenterParameter, param_ProjectParameter, param_PurPoseParameter,
                param_EmployeeParameter, param_InternalLineParameter);
        }

        public virtual ObjectResult<string> EW_Mobil_AddInventoryCount(string paramJournal, string param_Location,
            string param_Placement, string param_Employee, string param_Item, Nullable<double> param_Quantity,
            string inventoryCount_Parameter1, string inventoryCount_Parameter2)
        {
            var param_JournalParameter = paramJournal != null
                ? new ObjectParameter("param_Journal", paramJournal)
                : new ObjectParameter("param_Journal", typeof(string));

            var param_LocationParameter = param_Location != null
                ? new ObjectParameter("param_Location", param_Location)
                : new ObjectParameter("param_Location", typeof(string));

            var param_PlacementParameter = param_Placement != null
                ? new ObjectParameter("Param_Placement", param_Placement)
                : new ObjectParameter("Param_Placement", typeof(string));

            var param_EmployeeParameter = param_Employee != null
                ? new ObjectParameter("Param_Employee", param_Employee)
                : new ObjectParameter("Param_Employee", typeof(string));

            var param_ItemParameter = param_Item != null
                ? new ObjectParameter("Param_Item", param_Item)
                : new ObjectParameter("Param_Item", typeof(string));

            var param_QuantityParameter = param_Quantity.HasValue
                ? new ObjectParameter("Param_Quantity", param_Quantity)
                : new ObjectParameter("Param_Quantity", typeof(double));

            var inventoryCount_Parameter1Parameter = inventoryCount_Parameter1 != null
                ? new ObjectParameter("InventoryCount_Parameter1", inventoryCount_Parameter1)
                : new ObjectParameter("InventoryCount_Parameter1", typeof(string));

            var inventoryCount_Parameter2Parameter = inventoryCount_Parameter2 != null
                ? new ObjectParameter("InventoryCount_Parameter2", inventoryCount_Parameter2)
                : new ObjectParameter("InventoryCount_Parameter2", typeof(string));

            return ((IObjectContextAdapter) this).ObjectContext.ExecuteFunction<string>("EW_Mobil_AddInventoryCount",
                param_JournalParameter, param_LocationParameter, param_PlacementParameter, param_EmployeeParameter,
                param_ItemParameter, param_QuantityParameter, inventoryCount_Parameter1Parameter,
                inventoryCount_Parameter2Parameter);
        }

    }
}

